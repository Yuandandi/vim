!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!TypeScript	C,constant	/constants/
!_TAG_KIND_DESCRIPTION!TypeScript	G,generator	/generators/
!_TAG_KIND_DESCRIPTION!TypeScript	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!TypeScript	c,class	/classes/
!_TAG_KIND_DESCRIPTION!TypeScript	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!TypeScript	f,function	/functions/
!_TAG_KIND_DESCRIPTION!TypeScript	g,enum	/enums/
!_TAG_KIND_DESCRIPTION!TypeScript	i,interface	/interfaces/
!_TAG_KIND_DESCRIPTION!TypeScript	m,method	/methods/
!_TAG_KIND_DESCRIPTION!TypeScript	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!TypeScript	p,property	/properties/
!_TAG_KIND_DESCRIPTION!TypeScript	v,variable	/variables/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!TypeScript	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/danzor/completion/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
ABORT_ERR	tsvscode.ts	/^    readonly ABORT_ERR: 20;$/;"	p	interface:DOMException
ABORT_ERR	tsvscode.ts	/^    readonly ABORT_ERR: 20;$/;"	v
ACTIVE_ATTRIBUTES	tsvscode.ts	/^    readonly ACTIVE_ATTRIBUTES: 0x8B89;$/;"	p	interface:WebGLRenderingContextBase
ACTIVE_ATTRIBUTES	tsvscode.ts	/^    readonly ACTIVE_ATTRIBUTES: 0x8B89;$/;"	v
ACTIVE_TEXTURE	tsvscode.ts	/^    readonly ACTIVE_TEXTURE: 0x84E0;$/;"	p	interface:WebGLRenderingContextBase
ACTIVE_TEXTURE	tsvscode.ts	/^    readonly ACTIVE_TEXTURE: 0x84E0;$/;"	v
ACTIVE_UNIFORMS	tsvscode.ts	/^    readonly ACTIVE_UNIFORMS: 0x8B86;$/;"	p	interface:WebGLRenderingContextBase
ACTIVE_UNIFORMS	tsvscode.ts	/^    readonly ACTIVE_UNIFORMS: 0x8B86;$/;"	v
ACTIVE_UNIFORM_BLOCKS	tsvscode.ts	/^    readonly ACTIVE_UNIFORM_BLOCKS: 0x8A36;$/;"	p	interface:WebGL2RenderingContextBase
ACTIVE_UNIFORM_BLOCKS	tsvscode.ts	/^    readonly ACTIVE_UNIFORM_BLOCKS: 0x8A36;$/;"	v
ADDITION	tsvscode.ts	/^    readonly ADDITION: 2;$/;"	p	interface:MutationEvent
ADDITION	tsvscode.ts	/^    readonly ADDITION: 2;$/;"	v
ALIASED_LINE_WIDTH_RANGE	tsvscode.ts	/^    readonly ALIASED_LINE_WIDTH_RANGE: 0x846E;$/;"	p	interface:WebGLRenderingContextBase
ALIASED_LINE_WIDTH_RANGE	tsvscode.ts	/^    readonly ALIASED_LINE_WIDTH_RANGE: 0x846E;$/;"	v
ALIASED_POINT_SIZE_RANGE	tsvscode.ts	/^    readonly ALIASED_POINT_SIZE_RANGE: 0x846D;$/;"	p	interface:WebGLRenderingContextBase
ALIASED_POINT_SIZE_RANGE	tsvscode.ts	/^    readonly ALIASED_POINT_SIZE_RANGE: 0x846D;$/;"	v
ALPHA	tsvscode.ts	/^    readonly ALPHA: 0x1906;$/;"	p	interface:WebGLRenderingContextBase
ALPHA	tsvscode.ts	/^    readonly ALPHA: 0x1906;$/;"	v
ALPHA_BITS	tsvscode.ts	/^    readonly ALPHA_BITS: 0x0D55;$/;"	p	interface:WebGLRenderingContextBase
ALPHA_BITS	tsvscode.ts	/^    readonly ALPHA_BITS: 0x0D55;$/;"	v
ALREADY_SIGNALED	tsvscode.ts	/^    readonly ALREADY_SIGNALED: 0x911A;$/;"	p	interface:WebGL2RenderingContextBase
ALREADY_SIGNALED	tsvscode.ts	/^    readonly ALREADY_SIGNALED: 0x911A;$/;"	v
ALWAYS	tsvscode.ts	/^    readonly ALWAYS: 0x0207;$/;"	p	interface:WebGLRenderingContextBase
ALWAYS	tsvscode.ts	/^    readonly ALWAYS: 0x0207;$/;"	v
ANGLE_instanced_arrays	tsvscode.ts	/^interface ANGLE_instanced_arrays {$/;"	i
ANY_SAMPLES_PASSED	tsvscode.ts	/^    readonly ANY_SAMPLES_PASSED: 0x8C2F;$/;"	p	interface:WebGL2RenderingContextBase
ANY_SAMPLES_PASSED	tsvscode.ts	/^    readonly ANY_SAMPLES_PASSED: 0x8C2F;$/;"	v
ANY_SAMPLES_PASSED_CONSERVATIVE	tsvscode.ts	/^    readonly ANY_SAMPLES_PASSED_CONSERVATIVE: 0x8D6A;$/;"	p	interface:WebGL2RenderingContextBase
ANY_SAMPLES_PASSED_CONSERVATIVE	tsvscode.ts	/^    readonly ANY_SAMPLES_PASSED_CONSERVATIVE: 0x8D6A;$/;"	v
ANY_TYPE	tsvscode.ts	/^    readonly ANY_TYPE: 0;$/;"	p	interface:XPathResult
ANY_TYPE	tsvscode.ts	/^    readonly ANY_TYPE: 0;$/;"	v
ANY_UNORDERED_NODE_TYPE	tsvscode.ts	/^    readonly ANY_UNORDERED_NODE_TYPE: 8;$/;"	p	interface:XPathResult
ANY_UNORDERED_NODE_TYPE	tsvscode.ts	/^    readonly ANY_UNORDERED_NODE_TYPE: 8;$/;"	v
ARIAMixin	tsvscode.ts	/^interface ARIAMixin {$/;"	i
ARRAY_BUFFER	tsvscode.ts	/^    readonly ARRAY_BUFFER: 0x8892;$/;"	p	interface:WebGLRenderingContextBase
ARRAY_BUFFER	tsvscode.ts	/^    readonly ARRAY_BUFFER: 0x8892;$/;"	v
ARRAY_BUFFER_BINDING	tsvscode.ts	/^    readonly ARRAY_BUFFER_BINDING: 0x8894;$/;"	p	interface:WebGLRenderingContextBase
ARRAY_BUFFER_BINDING	tsvscode.ts	/^    readonly ARRAY_BUFFER_BINDING: 0x8894;$/;"	v
ATTACHED_SHADERS	tsvscode.ts	/^    readonly ATTACHED_SHADERS: 0x8B85;$/;"	p	interface:WebGLRenderingContextBase
ATTACHED_SHADERS	tsvscode.ts	/^    readonly ATTACHED_SHADERS: 0x8B85;$/;"	v
ATTRIBUTE_NODE	tsvscode.ts	/^    readonly ATTRIBUTE_NODE: 2;$/;"	p	interface:Node
ATTRIBUTE_NODE	tsvscode.ts	/^    readonly ATTRIBUTE_NODE: 2;$/;"	v
AT_TARGET	tsvscode.ts	/^    readonly AT_TARGET: 2;$/;"	p	interface:Event
AT_TARGET	tsvscode.ts	/^    readonly AT_TARGET: 2;$/;"	v
AbortController	tsvscode.ts	/^declare var AbortController: {$/;"	v
AbortController	tsvscode.ts	/^interface AbortController {$/;"	i
AbortSignal	tsvscode.ts	/^declare var AbortSignal: {$/;"	v
AbortSignal	tsvscode.ts	/^interface AbortSignal extends EventTarget {$/;"	i
AbortSignalEventMap	tsvscode.ts	/^interface AbortSignalEventMap {$/;"	i
AbstractRange	tsvscode.ts	/^declare var AbstractRange: {$/;"	v
AbstractRange	tsvscode.ts	/^interface AbstractRange {$/;"	i
AbstractWorker	tsvscode.ts	/^interface AbstractWorker {$/;"	i
AbstractWorkerEventMap	tsvscode.ts	/^interface AbstractWorkerEventMap {$/;"	i
AddEventListenerOptions	tsvscode.ts	/^interface AddEventListenerOptions extends EventListenerOptions {$/;"	i
AddSearchProvider	tsvscode.ts	/^    AddSearchProvider(): void;$/;"	m	interface:External
AesCbcParams	tsvscode.ts	/^interface AesCbcParams extends Algorithm {$/;"	i
AesCtrParams	tsvscode.ts	/^interface AesCtrParams extends Algorithm {$/;"	i
AesDerivedKeyParams	tsvscode.ts	/^interface AesDerivedKeyParams extends Algorithm {$/;"	i
AesGcmParams	tsvscode.ts	/^interface AesGcmParams extends Algorithm {$/;"	i
AesKeyAlgorithm	tsvscode.ts	/^interface AesKeyAlgorithm extends KeyAlgorithm {$/;"	i
AesKeyGenParams	tsvscode.ts	/^interface AesKeyGenParams extends Algorithm {$/;"	i
Algorithm	tsvscode.ts	/^interface Algorithm {$/;"	i
AnalyserNode	tsvscode.ts	/^declare var AnalyserNode: {$/;"	v
AnalyserNode	tsvscode.ts	/^interface AnalyserNode extends AudioNode {$/;"	i
AnalyserOptions	tsvscode.ts	/^interface AnalyserOptions extends AudioNodeOptions {$/;"	i
Animatable	tsvscode.ts	/^interface Animatable {$/;"	i
Animation	tsvscode.ts	/^declare var Animation: {$/;"	v
Animation	tsvscode.ts	/^interface Animation extends EventTarget {$/;"	i
AnimationEffect	tsvscode.ts	/^declare var AnimationEffect: {$/;"	v
AnimationEffect	tsvscode.ts	/^interface AnimationEffect {$/;"	i
AnimationEvent	tsvscode.ts	/^declare var AnimationEvent: {$/;"	v
AnimationEvent	tsvscode.ts	/^interface AnimationEvent extends Event {$/;"	i
AnimationEventInit	tsvscode.ts	/^interface AnimationEventInit extends EventInit {$/;"	i
AnimationEventMap	tsvscode.ts	/^interface AnimationEventMap {$/;"	i
AnimationFrameProvider	tsvscode.ts	/^interface AnimationFrameProvider {$/;"	i
AnimationPlaybackEvent	tsvscode.ts	/^declare var AnimationPlaybackEvent: {$/;"	v
AnimationPlaybackEvent	tsvscode.ts	/^interface AnimationPlaybackEvent extends Event {$/;"	i
AnimationPlaybackEventInit	tsvscode.ts	/^interface AnimationPlaybackEventInit extends EventInit {$/;"	i
AnimationTimeline	tsvscode.ts	/^declare var AnimationTimeline: {$/;"	v
AnimationTimeline	tsvscode.ts	/^interface AnimationTimeline {$/;"	i
Array	ests.ts	/^declare var Array: ArrayConstructor;$/;"	v
Array	ests.ts	/^interface Array<T> {$/;"	i
ArrayBuffer	ests.ts	/^    ArrayBuffer: ArrayBuffer;$/;"	p	interface:ArrayBufferTypes
ArrayBuffer	ests.ts	/^declare var ArrayBuffer: ArrayBufferConstructor;$/;"	v
ArrayBuffer	ests.ts	/^interface ArrayBuffer {$/;"	i
ArrayBufferConstructor	ests.ts	/^interface ArrayBufferConstructor {$/;"	i
ArrayBufferLike	ests.ts	/^type ArrayBufferLike = ArrayBufferTypes[keyof ArrayBufferTypes];$/;"	a
ArrayBufferTypes	ests.ts	/^interface ArrayBufferTypes {$/;"	i
ArrayBufferView	ests.ts	/^    isView(arg: any): arg is ArrayBufferView;$/;"	p	interface:ArrayBufferConstructor
ArrayBufferView	ests.ts	/^interface ArrayBufferView {$/;"	i
ArrayConstructor	ests.ts	/^interface ArrayConstructor {$/;"	i
ArrayLike	ests.ts	/^interface ArrayLike<T> {$/;"	i
AssignedNodesOptions	tsvscode.ts	/^interface AssignedNodesOptions {$/;"	i
Attr	tsvscode.ts	/^declare var Attr: {$/;"	v
Attr	tsvscode.ts	/^interface Attr extends Node {$/;"	i
Audio	tsvscode.ts	/^declare var Audio: {$/;"	v	namespace:CSS
AudioBuffer	tsvscode.ts	/^declare var AudioBuffer: {$/;"	v
AudioBuffer	tsvscode.ts	/^interface AudioBuffer {$/;"	i
AudioBufferOptions	tsvscode.ts	/^interface AudioBufferOptions {$/;"	i
AudioBufferSourceNode	tsvscode.ts	/^declare var AudioBufferSourceNode: {$/;"	v
AudioBufferSourceNode	tsvscode.ts	/^interface AudioBufferSourceNode extends AudioScheduledSourceNode {$/;"	i
AudioBufferSourceOptions	tsvscode.ts	/^interface AudioBufferSourceOptions {$/;"	i
AudioConfiguration	tsvscode.ts	/^interface AudioConfiguration {$/;"	i
AudioContext	tsvscode.ts	/^declare var AudioContext: {$/;"	v
AudioContext	tsvscode.ts	/^interface AudioContext extends BaseAudioContext {$/;"	i
AudioContextOptions	tsvscode.ts	/^interface AudioContextOptions {$/;"	i
AudioDestinationNode	tsvscode.ts	/^declare var AudioDestinationNode: {$/;"	v
AudioDestinationNode	tsvscode.ts	/^interface AudioDestinationNode extends AudioNode {$/;"	i
AudioListener	tsvscode.ts	/^declare var AudioListener: {$/;"	v
AudioListener	tsvscode.ts	/^interface AudioListener {$/;"	i
AudioNode	tsvscode.ts	/^declare var AudioNode: {$/;"	v
AudioNode	tsvscode.ts	/^interface AudioNode extends EventTarget {$/;"	i
AudioNodeOptions	tsvscode.ts	/^interface AudioNodeOptions {$/;"	i
AudioParam	tsvscode.ts	/^declare var AudioParam: {$/;"	v
AudioParam	tsvscode.ts	/^interface AudioParam {$/;"	i
AudioParamMap	tsvscode.ts	/^declare var AudioParamMap: {$/;"	v
AudioParamMap	tsvscode.ts	/^interface AudioParamMap {$/;"	i
AudioProcessingEvent	tsvscode.ts	/^declare var AudioProcessingEvent: {$/;"	v
AudioProcessingEvent	tsvscode.ts	/^interface AudioProcessingEvent extends Event {$/;"	i
AudioProcessingEventInit	tsvscode.ts	/^interface AudioProcessingEventInit extends EventInit {$/;"	i
AudioScheduledSourceNode	tsvscode.ts	/^declare var AudioScheduledSourceNode: {$/;"	v
AudioScheduledSourceNode	tsvscode.ts	/^interface AudioScheduledSourceNode extends AudioNode {$/;"	i
AudioScheduledSourceNodeEventMap	tsvscode.ts	/^interface AudioScheduledSourceNodeEventMap {$/;"	i
AudioTimestamp	tsvscode.ts	/^interface AudioTimestamp {$/;"	i
AudioWorklet	tsvscode.ts	/^declare var AudioWorklet: {$/;"	v
AudioWorklet	tsvscode.ts	/^interface AudioWorklet extends Worklet {$/;"	i
AudioWorkletNode	tsvscode.ts	/^declare var AudioWorkletNode: {$/;"	v
AudioWorkletNode	tsvscode.ts	/^interface AudioWorkletNode extends AudioNode {$/;"	i
AudioWorkletNodeEventMap	tsvscode.ts	/^interface AudioWorkletNodeEventMap {$/;"	i
AudioWorkletNodeOptions	tsvscode.ts	/^interface AudioWorkletNodeOptions extends AudioNodeOptions {$/;"	i
AuthenticationExtensionsClientInputs	tsvscode.ts	/^interface AuthenticationExtensionsClientInputs {$/;"	i
AuthenticationExtensionsClientOutputs	tsvscode.ts	/^interface AuthenticationExtensionsClientOutputs {$/;"	i
AuthenticatorAssertionResponse	tsvscode.ts	/^declare var AuthenticatorAssertionResponse: {$/;"	v
AuthenticatorAssertionResponse	tsvscode.ts	/^interface AuthenticatorAssertionResponse extends AuthenticatorResponse {$/;"	i
AuthenticatorAttestationResponse	tsvscode.ts	/^declare var AuthenticatorAttestationResponse: {$/;"	v
AuthenticatorAttestationResponse	tsvscode.ts	/^interface AuthenticatorAttestationResponse extends AuthenticatorResponse {$/;"	i
AuthenticatorResponse	tsvscode.ts	/^declare var AuthenticatorResponse: {$/;"	v
AuthenticatorResponse	tsvscode.ts	/^interface AuthenticatorResponse {$/;"	i
AuthenticatorSelectionCriteria	tsvscode.ts	/^interface AuthenticatorSelectionCriteria {$/;"	i
AvcEncoderConfig	tsvscode.ts	/^interface AvcEncoderConfig {$/;"	i
Awaited	ests.ts	/^type Awaited<T> = T extends null | undefined ? T : \/\/ special case for `null | undefined` when/;"	a
BACK	tsvscode.ts	/^    readonly BACK: 0x0405;$/;"	p	interface:WebGLRenderingContextBase
BACK	tsvscode.ts	/^    readonly BACK: 0x0405;$/;"	v
BLEND	tsvscode.ts	/^    readonly BLEND: 0x0BE2;$/;"	p	interface:WebGLRenderingContextBase
BLEND	tsvscode.ts	/^    readonly BLEND: 0x0BE2;$/;"	v
BLEND_COLOR	tsvscode.ts	/^    readonly BLEND_COLOR: 0x8005;$/;"	p	interface:WebGLRenderingContextBase
BLEND_COLOR	tsvscode.ts	/^    readonly BLEND_COLOR: 0x8005;$/;"	v
BLEND_DST_ALPHA	tsvscode.ts	/^    readonly BLEND_DST_ALPHA: 0x80CA;$/;"	p	interface:WebGLRenderingContextBase
BLEND_DST_ALPHA	tsvscode.ts	/^    readonly BLEND_DST_ALPHA: 0x80CA;$/;"	v
BLEND_DST_RGB	tsvscode.ts	/^    readonly BLEND_DST_RGB: 0x80C8;$/;"	p	interface:WebGLRenderingContextBase
BLEND_DST_RGB	tsvscode.ts	/^    readonly BLEND_DST_RGB: 0x80C8;$/;"	v
BLEND_EQUATION	tsvscode.ts	/^    readonly BLEND_EQUATION: 0x8009;$/;"	p	interface:WebGLRenderingContextBase
BLEND_EQUATION	tsvscode.ts	/^    readonly BLEND_EQUATION: 0x8009;$/;"	v
BLEND_EQUATION_ALPHA	tsvscode.ts	/^    readonly BLEND_EQUATION_ALPHA: 0x883D;$/;"	p	interface:WebGLRenderingContextBase
BLEND_EQUATION_ALPHA	tsvscode.ts	/^    readonly BLEND_EQUATION_ALPHA: 0x883D;$/;"	v
BLEND_EQUATION_RGB	tsvscode.ts	/^    readonly BLEND_EQUATION_RGB: 0x8009;$/;"	p	interface:WebGLRenderingContextBase
BLEND_EQUATION_RGB	tsvscode.ts	/^    readonly BLEND_EQUATION_RGB: 0x8009;$/;"	v
BLEND_SRC_ALPHA	tsvscode.ts	/^    readonly BLEND_SRC_ALPHA: 0x80CB;$/;"	p	interface:WebGLRenderingContextBase
BLEND_SRC_ALPHA	tsvscode.ts	/^    readonly BLEND_SRC_ALPHA: 0x80CB;$/;"	v
BLEND_SRC_RGB	tsvscode.ts	/^    readonly BLEND_SRC_RGB: 0x80C9;$/;"	p	interface:WebGLRenderingContextBase
BLEND_SRC_RGB	tsvscode.ts	/^    readonly BLEND_SRC_RGB: 0x80C9;$/;"	v
BLUE_BITS	tsvscode.ts	/^    readonly BLUE_BITS: 0x0D54;$/;"	p	interface:WebGLRenderingContextBase
BLUE_BITS	tsvscode.ts	/^    readonly BLUE_BITS: 0x0D54;$/;"	v
BOOL	tsvscode.ts	/^    readonly BOOL: 0x8B56;$/;"	p	interface:WebGLRenderingContextBase
BOOL	tsvscode.ts	/^    readonly BOOL: 0x8B56;$/;"	v
BOOLEAN_TYPE	tsvscode.ts	/^    readonly BOOLEAN_TYPE: 3;$/;"	p	interface:XPathResult
BOOLEAN_TYPE	tsvscode.ts	/^    readonly BOOLEAN_TYPE: 3;$/;"	v
BOOL_VEC2	tsvscode.ts	/^    readonly BOOL_VEC2: 0x8B57;$/;"	p	interface:WebGLRenderingContextBase
BOOL_VEC2	tsvscode.ts	/^    readonly BOOL_VEC2: 0x8B57;$/;"	v
BOOL_VEC3	tsvscode.ts	/^    readonly BOOL_VEC3: 0x8B58;$/;"	p	interface:WebGLRenderingContextBase
BOOL_VEC3	tsvscode.ts	/^    readonly BOOL_VEC3: 0x8B58;$/;"	v
BOOL_VEC4	tsvscode.ts	/^    readonly BOOL_VEC4: 0x8B59;$/;"	p	interface:WebGLRenderingContextBase
BOOL_VEC4	tsvscode.ts	/^    readonly BOOL_VEC4: 0x8B59;$/;"	v
BROWSER_DEFAULT_WEBGL	tsvscode.ts	/^    readonly BROWSER_DEFAULT_WEBGL: 0x9244;$/;"	p	interface:WebGLRenderingContextBase
BROWSER_DEFAULT_WEBGL	tsvscode.ts	/^    readonly BROWSER_DEFAULT_WEBGL: 0x9244;$/;"	v
BUBBLING_PHASE	tsvscode.ts	/^    readonly BUBBLING_PHASE: 3;$/;"	p	interface:Event
BUBBLING_PHASE	tsvscode.ts	/^    readonly BUBBLING_PHASE: 3;$/;"	v
BUFFER_SIZE	tsvscode.ts	/^    readonly BUFFER_SIZE: 0x8764;$/;"	p	interface:WebGLRenderingContextBase
BUFFER_SIZE	tsvscode.ts	/^    readonly BUFFER_SIZE: 0x8764;$/;"	v
BUFFER_USAGE	tsvscode.ts	/^    readonly BUFFER_USAGE: 0x8765;$/;"	p	interface:WebGLRenderingContextBase
BUFFER_USAGE	tsvscode.ts	/^    readonly BUFFER_USAGE: 0x8765;$/;"	v
BYTE	tsvscode.ts	/^    readonly BYTE: 0x1400;$/;"	p	interface:WebGLRenderingContextBase
BYTE	tsvscode.ts	/^    readonly BYTE: 0x1400;$/;"	v
BYTES_PER_ELEMENT	ests.ts	/^    readonly BYTES_PER_ELEMENT: number;$/;"	p	interface:Float32Array
BYTES_PER_ELEMENT	ests.ts	/^    readonly BYTES_PER_ELEMENT: number;$/;"	p	interface:Float32ArrayConstructor
BYTES_PER_ELEMENT	ests.ts	/^    readonly BYTES_PER_ELEMENT: number;$/;"	p	interface:Float64Array
BYTES_PER_ELEMENT	ests.ts	/^    readonly BYTES_PER_ELEMENT: number;$/;"	p	interface:Float64ArrayConstructor
BYTES_PER_ELEMENT	ests.ts	/^    readonly BYTES_PER_ELEMENT: number;$/;"	p	interface:Int16Array
BYTES_PER_ELEMENT	ests.ts	/^    readonly BYTES_PER_ELEMENT: number;$/;"	p	interface:Int16ArrayConstructor
BYTES_PER_ELEMENT	ests.ts	/^    readonly BYTES_PER_ELEMENT: number;$/;"	p	interface:Int32Array
BYTES_PER_ELEMENT	ests.ts	/^    readonly BYTES_PER_ELEMENT: number;$/;"	p	interface:Int32ArrayConstructor
BYTES_PER_ELEMENT	ests.ts	/^    readonly BYTES_PER_ELEMENT: number;$/;"	p	interface:Int8Array
BYTES_PER_ELEMENT	ests.ts	/^    readonly BYTES_PER_ELEMENT: number;$/;"	p	interface:Int8ArrayConstructor
BYTES_PER_ELEMENT	ests.ts	/^    readonly BYTES_PER_ELEMENT: number;$/;"	p	interface:Uint16Array
BYTES_PER_ELEMENT	ests.ts	/^    readonly BYTES_PER_ELEMENT: number;$/;"	p	interface:Uint16ArrayConstructor
BYTES_PER_ELEMENT	ests.ts	/^    readonly BYTES_PER_ELEMENT: number;$/;"	p	interface:Uint32Array
BYTES_PER_ELEMENT	ests.ts	/^    readonly BYTES_PER_ELEMENT: number;$/;"	p	interface:Uint32ArrayConstructor
BYTES_PER_ELEMENT	ests.ts	/^    readonly BYTES_PER_ELEMENT: number;$/;"	p	interface:Uint8Array
BYTES_PER_ELEMENT	ests.ts	/^    readonly BYTES_PER_ELEMENT: number;$/;"	p	interface:Uint8ArrayConstructor
BYTES_PER_ELEMENT	ests.ts	/^    readonly BYTES_PER_ELEMENT: number;$/;"	p	interface:Uint8ClampedArray
BYTES_PER_ELEMENT	ests.ts	/^    readonly BYTES_PER_ELEMENT: number;$/;"	p	interface:Uint8ClampedArrayConstructor
BarProp	tsvscode.ts	/^declare var BarProp: {$/;"	v
BarProp	tsvscode.ts	/^interface BarProp {$/;"	i
BaseAudioContext	tsvscode.ts	/^declare var BaseAudioContext: {$/;"	v
BaseAudioContext	tsvscode.ts	/^interface BaseAudioContext extends EventTarget {$/;"	i
BaseAudioContextEventMap	tsvscode.ts	/^interface BaseAudioContextEventMap {$/;"	i
BeforeUnloadEvent	tsvscode.ts	/^declare var BeforeUnloadEvent: {$/;"	v
BeforeUnloadEvent	tsvscode.ts	/^interface BeforeUnloadEvent extends Event {$/;"	i
BiquadFilterNode	tsvscode.ts	/^declare var BiquadFilterNode: {$/;"	v
BiquadFilterNode	tsvscode.ts	/^interface BiquadFilterNode extends AudioNode {$/;"	i
BiquadFilterOptions	tsvscode.ts	/^interface BiquadFilterOptions extends AudioNodeOptions {$/;"	i
Blob	tsvscode.ts	/^declare var Blob: {$/;"	v
Blob	tsvscode.ts	/^interface Blob {$/;"	i
BlobCallback	tsvscode.ts	/^interface BlobCallback {$/;"	i	namespace:CSS
BlobEvent	tsvscode.ts	/^declare var BlobEvent: {$/;"	v
BlobEvent	tsvscode.ts	/^interface BlobEvent extends Event {$/;"	i
BlobEventInit	tsvscode.ts	/^interface BlobEventInit {$/;"	i
BlobPropertyBag	tsvscode.ts	/^interface BlobPropertyBag {$/;"	i
Body	tsvscode.ts	/^interface Body {$/;"	i
Boolean	ests.ts	/^declare var Boolean: BooleanConstructor;$/;"	v
Boolean	ests.ts	/^interface Boolean {$/;"	i
BooleanConstructor	ests.ts	/^interface BooleanConstructor {$/;"	i
BroadcastChannel	tsvscode.ts	/^declare var BroadcastChannel: {$/;"	v
BroadcastChannel	tsvscode.ts	/^interface BroadcastChannel extends EventTarget {$/;"	i
BroadcastChannelEventMap	tsvscode.ts	/^interface BroadcastChannelEventMap {$/;"	i
ByteLengthQueuingStrategy	tsvscode.ts	/^declare var ByteLengthQueuingStrategy: {$/;"	v
ByteLengthQueuingStrategy	tsvscode.ts	/^interface ByteLengthQueuingStrategy extends QueuingStrategy<ArrayBufferView> {$/;"	i
CAPTURING_PHASE	tsvscode.ts	/^    readonly CAPTURING_PHASE: 1;$/;"	p	interface:Event
CAPTURING_PHASE	tsvscode.ts	/^    readonly CAPTURING_PHASE: 1;$/;"	v
CCW	tsvscode.ts	/^    readonly CCW: 0x0901;$/;"	p	interface:WebGLRenderingContextBase
CCW	tsvscode.ts	/^    readonly CCW: 0x0901;$/;"	v
CDATASection	tsvscode.ts	/^declare var CDATASection: {$/;"	v
CDATASection	tsvscode.ts	/^interface CDATASection extends Text {$/;"	i
CDATA_SECTION_NODE	tsvscode.ts	/^    readonly CDATA_SECTION_NODE: 4;$/;"	p	interface:Node
CDATA_SECTION_NODE	tsvscode.ts	/^    readonly CDATA_SECTION_NODE: 4;$/;"	v
CHARSET_RULE	tsvscode.ts	/^    readonly CHARSET_RULE: 2;$/;"	p	interface:CSSRule
CHARSET_RULE	tsvscode.ts	/^    readonly CHARSET_RULE: 2;$/;"	v
CLAMP_TO_EDGE	tsvscode.ts	/^    readonly CLAMP_TO_EDGE: 0x812F;$/;"	p	interface:WebGLRenderingContextBase
CLAMP_TO_EDGE	tsvscode.ts	/^    readonly CLAMP_TO_EDGE: 0x812F;$/;"	v
CLOSED	tsvscode.ts	/^    readonly CLOSED: 2;$/;"	p	interface:EventSource
CLOSED	tsvscode.ts	/^    readonly CLOSED: 2;$/;"	v
CLOSED	tsvscode.ts	/^    readonly CLOSED: 3;$/;"	p	interface:WebSocket
CLOSED	tsvscode.ts	/^    readonly CLOSED: 3;$/;"	v
CLOSING	tsvscode.ts	/^    readonly CLOSING: 2;$/;"	p	interface:WebSocket
CLOSING	tsvscode.ts	/^    readonly CLOSING: 2;$/;"	v
COLOR	tsvscode.ts	/^    readonly COLOR: 0x1800;$/;"	p	interface:WebGL2RenderingContextBase
COLOR	tsvscode.ts	/^    readonly COLOR: 0x1800;$/;"	v
COLOR_ATTACHMENT0	tsvscode.ts	/^    readonly COLOR_ATTACHMENT0: 0x8CE0;$/;"	p	interface:WebGLRenderingContextBase
COLOR_ATTACHMENT0	tsvscode.ts	/^    readonly COLOR_ATTACHMENT0: 0x8CE0;$/;"	v
COLOR_ATTACHMENT0_WEBGL	tsvscode.ts	/^    readonly COLOR_ATTACHMENT0_WEBGL: 0x8CE0;$/;"	p	interface:WEBGL_draw_buffers
COLOR_ATTACHMENT1	tsvscode.ts	/^    readonly COLOR_ATTACHMENT1: 0x8CE1;$/;"	p	interface:WebGL2RenderingContextBase
COLOR_ATTACHMENT1	tsvscode.ts	/^    readonly COLOR_ATTACHMENT1: 0x8CE1;$/;"	v
COLOR_ATTACHMENT10	tsvscode.ts	/^    readonly COLOR_ATTACHMENT10: 0x8CEA;$/;"	p	interface:WebGL2RenderingContextBase
COLOR_ATTACHMENT10	tsvscode.ts	/^    readonly COLOR_ATTACHMENT10: 0x8CEA;$/;"	v
COLOR_ATTACHMENT10_WEBGL	tsvscode.ts	/^    readonly COLOR_ATTACHMENT10_WEBGL: 0x8CEA;$/;"	p	interface:WEBGL_draw_buffers
COLOR_ATTACHMENT11	tsvscode.ts	/^    readonly COLOR_ATTACHMENT11: 0x8CEB;$/;"	p	interface:WebGL2RenderingContextBase
COLOR_ATTACHMENT11	tsvscode.ts	/^    readonly COLOR_ATTACHMENT11: 0x8CEB;$/;"	v
COLOR_ATTACHMENT11_WEBGL	tsvscode.ts	/^    readonly COLOR_ATTACHMENT11_WEBGL: 0x8CEB;$/;"	p	interface:WEBGL_draw_buffers
COLOR_ATTACHMENT12	tsvscode.ts	/^    readonly COLOR_ATTACHMENT12: 0x8CEC;$/;"	p	interface:WebGL2RenderingContextBase
COLOR_ATTACHMENT12	tsvscode.ts	/^    readonly COLOR_ATTACHMENT12: 0x8CEC;$/;"	v
COLOR_ATTACHMENT12_WEBGL	tsvscode.ts	/^    readonly COLOR_ATTACHMENT12_WEBGL: 0x8CEC;$/;"	p	interface:WEBGL_draw_buffers
COLOR_ATTACHMENT13	tsvscode.ts	/^    readonly COLOR_ATTACHMENT13: 0x8CED;$/;"	p	interface:WebGL2RenderingContextBase
COLOR_ATTACHMENT13	tsvscode.ts	/^    readonly COLOR_ATTACHMENT13: 0x8CED;$/;"	v
COLOR_ATTACHMENT13_WEBGL	tsvscode.ts	/^    readonly COLOR_ATTACHMENT13_WEBGL: 0x8CED;$/;"	p	interface:WEBGL_draw_buffers
COLOR_ATTACHMENT14	tsvscode.ts	/^    readonly COLOR_ATTACHMENT14: 0x8CEE;$/;"	p	interface:WebGL2RenderingContextBase
COLOR_ATTACHMENT14	tsvscode.ts	/^    readonly COLOR_ATTACHMENT14: 0x8CEE;$/;"	v
COLOR_ATTACHMENT14_WEBGL	tsvscode.ts	/^    readonly COLOR_ATTACHMENT14_WEBGL: 0x8CEE;$/;"	p	interface:WEBGL_draw_buffers
COLOR_ATTACHMENT15	tsvscode.ts	/^    readonly COLOR_ATTACHMENT15: 0x8CEF;$/;"	p	interface:WebGL2RenderingContextBase
COLOR_ATTACHMENT15	tsvscode.ts	/^    readonly COLOR_ATTACHMENT15: 0x8CEF;$/;"	v
COLOR_ATTACHMENT15_WEBGL	tsvscode.ts	/^    readonly COLOR_ATTACHMENT15_WEBGL: 0x8CEF;$/;"	p	interface:WEBGL_draw_buffers
COLOR_ATTACHMENT1_WEBGL	tsvscode.ts	/^    readonly COLOR_ATTACHMENT1_WEBGL: 0x8CE1;$/;"	p	interface:WEBGL_draw_buffers
COLOR_ATTACHMENT2	tsvscode.ts	/^    readonly COLOR_ATTACHMENT2: 0x8CE2;$/;"	p	interface:WebGL2RenderingContextBase
COLOR_ATTACHMENT2	tsvscode.ts	/^    readonly COLOR_ATTACHMENT2: 0x8CE2;$/;"	v
COLOR_ATTACHMENT2_WEBGL	tsvscode.ts	/^    readonly COLOR_ATTACHMENT2_WEBGL: 0x8CE2;$/;"	p	interface:WEBGL_draw_buffers
COLOR_ATTACHMENT3	tsvscode.ts	/^    readonly COLOR_ATTACHMENT3: 0x8CE3;$/;"	p	interface:WebGL2RenderingContextBase
COLOR_ATTACHMENT3	tsvscode.ts	/^    readonly COLOR_ATTACHMENT3: 0x8CE3;$/;"	v
COLOR_ATTACHMENT3_WEBGL	tsvscode.ts	/^    readonly COLOR_ATTACHMENT3_WEBGL: 0x8CE3;$/;"	p	interface:WEBGL_draw_buffers
COLOR_ATTACHMENT4	tsvscode.ts	/^    readonly COLOR_ATTACHMENT4: 0x8CE4;$/;"	p	interface:WebGL2RenderingContextBase
COLOR_ATTACHMENT4	tsvscode.ts	/^    readonly COLOR_ATTACHMENT4: 0x8CE4;$/;"	v
COLOR_ATTACHMENT4_WEBGL	tsvscode.ts	/^    readonly COLOR_ATTACHMENT4_WEBGL: 0x8CE4;$/;"	p	interface:WEBGL_draw_buffers
COLOR_ATTACHMENT5	tsvscode.ts	/^    readonly COLOR_ATTACHMENT5: 0x8CE5;$/;"	p	interface:WebGL2RenderingContextBase
COLOR_ATTACHMENT5	tsvscode.ts	/^    readonly COLOR_ATTACHMENT5: 0x8CE5;$/;"	v
COLOR_ATTACHMENT5_WEBGL	tsvscode.ts	/^    readonly COLOR_ATTACHMENT5_WEBGL: 0x8CE5;$/;"	p	interface:WEBGL_draw_buffers
COLOR_ATTACHMENT6	tsvscode.ts	/^    readonly COLOR_ATTACHMENT6: 0x8CE6;$/;"	p	interface:WebGL2RenderingContextBase
COLOR_ATTACHMENT6	tsvscode.ts	/^    readonly COLOR_ATTACHMENT6: 0x8CE6;$/;"	v
COLOR_ATTACHMENT6_WEBGL	tsvscode.ts	/^    readonly COLOR_ATTACHMENT6_WEBGL: 0x8CE6;$/;"	p	interface:WEBGL_draw_buffers
COLOR_ATTACHMENT7	tsvscode.ts	/^    readonly COLOR_ATTACHMENT7: 0x8CE7;$/;"	p	interface:WebGL2RenderingContextBase
COLOR_ATTACHMENT7	tsvscode.ts	/^    readonly COLOR_ATTACHMENT7: 0x8CE7;$/;"	v
COLOR_ATTACHMENT7_WEBGL	tsvscode.ts	/^    readonly COLOR_ATTACHMENT7_WEBGL: 0x8CE7;$/;"	p	interface:WEBGL_draw_buffers
COLOR_ATTACHMENT8	tsvscode.ts	/^    readonly COLOR_ATTACHMENT8: 0x8CE8;$/;"	p	interface:WebGL2RenderingContextBase
COLOR_ATTACHMENT8	tsvscode.ts	/^    readonly COLOR_ATTACHMENT8: 0x8CE8;$/;"	v
COLOR_ATTACHMENT8_WEBGL	tsvscode.ts	/^    readonly COLOR_ATTACHMENT8_WEBGL: 0x8CE8;$/;"	p	interface:WEBGL_draw_buffers
COLOR_ATTACHMENT9	tsvscode.ts	/^    readonly COLOR_ATTACHMENT9: 0x8CE9;$/;"	p	interface:WebGL2RenderingContextBase
COLOR_ATTACHMENT9	tsvscode.ts	/^    readonly COLOR_ATTACHMENT9: 0x8CE9;$/;"	v
COLOR_ATTACHMENT9_WEBGL	tsvscode.ts	/^    readonly COLOR_ATTACHMENT9_WEBGL: 0x8CE9;$/;"	p	interface:WEBGL_draw_buffers
COLOR_BUFFER_BIT	tsvscode.ts	/^    readonly COLOR_BUFFER_BIT: 0x00004000;$/;"	p	interface:WebGLRenderingContextBase
COLOR_BUFFER_BIT	tsvscode.ts	/^    readonly COLOR_BUFFER_BIT: 0x00004000;$/;"	v
COLOR_CLEAR_VALUE	tsvscode.ts	/^    readonly COLOR_CLEAR_VALUE: 0x0C22;$/;"	p	interface:WebGLRenderingContextBase
COLOR_CLEAR_VALUE	tsvscode.ts	/^    readonly COLOR_CLEAR_VALUE: 0x0C22;$/;"	v
COLOR_WRITEMASK	tsvscode.ts	/^    readonly COLOR_WRITEMASK: 0x0C23;$/;"	p	interface:WebGLRenderingContextBase
COLOR_WRITEMASK	tsvscode.ts	/^    readonly COLOR_WRITEMASK: 0x0C23;$/;"	v
COMMENT_NODE	tsvscode.ts	/^    readonly COMMENT_NODE: 8;$/;"	p	interface:Node
COMMENT_NODE	tsvscode.ts	/^    readonly COMMENT_NODE: 8;$/;"	v
COMPARE_REF_TO_TEXTURE	tsvscode.ts	/^    readonly COMPARE_REF_TO_TEXTURE: 0x884E;$/;"	p	interface:WebGL2RenderingContextBase
COMPARE_REF_TO_TEXTURE	tsvscode.ts	/^    readonly COMPARE_REF_TO_TEXTURE: 0x884E;$/;"	v
COMPILE_STATUS	tsvscode.ts	/^    readonly COMPILE_STATUS: 0x8B81;$/;"	p	interface:WebGLRenderingContextBase
COMPILE_STATUS	tsvscode.ts	/^    readonly COMPILE_STATUS: 0x8B81;$/;"	v
COMPLETION_STATUS_KHR	tsvscode.ts	/^    readonly COMPLETION_STATUS_KHR: 0x91B1;$/;"	p	interface:KHR_parallel_shader_compile
COMPRESSED_R11_EAC	tsvscode.ts	/^    readonly COMPRESSED_R11_EAC: 0x9270;$/;"	p	interface:WEBGL_compressed_texture_etc
COMPRESSED_RED_GREEN_RGTC2_EXT	tsvscode.ts	/^    readonly COMPRESSED_RED_GREEN_RGTC2_EXT: 0x8DBD;$/;"	p	interface:EXT_texture_compression_rgtc
COMPRESSED_RED_RGTC1_EXT	tsvscode.ts	/^    readonly COMPRESSED_RED_RGTC1_EXT: 0x8DBB;$/;"	p	interface:EXT_texture_compression_rgtc
COMPRESSED_RG11_EAC	tsvscode.ts	/^    readonly COMPRESSED_RG11_EAC: 0x9272;$/;"	p	interface:WEBGL_compressed_texture_etc
COMPRESSED_RGB8_ETC2	tsvscode.ts	/^    readonly COMPRESSED_RGB8_ETC2: 0x9274;$/;"	p	interface:WEBGL_compressed_texture_etc
COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2	tsvscode.ts	/^    readonly COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2: 0x9276;$/;"	p	interface:WEBGL_compressed_texture_etc
COMPRESSED_RGBA8_ETC2_EAC	tsvscode.ts	/^    readonly COMPRESSED_RGBA8_ETC2_EAC: 0x9278;$/;"	p	interface:WEBGL_compressed_texture_etc
COMPRESSED_RGBA_ASTC_10x10_KHR	tsvscode.ts	/^    readonly COMPRESSED_RGBA_ASTC_10x10_KHR: 0x93BB;$/;"	p	interface:WEBGL_compressed_texture_astc
COMPRESSED_RGBA_ASTC_10x5_KHR	tsvscode.ts	/^    readonly COMPRESSED_RGBA_ASTC_10x5_KHR: 0x93B8;$/;"	p	interface:WEBGL_compressed_texture_astc
COMPRESSED_RGBA_ASTC_10x6_KHR	tsvscode.ts	/^    readonly COMPRESSED_RGBA_ASTC_10x6_KHR: 0x93B9;$/;"	p	interface:WEBGL_compressed_texture_astc
COMPRESSED_RGBA_ASTC_10x8_KHR	tsvscode.ts	/^    readonly COMPRESSED_RGBA_ASTC_10x8_KHR: 0x93BA;$/;"	p	interface:WEBGL_compressed_texture_astc
COMPRESSED_RGBA_ASTC_12x10_KHR	tsvscode.ts	/^    readonly COMPRESSED_RGBA_ASTC_12x10_KHR: 0x93BC;$/;"	p	interface:WEBGL_compressed_texture_astc
COMPRESSED_RGBA_ASTC_12x12_KHR	tsvscode.ts	/^    readonly COMPRESSED_RGBA_ASTC_12x12_KHR: 0x93BD;$/;"	p	interface:WEBGL_compressed_texture_astc
COMPRESSED_RGBA_ASTC_4x4_KHR	tsvscode.ts	/^    readonly COMPRESSED_RGBA_ASTC_4x4_KHR: 0x93B0;$/;"	p	interface:WEBGL_compressed_texture_astc
COMPRESSED_RGBA_ASTC_5x4_KHR	tsvscode.ts	/^    readonly COMPRESSED_RGBA_ASTC_5x4_KHR: 0x93B1;$/;"	p	interface:WEBGL_compressed_texture_astc
COMPRESSED_RGBA_ASTC_5x5_KHR	tsvscode.ts	/^    readonly COMPRESSED_RGBA_ASTC_5x5_KHR: 0x93B2;$/;"	p	interface:WEBGL_compressed_texture_astc
COMPRESSED_RGBA_ASTC_6x5_KHR	tsvscode.ts	/^    readonly COMPRESSED_RGBA_ASTC_6x5_KHR: 0x93B3;$/;"	p	interface:WEBGL_compressed_texture_astc
COMPRESSED_RGBA_ASTC_6x6_KHR	tsvscode.ts	/^    readonly COMPRESSED_RGBA_ASTC_6x6_KHR: 0x93B4;$/;"	p	interface:WEBGL_compressed_texture_astc
COMPRESSED_RGBA_ASTC_8x5_KHR	tsvscode.ts	/^    readonly COMPRESSED_RGBA_ASTC_8x5_KHR: 0x93B5;$/;"	p	interface:WEBGL_compressed_texture_astc
COMPRESSED_RGBA_ASTC_8x6_KHR	tsvscode.ts	/^    readonly COMPRESSED_RGBA_ASTC_8x6_KHR: 0x93B6;$/;"	p	interface:WEBGL_compressed_texture_astc
COMPRESSED_RGBA_ASTC_8x8_KHR	tsvscode.ts	/^    readonly COMPRESSED_RGBA_ASTC_8x8_KHR: 0x93B7;$/;"	p	interface:WEBGL_compressed_texture_astc
COMPRESSED_RGBA_BPTC_UNORM_EXT	tsvscode.ts	/^    readonly COMPRESSED_RGBA_BPTC_UNORM_EXT: 0x8E8C;$/;"	p	interface:EXT_texture_compression_bptc
COMPRESSED_RGBA_PVRTC_2BPPV1_IMG	tsvscode.ts	/^    readonly COMPRESSED_RGBA_PVRTC_2BPPV1_IMG: 0x8C03;$/;"	p	interface:WEBGL_compressed_texture_pvrtc
COMPRESSED_RGBA_PVRTC_4BPPV1_IMG	tsvscode.ts	/^    readonly COMPRESSED_RGBA_PVRTC_4BPPV1_IMG: 0x8C02;$/;"	p	interface:WEBGL_compressed_texture_pvrtc
COMPRESSED_RGBA_S3TC_DXT1_EXT	tsvscode.ts	/^    readonly COMPRESSED_RGBA_S3TC_DXT1_EXT: 0x83F1;$/;"	p	interface:WEBGL_compressed_texture_s3tc
COMPRESSED_RGBA_S3TC_DXT3_EXT	tsvscode.ts	/^    readonly COMPRESSED_RGBA_S3TC_DXT3_EXT: 0x83F2;$/;"	p	interface:WEBGL_compressed_texture_s3tc
COMPRESSED_RGBA_S3TC_DXT5_EXT	tsvscode.ts	/^    readonly COMPRESSED_RGBA_S3TC_DXT5_EXT: 0x83F3;$/;"	p	interface:WEBGL_compressed_texture_s3tc
COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT	tsvscode.ts	/^    readonly COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT: 0x8E8E;$/;"	p	interface:EXT_texture_compression_bptc
COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT	tsvscode.ts	/^    readonly COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT: 0x8E8F;$/;"	p	interface:EXT_texture_compression_bptc
COMPRESSED_RGB_ETC1_WEBGL	tsvscode.ts	/^    readonly COMPRESSED_RGB_ETC1_WEBGL: 0x8D64;$/;"	p	interface:WEBGL_compressed_texture_etc1
COMPRESSED_RGB_PVRTC_2BPPV1_IMG	tsvscode.ts	/^    readonly COMPRESSED_RGB_PVRTC_2BPPV1_IMG: 0x8C01;$/;"	p	interface:WEBGL_compressed_texture_pvrtc
COMPRESSED_RGB_PVRTC_4BPPV1_IMG	tsvscode.ts	/^    readonly COMPRESSED_RGB_PVRTC_4BPPV1_IMG: 0x8C00;$/;"	p	interface:WEBGL_compressed_texture_pvrtc
COMPRESSED_RGB_S3TC_DXT1_EXT	tsvscode.ts	/^    readonly COMPRESSED_RGB_S3TC_DXT1_EXT: 0x83F0;$/;"	p	interface:WEBGL_compressed_texture_s3tc
COMPRESSED_SIGNED_R11_EAC	tsvscode.ts	/^    readonly COMPRESSED_SIGNED_R11_EAC: 0x9271;$/;"	p	interface:WEBGL_compressed_texture_etc
COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT	tsvscode.ts	/^    readonly COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT: 0x8DBE;$/;"	p	interface:EXT_texture_compression_rgtc
COMPRESSED_SIGNED_RED_RGTC1_EXT	tsvscode.ts	/^    readonly COMPRESSED_SIGNED_RED_RGTC1_EXT: 0x8DBC;$/;"	p	interface:EXT_texture_compression_rgtc
COMPRESSED_SIGNED_RG11_EAC	tsvscode.ts	/^    readonly COMPRESSED_SIGNED_RG11_EAC: 0x9273;$/;"	p	interface:WEBGL_compressed_texture_etc
COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR: 0x93DB;$/;"	p	interface:WEBGL_compressed_texture_astc
COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR: 0x93D8;$/;"	p	interface:WEBGL_compressed_texture_astc
COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR: 0x93D9;$/;"	p	interface:WEBGL_compressed_texture_astc
COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR: 0x93DA;$/;"	p	interface:WEBGL_compressed_texture_astc
COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR: 0x93DC;$/;"	p	interface:WEBGL_compressed_texture_astc
COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR: 0x93DD;$/;"	p	interface:WEBGL_compressed_texture_astc
COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR: 0x93D0;$/;"	p	interface:WEBGL_compressed_texture_astc
COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR: 0x93D1;$/;"	p	interface:WEBGL_compressed_texture_astc
COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR: 0x93D2;$/;"	p	interface:WEBGL_compressed_texture_astc
COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR: 0x93D3;$/;"	p	interface:WEBGL_compressed_texture_astc
COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR: 0x93D4;$/;"	p	interface:WEBGL_compressed_texture_astc
COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR: 0x93D5;$/;"	p	interface:WEBGL_compressed_texture_astc
COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR: 0x93D6;$/;"	p	interface:WEBGL_compressed_texture_astc
COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR: 0x93D7;$/;"	p	interface:WEBGL_compressed_texture_astc
COMPRESSED_SRGB8_ALPHA8_ETC2_EAC	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ETC2_EAC: 0x9279;$/;"	p	interface:WEBGL_compressed_texture_etc
COMPRESSED_SRGB8_ETC2	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ETC2: 0x9275;$/;"	p	interface:WEBGL_compressed_texture_etc
COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2: 0x9277;$/;"	p	interface:WEBGL_compressed_texture_etc
COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT	tsvscode.ts	/^    readonly COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT: 0x8E8D;$/;"	p	interface:EXT_texture_compression_bptc
COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT	tsvscode.ts	/^    readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT: 0x8C4D;$/;"	p	interface:WEBGL_compressed_texture_s3tc_srgb
COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT	tsvscode.ts	/^    readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT: 0x8C4E;$/;"	p	interface:WEBGL_compressed_texture_s3tc_srgb
COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT	tsvscode.ts	/^    readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT: 0x8C4F;$/;"	p	interface:WEBGL_compressed_texture_s3tc_srgb
COMPRESSED_SRGB_S3TC_DXT1_EXT	tsvscode.ts	/^    readonly COMPRESSED_SRGB_S3TC_DXT1_EXT: 0x8C4C;$/;"	p	interface:WEBGL_compressed_texture_s3tc_srgb
COMPRESSED_TEXTURE_FORMATS	tsvscode.ts	/^    readonly COMPRESSED_TEXTURE_FORMATS: 0x86A3;$/;"	p	interface:WebGLRenderingContextBase
COMPRESSED_TEXTURE_FORMATS	tsvscode.ts	/^    readonly COMPRESSED_TEXTURE_FORMATS: 0x86A3;$/;"	v
CONDITION_SATISFIED	tsvscode.ts	/^    readonly CONDITION_SATISFIED: 0x911C;$/;"	p	interface:WebGL2RenderingContextBase
CONDITION_SATISFIED	tsvscode.ts	/^    readonly CONDITION_SATISFIED: 0x911C;$/;"	v
CONNECTING	tsvscode.ts	/^    readonly CONNECTING: 0;$/;"	p	interface:EventSource
CONNECTING	tsvscode.ts	/^    readonly CONNECTING: 0;$/;"	p	interface:WebSocket
CONNECTING	tsvscode.ts	/^    readonly CONNECTING: 0;$/;"	v
CONSTANT_ALPHA	tsvscode.ts	/^    readonly CONSTANT_ALPHA: 0x8003;$/;"	p	interface:WebGLRenderingContextBase
CONSTANT_ALPHA	tsvscode.ts	/^    readonly CONSTANT_ALPHA: 0x8003;$/;"	v
CONSTANT_COLOR	tsvscode.ts	/^    readonly CONSTANT_COLOR: 0x8001;$/;"	p	interface:WebGLRenderingContextBase
CONSTANT_COLOR	tsvscode.ts	/^    readonly CONSTANT_COLOR: 0x8001;$/;"	v
CONTEXT_LOST_WEBGL	tsvscode.ts	/^    readonly CONTEXT_LOST_WEBGL: 0x9242;$/;"	p	interface:WebGLRenderingContextBase
CONTEXT_LOST_WEBGL	tsvscode.ts	/^    readonly CONTEXT_LOST_WEBGL: 0x9242;$/;"	v
COPY_READ_BUFFER	tsvscode.ts	/^    readonly COPY_READ_BUFFER: 0x8F36;$/;"	p	interface:WebGL2RenderingContextBase
COPY_READ_BUFFER	tsvscode.ts	/^    readonly COPY_READ_BUFFER: 0x8F36;$/;"	v
COPY_READ_BUFFER_BINDING	tsvscode.ts	/^    readonly COPY_READ_BUFFER_BINDING: 0x8F36;$/;"	p	interface:WebGL2RenderingContextBase
COPY_READ_BUFFER_BINDING	tsvscode.ts	/^    readonly COPY_READ_BUFFER_BINDING: 0x8F36;$/;"	v
COPY_WRITE_BUFFER	tsvscode.ts	/^    readonly COPY_WRITE_BUFFER: 0x8F37;$/;"	p	interface:WebGL2RenderingContextBase
COPY_WRITE_BUFFER	tsvscode.ts	/^    readonly COPY_WRITE_BUFFER: 0x8F37;$/;"	v
COPY_WRITE_BUFFER_BINDING	tsvscode.ts	/^    readonly COPY_WRITE_BUFFER_BINDING: 0x8F37;$/;"	p	interface:WebGL2RenderingContextBase
COPY_WRITE_BUFFER_BINDING	tsvscode.ts	/^    readonly COPY_WRITE_BUFFER_BINDING: 0x8F37;$/;"	v
COUNTER_STYLE_RULE	tsvscode.ts	/^    readonly COUNTER_STYLE_RULE: 11;$/;"	p	interface:CSSRule
COUNTER_STYLE_RULE	tsvscode.ts	/^    readonly COUNTER_STYLE_RULE: 11;$/;"	v
CSS	tsvscode.ts	/^declare namespace CSS {$/;"	n
CSSAnimation	tsvscode.ts	/^declare var CSSAnimation: {$/;"	v
CSSAnimation	tsvscode.ts	/^interface CSSAnimation extends Animation {$/;"	i
CSSConditionRule	tsvscode.ts	/^declare var CSSConditionRule: {$/;"	v
CSSConditionRule	tsvscode.ts	/^interface CSSConditionRule extends CSSGroupingRule {$/;"	i
CSSContainerRule	tsvscode.ts	/^declare var CSSContainerRule: {$/;"	v
CSSContainerRule	tsvscode.ts	/^interface CSSContainerRule extends CSSConditionRule {$/;"	i
CSSCounterStyleRule	tsvscode.ts	/^declare var CSSCounterStyleRule: {$/;"	v
CSSCounterStyleRule	tsvscode.ts	/^interface CSSCounterStyleRule extends CSSRule {$/;"	i
CSSFontFaceRule	tsvscode.ts	/^declare var CSSFontFaceRule: {$/;"	v
CSSFontFaceRule	tsvscode.ts	/^interface CSSFontFaceRule extends CSSRule {$/;"	i
CSSFontFeatureValuesRule	tsvscode.ts	/^declare var CSSFontFeatureValuesRule: {$/;"	v
CSSFontFeatureValuesRule	tsvscode.ts	/^interface CSSFontFeatureValuesRule extends CSSRule {$/;"	i
CSSFontPaletteValuesRule	tsvscode.ts	/^declare var CSSFontPaletteValuesRule: {$/;"	v
CSSFontPaletteValuesRule	tsvscode.ts	/^interface CSSFontPaletteValuesRule extends CSSRule {$/;"	i
CSSGroupingRule	tsvscode.ts	/^declare var CSSGroupingRule: {$/;"	v
CSSGroupingRule	tsvscode.ts	/^interface CSSGroupingRule extends CSSRule {$/;"	i
CSSImageValue	tsvscode.ts	/^declare var CSSImageValue: {$/;"	v
CSSImageValue	tsvscode.ts	/^interface CSSImageValue extends CSSStyleValue {$/;"	i
CSSImportRule	tsvscode.ts	/^declare var CSSImportRule: {$/;"	v
CSSImportRule	tsvscode.ts	/^interface CSSImportRule extends CSSRule {$/;"	i
CSSKeyframeRule	tsvscode.ts	/^declare var CSSKeyframeRule: {$/;"	v
CSSKeyframeRule	tsvscode.ts	/^interface CSSKeyframeRule extends CSSRule {$/;"	i
CSSKeyframesRule	tsvscode.ts	/^declare var CSSKeyframesRule: {$/;"	v
CSSKeyframesRule	tsvscode.ts	/^interface CSSKeyframesRule extends CSSRule {$/;"	i
CSSKeywordValue	tsvscode.ts	/^declare var CSSKeywordValue: {$/;"	v
CSSKeywordValue	tsvscode.ts	/^interface CSSKeywordValue extends CSSStyleValue {$/;"	i
CSSLayerBlockRule	tsvscode.ts	/^declare var CSSLayerBlockRule: {$/;"	v
CSSLayerBlockRule	tsvscode.ts	/^interface CSSLayerBlockRule extends CSSGroupingRule {$/;"	i
CSSLayerStatementRule	tsvscode.ts	/^declare var CSSLayerStatementRule: {$/;"	v
CSSLayerStatementRule	tsvscode.ts	/^interface CSSLayerStatementRule extends CSSRule {$/;"	i
CSSMathClamp	tsvscode.ts	/^declare var CSSMathClamp: {$/;"	v
CSSMathClamp	tsvscode.ts	/^interface CSSMathClamp extends CSSMathValue {$/;"	i
CSSMathInvert	tsvscode.ts	/^declare var CSSMathInvert: {$/;"	v
CSSMathInvert	tsvscode.ts	/^interface CSSMathInvert extends CSSMathValue {$/;"	i
CSSMathMax	tsvscode.ts	/^declare var CSSMathMax: {$/;"	v
CSSMathMax	tsvscode.ts	/^interface CSSMathMax extends CSSMathValue {$/;"	i
CSSMathMin	tsvscode.ts	/^declare var CSSMathMin: {$/;"	v
CSSMathMin	tsvscode.ts	/^interface CSSMathMin extends CSSMathValue {$/;"	i
CSSMathNegate	tsvscode.ts	/^declare var CSSMathNegate: {$/;"	v
CSSMathNegate	tsvscode.ts	/^interface CSSMathNegate extends CSSMathValue {$/;"	i
CSSMathProduct	tsvscode.ts	/^declare var CSSMathProduct: {$/;"	v
CSSMathProduct	tsvscode.ts	/^interface CSSMathProduct extends CSSMathValue {$/;"	i
CSSMathSum	tsvscode.ts	/^declare var CSSMathSum: {$/;"	v
CSSMathSum	tsvscode.ts	/^interface CSSMathSum extends CSSMathValue {$/;"	i
CSSMathValue	tsvscode.ts	/^declare var CSSMathValue: {$/;"	v
CSSMathValue	tsvscode.ts	/^interface CSSMathValue extends CSSNumericValue {$/;"	i
CSSMatrixComponent	tsvscode.ts	/^declare var CSSMatrixComponent: {$/;"	v
CSSMatrixComponent	tsvscode.ts	/^interface CSSMatrixComponent extends CSSTransformComponent {$/;"	i
CSSMatrixComponentOptions	tsvscode.ts	/^interface CSSMatrixComponentOptions {$/;"	i
CSSMediaRule	tsvscode.ts	/^declare var CSSMediaRule: {$/;"	v
CSSMediaRule	tsvscode.ts	/^interface CSSMediaRule extends CSSConditionRule {$/;"	i
CSSNamespaceRule	tsvscode.ts	/^declare var CSSNamespaceRule: {$/;"	v
CSSNamespaceRule	tsvscode.ts	/^interface CSSNamespaceRule extends CSSRule {$/;"	i
CSSNumericArray	tsvscode.ts	/^declare var CSSNumericArray: {$/;"	v
CSSNumericArray	tsvscode.ts	/^interface CSSNumericArray {$/;"	i
CSSNumericType	tsvscode.ts	/^interface CSSNumericType {$/;"	i
CSSNumericValue	tsvscode.ts	/^declare var CSSNumericValue: {$/;"	v
CSSNumericValue	tsvscode.ts	/^interface CSSNumericValue extends CSSStyleValue {$/;"	i
CSSPageRule	tsvscode.ts	/^declare var CSSPageRule: {$/;"	v
CSSPageRule	tsvscode.ts	/^interface CSSPageRule extends CSSGroupingRule {$/;"	i
CSSPerspective	tsvscode.ts	/^declare var CSSPerspective: {$/;"	v
CSSPerspective	tsvscode.ts	/^interface CSSPerspective extends CSSTransformComponent {$/;"	i
CSSPropertyRule	tsvscode.ts	/^declare var CSSPropertyRule: {$/;"	v
CSSPropertyRule	tsvscode.ts	/^interface CSSPropertyRule extends CSSRule {$/;"	i
CSSRotate	tsvscode.ts	/^declare var CSSRotate: {$/;"	v
CSSRotate	tsvscode.ts	/^interface CSSRotate extends CSSTransformComponent {$/;"	i
CSSRule	tsvscode.ts	/^declare var CSSRule: {$/;"	v
CSSRule	tsvscode.ts	/^interface CSSRule {$/;"	i
CSSRuleList	tsvscode.ts	/^declare var CSSRuleList: {$/;"	v
CSSRuleList	tsvscode.ts	/^interface CSSRuleList {$/;"	i
CSSScale	tsvscode.ts	/^declare var CSSScale: {$/;"	v
CSSScale	tsvscode.ts	/^interface CSSScale extends CSSTransformComponent {$/;"	i
CSSSkew	tsvscode.ts	/^declare var CSSSkew: {$/;"	v
CSSSkew	tsvscode.ts	/^interface CSSSkew extends CSSTransformComponent {$/;"	i
CSSSkewX	tsvscode.ts	/^declare var CSSSkewX: {$/;"	v
CSSSkewX	tsvscode.ts	/^interface CSSSkewX extends CSSTransformComponent {$/;"	i
CSSSkewY	tsvscode.ts	/^declare var CSSSkewY: {$/;"	v
CSSSkewY	tsvscode.ts	/^interface CSSSkewY extends CSSTransformComponent {$/;"	i
CSSStyleDeclaration	tsvscode.ts	/^declare var CSSStyleDeclaration: {$/;"	v
CSSStyleDeclaration	tsvscode.ts	/^interface CSSStyleDeclaration {$/;"	i
CSSStyleRule	tsvscode.ts	/^declare var CSSStyleRule: {$/;"	v
CSSStyleRule	tsvscode.ts	/^interface CSSStyleRule extends CSSGroupingRule {$/;"	i
CSSStyleSheet	tsvscode.ts	/^declare var CSSStyleSheet: {$/;"	v
CSSStyleSheet	tsvscode.ts	/^interface CSSStyleSheet extends StyleSheet {$/;"	i
CSSStyleSheetInit	tsvscode.ts	/^interface CSSStyleSheetInit {$/;"	i
CSSStyleValue	tsvscode.ts	/^declare var CSSStyleValue: {$/;"	v
CSSStyleValue	tsvscode.ts	/^interface CSSStyleValue {$/;"	i
CSSSupportsRule	tsvscode.ts	/^declare var CSSSupportsRule: {$/;"	v
CSSSupportsRule	tsvscode.ts	/^interface CSSSupportsRule extends CSSConditionRule {$/;"	i
CSSTransformComponent	tsvscode.ts	/^declare var CSSTransformComponent: {$/;"	v
CSSTransformComponent	tsvscode.ts	/^interface CSSTransformComponent {$/;"	i
CSSTransformValue	tsvscode.ts	/^declare var CSSTransformValue: {$/;"	v
CSSTransformValue	tsvscode.ts	/^interface CSSTransformValue extends CSSStyleValue {$/;"	i
CSSTransition	tsvscode.ts	/^declare var CSSTransition: {$/;"	v
CSSTransition	tsvscode.ts	/^interface CSSTransition extends Animation {$/;"	i
CSSTranslate	tsvscode.ts	/^declare var CSSTranslate: {$/;"	v
CSSTranslate	tsvscode.ts	/^interface CSSTranslate extends CSSTransformComponent {$/;"	i
CSSUnitValue	tsvscode.ts	/^declare var CSSUnitValue: {$/;"	v
CSSUnitValue	tsvscode.ts	/^interface CSSUnitValue extends CSSNumericValue {$/;"	i
CSSUnparsedValue	tsvscode.ts	/^declare var CSSUnparsedValue: {$/;"	v
CSSUnparsedValue	tsvscode.ts	/^interface CSSUnparsedValue extends CSSStyleValue {$/;"	i
CSSVariableReferenceValue	tsvscode.ts	/^declare var CSSVariableReferenceValue: {$/;"	v
CSSVariableReferenceValue	tsvscode.ts	/^interface CSSVariableReferenceValue {$/;"	i
CULL_FACE	tsvscode.ts	/^    readonly CULL_FACE: 0x0B44;$/;"	p	interface:WebGLRenderingContextBase
CULL_FACE	tsvscode.ts	/^    readonly CULL_FACE: 0x0B44;$/;"	v
CULL_FACE_MODE	tsvscode.ts	/^    readonly CULL_FACE_MODE: 0x0B45;$/;"	p	interface:WebGLRenderingContextBase
CULL_FACE_MODE	tsvscode.ts	/^    readonly CULL_FACE_MODE: 0x0B45;$/;"	v
CURRENT_PROGRAM	tsvscode.ts	/^    readonly CURRENT_PROGRAM: 0x8B8D;$/;"	p	interface:WebGLRenderingContextBase
CURRENT_PROGRAM	tsvscode.ts	/^    readonly CURRENT_PROGRAM: 0x8B8D;$/;"	v
CURRENT_QUERY	tsvscode.ts	/^    readonly CURRENT_QUERY: 0x8865;$/;"	p	interface:WebGL2RenderingContextBase
CURRENT_QUERY	tsvscode.ts	/^    readonly CURRENT_QUERY: 0x8865;$/;"	v
CURRENT_VERTEX_ATTRIB	tsvscode.ts	/^    readonly CURRENT_VERTEX_ATTRIB: 0x8626;$/;"	p	interface:WebGLRenderingContextBase
CURRENT_VERTEX_ATTRIB	tsvscode.ts	/^    readonly CURRENT_VERTEX_ATTRIB: 0x8626;$/;"	v
CW	tsvscode.ts	/^    readonly CW: 0x0900;$/;"	p	interface:WebGLRenderingContextBase
CW	tsvscode.ts	/^    readonly CW: 0x0900;$/;"	v
Cache	tsvscode.ts	/^declare var Cache: {$/;"	v
Cache	tsvscode.ts	/^interface Cache {$/;"	i
CacheQueryOptions	tsvscode.ts	/^interface CacheQueryOptions {$/;"	i
CacheStorage	tsvscode.ts	/^declare var CacheStorage: {$/;"	v
CacheStorage	tsvscode.ts	/^interface CacheStorage {$/;"	i
CallableFunction	ests.ts	/^interface CallableFunction extends Function {$/;"	i
CanvasCaptureMediaStreamTrack	tsvscode.ts	/^declare var CanvasCaptureMediaStreamTrack: {$/;"	v
CanvasCaptureMediaStreamTrack	tsvscode.ts	/^interface CanvasCaptureMediaStreamTrack extends MediaStreamTrack {$/;"	i
CanvasCompositing	tsvscode.ts	/^interface CanvasCompositing {$/;"	i
CanvasDrawImage	tsvscode.ts	/^interface CanvasDrawImage {$/;"	i
CanvasDrawPath	tsvscode.ts	/^interface CanvasDrawPath {$/;"	i
CanvasFillStrokeStyles	tsvscode.ts	/^interface CanvasFillStrokeStyles {$/;"	i
CanvasFilters	tsvscode.ts	/^interface CanvasFilters {$/;"	i
CanvasGradient	tsvscode.ts	/^declare var CanvasGradient: {$/;"	v
CanvasGradient	tsvscode.ts	/^interface CanvasGradient {$/;"	i
CanvasImageData	tsvscode.ts	/^interface CanvasImageData {$/;"	i
CanvasImageSmoothing	tsvscode.ts	/^interface CanvasImageSmoothing {$/;"	i
CanvasPath	tsvscode.ts	/^interface CanvasPath {$/;"	i
CanvasPathDrawingStyles	tsvscode.ts	/^interface CanvasPathDrawingStyles {$/;"	i
CanvasPattern	tsvscode.ts	/^declare var CanvasPattern: {$/;"	v
CanvasPattern	tsvscode.ts	/^interface CanvasPattern {$/;"	i
CanvasRect	tsvscode.ts	/^interface CanvasRect {$/;"	i
CanvasRenderingContext2D	tsvscode.ts	/^declare var CanvasRenderingContext2D: {$/;"	v
CanvasRenderingContext2D	tsvscode.ts	/^interface CanvasRenderingContext2D extends CanvasCompositing, CanvasDrawImage, CanvasDrawPath, C/;"	i
CanvasRenderingContext2DSettings	tsvscode.ts	/^interface CanvasRenderingContext2DSettings {$/;"	i
CanvasShadowStyles	tsvscode.ts	/^interface CanvasShadowStyles {$/;"	i
CanvasState	tsvscode.ts	/^interface CanvasState {$/;"	i
CanvasText	tsvscode.ts	/^interface CanvasText {$/;"	i
CanvasTextDrawingStyles	tsvscode.ts	/^interface CanvasTextDrawingStyles {$/;"	i
CanvasTransform	tsvscode.ts	/^interface CanvasTransform {$/;"	i
CanvasUserInterface	tsvscode.ts	/^interface CanvasUserInterface {$/;"	i
Capitalize	ests.ts	/^type Capitalize<S extends string> = intrinsic;$/;"	a
ChannelMergerNode	tsvscode.ts	/^declare var ChannelMergerNode: {$/;"	v
ChannelMergerNode	tsvscode.ts	/^interface ChannelMergerNode extends AudioNode {$/;"	i
ChannelMergerOptions	tsvscode.ts	/^interface ChannelMergerOptions extends AudioNodeOptions {$/;"	i
ChannelSplitterNode	tsvscode.ts	/^declare var ChannelSplitterNode: {$/;"	v
ChannelSplitterNode	tsvscode.ts	/^interface ChannelSplitterNode extends AudioNode {$/;"	i
ChannelSplitterOptions	tsvscode.ts	/^interface ChannelSplitterOptions extends AudioNodeOptions {$/;"	i
CharacterData	tsvscode.ts	/^declare var CharacterData: {$/;"	v
CharacterData	tsvscode.ts	/^interface CharacterData extends Node, ChildNode, NonDocumentTypeChildNode {$/;"	i
CheckVisibilityOptions	tsvscode.ts	/^interface CheckVisibilityOptions {$/;"	i
ChildNode	tsvscode.ts	/^interface ChildNode extends Node {$/;"	i
ClientQueryOptions	tsvscode.ts	/^interface ClientQueryOptions {$/;"	i
ClientRect	tsvscode.ts	/^interface ClientRect extends DOMRect {$/;"	i
Clipboard	tsvscode.ts	/^declare var Clipboard: {$/;"	v
Clipboard	tsvscode.ts	/^interface Clipboard extends EventTarget {$/;"	i
ClipboardEvent	tsvscode.ts	/^declare var ClipboardEvent: {$/;"	v
ClipboardEvent	tsvscode.ts	/^interface ClipboardEvent extends Event {$/;"	i
ClipboardEventInit	tsvscode.ts	/^interface ClipboardEventInit extends EventInit {$/;"	i
ClipboardItem	tsvscode.ts	/^declare var ClipboardItem: {$/;"	v
ClipboardItem	tsvscode.ts	/^interface ClipboardItem {$/;"	i
ClipboardItemOptions	tsvscode.ts	/^interface ClipboardItemOptions {$/;"	i
CloseEvent	tsvscode.ts	/^declare var CloseEvent: {$/;"	v
CloseEvent	tsvscode.ts	/^interface CloseEvent extends Event {$/;"	i
CloseEventInit	tsvscode.ts	/^interface CloseEventInit extends EventInit {$/;"	i
Collator	ests.ts	/^    interface Collator {$/;"	i	namespace:Intl
Collator	ests.ts	/^    var Collator: CollatorConstructor;$/;"	v	namespace:Intl
CollatorConstructor	ests.ts	/^    interface CollatorConstructor {$/;"	i	namespace:Intl
CollatorOptions	ests.ts	/^    interface CollatorOptions {$/;"	i	namespace:Intl
Comment	tsvscode.ts	/^declare var Comment: {$/;"	v
Comment	tsvscode.ts	/^interface Comment extends CharacterData {$/;"	i
CompositionEvent	tsvscode.ts	/^declare var CompositionEvent: {$/;"	v
CompositionEvent	tsvscode.ts	/^interface CompositionEvent extends UIEvent {$/;"	i
CompositionEventInit	tsvscode.ts	/^interface CompositionEventInit extends UIEventInit {$/;"	i
CompressionStream	tsvscode.ts	/^declare var CompressionStream: {$/;"	v
CompressionStream	tsvscode.ts	/^interface CompressionStream extends GenericTransformStream {$/;"	i
ComputedEffectTiming	tsvscode.ts	/^interface ComputedEffectTiming extends EffectTiming {$/;"	i
ComputedKeyframe	tsvscode.ts	/^interface ComputedKeyframe {$/;"	i
ConcatArray	ests.ts	/^interface ConcatArray<T> {$/;"	i
Console	tsvscode.ts	/^interface Console {$/;"	i
ConstantSourceNode	tsvscode.ts	/^declare var ConstantSourceNode: {$/;"	v
ConstantSourceNode	tsvscode.ts	/^interface ConstantSourceNode extends AudioScheduledSourceNode {$/;"	i
ConstantSourceOptions	tsvscode.ts	/^interface ConstantSourceOptions {$/;"	i
ConstrainBooleanParameters	tsvscode.ts	/^interface ConstrainBooleanParameters {$/;"	i
ConstrainDOMStringParameters	tsvscode.ts	/^interface ConstrainDOMStringParameters {$/;"	i
ConstrainDoubleRange	tsvscode.ts	/^interface ConstrainDoubleRange extends DoubleRange {$/;"	i
ConstrainULongRange	tsvscode.ts	/^interface ConstrainULongRange extends ULongRange {$/;"	i
ConstructorParameters	ests.ts	/^type ConstructorParameters<T extends abstract new (...args: any) => any> = T extends abstract ne/;"	a
ConvolverNode	tsvscode.ts	/^declare var ConvolverNode: {$/;"	v
ConvolverNode	tsvscode.ts	/^interface ConvolverNode extends AudioNode {$/;"	i
ConvolverOptions	tsvscode.ts	/^interface ConvolverOptions extends AudioNodeOptions {$/;"	i
CountQueuingStrategy	tsvscode.ts	/^declare var CountQueuingStrategy: {$/;"	v
CountQueuingStrategy	tsvscode.ts	/^interface CountQueuingStrategy extends QueuingStrategy {$/;"	i
Credential	tsvscode.ts	/^declare var Credential: {$/;"	v
Credential	tsvscode.ts	/^interface Credential {$/;"	i
CredentialCreationOptions	tsvscode.ts	/^interface CredentialCreationOptions {$/;"	i
CredentialPropertiesOutput	tsvscode.ts	/^interface CredentialPropertiesOutput {$/;"	i
CredentialRequestOptions	tsvscode.ts	/^interface CredentialRequestOptions {$/;"	i
CredentialsContainer	tsvscode.ts	/^declare var CredentialsContainer: {$/;"	v
CredentialsContainer	tsvscode.ts	/^interface CredentialsContainer {$/;"	i
Crypto	tsvscode.ts	/^declare var Crypto: {$/;"	v
Crypto	tsvscode.ts	/^interface Crypto {$/;"	i
CryptoKey	tsvscode.ts	/^declare var CryptoKey: {$/;"	v
CryptoKey	tsvscode.ts	/^interface CryptoKey {$/;"	i
CryptoKeyPair	tsvscode.ts	/^interface CryptoKeyPair {$/;"	i
CustomElementConstructor	tsvscode.ts	/^interface CustomElementConstructor {$/;"	i	namespace:CSS
CustomElementRegistry	tsvscode.ts	/^declare var CustomElementRegistry: {$/;"	v
CustomElementRegistry	tsvscode.ts	/^interface CustomElementRegistry {$/;"	i
CustomEvent	tsvscode.ts	/^declare var CustomEvent: {$/;"	v
CustomEvent	tsvscode.ts	/^interface CustomEvent<T = any> extends Event {$/;"	i
CustomEventInit	tsvscode.ts	/^interface CustomEventInit<T = any> extends EventInit {$/;"	i
DATA_CLONE_ERR	tsvscode.ts	/^    readonly DATA_CLONE_ERR: 25;$/;"	p	interface:DOMException
DATA_CLONE_ERR	tsvscode.ts	/^    readonly DATA_CLONE_ERR: 25;$/;"	v
DECR	tsvscode.ts	/^    readonly DECR: 0x1E03;$/;"	p	interface:WebGLRenderingContextBase
DECR	tsvscode.ts	/^    readonly DECR: 0x1E03;$/;"	v
DECR_WRAP	tsvscode.ts	/^    readonly DECR_WRAP: 0x8508;$/;"	p	interface:WebGLRenderingContextBase
DECR_WRAP	tsvscode.ts	/^    readonly DECR_WRAP: 0x8508;$/;"	v
DELETE_STATUS	tsvscode.ts	/^    readonly DELETE_STATUS: 0x8B80;$/;"	p	interface:WebGLRenderingContextBase
DELETE_STATUS	tsvscode.ts	/^    readonly DELETE_STATUS: 0x8B80;$/;"	v
DEPTH	tsvscode.ts	/^    readonly DEPTH: 0x1801;$/;"	p	interface:WebGL2RenderingContextBase
DEPTH	tsvscode.ts	/^    readonly DEPTH: 0x1801;$/;"	v
DEPTH24_STENCIL8	tsvscode.ts	/^    readonly DEPTH24_STENCIL8: 0x88F0;$/;"	p	interface:WebGL2RenderingContextBase
DEPTH24_STENCIL8	tsvscode.ts	/^    readonly DEPTH24_STENCIL8: 0x88F0;$/;"	v
DEPTH32F_STENCIL8	tsvscode.ts	/^    readonly DEPTH32F_STENCIL8: 0x8CAD;$/;"	p	interface:WebGL2RenderingContextBase
DEPTH32F_STENCIL8	tsvscode.ts	/^    readonly DEPTH32F_STENCIL8: 0x8CAD;$/;"	v
DEPTH_ATTACHMENT	tsvscode.ts	/^    readonly DEPTH_ATTACHMENT: 0x8D00;$/;"	p	interface:WebGLRenderingContextBase
DEPTH_ATTACHMENT	tsvscode.ts	/^    readonly DEPTH_ATTACHMENT: 0x8D00;$/;"	v
DEPTH_BITS	tsvscode.ts	/^    readonly DEPTH_BITS: 0x0D56;$/;"	p	interface:WebGLRenderingContextBase
DEPTH_BITS	tsvscode.ts	/^    readonly DEPTH_BITS: 0x0D56;$/;"	v
DEPTH_BUFFER_BIT	tsvscode.ts	/^    readonly DEPTH_BUFFER_BIT: 0x00000100;$/;"	p	interface:WebGLRenderingContextBase
DEPTH_BUFFER_BIT	tsvscode.ts	/^    readonly DEPTH_BUFFER_BIT: 0x00000100;$/;"	v
DEPTH_CLEAR_VALUE	tsvscode.ts	/^    readonly DEPTH_CLEAR_VALUE: 0x0B73;$/;"	p	interface:WebGLRenderingContextBase
DEPTH_CLEAR_VALUE	tsvscode.ts	/^    readonly DEPTH_CLEAR_VALUE: 0x0B73;$/;"	v
DEPTH_COMPONENT	tsvscode.ts	/^    readonly DEPTH_COMPONENT: 0x1902;$/;"	p	interface:WebGLRenderingContextBase
DEPTH_COMPONENT	tsvscode.ts	/^    readonly DEPTH_COMPONENT: 0x1902;$/;"	v
DEPTH_COMPONENT16	tsvscode.ts	/^    readonly DEPTH_COMPONENT16: 0x81A5;$/;"	p	interface:WebGLRenderingContextBase
DEPTH_COMPONENT16	tsvscode.ts	/^    readonly DEPTH_COMPONENT16: 0x81A5;$/;"	v
DEPTH_COMPONENT24	tsvscode.ts	/^    readonly DEPTH_COMPONENT24: 0x81A6;$/;"	p	interface:WebGL2RenderingContextBase
DEPTH_COMPONENT24	tsvscode.ts	/^    readonly DEPTH_COMPONENT24: 0x81A6;$/;"	v
DEPTH_COMPONENT32F	tsvscode.ts	/^    readonly DEPTH_COMPONENT32F: 0x8CAC;$/;"	p	interface:WebGL2RenderingContextBase
DEPTH_COMPONENT32F	tsvscode.ts	/^    readonly DEPTH_COMPONENT32F: 0x8CAC;$/;"	v
DEPTH_FUNC	tsvscode.ts	/^    readonly DEPTH_FUNC: 0x0B74;$/;"	p	interface:WebGLRenderingContextBase
DEPTH_FUNC	tsvscode.ts	/^    readonly DEPTH_FUNC: 0x0B74;$/;"	v
DEPTH_RANGE	tsvscode.ts	/^    readonly DEPTH_RANGE: 0x0B70;$/;"	p	interface:WebGLRenderingContextBase
DEPTH_RANGE	tsvscode.ts	/^    readonly DEPTH_RANGE: 0x0B70;$/;"	v
DEPTH_STENCIL	tsvscode.ts	/^    readonly DEPTH_STENCIL: 0x84F9;$/;"	p	interface:WebGLRenderingContextBase
DEPTH_STENCIL	tsvscode.ts	/^    readonly DEPTH_STENCIL: 0x84F9;$/;"	v
DEPTH_STENCIL_ATTACHMENT	tsvscode.ts	/^    readonly DEPTH_STENCIL_ATTACHMENT: 0x821A;$/;"	p	interface:WebGLRenderingContextBase
DEPTH_STENCIL_ATTACHMENT	tsvscode.ts	/^    readonly DEPTH_STENCIL_ATTACHMENT: 0x821A;$/;"	v
DEPTH_TEST	tsvscode.ts	/^    readonly DEPTH_TEST: 0x0B71;$/;"	p	interface:WebGLRenderingContextBase
DEPTH_TEST	tsvscode.ts	/^    readonly DEPTH_TEST: 0x0B71;$/;"	v
DEPTH_WRITEMASK	tsvscode.ts	/^    readonly DEPTH_WRITEMASK: 0x0B72;$/;"	p	interface:WebGLRenderingContextBase
DEPTH_WRITEMASK	tsvscode.ts	/^    readonly DEPTH_WRITEMASK: 0x0B72;$/;"	v
DITHER	tsvscode.ts	/^    readonly DITHER: 0x0BD0;$/;"	p	interface:WebGLRenderingContextBase
DITHER	tsvscode.ts	/^    readonly DITHER: 0x0BD0;$/;"	v
DOCUMENT_FRAGMENT_NODE	tsvscode.ts	/^    readonly DOCUMENT_FRAGMENT_NODE: 11;$/;"	p	interface:Node
DOCUMENT_FRAGMENT_NODE	tsvscode.ts	/^    readonly DOCUMENT_FRAGMENT_NODE: 11;$/;"	v
DOCUMENT_NODE	tsvscode.ts	/^    readonly DOCUMENT_NODE: 9;$/;"	p	interface:Node
DOCUMENT_NODE	tsvscode.ts	/^    readonly DOCUMENT_NODE: 9;$/;"	v
DOCUMENT_POSITION_CONTAINED_BY	tsvscode.ts	/^    readonly DOCUMENT_POSITION_CONTAINED_BY: 0x10;$/;"	p	interface:Node
DOCUMENT_POSITION_CONTAINED_BY	tsvscode.ts	/^    readonly DOCUMENT_POSITION_CONTAINED_BY: 0x10;$/;"	v
DOCUMENT_POSITION_CONTAINS	tsvscode.ts	/^    readonly DOCUMENT_POSITION_CONTAINS: 0x08;$/;"	p	interface:Node
DOCUMENT_POSITION_CONTAINS	tsvscode.ts	/^    readonly DOCUMENT_POSITION_CONTAINS: 0x08;$/;"	v
DOCUMENT_POSITION_DISCONNECTED	tsvscode.ts	/^    readonly DOCUMENT_POSITION_DISCONNECTED: 0x01;$/;"	p	interface:Node
DOCUMENT_POSITION_DISCONNECTED	tsvscode.ts	/^    readonly DOCUMENT_POSITION_DISCONNECTED: 0x01;$/;"	v
DOCUMENT_POSITION_FOLLOWING	tsvscode.ts	/^    readonly DOCUMENT_POSITION_FOLLOWING: 0x04;$/;"	p	interface:Node
DOCUMENT_POSITION_FOLLOWING	tsvscode.ts	/^    readonly DOCUMENT_POSITION_FOLLOWING: 0x04;$/;"	v
DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC	tsvscode.ts	/^    readonly DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: 0x20;$/;"	p	interface:Node
DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC	tsvscode.ts	/^    readonly DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: 0x20;$/;"	v
DOCUMENT_POSITION_PRECEDING	tsvscode.ts	/^    readonly DOCUMENT_POSITION_PRECEDING: 0x02;$/;"	p	interface:Node
DOCUMENT_POSITION_PRECEDING	tsvscode.ts	/^    readonly DOCUMENT_POSITION_PRECEDING: 0x02;$/;"	v
DOCUMENT_TYPE_NODE	tsvscode.ts	/^    readonly DOCUMENT_TYPE_NODE: 10;$/;"	p	interface:Node
DOCUMENT_TYPE_NODE	tsvscode.ts	/^    readonly DOCUMENT_TYPE_NODE: 10;$/;"	v
DOMException	tsvscode.ts	/^declare var DOMException: {$/;"	v
DOMException	tsvscode.ts	/^interface DOMException extends Error {$/;"	i
DOMImplementation	tsvscode.ts	/^declare var DOMImplementation: {$/;"	v
DOMImplementation	tsvscode.ts	/^interface DOMImplementation {$/;"	i
DOMMatrix	tsvscode.ts	/^declare var DOMMatrix: {$/;"	v
DOMMatrix	tsvscode.ts	/^interface DOMMatrix extends DOMMatrixReadOnly {$/;"	i
DOMMatrix2DInit	tsvscode.ts	/^interface DOMMatrix2DInit {$/;"	i
DOMMatrixInit	tsvscode.ts	/^interface DOMMatrixInit extends DOMMatrix2DInit {$/;"	i
DOMMatrixReadOnly	tsvscode.ts	/^declare var DOMMatrixReadOnly: {$/;"	v
DOMMatrixReadOnly	tsvscode.ts	/^interface DOMMatrixReadOnly {$/;"	i
DOMParser	tsvscode.ts	/^declare var DOMParser: {$/;"	v
DOMParser	tsvscode.ts	/^interface DOMParser {$/;"	i
DOMPoint	tsvscode.ts	/^declare var DOMPoint: {$/;"	v
DOMPoint	tsvscode.ts	/^interface DOMPoint extends DOMPointReadOnly {$/;"	i
DOMPointInit	tsvscode.ts	/^interface DOMPointInit {$/;"	i
DOMPointReadOnly	tsvscode.ts	/^declare var DOMPointReadOnly: {$/;"	v
DOMPointReadOnly	tsvscode.ts	/^interface DOMPointReadOnly {$/;"	i
DOMQuad	tsvscode.ts	/^declare var DOMQuad: {$/;"	v
DOMQuad	tsvscode.ts	/^interface DOMQuad {$/;"	i
DOMQuadInit	tsvscode.ts	/^interface DOMQuadInit {$/;"	i
DOMRect	tsvscode.ts	/^declare var DOMRect: {$/;"	v
DOMRect	tsvscode.ts	/^interface DOMRect extends DOMRectReadOnly {$/;"	i
DOMRectInit	tsvscode.ts	/^interface DOMRectInit {$/;"	i
DOMRectList	tsvscode.ts	/^declare var DOMRectList: {$/;"	v
DOMRectList	tsvscode.ts	/^interface DOMRectList {$/;"	i
DOMRectReadOnly	tsvscode.ts	/^declare var DOMRectReadOnly: {$/;"	v
DOMRectReadOnly	tsvscode.ts	/^interface DOMRectReadOnly {$/;"	i
DOMSTRING_SIZE_ERR	tsvscode.ts	/^    readonly DOMSTRING_SIZE_ERR: 2;$/;"	p	interface:DOMException
DOMSTRING_SIZE_ERR	tsvscode.ts	/^    readonly DOMSTRING_SIZE_ERR: 2;$/;"	v
DOMStringList	tsvscode.ts	/^declare var DOMStringList: {$/;"	v
DOMStringList	tsvscode.ts	/^interface DOMStringList {$/;"	i
DOMStringMap	tsvscode.ts	/^declare var DOMStringMap: {$/;"	v
DOMStringMap	tsvscode.ts	/^interface DOMStringMap {$/;"	i
DOMTokenList	tsvscode.ts	/^declare var DOMTokenList: {$/;"	v
DOMTokenList	tsvscode.ts	/^interface DOMTokenList {$/;"	i
DOM_DELTA_LINE	tsvscode.ts	/^    readonly DOM_DELTA_LINE: 0x01;$/;"	p	interface:WheelEvent
DOM_DELTA_LINE	tsvscode.ts	/^    readonly DOM_DELTA_LINE: 0x01;$/;"	v
DOM_DELTA_PAGE	tsvscode.ts	/^    readonly DOM_DELTA_PAGE: 0x02;$/;"	p	interface:WheelEvent
DOM_DELTA_PAGE	tsvscode.ts	/^    readonly DOM_DELTA_PAGE: 0x02;$/;"	v
DOM_DELTA_PIXEL	tsvscode.ts	/^    readonly DOM_DELTA_PIXEL: 0x00;$/;"	p	interface:WheelEvent
DOM_DELTA_PIXEL	tsvscode.ts	/^    readonly DOM_DELTA_PIXEL: 0x00;$/;"	v
DOM_KEY_LOCATION_LEFT	tsvscode.ts	/^    readonly DOM_KEY_LOCATION_LEFT: 0x01;$/;"	p	interface:KeyboardEvent
DOM_KEY_LOCATION_LEFT	tsvscode.ts	/^    readonly DOM_KEY_LOCATION_LEFT: 0x01;$/;"	v
DOM_KEY_LOCATION_NUMPAD	tsvscode.ts	/^    readonly DOM_KEY_LOCATION_NUMPAD: 0x03;$/;"	p	interface:KeyboardEvent
DOM_KEY_LOCATION_NUMPAD	tsvscode.ts	/^    readonly DOM_KEY_LOCATION_NUMPAD: 0x03;$/;"	v
DOM_KEY_LOCATION_RIGHT	tsvscode.ts	/^    readonly DOM_KEY_LOCATION_RIGHT: 0x02;$/;"	p	interface:KeyboardEvent
DOM_KEY_LOCATION_RIGHT	tsvscode.ts	/^    readonly DOM_KEY_LOCATION_RIGHT: 0x02;$/;"	v
DOM_KEY_LOCATION_STANDARD	tsvscode.ts	/^    readonly DOM_KEY_LOCATION_STANDARD: 0x00;$/;"	p	interface:KeyboardEvent
DOM_KEY_LOCATION_STANDARD	tsvscode.ts	/^    readonly DOM_KEY_LOCATION_STANDARD: 0x00;$/;"	v
DONE	tsvscode.ts	/^    readonly DONE: 2;$/;"	p	interface:FileReader
DONE	tsvscode.ts	/^    readonly DONE: 2;$/;"	v
DONE	tsvscode.ts	/^    readonly DONE: 4;$/;"	p	interface:XMLHttpRequest
DONE	tsvscode.ts	/^    readonly DONE: 4;$/;"	v
DONT_CARE	tsvscode.ts	/^    readonly DONT_CARE: 0x1100;$/;"	p	interface:WebGLRenderingContextBase
DONT_CARE	tsvscode.ts	/^    readonly DONT_CARE: 0x1100;$/;"	v
DRAW_BUFFER0	tsvscode.ts	/^    readonly DRAW_BUFFER0: 0x8825;$/;"	p	interface:WebGL2RenderingContextBase
DRAW_BUFFER0	tsvscode.ts	/^    readonly DRAW_BUFFER0: 0x8825;$/;"	v
DRAW_BUFFER0_WEBGL	tsvscode.ts	/^    readonly DRAW_BUFFER0_WEBGL: 0x8825;$/;"	p	interface:WEBGL_draw_buffers
DRAW_BUFFER1	tsvscode.ts	/^    readonly DRAW_BUFFER1: 0x8826;$/;"	p	interface:WebGL2RenderingContextBase
DRAW_BUFFER1	tsvscode.ts	/^    readonly DRAW_BUFFER1: 0x8826;$/;"	v
DRAW_BUFFER10	tsvscode.ts	/^    readonly DRAW_BUFFER10: 0x882F;$/;"	p	interface:WebGL2RenderingContextBase
DRAW_BUFFER10	tsvscode.ts	/^    readonly DRAW_BUFFER10: 0x882F;$/;"	v
DRAW_BUFFER10_WEBGL	tsvscode.ts	/^    readonly DRAW_BUFFER10_WEBGL: 0x882F;$/;"	p	interface:WEBGL_draw_buffers
DRAW_BUFFER11	tsvscode.ts	/^    readonly DRAW_BUFFER11: 0x8830;$/;"	p	interface:WebGL2RenderingContextBase
DRAW_BUFFER11	tsvscode.ts	/^    readonly DRAW_BUFFER11: 0x8830;$/;"	v
DRAW_BUFFER11_WEBGL	tsvscode.ts	/^    readonly DRAW_BUFFER11_WEBGL: 0x8830;$/;"	p	interface:WEBGL_draw_buffers
DRAW_BUFFER12	tsvscode.ts	/^    readonly DRAW_BUFFER12: 0x8831;$/;"	p	interface:WebGL2RenderingContextBase
DRAW_BUFFER12	tsvscode.ts	/^    readonly DRAW_BUFFER12: 0x8831;$/;"	v
DRAW_BUFFER12_WEBGL	tsvscode.ts	/^    readonly DRAW_BUFFER12_WEBGL: 0x8831;$/;"	p	interface:WEBGL_draw_buffers
DRAW_BUFFER13	tsvscode.ts	/^    readonly DRAW_BUFFER13: 0x8832;$/;"	p	interface:WebGL2RenderingContextBase
DRAW_BUFFER13	tsvscode.ts	/^    readonly DRAW_BUFFER13: 0x8832;$/;"	v
DRAW_BUFFER13_WEBGL	tsvscode.ts	/^    readonly DRAW_BUFFER13_WEBGL: 0x8832;$/;"	p	interface:WEBGL_draw_buffers
DRAW_BUFFER14	tsvscode.ts	/^    readonly DRAW_BUFFER14: 0x8833;$/;"	p	interface:WebGL2RenderingContextBase
DRAW_BUFFER14	tsvscode.ts	/^    readonly DRAW_BUFFER14: 0x8833;$/;"	v
DRAW_BUFFER14_WEBGL	tsvscode.ts	/^    readonly DRAW_BUFFER14_WEBGL: 0x8833;$/;"	p	interface:WEBGL_draw_buffers
DRAW_BUFFER15	tsvscode.ts	/^    readonly DRAW_BUFFER15: 0x8834;$/;"	p	interface:WebGL2RenderingContextBase
DRAW_BUFFER15	tsvscode.ts	/^    readonly DRAW_BUFFER15: 0x8834;$/;"	v
DRAW_BUFFER15_WEBGL	tsvscode.ts	/^    readonly DRAW_BUFFER15_WEBGL: 0x8834;$/;"	p	interface:WEBGL_draw_buffers
DRAW_BUFFER1_WEBGL	tsvscode.ts	/^    readonly DRAW_BUFFER1_WEBGL: 0x8826;$/;"	p	interface:WEBGL_draw_buffers
DRAW_BUFFER2	tsvscode.ts	/^    readonly DRAW_BUFFER2: 0x8827;$/;"	p	interface:WebGL2RenderingContextBase
DRAW_BUFFER2	tsvscode.ts	/^    readonly DRAW_BUFFER2: 0x8827;$/;"	v
DRAW_BUFFER2_WEBGL	tsvscode.ts	/^    readonly DRAW_BUFFER2_WEBGL: 0x8827;$/;"	p	interface:WEBGL_draw_buffers
DRAW_BUFFER3	tsvscode.ts	/^    readonly DRAW_BUFFER3: 0x8828;$/;"	p	interface:WebGL2RenderingContextBase
DRAW_BUFFER3	tsvscode.ts	/^    readonly DRAW_BUFFER3: 0x8828;$/;"	v
DRAW_BUFFER3_WEBGL	tsvscode.ts	/^    readonly DRAW_BUFFER3_WEBGL: 0x8828;$/;"	p	interface:WEBGL_draw_buffers
DRAW_BUFFER4	tsvscode.ts	/^    readonly DRAW_BUFFER4: 0x8829;$/;"	p	interface:WebGL2RenderingContextBase
DRAW_BUFFER4	tsvscode.ts	/^    readonly DRAW_BUFFER4: 0x8829;$/;"	v
DRAW_BUFFER4_WEBGL	tsvscode.ts	/^    readonly DRAW_BUFFER4_WEBGL: 0x8829;$/;"	p	interface:WEBGL_draw_buffers
DRAW_BUFFER5	tsvscode.ts	/^    readonly DRAW_BUFFER5: 0x882A;$/;"	p	interface:WebGL2RenderingContextBase
DRAW_BUFFER5	tsvscode.ts	/^    readonly DRAW_BUFFER5: 0x882A;$/;"	v
DRAW_BUFFER5_WEBGL	tsvscode.ts	/^    readonly DRAW_BUFFER5_WEBGL: 0x882A;$/;"	p	interface:WEBGL_draw_buffers
DRAW_BUFFER6	tsvscode.ts	/^    readonly DRAW_BUFFER6: 0x882B;$/;"	p	interface:WebGL2RenderingContextBase
DRAW_BUFFER6	tsvscode.ts	/^    readonly DRAW_BUFFER6: 0x882B;$/;"	v
DRAW_BUFFER6_WEBGL	tsvscode.ts	/^    readonly DRAW_BUFFER6_WEBGL: 0x882B;$/;"	p	interface:WEBGL_draw_buffers
DRAW_BUFFER7	tsvscode.ts	/^    readonly DRAW_BUFFER7: 0x882C;$/;"	p	interface:WebGL2RenderingContextBase
DRAW_BUFFER7	tsvscode.ts	/^    readonly DRAW_BUFFER7: 0x882C;$/;"	v
DRAW_BUFFER7_WEBGL	tsvscode.ts	/^    readonly DRAW_BUFFER7_WEBGL: 0x882C;$/;"	p	interface:WEBGL_draw_buffers
DRAW_BUFFER8	tsvscode.ts	/^    readonly DRAW_BUFFER8: 0x882D;$/;"	p	interface:WebGL2RenderingContextBase
DRAW_BUFFER8	tsvscode.ts	/^    readonly DRAW_BUFFER8: 0x882D;$/;"	v
DRAW_BUFFER8_WEBGL	tsvscode.ts	/^    readonly DRAW_BUFFER8_WEBGL: 0x882D;$/;"	p	interface:WEBGL_draw_buffers
DRAW_BUFFER9	tsvscode.ts	/^    readonly DRAW_BUFFER9: 0x882E;$/;"	p	interface:WebGL2RenderingContextBase
DRAW_BUFFER9	tsvscode.ts	/^    readonly DRAW_BUFFER9: 0x882E;$/;"	v
DRAW_BUFFER9_WEBGL	tsvscode.ts	/^    readonly DRAW_BUFFER9_WEBGL: 0x882E;$/;"	p	interface:WEBGL_draw_buffers
DRAW_FRAMEBUFFER	tsvscode.ts	/^    readonly DRAW_FRAMEBUFFER: 0x8CA9;$/;"	p	interface:WebGL2RenderingContextBase
DRAW_FRAMEBUFFER	tsvscode.ts	/^    readonly DRAW_FRAMEBUFFER: 0x8CA9;$/;"	v
DRAW_FRAMEBUFFER_BINDING	tsvscode.ts	/^    readonly DRAW_FRAMEBUFFER_BINDING: 0x8CA6;$/;"	p	interface:WebGL2RenderingContextBase
DRAW_FRAMEBUFFER_BINDING	tsvscode.ts	/^    readonly DRAW_FRAMEBUFFER_BINDING: 0x8CA6;$/;"	v
DST_ALPHA	tsvscode.ts	/^    readonly DST_ALPHA: 0x0304;$/;"	p	interface:WebGLRenderingContextBase
DST_ALPHA	tsvscode.ts	/^    readonly DST_ALPHA: 0x0304;$/;"	v
DST_COLOR	tsvscode.ts	/^    readonly DST_COLOR: 0x0306;$/;"	p	interface:WebGLRenderingContextBase
DST_COLOR	tsvscode.ts	/^    readonly DST_COLOR: 0x0306;$/;"	v
DYNAMIC_COPY	tsvscode.ts	/^    readonly DYNAMIC_COPY: 0x88EA;$/;"	p	interface:WebGL2RenderingContextBase
DYNAMIC_COPY	tsvscode.ts	/^    readonly DYNAMIC_COPY: 0x88EA;$/;"	v
DYNAMIC_DRAW	tsvscode.ts	/^    readonly DYNAMIC_DRAW: 0x88E8;$/;"	p	interface:WebGLRenderingContextBase
DYNAMIC_DRAW	tsvscode.ts	/^    readonly DYNAMIC_DRAW: 0x88E8;$/;"	v
DYNAMIC_READ	tsvscode.ts	/^    readonly DYNAMIC_READ: 0x88E9;$/;"	p	interface:WebGL2RenderingContextBase
DYNAMIC_READ	tsvscode.ts	/^    readonly DYNAMIC_READ: 0x88E9;$/;"	v
DataTransfer	tsvscode.ts	/^declare var DataTransfer: {$/;"	v
DataTransfer	tsvscode.ts	/^interface DataTransfer {$/;"	i
DataTransferItem	tsvscode.ts	/^declare var DataTransferItem: {$/;"	v
DataTransferItem	tsvscode.ts	/^interface DataTransferItem {$/;"	i
DataTransferItemList	tsvscode.ts	/^declare var DataTransferItemList: {$/;"	v
DataTransferItemList	tsvscode.ts	/^interface DataTransferItemList {$/;"	i
DataView	ests.ts	/^declare var DataView: DataViewConstructor;$/;"	v
DataView	ests.ts	/^interface DataView {$/;"	i
DataViewConstructor	ests.ts	/^interface DataViewConstructor {$/;"	i
Date	ests.ts	/^declare var Date: DateConstructor;$/;"	v
Date	ests.ts	/^interface Date {$/;"	i
DateConstructor	ests.ts	/^interface DateConstructor {$/;"	i
DateTimeFormat	ests.ts	/^    interface DateTimeFormat {$/;"	i	namespace:Intl
DateTimeFormat	ests.ts	/^    var DateTimeFormat: DateTimeFormatConstructor;$/;"	v	namespace:Intl
DateTimeFormatConstructor	ests.ts	/^    interface DateTimeFormatConstructor {$/;"	i	namespace:Intl
DateTimeFormatOptions	ests.ts	/^    interface DateTimeFormatOptions {$/;"	i	namespace:Intl
DecodeErrorCallback	tsvscode.ts	/^interface DecodeErrorCallback {$/;"	i	namespace:CSS
DecodeSuccessCallback	tsvscode.ts	/^interface DecodeSuccessCallback {$/;"	i	namespace:CSS
DecompressionStream	tsvscode.ts	/^declare var DecompressionStream: {$/;"	v
DecompressionStream	tsvscode.ts	/^interface DecompressionStream extends GenericTransformStream {$/;"	i
DelayNode	tsvscode.ts	/^declare var DelayNode: {$/;"	v
DelayNode	tsvscode.ts	/^interface DelayNode extends AudioNode {$/;"	i
DelayOptions	tsvscode.ts	/^interface DelayOptions extends AudioNodeOptions {$/;"	i
DeviceMotionEvent	tsvscode.ts	/^declare var DeviceMotionEvent: {$/;"	v
DeviceMotionEvent	tsvscode.ts	/^interface DeviceMotionEvent extends Event {$/;"	i
DeviceMotionEventAcceleration	tsvscode.ts	/^interface DeviceMotionEventAcceleration {$/;"	i
DeviceMotionEventAccelerationInit	tsvscode.ts	/^interface DeviceMotionEventAccelerationInit {$/;"	i
DeviceMotionEventInit	tsvscode.ts	/^interface DeviceMotionEventInit extends EventInit {$/;"	i
DeviceMotionEventRotationRate	tsvscode.ts	/^interface DeviceMotionEventRotationRate {$/;"	i
DeviceMotionEventRotationRateInit	tsvscode.ts	/^interface DeviceMotionEventRotationRateInit {$/;"	i
DeviceOrientationEvent	tsvscode.ts	/^declare var DeviceOrientationEvent: {$/;"	v
DeviceOrientationEvent	tsvscode.ts	/^interface DeviceOrientationEvent extends Event {$/;"	i
DeviceOrientationEventInit	tsvscode.ts	/^interface DeviceOrientationEventInit extends EventInit {$/;"	i
DisplayMediaStreamOptions	tsvscode.ts	/^interface DisplayMediaStreamOptions {$/;"	i
Document	tsvscode.ts	/^declare var Document: {$/;"	v
Document	tsvscode.ts	/^interface Document extends Node, DocumentOrShadowRoot, FontFaceSource, GlobalEventHandlers, NonE/;"	i
DocumentEventMap	tsvscode.ts	/^interface DocumentEventMap extends GlobalEventHandlersEventMap {$/;"	i
DocumentFragment	tsvscode.ts	/^declare var DocumentFragment: {$/;"	v
DocumentFragment	tsvscode.ts	/^interface DocumentFragment extends Node, NonElementParentNode, ParentNode {$/;"	i
DocumentOrShadowRoot	tsvscode.ts	/^interface DocumentOrShadowRoot {$/;"	i
DocumentTimeline	tsvscode.ts	/^declare var DocumentTimeline: {$/;"	v
DocumentTimeline	tsvscode.ts	/^interface DocumentTimeline extends AnimationTimeline {$/;"	i
DocumentTimelineOptions	tsvscode.ts	/^interface DocumentTimelineOptions {$/;"	i
DocumentType	tsvscode.ts	/^declare var DocumentType: {$/;"	v
DocumentType	tsvscode.ts	/^interface DocumentType extends Node, ChildNode {$/;"	i
DoubleRange	tsvscode.ts	/^interface DoubleRange {$/;"	i
DragEvent	tsvscode.ts	/^declare var DragEvent: {$/;"	v
DragEvent	tsvscode.ts	/^interface DragEvent extends MouseEvent {$/;"	i
DragEventInit	tsvscode.ts	/^interface DragEventInit extends MouseEventInit {$/;"	i
DynamicsCompressorNode	tsvscode.ts	/^declare var DynamicsCompressorNode: {$/;"	v
DynamicsCompressorNode	tsvscode.ts	/^interface DynamicsCompressorNode extends AudioNode {$/;"	i
DynamicsCompressorOptions	tsvscode.ts	/^interface DynamicsCompressorOptions extends AudioNodeOptions {$/;"	i
E	ests.ts	/^    readonly E: number;$/;"	p	interface:Math
ELEMENT_ARRAY_BUFFER	tsvscode.ts	/^    readonly ELEMENT_ARRAY_BUFFER: 0x8893;$/;"	p	interface:WebGLRenderingContextBase
ELEMENT_ARRAY_BUFFER	tsvscode.ts	/^    readonly ELEMENT_ARRAY_BUFFER: 0x8893;$/;"	v
ELEMENT_ARRAY_BUFFER_BINDING	tsvscode.ts	/^    readonly ELEMENT_ARRAY_BUFFER_BINDING: 0x8895;$/;"	p	interface:WebGLRenderingContextBase
ELEMENT_ARRAY_BUFFER_BINDING	tsvscode.ts	/^    readonly ELEMENT_ARRAY_BUFFER_BINDING: 0x8895;$/;"	v
ELEMENT_NODE	tsvscode.ts	/^    readonly ELEMENT_NODE: 1;$/;"	p	interface:Node
ELEMENT_NODE	tsvscode.ts	/^    readonly ELEMENT_NODE: 1;$/;"	v
EMPTY	tsvscode.ts	/^    readonly EMPTY: 0;$/;"	p	interface:FileReader
EMPTY	tsvscode.ts	/^    readonly EMPTY: 0;$/;"	v
END_TO_END	tsvscode.ts	/^    readonly END_TO_END: 2;$/;"	p	interface:Range
END_TO_END	tsvscode.ts	/^    readonly END_TO_END: 2;$/;"	v
END_TO_START	tsvscode.ts	/^    readonly END_TO_START: 3;$/;"	p	interface:Range
END_TO_START	tsvscode.ts	/^    readonly END_TO_START: 3;$/;"	v
ENTITY_NODE	tsvscode.ts	/^    readonly ENTITY_NODE: 6;$/;"	p	interface:Node
ENTITY_NODE	tsvscode.ts	/^    readonly ENTITY_NODE: 6;$/;"	v
ENTITY_REFERENCE_NODE	tsvscode.ts	/^    readonly ENTITY_REFERENCE_NODE: 5;$/;"	p	interface:Node
ENTITY_REFERENCE_NODE	tsvscode.ts	/^    readonly ENTITY_REFERENCE_NODE: 5;$/;"	v
EQUAL	tsvscode.ts	/^    readonly EQUAL: 0x0202;$/;"	p	interface:WebGLRenderingContextBase
EQUAL	tsvscode.ts	/^    readonly EQUAL: 0x0202;$/;"	v
ERROR	tsvscode.ts	/^    readonly ERROR: 3;$/;"	p	interface:HTMLTrackElement
ERROR	tsvscode.ts	/^    readonly ERROR: 3;$/;"	v
EXT_blend_minmax	tsvscode.ts	/^interface EXT_blend_minmax {$/;"	i
EXT_color_buffer_float	tsvscode.ts	/^interface EXT_color_buffer_float {$/;"	i
EXT_color_buffer_half_float	tsvscode.ts	/^interface EXT_color_buffer_half_float {$/;"	i
EXT_float_blend	tsvscode.ts	/^interface EXT_float_blend {$/;"	i
EXT_frag_depth	tsvscode.ts	/^interface EXT_frag_depth {$/;"	i
EXT_sRGB	tsvscode.ts	/^interface EXT_sRGB {$/;"	i
EXT_shader_texture_lod	tsvscode.ts	/^interface EXT_shader_texture_lod {$/;"	i
EXT_texture_compression_bptc	tsvscode.ts	/^interface EXT_texture_compression_bptc {$/;"	i
EXT_texture_compression_rgtc	tsvscode.ts	/^interface EXT_texture_compression_rgtc {$/;"	i
EXT_texture_filter_anisotropic	tsvscode.ts	/^interface EXT_texture_filter_anisotropic {$/;"	i
EXT_texture_norm16	tsvscode.ts	/^interface EXT_texture_norm16 {$/;"	i
EcKeyAlgorithm	tsvscode.ts	/^interface EcKeyAlgorithm extends KeyAlgorithm {$/;"	i
EcKeyGenParams	tsvscode.ts	/^interface EcKeyGenParams extends Algorithm {$/;"	i
EcKeyImportParams	tsvscode.ts	/^interface EcKeyImportParams extends Algorithm {$/;"	i
EcdhKeyDeriveParams	tsvscode.ts	/^interface EcdhKeyDeriveParams extends Algorithm {$/;"	i
EcdsaParams	tsvscode.ts	/^interface EcdsaParams extends Algorithm {$/;"	i
EffectTiming	tsvscode.ts	/^interface EffectTiming {$/;"	i
Element	tsvscode.ts	/^declare var Element: {$/;"	v
Element	tsvscode.ts	/^interface Element extends Node, ARIAMixin, Animatable, ChildNode, InnerHTML, NonDocumentTypeChil/;"	i
ElementCSSInlineStyle	tsvscode.ts	/^interface ElementCSSInlineStyle {$/;"	i
ElementContentEditable	tsvscode.ts	/^interface ElementContentEditable {$/;"	i
ElementCreationOptions	tsvscode.ts	/^interface ElementCreationOptions {$/;"	i
ElementDefinitionOptions	tsvscode.ts	/^interface ElementDefinitionOptions {$/;"	i
ElementEventMap	tsvscode.ts	/^interface ElementEventMap {$/;"	i
ElementInternals	tsvscode.ts	/^declare var ElementInternals: {$/;"	v
ElementInternals	tsvscode.ts	/^interface ElementInternals extends ARIAMixin {$/;"	i
ElementTagNameMap	tsvscode.ts	/^type ElementTagNameMap = HTMLElementTagNameMap & Pick<SVGElementTagNameMap, Exclude<keyof SVGEle/;"	a	namespace:CSS
EncodedVideoChunk	tsvscode.ts	/^declare var EncodedVideoChunk: {$/;"	v
EncodedVideoChunk	tsvscode.ts	/^interface EncodedVideoChunk {$/;"	i
EncodedVideoChunkInit	tsvscode.ts	/^interface EncodedVideoChunkInit {$/;"	i
EncodedVideoChunkMetadata	tsvscode.ts	/^interface EncodedVideoChunkMetadata {$/;"	i
EncodedVideoChunkOutputCallback	tsvscode.ts	/^interface EncodedVideoChunkOutputCallback {$/;"	i	namespace:CSS
Error	ests.ts	/^declare var Error: ErrorConstructor;$/;"	v
Error	ests.ts	/^interface Error {$/;"	i
ErrorCallback	tsvscode.ts	/^interface ErrorCallback {$/;"	i	namespace:CSS
ErrorConstructor	ests.ts	/^interface ErrorConstructor {$/;"	i
ErrorEvent	tsvscode.ts	/^declare var ErrorEvent: {$/;"	v
ErrorEvent	tsvscode.ts	/^interface ErrorEvent extends Event {$/;"	i
ErrorEventInit	tsvscode.ts	/^interface ErrorEventInit extends EventInit {$/;"	i
EvalError	ests.ts	/^declare var EvalError: EvalErrorConstructor;$/;"	v
EvalError	ests.ts	/^interface EvalError extends Error {$/;"	i
EvalErrorConstructor	ests.ts	/^interface EvalErrorConstructor extends ErrorConstructor {$/;"	i
Event	tsvscode.ts	/^declare var Event: {$/;"	v
Event	tsvscode.ts	/^interface Event {$/;"	i
EventCounts	tsvscode.ts	/^declare var EventCounts: {$/;"	v
EventCounts	tsvscode.ts	/^interface EventCounts {$/;"	i
EventInit	tsvscode.ts	/^interface EventInit {$/;"	i
EventListener	tsvscode.ts	/^interface EventListener {$/;"	i
EventListenerObject	tsvscode.ts	/^interface EventListenerObject {$/;"	i
EventListenerOptions	tsvscode.ts	/^interface EventListenerOptions {$/;"	i
EventModifierInit	tsvscode.ts	/^interface EventModifierInit extends UIEventInit {$/;"	i
EventSource	tsvscode.ts	/^declare var EventSource: {$/;"	v
EventSource	tsvscode.ts	/^interface EventSource extends EventTarget {$/;"	i
EventSourceEventMap	tsvscode.ts	/^interface EventSourceEventMap {$/;"	i
EventSourceInit	tsvscode.ts	/^interface EventSourceInit {$/;"	i
EventTarget	tsvscode.ts	/^declare var EventTarget: {$/;"	v
EventTarget	tsvscode.ts	/^interface EventTarget {$/;"	i
Exclude	ests.ts	/^type Exclude<T, U> = T extends U ? never : T;$/;"	a
External	tsvscode.ts	/^declare var External: {$/;"	v
External	tsvscode.ts	/^interface External {$/;"	i
Extract	ests.ts	/^type Extract<T, U> = T extends U ? T : never;$/;"	a
FASTEST	tsvscode.ts	/^    readonly FASTEST: 0x1101;$/;"	p	interface:WebGLRenderingContextBase
FASTEST	tsvscode.ts	/^    readonly FASTEST: 0x1101;$/;"	v
FILTER_ACCEPT	tsvscode.ts	/^    readonly FILTER_ACCEPT: 1;$/;"	v
FILTER_REJECT	tsvscode.ts	/^    readonly FILTER_REJECT: 2;$/;"	v
FILTER_SKIP	tsvscode.ts	/^    readonly FILTER_SKIP: 3;$/;"	v
FIRST_ORDERED_NODE_TYPE	tsvscode.ts	/^    readonly FIRST_ORDERED_NODE_TYPE: 9;$/;"	p	interface:XPathResult
FIRST_ORDERED_NODE_TYPE	tsvscode.ts	/^    readonly FIRST_ORDERED_NODE_TYPE: 9;$/;"	v
FLOAT	tsvscode.ts	/^    readonly FLOAT: 0x1406;$/;"	p	interface:WebGLRenderingContextBase
FLOAT	tsvscode.ts	/^    readonly FLOAT: 0x1406;$/;"	v
FLOAT_32_UNSIGNED_INT_24_8_REV	tsvscode.ts	/^    readonly FLOAT_32_UNSIGNED_INT_24_8_REV: 0x8DAD;$/;"	p	interface:WebGL2RenderingContextBase
FLOAT_32_UNSIGNED_INT_24_8_REV	tsvscode.ts	/^    readonly FLOAT_32_UNSIGNED_INT_24_8_REV: 0x8DAD;$/;"	v
FLOAT_MAT2	tsvscode.ts	/^    readonly FLOAT_MAT2: 0x8B5A;$/;"	p	interface:WebGLRenderingContextBase
FLOAT_MAT2	tsvscode.ts	/^    readonly FLOAT_MAT2: 0x8B5A;$/;"	v
FLOAT_MAT2x3	tsvscode.ts	/^    readonly FLOAT_MAT2x3: 0x8B65;$/;"	p	interface:WebGL2RenderingContextBase
FLOAT_MAT2x3	tsvscode.ts	/^    readonly FLOAT_MAT2x3: 0x8B65;$/;"	v
FLOAT_MAT2x4	tsvscode.ts	/^    readonly FLOAT_MAT2x4: 0x8B66;$/;"	p	interface:WebGL2RenderingContextBase
FLOAT_MAT2x4	tsvscode.ts	/^    readonly FLOAT_MAT2x4: 0x8B66;$/;"	v
FLOAT_MAT3	tsvscode.ts	/^    readonly FLOAT_MAT3: 0x8B5B;$/;"	p	interface:WebGLRenderingContextBase
FLOAT_MAT3	tsvscode.ts	/^    readonly FLOAT_MAT3: 0x8B5B;$/;"	v
FLOAT_MAT3x2	tsvscode.ts	/^    readonly FLOAT_MAT3x2: 0x8B67;$/;"	p	interface:WebGL2RenderingContextBase
FLOAT_MAT3x2	tsvscode.ts	/^    readonly FLOAT_MAT3x2: 0x8B67;$/;"	v
FLOAT_MAT3x4	tsvscode.ts	/^    readonly FLOAT_MAT3x4: 0x8B68;$/;"	p	interface:WebGL2RenderingContextBase
FLOAT_MAT3x4	tsvscode.ts	/^    readonly FLOAT_MAT3x4: 0x8B68;$/;"	v
FLOAT_MAT4	tsvscode.ts	/^    readonly FLOAT_MAT4: 0x8B5C;$/;"	p	interface:WebGLRenderingContextBase
FLOAT_MAT4	tsvscode.ts	/^    readonly FLOAT_MAT4: 0x8B5C;$/;"	v
FLOAT_MAT4x2	tsvscode.ts	/^    readonly FLOAT_MAT4x2: 0x8B69;$/;"	p	interface:WebGL2RenderingContextBase
FLOAT_MAT4x2	tsvscode.ts	/^    readonly FLOAT_MAT4x2: 0x8B69;$/;"	v
FLOAT_MAT4x3	tsvscode.ts	/^    readonly FLOAT_MAT4x3: 0x8B6A;$/;"	p	interface:WebGL2RenderingContextBase
FLOAT_MAT4x3	tsvscode.ts	/^    readonly FLOAT_MAT4x3: 0x8B6A;$/;"	v
FLOAT_VEC2	tsvscode.ts	/^    readonly FLOAT_VEC2: 0x8B50;$/;"	p	interface:WebGLRenderingContextBase
FLOAT_VEC2	tsvscode.ts	/^    readonly FLOAT_VEC2: 0x8B50;$/;"	v
FLOAT_VEC3	tsvscode.ts	/^    readonly FLOAT_VEC3: 0x8B51;$/;"	p	interface:WebGLRenderingContextBase
FLOAT_VEC3	tsvscode.ts	/^    readonly FLOAT_VEC3: 0x8B51;$/;"	v
FLOAT_VEC4	tsvscode.ts	/^    readonly FLOAT_VEC4: 0x8B52;$/;"	p	interface:WebGLRenderingContextBase
FLOAT_VEC4	tsvscode.ts	/^    readonly FLOAT_VEC4: 0x8B52;$/;"	v
FONT_FACE_RULE	tsvscode.ts	/^    readonly FONT_FACE_RULE: 5;$/;"	p	interface:CSSRule
FONT_FACE_RULE	tsvscode.ts	/^    readonly FONT_FACE_RULE: 5;$/;"	v
FONT_FEATURE_VALUES_RULE	tsvscode.ts	/^    readonly FONT_FEATURE_VALUES_RULE: 14;$/;"	p	interface:CSSRule
FONT_FEATURE_VALUES_RULE	tsvscode.ts	/^    readonly FONT_FEATURE_VALUES_RULE: 14;$/;"	v
FRAGMENT_SHADER	tsvscode.ts	/^    readonly FRAGMENT_SHADER: 0x8B30;$/;"	p	interface:WebGLRenderingContextBase
FRAGMENT_SHADER	tsvscode.ts	/^    readonly FRAGMENT_SHADER: 0x8B30;$/;"	v
FRAGMENT_SHADER_DERIVATIVE_HINT	tsvscode.ts	/^    readonly FRAGMENT_SHADER_DERIVATIVE_HINT: 0x8B8B;$/;"	p	interface:WebGL2RenderingContextBase
FRAGMENT_SHADER_DERIVATIVE_HINT	tsvscode.ts	/^    readonly FRAGMENT_SHADER_DERIVATIVE_HINT: 0x8B8B;$/;"	v
FRAGMENT_SHADER_DERIVATIVE_HINT_OES	tsvscode.ts	/^    readonly FRAGMENT_SHADER_DERIVATIVE_HINT_OES: 0x8B8B;$/;"	p	interface:OES_standard_derivatives
FRAMEBUFFER	tsvscode.ts	/^    readonly FRAMEBUFFER: 0x8D40;$/;"	p	interface:WebGLRenderingContextBase
FRAMEBUFFER	tsvscode.ts	/^    readonly FRAMEBUFFER: 0x8D40;$/;"	v
FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: 0x8215;$/;"	p	interface:WebGL2RenderingContextBase
FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: 0x8215;$/;"	v
FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: 0x8214;$/;"	p	interface:WebGL2RenderingContextBase
FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: 0x8214;$/;"	v
FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: 0x8210;$/;"	p	interface:WebGL2RenderingContextBase
FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: 0x8210;$/;"	v
FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT: 0x8210;$/;"	p	interface:EXT_sRGB
FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: 0x8211;$/;"	p	interface:WebGL2RenderingContextBase
FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: 0x8211;$/;"	v
FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT: 0x8211;$/;"	p	interface:EXT_color_buffer_half_float
FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT: 0x8211;$/;"	p	interface:WEBGL_color_buffer_float
FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: 0x8216;$/;"	p	interface:WebGL2RenderingContextBase
FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: 0x8216;$/;"	v
FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: 0x8213;$/;"	p	interface:WebGL2RenderingContextBase
FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: 0x8213;$/;"	v
FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: 0x8CD1;$/;"	p	interface:WebGLRenderingContextBase
FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: 0x8CD1;$/;"	v
FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: 0x8CD0;$/;"	p	interface:WebGLRenderingContextBase
FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: 0x8CD0;$/;"	v
FRAMEBUFFER_ATTACHMENT_RED_SIZE	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_RED_SIZE: 0x8212;$/;"	p	interface:WebGL2RenderingContextBase
FRAMEBUFFER_ATTACHMENT_RED_SIZE	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_RED_SIZE: 0x8212;$/;"	v
FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: 0x8217;$/;"	p	interface:WebGL2RenderingContextBase
FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: 0x8217;$/;"	v
FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR: 0x9632;$/;"	p	interface:OVR_multiview2
FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: 0x8CD3;$/;"	p	interface:WebGLRenderingContextBase
FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: 0x8CD3;$/;"	v
FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: 0x8CD4;$/;"	p	interface:WebGL2RenderingContextBase
FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: 0x8CD4;$/;"	v
FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: 0x8CD2;$/;"	p	interface:WebGLRenderingContextBase
FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: 0x8CD2;$/;"	v
FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR: 0x9630;$/;"	p	interface:OVR_multiview2
FRAMEBUFFER_BINDING	tsvscode.ts	/^    readonly FRAMEBUFFER_BINDING: 0x8CA6;$/;"	p	interface:WebGLRenderingContextBase
FRAMEBUFFER_BINDING	tsvscode.ts	/^    readonly FRAMEBUFFER_BINDING: 0x8CA6;$/;"	v
FRAMEBUFFER_COMPLETE	tsvscode.ts	/^    readonly FRAMEBUFFER_COMPLETE: 0x8CD5;$/;"	p	interface:WebGLRenderingContextBase
FRAMEBUFFER_COMPLETE	tsvscode.ts	/^    readonly FRAMEBUFFER_COMPLETE: 0x8CD5;$/;"	v
FRAMEBUFFER_DEFAULT	tsvscode.ts	/^    readonly FRAMEBUFFER_DEFAULT: 0x8218;$/;"	p	interface:WebGL2RenderingContextBase
FRAMEBUFFER_DEFAULT	tsvscode.ts	/^    readonly FRAMEBUFFER_DEFAULT: 0x8218;$/;"	v
FRAMEBUFFER_INCOMPLETE_ATTACHMENT	tsvscode.ts	/^    readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT: 0x8CD6;$/;"	p	interface:WebGLRenderingContextBase
FRAMEBUFFER_INCOMPLETE_ATTACHMENT	tsvscode.ts	/^    readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT: 0x8CD6;$/;"	v
FRAMEBUFFER_INCOMPLETE_DIMENSIONS	tsvscode.ts	/^    readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS: 0x8CD9;$/;"	p	interface:WebGLRenderingContextBase
FRAMEBUFFER_INCOMPLETE_DIMENSIONS	tsvscode.ts	/^    readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS: 0x8CD9;$/;"	v
FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	tsvscode.ts	/^    readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: 0x8CD7;$/;"	p	interface:WebGLRenderingContextBase
FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	tsvscode.ts	/^    readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: 0x8CD7;$/;"	v
FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	tsvscode.ts	/^    readonly FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: 0x8D56;$/;"	p	interface:WebGL2RenderingContextBase
FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	tsvscode.ts	/^    readonly FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: 0x8D56;$/;"	v
FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR	tsvscode.ts	/^    readonly FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR: 0x9633;$/;"	p	interface:OVR_multiview2
FRAMEBUFFER_UNSUPPORTED	tsvscode.ts	/^    readonly FRAMEBUFFER_UNSUPPORTED: 0x8CDD;$/;"	p	interface:WebGLRenderingContextBase
FRAMEBUFFER_UNSUPPORTED	tsvscode.ts	/^    readonly FRAMEBUFFER_UNSUPPORTED: 0x8CDD;$/;"	v
FRONT	tsvscode.ts	/^    readonly FRONT: 0x0404;$/;"	p	interface:WebGLRenderingContextBase
FRONT	tsvscode.ts	/^    readonly FRONT: 0x0404;$/;"	v
FRONT_AND_BACK	tsvscode.ts	/^    readonly FRONT_AND_BACK: 0x0408;$/;"	p	interface:WebGLRenderingContextBase
FRONT_AND_BACK	tsvscode.ts	/^    readonly FRONT_AND_BACK: 0x0408;$/;"	v
FRONT_FACE	tsvscode.ts	/^    readonly FRONT_FACE: 0x0B46;$/;"	p	interface:WebGLRenderingContextBase
FRONT_FACE	tsvscode.ts	/^    readonly FRONT_FACE: 0x0B46;$/;"	v
FUNC_ADD	tsvscode.ts	/^    readonly FUNC_ADD: 0x8006;$/;"	p	interface:WebGLRenderingContextBase
FUNC_ADD	tsvscode.ts	/^    readonly FUNC_ADD: 0x8006;$/;"	v
FUNC_REVERSE_SUBTRACT	tsvscode.ts	/^    readonly FUNC_REVERSE_SUBTRACT: 0x800B;$/;"	p	interface:WebGLRenderingContextBase
FUNC_REVERSE_SUBTRACT	tsvscode.ts	/^    readonly FUNC_REVERSE_SUBTRACT: 0x800B;$/;"	v
FUNC_SUBTRACT	tsvscode.ts	/^    readonly FUNC_SUBTRACT: 0x800A;$/;"	p	interface:WebGLRenderingContextBase
FUNC_SUBTRACT	tsvscode.ts	/^    readonly FUNC_SUBTRACT: 0x800A;$/;"	v
File	tsvscode.ts	/^declare var File: {$/;"	v
File	tsvscode.ts	/^interface File extends Blob {$/;"	i
FileCallback	tsvscode.ts	/^interface FileCallback {$/;"	i	namespace:CSS
FileList	tsvscode.ts	/^declare var FileList: {$/;"	v
FileList	tsvscode.ts	/^interface FileList {$/;"	i
FilePropertyBag	tsvscode.ts	/^interface FilePropertyBag extends BlobPropertyBag {$/;"	i
FileReader	tsvscode.ts	/^declare var FileReader: {$/;"	v
FileReader	tsvscode.ts	/^interface FileReader extends EventTarget {$/;"	i
FileReaderEventMap	tsvscode.ts	/^interface FileReaderEventMap {$/;"	i
FileSystem	tsvscode.ts	/^declare var FileSystem: {$/;"	v
FileSystem	tsvscode.ts	/^interface FileSystem {$/;"	i
FileSystemCreateWritableOptions	tsvscode.ts	/^interface FileSystemCreateWritableOptions {$/;"	i
FileSystemDirectoryEntry	tsvscode.ts	/^declare var FileSystemDirectoryEntry: {$/;"	v
FileSystemDirectoryEntry	tsvscode.ts	/^interface FileSystemDirectoryEntry extends FileSystemEntry {$/;"	i
FileSystemDirectoryHandle	tsvscode.ts	/^declare var FileSystemDirectoryHandle: {$/;"	v
FileSystemDirectoryHandle	tsvscode.ts	/^interface FileSystemDirectoryHandle extends FileSystemHandle {$/;"	i
FileSystemDirectoryReader	tsvscode.ts	/^declare var FileSystemDirectoryReader: {$/;"	v
FileSystemDirectoryReader	tsvscode.ts	/^interface FileSystemDirectoryReader {$/;"	i
FileSystemEntriesCallback	tsvscode.ts	/^interface FileSystemEntriesCallback {$/;"	i	namespace:CSS
FileSystemEntry	tsvscode.ts	/^declare var FileSystemEntry: {$/;"	v
FileSystemEntry	tsvscode.ts	/^interface FileSystemEntry {$/;"	i
FileSystemEntryCallback	tsvscode.ts	/^interface FileSystemEntryCallback {$/;"	i	namespace:CSS
FileSystemFileEntry	tsvscode.ts	/^declare var FileSystemFileEntry: {$/;"	v
FileSystemFileEntry	tsvscode.ts	/^interface FileSystemFileEntry extends FileSystemEntry {$/;"	i
FileSystemFileHandle	tsvscode.ts	/^declare var FileSystemFileHandle: {$/;"	v
FileSystemFileHandle	tsvscode.ts	/^interface FileSystemFileHandle extends FileSystemHandle {$/;"	i
FileSystemFlags	tsvscode.ts	/^interface FileSystemFlags {$/;"	i
FileSystemGetDirectoryOptions	tsvscode.ts	/^interface FileSystemGetDirectoryOptions {$/;"	i
FileSystemGetFileOptions	tsvscode.ts	/^interface FileSystemGetFileOptions {$/;"	i
FileSystemHandle	tsvscode.ts	/^declare var FileSystemHandle: {$/;"	v
FileSystemHandle	tsvscode.ts	/^interface FileSystemHandle {$/;"	i
FileSystemRemoveOptions	tsvscode.ts	/^interface FileSystemRemoveOptions {$/;"	i
FileSystemWritableFileStream	tsvscode.ts	/^declare var FileSystemWritableFileStream: {$/;"	v
FileSystemWritableFileStream	tsvscode.ts	/^interface FileSystemWritableFileStream extends WritableStream {$/;"	i
Float32Array	ests.ts	/^declare var Float32Array: Float32ArrayConstructor;$/;"	v
Float32Array	ests.ts	/^interface Float32Array {$/;"	i
Float32ArrayConstructor	ests.ts	/^interface Float32ArrayConstructor {$/;"	i
Float64Array	ests.ts	/^declare var Float64Array: Float64ArrayConstructor;$/;"	v
Float64Array	ests.ts	/^interface Float64Array {$/;"	i
Float64ArrayConstructor	ests.ts	/^interface Float64ArrayConstructor {$/;"	i
FocusEvent	tsvscode.ts	/^declare var FocusEvent: {$/;"	v
FocusEvent	tsvscode.ts	/^interface FocusEvent extends UIEvent {$/;"	i
FocusEventInit	tsvscode.ts	/^interface FocusEventInit extends UIEventInit {$/;"	i
FocusOptions	tsvscode.ts	/^interface FocusOptions {$/;"	i
FontFace	tsvscode.ts	/^declare var FontFace: {$/;"	v
FontFace	tsvscode.ts	/^interface FontFace {$/;"	i
FontFaceDescriptors	tsvscode.ts	/^interface FontFaceDescriptors {$/;"	i
FontFaceSet	tsvscode.ts	/^declare var FontFaceSet: {$/;"	v
FontFaceSet	tsvscode.ts	/^interface FontFaceSet extends EventTarget {$/;"	i
FontFaceSetEventMap	tsvscode.ts	/^interface FontFaceSetEventMap {$/;"	i
FontFaceSetLoadEvent	tsvscode.ts	/^declare var FontFaceSetLoadEvent: {$/;"	v
FontFaceSetLoadEvent	tsvscode.ts	/^interface FontFaceSetLoadEvent extends Event {$/;"	i
FontFaceSetLoadEventInit	tsvscode.ts	/^interface FontFaceSetLoadEventInit extends EventInit {$/;"	i
FontFaceSource	tsvscode.ts	/^interface FontFaceSource {$/;"	i
FormData	tsvscode.ts	/^declare var FormData: {$/;"	v
FormData	tsvscode.ts	/^interface FormData {$/;"	i
FormDataEvent	tsvscode.ts	/^declare var FormDataEvent: {$/;"	v
FormDataEvent	tsvscode.ts	/^interface FormDataEvent extends Event {$/;"	i
FormDataEventInit	tsvscode.ts	/^interface FormDataEventInit extends EventInit {$/;"	i
FrameRequestCallback	tsvscode.ts	/^interface FrameRequestCallback {$/;"	i	namespace:CSS
FullscreenOptions	tsvscode.ts	/^interface FullscreenOptions {$/;"	i
Function	ests.ts	/^declare var Function: FunctionConstructor;$/;"	v
Function	ests.ts	/^interface Function {$/;"	i
FunctionConstructor	ests.ts	/^interface FunctionConstructor {$/;"	i
FunctionStringCallback	tsvscode.ts	/^interface FunctionStringCallback {$/;"	i	namespace:CSS
GENERATE_MIPMAP_HINT	tsvscode.ts	/^    readonly GENERATE_MIPMAP_HINT: 0x8192;$/;"	p	interface:WebGLRenderingContextBase
GENERATE_MIPMAP_HINT	tsvscode.ts	/^    readonly GENERATE_MIPMAP_HINT: 0x8192;$/;"	v
GEQUAL	tsvscode.ts	/^    readonly GEQUAL: 0x0206;$/;"	p	interface:WebGLRenderingContextBase
GEQUAL	tsvscode.ts	/^    readonly GEQUAL: 0x0206;$/;"	v
GREATER	tsvscode.ts	/^    readonly GREATER: 0x0204;$/;"	p	interface:WebGLRenderingContextBase
GREATER	tsvscode.ts	/^    readonly GREATER: 0x0204;$/;"	v
GREEN_BITS	tsvscode.ts	/^    readonly GREEN_BITS: 0x0D53;$/;"	p	interface:WebGLRenderingContextBase
GREEN_BITS	tsvscode.ts	/^    readonly GREEN_BITS: 0x0D53;$/;"	v
GainNode	tsvscode.ts	/^declare var GainNode: {$/;"	v
GainNode	tsvscode.ts	/^interface GainNode extends AudioNode {$/;"	i
GainOptions	tsvscode.ts	/^interface GainOptions extends AudioNodeOptions {$/;"	i
Gamepad	tsvscode.ts	/^declare var Gamepad: {$/;"	v
Gamepad	tsvscode.ts	/^interface Gamepad {$/;"	i
GamepadButton	tsvscode.ts	/^declare var GamepadButton: {$/;"	v
GamepadButton	tsvscode.ts	/^interface GamepadButton {$/;"	i
GamepadEffectParameters	tsvscode.ts	/^interface GamepadEffectParameters {$/;"	i
GamepadEvent	tsvscode.ts	/^declare var GamepadEvent: {$/;"	v
GamepadEvent	tsvscode.ts	/^interface GamepadEvent extends Event {$/;"	i
GamepadEventInit	tsvscode.ts	/^interface GamepadEventInit extends EventInit {$/;"	i
GamepadHapticActuator	tsvscode.ts	/^declare var GamepadHapticActuator: {$/;"	v
GamepadHapticActuator	tsvscode.ts	/^interface GamepadHapticActuator {$/;"	i
GenericTransformStream	tsvscode.ts	/^interface GenericTransformStream {$/;"	i
Geolocation	tsvscode.ts	/^declare var Geolocation: {$/;"	v
Geolocation	tsvscode.ts	/^interface Geolocation {$/;"	i
GeolocationCoordinates	tsvscode.ts	/^declare var GeolocationCoordinates: {$/;"	v
GeolocationCoordinates	tsvscode.ts	/^interface GeolocationCoordinates {$/;"	i
GeolocationPosition	tsvscode.ts	/^declare var GeolocationPosition: {$/;"	v
GeolocationPosition	tsvscode.ts	/^interface GeolocationPosition {$/;"	i
GeolocationPositionError	tsvscode.ts	/^declare var GeolocationPositionError: {$/;"	v
GeolocationPositionError	tsvscode.ts	/^interface GeolocationPositionError {$/;"	i
GetAnimationsOptions	tsvscode.ts	/^interface GetAnimationsOptions {$/;"	i
GetNotificationOptions	tsvscode.ts	/^interface GetNotificationOptions {$/;"	i
GetRootNodeOptions	tsvscode.ts	/^interface GetRootNodeOptions {$/;"	i
GlobalEventHandlers	tsvscode.ts	/^interface GlobalEventHandlers {$/;"	i
GlobalEventHandlersEventMap	tsvscode.ts	/^interface GlobalEventHandlersEventMap {$/;"	i
HALF_FLOAT	tsvscode.ts	/^    readonly HALF_FLOAT: 0x140B;$/;"	p	interface:WebGL2RenderingContextBase
HALF_FLOAT	tsvscode.ts	/^    readonly HALF_FLOAT: 0x140B;$/;"	v
HALF_FLOAT_OES	tsvscode.ts	/^    readonly HALF_FLOAT_OES: 0x8D61;$/;"	p	interface:OES_texture_half_float
HAVE_CURRENT_DATA	tsvscode.ts	/^    readonly HAVE_CURRENT_DATA: 2;$/;"	p	interface:HTMLMediaElement
HAVE_CURRENT_DATA	tsvscode.ts	/^    readonly HAVE_CURRENT_DATA: 2;$/;"	v
HAVE_ENOUGH_DATA	tsvscode.ts	/^    readonly HAVE_ENOUGH_DATA: 4;$/;"	p	interface:HTMLMediaElement
HAVE_ENOUGH_DATA	tsvscode.ts	/^    readonly HAVE_ENOUGH_DATA: 4;$/;"	v
HAVE_FUTURE_DATA	tsvscode.ts	/^    readonly HAVE_FUTURE_DATA: 3;$/;"	p	interface:HTMLMediaElement
HAVE_FUTURE_DATA	tsvscode.ts	/^    readonly HAVE_FUTURE_DATA: 3;$/;"	v
HAVE_METADATA	tsvscode.ts	/^    readonly HAVE_METADATA: 1;$/;"	p	interface:HTMLMediaElement
HAVE_METADATA	tsvscode.ts	/^    readonly HAVE_METADATA: 1;$/;"	v
HAVE_NOTHING	tsvscode.ts	/^    readonly HAVE_NOTHING: 0;$/;"	p	interface:HTMLMediaElement
HAVE_NOTHING	tsvscode.ts	/^    readonly HAVE_NOTHING: 0;$/;"	v
HEADERS_RECEIVED	tsvscode.ts	/^    readonly HEADERS_RECEIVED: 2;$/;"	p	interface:XMLHttpRequest
HEADERS_RECEIVED	tsvscode.ts	/^    readonly HEADERS_RECEIVED: 2;$/;"	v
HIERARCHY_REQUEST_ERR	tsvscode.ts	/^    readonly HIERARCHY_REQUEST_ERR: 3;$/;"	p	interface:DOMException
HIERARCHY_REQUEST_ERR	tsvscode.ts	/^    readonly HIERARCHY_REQUEST_ERR: 3;$/;"	v
HIGH_FLOAT	tsvscode.ts	/^    readonly HIGH_FLOAT: 0x8DF2;$/;"	p	interface:WebGLRenderingContextBase
HIGH_FLOAT	tsvscode.ts	/^    readonly HIGH_FLOAT: 0x8DF2;$/;"	v
HIGH_INT	tsvscode.ts	/^    readonly HIGH_INT: 0x8DF5;$/;"	p	interface:WebGLRenderingContextBase
HIGH_INT	tsvscode.ts	/^    readonly HIGH_INT: 0x8DF5;$/;"	v
HTMLAllCollection	tsvscode.ts	/^declare var HTMLAllCollection: {$/;"	v
HTMLAllCollection	tsvscode.ts	/^interface HTMLAllCollection {$/;"	i
HTMLAnchorElement	tsvscode.ts	/^declare var HTMLAnchorElement: {$/;"	v
HTMLAnchorElement	tsvscode.ts	/^interface HTMLAnchorElement extends HTMLElement, HTMLHyperlinkElementUtils {$/;"	i
HTMLAreaElement	tsvscode.ts	/^declare var HTMLAreaElement: {$/;"	v
HTMLAreaElement	tsvscode.ts	/^interface HTMLAreaElement extends HTMLElement, HTMLHyperlinkElementUtils {$/;"	i
HTMLAudioElement	tsvscode.ts	/^declare var HTMLAudioElement: {$/;"	v
HTMLAudioElement	tsvscode.ts	/^interface HTMLAudioElement extends HTMLMediaElement {$/;"	i
HTMLBRElement	tsvscode.ts	/^declare var HTMLBRElement: {$/;"	v
HTMLBRElement	tsvscode.ts	/^interface HTMLBRElement extends HTMLElement {$/;"	i
HTMLBaseElement	tsvscode.ts	/^declare var HTMLBaseElement: {$/;"	v
HTMLBaseElement	tsvscode.ts	/^interface HTMLBaseElement extends HTMLElement {$/;"	i
HTMLBodyElement	tsvscode.ts	/^declare var HTMLBodyElement: {$/;"	v
HTMLBodyElement	tsvscode.ts	/^interface HTMLBodyElement extends HTMLElement, WindowEventHandlers {$/;"	i
HTMLBodyElementEventMap	tsvscode.ts	/^interface HTMLBodyElementEventMap extends HTMLElementEventMap, WindowEventHandlersEventMap {$/;"	i
HTMLButtonElement	tsvscode.ts	/^declare var HTMLButtonElement: {$/;"	v
HTMLButtonElement	tsvscode.ts	/^interface HTMLButtonElement extends HTMLElement, PopoverInvokerElement {$/;"	i
HTMLCanvasElement	tsvscode.ts	/^declare var HTMLCanvasElement: {$/;"	v
HTMLCanvasElement	tsvscode.ts	/^interface HTMLCanvasElement extends HTMLElement {$/;"	i
HTMLCollection	tsvscode.ts	/^declare var HTMLCollection: {$/;"	v
HTMLCollection	tsvscode.ts	/^interface HTMLCollection extends HTMLCollectionBase {$/;"	i
HTMLCollectionBase	tsvscode.ts	/^interface HTMLCollectionBase {$/;"	i
HTMLCollectionOf	tsvscode.ts	/^interface HTMLCollectionOf<T extends Element> extends HTMLCollectionBase {$/;"	i
HTMLDListElement	tsvscode.ts	/^declare var HTMLDListElement: {$/;"	v
HTMLDListElement	tsvscode.ts	/^interface HTMLDListElement extends HTMLElement {$/;"	i
HTMLDataElement	tsvscode.ts	/^declare var HTMLDataElement: {$/;"	v
HTMLDataElement	tsvscode.ts	/^interface HTMLDataElement extends HTMLElement {$/;"	i
HTMLDataListElement	tsvscode.ts	/^declare var HTMLDataListElement: {$/;"	v
HTMLDataListElement	tsvscode.ts	/^interface HTMLDataListElement extends HTMLElement {$/;"	i
HTMLDetailsElement	tsvscode.ts	/^declare var HTMLDetailsElement: {$/;"	v
HTMLDetailsElement	tsvscode.ts	/^interface HTMLDetailsElement extends HTMLElement {$/;"	i
HTMLDialogElement	tsvscode.ts	/^declare var HTMLDialogElement: {$/;"	v
HTMLDialogElement	tsvscode.ts	/^interface HTMLDialogElement extends HTMLElement {$/;"	i
HTMLDirectoryElement	tsvscode.ts	/^declare var HTMLDirectoryElement: {$/;"	v
HTMLDirectoryElement	tsvscode.ts	/^interface HTMLDirectoryElement extends HTMLElement {$/;"	i
HTMLDivElement	tsvscode.ts	/^declare var HTMLDivElement: {$/;"	v
HTMLDivElement	tsvscode.ts	/^interface HTMLDivElement extends HTMLElement {$/;"	i
HTMLDocument	tsvscode.ts	/^declare var HTMLDocument: {$/;"	v
HTMLDocument	tsvscode.ts	/^interface HTMLDocument extends Document {$/;"	i
HTMLElement	tsvscode.ts	/^declare var HTMLElement: {$/;"	v
HTMLElement	tsvscode.ts	/^interface HTMLElement extends Element, ElementCSSInlineStyle, ElementContentEditable, GlobalEven/;"	i
HTMLElementDeprecatedTagNameMap	tsvscode.ts	/^interface HTMLElementDeprecatedTagNameMap {$/;"	i	namespace:CSS
HTMLElementEventMap	tsvscode.ts	/^interface HTMLElementEventMap extends ElementEventMap, GlobalEventHandlersEventMap {$/;"	i
HTMLElementTagNameMap	tsvscode.ts	/^interface HTMLElementTagNameMap {$/;"	i	namespace:CSS
HTMLEmbedElement	tsvscode.ts	/^declare var HTMLEmbedElement: {$/;"	v
HTMLEmbedElement	tsvscode.ts	/^interface HTMLEmbedElement extends HTMLElement {$/;"	i
HTMLFieldSetElement	tsvscode.ts	/^declare var HTMLFieldSetElement: {$/;"	v
HTMLFieldSetElement	tsvscode.ts	/^interface HTMLFieldSetElement extends HTMLElement {$/;"	i
HTMLFontElement	tsvscode.ts	/^declare var HTMLFontElement: {$/;"	v
HTMLFontElement	tsvscode.ts	/^interface HTMLFontElement extends HTMLElement {$/;"	i
HTMLFormControlsCollection	tsvscode.ts	/^declare var HTMLFormControlsCollection: {$/;"	v
HTMLFormControlsCollection	tsvscode.ts	/^interface HTMLFormControlsCollection extends HTMLCollectionBase {$/;"	i
HTMLFormElement	tsvscode.ts	/^declare var HTMLFormElement: {$/;"	v
HTMLFormElement	tsvscode.ts	/^interface HTMLFormElement extends HTMLElement {$/;"	i
HTMLFrameElement	tsvscode.ts	/^declare var HTMLFrameElement: {$/;"	v
HTMLFrameElement	tsvscode.ts	/^interface HTMLFrameElement extends HTMLElement {$/;"	i
HTMLFrameSetElement	tsvscode.ts	/^declare var HTMLFrameSetElement: {$/;"	v
HTMLFrameSetElement	tsvscode.ts	/^interface HTMLFrameSetElement extends HTMLElement, WindowEventHandlers {$/;"	i
HTMLFrameSetElementEventMap	tsvscode.ts	/^interface HTMLFrameSetElementEventMap extends HTMLElementEventMap, WindowEventHandlersEventMap {$/;"	i
HTMLHRElement	tsvscode.ts	/^declare var HTMLHRElement: {$/;"	v
HTMLHRElement	tsvscode.ts	/^interface HTMLHRElement extends HTMLElement {$/;"	i
HTMLHeadElement	tsvscode.ts	/^declare var HTMLHeadElement: {$/;"	v
HTMLHeadElement	tsvscode.ts	/^interface HTMLHeadElement extends HTMLElement {$/;"	i
HTMLHeadingElement	tsvscode.ts	/^declare var HTMLHeadingElement: {$/;"	v
HTMLHeadingElement	tsvscode.ts	/^interface HTMLHeadingElement extends HTMLElement {$/;"	i
HTMLHtmlElement	tsvscode.ts	/^declare var HTMLHtmlElement: {$/;"	v
HTMLHtmlElement	tsvscode.ts	/^interface HTMLHtmlElement extends HTMLElement {$/;"	i
HTMLHyperlinkElementUtils	tsvscode.ts	/^interface HTMLHyperlinkElementUtils {$/;"	i
HTMLIFrameElement	tsvscode.ts	/^declare var HTMLIFrameElement: {$/;"	v
HTMLIFrameElement	tsvscode.ts	/^interface HTMLIFrameElement extends HTMLElement {$/;"	i
HTMLImageElement	tsvscode.ts	/^declare var HTMLImageElement: {$/;"	v
HTMLImageElement	tsvscode.ts	/^interface HTMLImageElement extends HTMLElement {$/;"	i
HTMLInputElement	tsvscode.ts	/^declare var HTMLInputElement: {$/;"	v
HTMLInputElement	tsvscode.ts	/^interface HTMLInputElement extends HTMLElement, PopoverInvokerElement {$/;"	i
HTMLLIElement	tsvscode.ts	/^declare var HTMLLIElement: {$/;"	v
HTMLLIElement	tsvscode.ts	/^interface HTMLLIElement extends HTMLElement {$/;"	i
HTMLLabelElement	tsvscode.ts	/^declare var HTMLLabelElement: {$/;"	v
HTMLLabelElement	tsvscode.ts	/^interface HTMLLabelElement extends HTMLElement {$/;"	i
HTMLLegendElement	tsvscode.ts	/^declare var HTMLLegendElement: {$/;"	v
HTMLLegendElement	tsvscode.ts	/^interface HTMLLegendElement extends HTMLElement {$/;"	i
HTMLLinkElement	tsvscode.ts	/^declare var HTMLLinkElement: {$/;"	v
HTMLLinkElement	tsvscode.ts	/^interface HTMLLinkElement extends HTMLElement, LinkStyle {$/;"	i
HTMLMapElement	tsvscode.ts	/^declare var HTMLMapElement: {$/;"	v
HTMLMapElement	tsvscode.ts	/^interface HTMLMapElement extends HTMLElement {$/;"	i
HTMLMarqueeElement	tsvscode.ts	/^declare var HTMLMarqueeElement: {$/;"	v
HTMLMarqueeElement	tsvscode.ts	/^interface HTMLMarqueeElement extends HTMLElement {$/;"	i
HTMLMediaElement	tsvscode.ts	/^declare var HTMLMediaElement: {$/;"	v
HTMLMediaElement	tsvscode.ts	/^interface HTMLMediaElement extends HTMLElement {$/;"	i
HTMLMediaElementEventMap	tsvscode.ts	/^interface HTMLMediaElementEventMap extends HTMLElementEventMap {$/;"	i
HTMLMenuElement	tsvscode.ts	/^declare var HTMLMenuElement: {$/;"	v
HTMLMenuElement	tsvscode.ts	/^interface HTMLMenuElement extends HTMLElement {$/;"	i
HTMLMetaElement	tsvscode.ts	/^declare var HTMLMetaElement: {$/;"	v
HTMLMetaElement	tsvscode.ts	/^interface HTMLMetaElement extends HTMLElement {$/;"	i
HTMLMeterElement	tsvscode.ts	/^declare var HTMLMeterElement: {$/;"	v
HTMLMeterElement	tsvscode.ts	/^interface HTMLMeterElement extends HTMLElement {$/;"	i
HTMLModElement	tsvscode.ts	/^declare var HTMLModElement: {$/;"	v
HTMLModElement	tsvscode.ts	/^interface HTMLModElement extends HTMLElement {$/;"	i
HTMLOListElement	tsvscode.ts	/^declare var HTMLOListElement: {$/;"	v
HTMLOListElement	tsvscode.ts	/^interface HTMLOListElement extends HTMLElement {$/;"	i
HTMLObjectElement	tsvscode.ts	/^declare var HTMLObjectElement: {$/;"	v
HTMLObjectElement	tsvscode.ts	/^interface HTMLObjectElement extends HTMLElement {$/;"	i
HTMLOptGroupElement	tsvscode.ts	/^declare var HTMLOptGroupElement: {$/;"	v
HTMLOptGroupElement	tsvscode.ts	/^interface HTMLOptGroupElement extends HTMLElement {$/;"	i
HTMLOptionElement	tsvscode.ts	/^declare var HTMLOptionElement: {$/;"	v
HTMLOptionElement	tsvscode.ts	/^interface HTMLOptionElement extends HTMLElement {$/;"	i
HTMLOptionsCollection	tsvscode.ts	/^declare var HTMLOptionsCollection: {$/;"	v
HTMLOptionsCollection	tsvscode.ts	/^interface HTMLOptionsCollection extends HTMLCollectionOf<HTMLOptionElement> {$/;"	i
HTMLOrSVGElement	tsvscode.ts	/^interface HTMLOrSVGElement {$/;"	i
HTMLOutputElement	tsvscode.ts	/^declare var HTMLOutputElement: {$/;"	v
HTMLOutputElement	tsvscode.ts	/^interface HTMLOutputElement extends HTMLElement {$/;"	i
HTMLParagraphElement	tsvscode.ts	/^declare var HTMLParagraphElement: {$/;"	v
HTMLParagraphElement	tsvscode.ts	/^interface HTMLParagraphElement extends HTMLElement {$/;"	i
HTMLParamElement	tsvscode.ts	/^declare var HTMLParamElement: {$/;"	v
HTMLParamElement	tsvscode.ts	/^interface HTMLParamElement extends HTMLElement {$/;"	i
HTMLPictureElement	tsvscode.ts	/^declare var HTMLPictureElement: {$/;"	v
HTMLPictureElement	tsvscode.ts	/^interface HTMLPictureElement extends HTMLElement {$/;"	i
HTMLPreElement	tsvscode.ts	/^declare var HTMLPreElement: {$/;"	v
HTMLPreElement	tsvscode.ts	/^interface HTMLPreElement extends HTMLElement {$/;"	i
HTMLProgressElement	tsvscode.ts	/^declare var HTMLProgressElement: {$/;"	v
HTMLProgressElement	tsvscode.ts	/^interface HTMLProgressElement extends HTMLElement {$/;"	i
HTMLQuoteElement	tsvscode.ts	/^declare var HTMLQuoteElement: {$/;"	v
HTMLQuoteElement	tsvscode.ts	/^interface HTMLQuoteElement extends HTMLElement {$/;"	i
HTMLScriptElement	tsvscode.ts	/^declare var HTMLScriptElement: {$/;"	v
HTMLScriptElement	tsvscode.ts	/^interface HTMLScriptElement extends HTMLElement {$/;"	i
HTMLSelectElement	tsvscode.ts	/^declare var HTMLSelectElement: {$/;"	v
HTMLSelectElement	tsvscode.ts	/^interface HTMLSelectElement extends HTMLElement {$/;"	i
HTMLSlotElement	tsvscode.ts	/^declare var HTMLSlotElement: {$/;"	v
HTMLSlotElement	tsvscode.ts	/^interface HTMLSlotElement extends HTMLElement {$/;"	i
HTMLSourceElement	tsvscode.ts	/^declare var HTMLSourceElement: {$/;"	v
HTMLSourceElement	tsvscode.ts	/^interface HTMLSourceElement extends HTMLElement {$/;"	i
HTMLSpanElement	tsvscode.ts	/^declare var HTMLSpanElement: {$/;"	v
HTMLSpanElement	tsvscode.ts	/^interface HTMLSpanElement extends HTMLElement {$/;"	i
HTMLStyleElement	tsvscode.ts	/^declare var HTMLStyleElement: {$/;"	v
HTMLStyleElement	tsvscode.ts	/^interface HTMLStyleElement extends HTMLElement, LinkStyle {$/;"	i
HTMLTableCaptionElement	tsvscode.ts	/^declare var HTMLTableCaptionElement: {$/;"	v
HTMLTableCaptionElement	tsvscode.ts	/^interface HTMLTableCaptionElement extends HTMLElement {$/;"	i
HTMLTableCellElement	tsvscode.ts	/^declare var HTMLTableCellElement: {$/;"	v
HTMLTableCellElement	tsvscode.ts	/^interface HTMLTableCellElement extends HTMLElement {$/;"	i
HTMLTableColElement	tsvscode.ts	/^declare var HTMLTableColElement: {$/;"	v
HTMLTableColElement	tsvscode.ts	/^interface HTMLTableColElement extends HTMLElement {$/;"	i
HTMLTableDataCellElement	tsvscode.ts	/^interface HTMLTableDataCellElement extends HTMLTableCellElement {$/;"	i
HTMLTableElement	tsvscode.ts	/^declare var HTMLTableElement: {$/;"	v
HTMLTableElement	tsvscode.ts	/^interface HTMLTableElement extends HTMLElement {$/;"	i
HTMLTableHeaderCellElement	tsvscode.ts	/^interface HTMLTableHeaderCellElement extends HTMLTableCellElement {$/;"	i
HTMLTableRowElement	tsvscode.ts	/^declare var HTMLTableRowElement: {$/;"	v
HTMLTableRowElement	tsvscode.ts	/^interface HTMLTableRowElement extends HTMLElement {$/;"	i
HTMLTableSectionElement	tsvscode.ts	/^declare var HTMLTableSectionElement: {$/;"	v
HTMLTableSectionElement	tsvscode.ts	/^interface HTMLTableSectionElement extends HTMLElement {$/;"	i
HTMLTemplateElement	tsvscode.ts	/^declare var HTMLTemplateElement: {$/;"	v
HTMLTemplateElement	tsvscode.ts	/^interface HTMLTemplateElement extends HTMLElement {$/;"	i
HTMLTextAreaElement	tsvscode.ts	/^declare var HTMLTextAreaElement: {$/;"	v
HTMLTextAreaElement	tsvscode.ts	/^interface HTMLTextAreaElement extends HTMLElement {$/;"	i
HTMLTimeElement	tsvscode.ts	/^declare var HTMLTimeElement: {$/;"	v
HTMLTimeElement	tsvscode.ts	/^interface HTMLTimeElement extends HTMLElement {$/;"	i
HTMLTitleElement	tsvscode.ts	/^declare var HTMLTitleElement: {$/;"	v
HTMLTitleElement	tsvscode.ts	/^interface HTMLTitleElement extends HTMLElement {$/;"	i
HTMLTrackElement	tsvscode.ts	/^declare var HTMLTrackElement: {$/;"	v
HTMLTrackElement	tsvscode.ts	/^interface HTMLTrackElement extends HTMLElement {$/;"	i
HTMLUListElement	tsvscode.ts	/^declare var HTMLUListElement: {$/;"	v
HTMLUListElement	tsvscode.ts	/^interface HTMLUListElement extends HTMLElement {$/;"	i
HTMLUnknownElement	tsvscode.ts	/^declare var HTMLUnknownElement: {$/;"	v
HTMLUnknownElement	tsvscode.ts	/^interface HTMLUnknownElement extends HTMLElement {$/;"	i
HTMLVideoElement	tsvscode.ts	/^declare var HTMLVideoElement: {$/;"	v
HTMLVideoElement	tsvscode.ts	/^interface HTMLVideoElement extends HTMLMediaElement {$/;"	i
HTMLVideoElementEventMap	tsvscode.ts	/^interface HTMLVideoElementEventMap extends HTMLMediaElementEventMap {$/;"	i
HashChangeEvent	tsvscode.ts	/^declare var HashChangeEvent: {$/;"	v
HashChangeEvent	tsvscode.ts	/^interface HashChangeEvent extends Event {$/;"	i
HashChangeEventInit	tsvscode.ts	/^interface HashChangeEventInit extends EventInit {$/;"	i
Headers	tsvscode.ts	/^declare var Headers: {$/;"	v
Headers	tsvscode.ts	/^interface Headers {$/;"	i
Highlight	tsvscode.ts	/^declare var Highlight: {$/;"	v
Highlight	tsvscode.ts	/^interface Highlight {$/;"	i
HighlightRegistry	tsvscode.ts	/^declare var HighlightRegistry: {$/;"	v
HighlightRegistry	tsvscode.ts	/^interface HighlightRegistry {$/;"	i
History	tsvscode.ts	/^declare var History: {$/;"	v
History	tsvscode.ts	/^interface History {$/;"	i
HkdfParams	tsvscode.ts	/^interface HkdfParams extends Algorithm {$/;"	i
HmacImportParams	tsvscode.ts	/^interface HmacImportParams extends Algorithm {$/;"	i
HmacKeyAlgorithm	tsvscode.ts	/^interface HmacKeyAlgorithm extends KeyAlgorithm {$/;"	i
HmacKeyGenParams	tsvscode.ts	/^interface HmacKeyGenParams extends Algorithm {$/;"	i
Hz	tsvscode.ts	/^    function Hz(value: number): CSSUnitValue;$/;"	f	namespace:CSS
IArguments	ests.ts	/^interface IArguments {$/;"	i
IDBCursor	tsvscode.ts	/^declare var IDBCursor: {$/;"	v
IDBCursor	tsvscode.ts	/^interface IDBCursor {$/;"	i
IDBCursorWithValue	tsvscode.ts	/^declare var IDBCursorWithValue: {$/;"	v
IDBCursorWithValue	tsvscode.ts	/^interface IDBCursorWithValue extends IDBCursor {$/;"	i
IDBDatabase	tsvscode.ts	/^declare var IDBDatabase: {$/;"	v
IDBDatabase	tsvscode.ts	/^interface IDBDatabase extends EventTarget {$/;"	i
IDBDatabaseEventMap	tsvscode.ts	/^interface IDBDatabaseEventMap {$/;"	i
IDBDatabaseInfo	tsvscode.ts	/^interface IDBDatabaseInfo {$/;"	i
IDBFactory	tsvscode.ts	/^declare var IDBFactory: {$/;"	v
IDBFactory	tsvscode.ts	/^interface IDBFactory {$/;"	i
IDBIndex	tsvscode.ts	/^declare var IDBIndex: {$/;"	v
IDBIndex	tsvscode.ts	/^interface IDBIndex {$/;"	i
IDBIndexParameters	tsvscode.ts	/^interface IDBIndexParameters {$/;"	i
IDBKeyRange	tsvscode.ts	/^declare var IDBKeyRange: {$/;"	v
IDBKeyRange	tsvscode.ts	/^interface IDBKeyRange {$/;"	i
IDBObjectStore	tsvscode.ts	/^declare var IDBObjectStore: {$/;"	v
IDBObjectStore	tsvscode.ts	/^interface IDBObjectStore {$/;"	i
IDBObjectStoreParameters	tsvscode.ts	/^interface IDBObjectStoreParameters {$/;"	i
IDBOpenDBRequest	tsvscode.ts	/^declare var IDBOpenDBRequest: {$/;"	v
IDBOpenDBRequest	tsvscode.ts	/^interface IDBOpenDBRequest extends IDBRequest<IDBDatabase> {$/;"	i
IDBOpenDBRequestEventMap	tsvscode.ts	/^interface IDBOpenDBRequestEventMap extends IDBRequestEventMap {$/;"	i
IDBRequest	tsvscode.ts	/^declare var IDBRequest: {$/;"	v
IDBRequest	tsvscode.ts	/^interface IDBRequest<T = any> extends EventTarget {$/;"	i
IDBRequestEventMap	tsvscode.ts	/^interface IDBRequestEventMap {$/;"	i
IDBTransaction	tsvscode.ts	/^declare var IDBTransaction: {$/;"	v
IDBTransaction	tsvscode.ts	/^interface IDBTransaction extends EventTarget {$/;"	i
IDBTransactionEventMap	tsvscode.ts	/^interface IDBTransactionEventMap {$/;"	i
IDBTransactionOptions	tsvscode.ts	/^interface IDBTransactionOptions {$/;"	i
IDBVersionChangeEvent	tsvscode.ts	/^declare var IDBVersionChangeEvent: {$/;"	v
IDBVersionChangeEvent	tsvscode.ts	/^interface IDBVersionChangeEvent extends Event {$/;"	i
IDBVersionChangeEventInit	tsvscode.ts	/^interface IDBVersionChangeEventInit extends EventInit {$/;"	i
IIRFilterNode	tsvscode.ts	/^declare var IIRFilterNode: {$/;"	v
IIRFilterNode	tsvscode.ts	/^interface IIRFilterNode extends AudioNode {$/;"	i
IIRFilterOptions	tsvscode.ts	/^interface IIRFilterOptions extends AudioNodeOptions {$/;"	i
IMPLEMENTATION_COLOR_READ_FORMAT	tsvscode.ts	/^    readonly IMPLEMENTATION_COLOR_READ_FORMAT: 0x8B9B;$/;"	p	interface:WebGLRenderingContextBase
IMPLEMENTATION_COLOR_READ_FORMAT	tsvscode.ts	/^    readonly IMPLEMENTATION_COLOR_READ_FORMAT: 0x8B9B;$/;"	v
IMPLEMENTATION_COLOR_READ_TYPE	tsvscode.ts	/^    readonly IMPLEMENTATION_COLOR_READ_TYPE: 0x8B9A;$/;"	p	interface:WebGLRenderingContextBase
IMPLEMENTATION_COLOR_READ_TYPE	tsvscode.ts	/^    readonly IMPLEMENTATION_COLOR_READ_TYPE: 0x8B9A;$/;"	v
IMPORT_RULE	tsvscode.ts	/^    readonly IMPORT_RULE: 3;$/;"	p	interface:CSSRule
IMPORT_RULE	tsvscode.ts	/^    readonly IMPORT_RULE: 3;$/;"	v
INCR	tsvscode.ts	/^    readonly INCR: 0x1E02;$/;"	p	interface:WebGLRenderingContextBase
INCR	tsvscode.ts	/^    readonly INCR: 0x1E02;$/;"	v
INCR_WRAP	tsvscode.ts	/^    readonly INCR_WRAP: 0x8507;$/;"	p	interface:WebGLRenderingContextBase
INCR_WRAP	tsvscode.ts	/^    readonly INCR_WRAP: 0x8507;$/;"	v
INDEX_SIZE_ERR	tsvscode.ts	/^    readonly INDEX_SIZE_ERR: 1;$/;"	p	interface:DOMException
INDEX_SIZE_ERR	tsvscode.ts	/^    readonly INDEX_SIZE_ERR: 1;$/;"	v
INT	tsvscode.ts	/^    readonly INT: 0x1404;$/;"	p	interface:WebGLRenderingContextBase
INT	tsvscode.ts	/^    readonly INT: 0x1404;$/;"	v
INTERLEAVED_ATTRIBS	tsvscode.ts	/^    readonly INTERLEAVED_ATTRIBS: 0x8C8C;$/;"	p	interface:WebGL2RenderingContextBase
INTERLEAVED_ATTRIBS	tsvscode.ts	/^    readonly INTERLEAVED_ATTRIBS: 0x8C8C;$/;"	v
INT_2_10_10_10_REV	tsvscode.ts	/^    readonly INT_2_10_10_10_REV: 0x8D9F;$/;"	p	interface:WebGL2RenderingContextBase
INT_2_10_10_10_REV	tsvscode.ts	/^    readonly INT_2_10_10_10_REV: 0x8D9F;$/;"	v
INT_SAMPLER_2D	tsvscode.ts	/^    readonly INT_SAMPLER_2D: 0x8DCA;$/;"	p	interface:WebGL2RenderingContextBase
INT_SAMPLER_2D	tsvscode.ts	/^    readonly INT_SAMPLER_2D: 0x8DCA;$/;"	v
INT_SAMPLER_2D_ARRAY	tsvscode.ts	/^    readonly INT_SAMPLER_2D_ARRAY: 0x8DCF;$/;"	p	interface:WebGL2RenderingContextBase
INT_SAMPLER_2D_ARRAY	tsvscode.ts	/^    readonly INT_SAMPLER_2D_ARRAY: 0x8DCF;$/;"	v
INT_SAMPLER_3D	tsvscode.ts	/^    readonly INT_SAMPLER_3D: 0x8DCB;$/;"	p	interface:WebGL2RenderingContextBase
INT_SAMPLER_3D	tsvscode.ts	/^    readonly INT_SAMPLER_3D: 0x8DCB;$/;"	v
INT_SAMPLER_CUBE	tsvscode.ts	/^    readonly INT_SAMPLER_CUBE: 0x8DCC;$/;"	p	interface:WebGL2RenderingContextBase
INT_SAMPLER_CUBE	tsvscode.ts	/^    readonly INT_SAMPLER_CUBE: 0x8DCC;$/;"	v
INT_VEC2	tsvscode.ts	/^    readonly INT_VEC2: 0x8B53;$/;"	p	interface:WebGLRenderingContextBase
INT_VEC2	tsvscode.ts	/^    readonly INT_VEC2: 0x8B53;$/;"	v
INT_VEC3	tsvscode.ts	/^    readonly INT_VEC3: 0x8B54;$/;"	p	interface:WebGLRenderingContextBase
INT_VEC3	tsvscode.ts	/^    readonly INT_VEC3: 0x8B54;$/;"	v
INT_VEC4	tsvscode.ts	/^    readonly INT_VEC4: 0x8B55;$/;"	p	interface:WebGLRenderingContextBase
INT_VEC4	tsvscode.ts	/^    readonly INT_VEC4: 0x8B55;$/;"	v
INUSE_ATTRIBUTE_ERR	tsvscode.ts	/^    readonly INUSE_ATTRIBUTE_ERR: 10;$/;"	p	interface:DOMException
INUSE_ATTRIBUTE_ERR	tsvscode.ts	/^    readonly INUSE_ATTRIBUTE_ERR: 10;$/;"	v
INVALID_ACCESS_ERR	tsvscode.ts	/^    readonly INVALID_ACCESS_ERR: 15;$/;"	p	interface:DOMException
INVALID_ACCESS_ERR	tsvscode.ts	/^    readonly INVALID_ACCESS_ERR: 15;$/;"	v
INVALID_CHARACTER_ERR	tsvscode.ts	/^    readonly INVALID_CHARACTER_ERR: 5;$/;"	p	interface:DOMException
INVALID_CHARACTER_ERR	tsvscode.ts	/^    readonly INVALID_CHARACTER_ERR: 5;$/;"	v
INVALID_ENUM	tsvscode.ts	/^    readonly INVALID_ENUM: 0x0500;$/;"	p	interface:WebGLRenderingContextBase
INVALID_ENUM	tsvscode.ts	/^    readonly INVALID_ENUM: 0x0500;$/;"	v
INVALID_FRAMEBUFFER_OPERATION	tsvscode.ts	/^    readonly INVALID_FRAMEBUFFER_OPERATION: 0x0506;$/;"	p	interface:WebGLRenderingContextBase
INVALID_FRAMEBUFFER_OPERATION	tsvscode.ts	/^    readonly INVALID_FRAMEBUFFER_OPERATION: 0x0506;$/;"	v
INVALID_INDEX	tsvscode.ts	/^    readonly INVALID_INDEX: 0xFFFFFFFF;$/;"	p	interface:WebGL2RenderingContextBase
INVALID_INDEX	tsvscode.ts	/^    readonly INVALID_INDEX: 0xFFFFFFFF;$/;"	v
INVALID_MODIFICATION_ERR	tsvscode.ts	/^    readonly INVALID_MODIFICATION_ERR: 13;$/;"	p	interface:DOMException
INVALID_MODIFICATION_ERR	tsvscode.ts	/^    readonly INVALID_MODIFICATION_ERR: 13;$/;"	v
INVALID_NODE_TYPE_ERR	tsvscode.ts	/^    readonly INVALID_NODE_TYPE_ERR: 24;$/;"	p	interface:DOMException
INVALID_NODE_TYPE_ERR	tsvscode.ts	/^    readonly INVALID_NODE_TYPE_ERR: 24;$/;"	v
INVALID_OPERATION	tsvscode.ts	/^    readonly INVALID_OPERATION: 0x0502;$/;"	p	interface:WebGLRenderingContextBase
INVALID_OPERATION	tsvscode.ts	/^    readonly INVALID_OPERATION: 0x0502;$/;"	v
INVALID_STATE_ERR	tsvscode.ts	/^    readonly INVALID_STATE_ERR: 11;$/;"	p	interface:DOMException
INVALID_STATE_ERR	tsvscode.ts	/^    readonly INVALID_STATE_ERR: 11;$/;"	v
INVALID_VALUE	tsvscode.ts	/^    readonly INVALID_VALUE: 0x0501;$/;"	p	interface:WebGLRenderingContextBase
INVALID_VALUE	tsvscode.ts	/^    readonly INVALID_VALUE: 0x0501;$/;"	v
INVERT	tsvscode.ts	/^    readonly INVERT: 0x150A;$/;"	p	interface:WebGLRenderingContextBase
INVERT	tsvscode.ts	/^    readonly INVERT: 0x150A;$/;"	v
IdleDeadline	tsvscode.ts	/^declare var IdleDeadline: {$/;"	v
IdleDeadline	tsvscode.ts	/^interface IdleDeadline {$/;"	i
IdleRequestCallback	tsvscode.ts	/^interface IdleRequestCallback {$/;"	i	namespace:CSS
IdleRequestOptions	tsvscode.ts	/^interface IdleRequestOptions {$/;"	i
Image	tsvscode.ts	/^declare var Image: {$/;"	v	namespace:CSS
ImageBitmap	tsvscode.ts	/^declare var ImageBitmap: {$/;"	v
ImageBitmap	tsvscode.ts	/^interface ImageBitmap {$/;"	i
ImageBitmapOptions	tsvscode.ts	/^interface ImageBitmapOptions {$/;"	i
ImageBitmapRenderingContext	tsvscode.ts	/^declare var ImageBitmapRenderingContext: {$/;"	v
ImageBitmapRenderingContext	tsvscode.ts	/^interface ImageBitmapRenderingContext {$/;"	i
ImageBitmapRenderingContextSettings	tsvscode.ts	/^interface ImageBitmapRenderingContextSettings {$/;"	i
ImageData	tsvscode.ts	/^declare var ImageData: {$/;"	v
ImageData	tsvscode.ts	/^interface ImageData {$/;"	i
ImageDataSettings	tsvscode.ts	/^interface ImageDataSettings {$/;"	i
ImageEncodeOptions	tsvscode.ts	/^interface ImageEncodeOptions {$/;"	i
ImportAssertions	ests.ts	/^interface ImportAssertions {$/;"	i
ImportAttributes	ests.ts	/^interface ImportAttributes {$/;"	i
ImportCallOptions	ests.ts	/^interface ImportCallOptions {$/;"	i
ImportMeta	ests.ts	/^interface ImportMeta {$/;"	i
ImportMeta	tsvscode.ts	/^interface ImportMeta {$/;"	i
Infinity	ests.ts	/^declare var Infinity: number;$/;"	v
InnerHTML	tsvscode.ts	/^interface InnerHTML {$/;"	i
InputDeviceInfo	tsvscode.ts	/^declare var InputDeviceInfo: {$/;"	v
InputDeviceInfo	tsvscode.ts	/^interface InputDeviceInfo extends MediaDeviceInfo {$/;"	i
InputEvent	tsvscode.ts	/^declare var InputEvent: {$/;"	v
InputEvent	tsvscode.ts	/^interface InputEvent extends UIEvent {$/;"	i
InputEventInit	tsvscode.ts	/^interface InputEventInit extends UIEventInit {$/;"	i
InstanceType	ests.ts	/^type InstanceType<T extends abstract new (...args: any) => any> = T extends abstract new (...arg/;"	a
Int16Array	ests.ts	/^declare var Int16Array: Int16ArrayConstructor;$/;"	v
Int16Array	ests.ts	/^interface Int16Array {$/;"	i
Int16ArrayConstructor	ests.ts	/^interface Int16ArrayConstructor {$/;"	i
Int32Array	ests.ts	/^declare var Int32Array: Int32ArrayConstructor;$/;"	v
Int32Array	ests.ts	/^interface Int32Array {$/;"	i
Int32ArrayConstructor	ests.ts	/^interface Int32ArrayConstructor {$/;"	i
Int8Array	ests.ts	/^declare var Int8Array: Int8ArrayConstructor;$/;"	v
Int8Array	ests.ts	/^interface Int8Array {$/;"	i
Int8ArrayConstructor	ests.ts	/^interface Int8ArrayConstructor {$/;"	i
IntersectionObserver	tsvscode.ts	/^declare var IntersectionObserver: {$/;"	v
IntersectionObserver	tsvscode.ts	/^interface IntersectionObserver {$/;"	i
IntersectionObserverCallback	tsvscode.ts	/^interface IntersectionObserverCallback {$/;"	i	namespace:CSS
IntersectionObserverEntry	tsvscode.ts	/^declare var IntersectionObserverEntry: {$/;"	v
IntersectionObserverEntry	tsvscode.ts	/^interface IntersectionObserverEntry {$/;"	i
IntersectionObserverEntryInit	tsvscode.ts	/^interface IntersectionObserverEntryInit {$/;"	i
IntersectionObserverInit	tsvscode.ts	/^interface IntersectionObserverInit {$/;"	i
Intl	ests.ts	/^declare namespace Intl {$/;"	n
IsSearchProviderInstalled	tsvscode.ts	/^    IsSearchProviderInstalled(): void;$/;"	m	interface:External
JSON	ests.ts	/^declare var JSON: JSON;$/;"	v
JSON	ests.ts	/^interface JSON {$/;"	i
JsonWebKey	tsvscode.ts	/^interface JsonWebKey {$/;"	i
KEEP	tsvscode.ts	/^    readonly KEEP: 0x1E00;$/;"	p	interface:WebGLRenderingContextBase
KEEP	tsvscode.ts	/^    readonly KEEP: 0x1E00;$/;"	v
KEYFRAMES_RULE	tsvscode.ts	/^    readonly KEYFRAMES_RULE: 7;$/;"	p	interface:CSSRule
KEYFRAMES_RULE	tsvscode.ts	/^    readonly KEYFRAMES_RULE: 7;$/;"	v
KEYFRAME_RULE	tsvscode.ts	/^    readonly KEYFRAME_RULE: 8;$/;"	p	interface:CSSRule
KEYFRAME_RULE	tsvscode.ts	/^    readonly KEYFRAME_RULE: 8;$/;"	v
KHR_parallel_shader_compile	tsvscode.ts	/^interface KHR_parallel_shader_compile {$/;"	i
KeyAlgorithm	tsvscode.ts	/^interface KeyAlgorithm {$/;"	i
KeyboardEvent	tsvscode.ts	/^declare var KeyboardEvent: {$/;"	v
KeyboardEvent	tsvscode.ts	/^interface KeyboardEvent extends UIEvent {$/;"	i
KeyboardEventInit	tsvscode.ts	/^interface KeyboardEventInit extends EventModifierInit {$/;"	i
Keyframe	tsvscode.ts	/^interface Keyframe {$/;"	i
KeyframeAnimationOptions	tsvscode.ts	/^interface KeyframeAnimationOptions extends KeyframeEffectOptions {$/;"	i
KeyframeEffect	tsvscode.ts	/^declare var KeyframeEffect: {$/;"	v
KeyframeEffect	tsvscode.ts	/^interface KeyframeEffect extends AnimationEffect {$/;"	i
KeyframeEffectOptions	tsvscode.ts	/^interface KeyframeEffectOptions extends EffectTiming {$/;"	i
LENGTHADJUST_SPACING	tsvscode.ts	/^    readonly LENGTHADJUST_SPACING: 1;$/;"	p	interface:SVGTextContentElement
LENGTHADJUST_SPACING	tsvscode.ts	/^    readonly LENGTHADJUST_SPACING: 1;$/;"	v
LENGTHADJUST_SPACINGANDGLYPHS	tsvscode.ts	/^    readonly LENGTHADJUST_SPACINGANDGLYPHS: 2;$/;"	p	interface:SVGTextContentElement
LENGTHADJUST_SPACINGANDGLYPHS	tsvscode.ts	/^    readonly LENGTHADJUST_SPACINGANDGLYPHS: 2;$/;"	v
LENGTHADJUST_UNKNOWN	tsvscode.ts	/^    readonly LENGTHADJUST_UNKNOWN: 0;$/;"	p	interface:SVGTextContentElement
LENGTHADJUST_UNKNOWN	tsvscode.ts	/^    readonly LENGTHADJUST_UNKNOWN: 0;$/;"	v
LEQUAL	tsvscode.ts	/^    readonly LEQUAL: 0x0203;$/;"	p	interface:WebGLRenderingContextBase
LEQUAL	tsvscode.ts	/^    readonly LEQUAL: 0x0203;$/;"	v
LESS	tsvscode.ts	/^    readonly LESS: 0x0201;$/;"	p	interface:WebGLRenderingContextBase
LESS	tsvscode.ts	/^    readonly LESS: 0x0201;$/;"	v
LINEAR	tsvscode.ts	/^    readonly LINEAR: 0x2601;$/;"	p	interface:WebGLRenderingContextBase
LINEAR	tsvscode.ts	/^    readonly LINEAR: 0x2601;$/;"	v
LINEAR_MIPMAP_LINEAR	tsvscode.ts	/^    readonly LINEAR_MIPMAP_LINEAR: 0x2703;$/;"	p	interface:WebGLRenderingContextBase
LINEAR_MIPMAP_LINEAR	tsvscode.ts	/^    readonly LINEAR_MIPMAP_LINEAR: 0x2703;$/;"	v
LINEAR_MIPMAP_NEAREST	tsvscode.ts	/^    readonly LINEAR_MIPMAP_NEAREST: 0x2701;$/;"	p	interface:WebGLRenderingContextBase
LINEAR_MIPMAP_NEAREST	tsvscode.ts	/^    readonly LINEAR_MIPMAP_NEAREST: 0x2701;$/;"	v
LINES	tsvscode.ts	/^    readonly LINES: 0x0001;$/;"	p	interface:WebGLRenderingContextBase
LINES	tsvscode.ts	/^    readonly LINES: 0x0001;$/;"	v
LINE_LOOP	tsvscode.ts	/^    readonly LINE_LOOP: 0x0002;$/;"	p	interface:WebGLRenderingContextBase
LINE_LOOP	tsvscode.ts	/^    readonly LINE_LOOP: 0x0002;$/;"	v
LINE_STRIP	tsvscode.ts	/^    readonly LINE_STRIP: 0x0003;$/;"	p	interface:WebGLRenderingContextBase
LINE_STRIP	tsvscode.ts	/^    readonly LINE_STRIP: 0x0003;$/;"	v
LINE_WIDTH	tsvscode.ts	/^    readonly LINE_WIDTH: 0x0B21;$/;"	p	interface:WebGLRenderingContextBase
LINE_WIDTH	tsvscode.ts	/^    readonly LINE_WIDTH: 0x0B21;$/;"	v
LINK_STATUS	tsvscode.ts	/^    readonly LINK_STATUS: 0x8B82;$/;"	p	interface:WebGLRenderingContextBase
LINK_STATUS	tsvscode.ts	/^    readonly LINK_STATUS: 0x8B82;$/;"	v
LN10	ests.ts	/^    readonly LN10: number;$/;"	p	interface:Math
LN2	ests.ts	/^    readonly LN2: number;$/;"	p	interface:Math
LOADED	tsvscode.ts	/^    readonly LOADED: 2;$/;"	p	interface:HTMLTrackElement
LOADED	tsvscode.ts	/^    readonly LOADED: 2;$/;"	v
LOADING	tsvscode.ts	/^    readonly LOADING: 1;$/;"	p	interface:FileReader
LOADING	tsvscode.ts	/^    readonly LOADING: 1;$/;"	p	interface:HTMLTrackElement
LOADING	tsvscode.ts	/^    readonly LOADING: 1;$/;"	v
LOADING	tsvscode.ts	/^    readonly LOADING: 3;$/;"	p	interface:XMLHttpRequest
LOADING	tsvscode.ts	/^    readonly LOADING: 3;$/;"	v
LOG10E	ests.ts	/^    readonly LOG10E: number;$/;"	p	interface:Math
LOG2E	ests.ts	/^    readonly LOG2E: number;$/;"	p	interface:Math
LOW_FLOAT	tsvscode.ts	/^    readonly LOW_FLOAT: 0x8DF0;$/;"	p	interface:WebGLRenderingContextBase
LOW_FLOAT	tsvscode.ts	/^    readonly LOW_FLOAT: 0x8DF0;$/;"	v
LOW_INT	tsvscode.ts	/^    readonly LOW_INT: 0x8DF3;$/;"	p	interface:WebGLRenderingContextBase
LOW_INT	tsvscode.ts	/^    readonly LOW_INT: 0x8DF3;$/;"	v
LUMINANCE	tsvscode.ts	/^    readonly LUMINANCE: 0x1909;$/;"	p	interface:WebGLRenderingContextBase
LUMINANCE	tsvscode.ts	/^    readonly LUMINANCE: 0x1909;$/;"	v
LUMINANCE_ALPHA	tsvscode.ts	/^    readonly LUMINANCE_ALPHA: 0x190A;$/;"	p	interface:WebGLRenderingContextBase
LUMINANCE_ALPHA	tsvscode.ts	/^    readonly LUMINANCE_ALPHA: 0x190A;$/;"	v
LinkStyle	tsvscode.ts	/^interface LinkStyle {$/;"	i
Location	tsvscode.ts	/^declare var Location: {$/;"	v
Location	tsvscode.ts	/^interface Location {$/;"	i
Lock	tsvscode.ts	/^declare var Lock: {$/;"	v
Lock	tsvscode.ts	/^interface Lock {$/;"	i
LockGrantedCallback	tsvscode.ts	/^interface LockGrantedCallback {$/;"	i	namespace:CSS
LockInfo	tsvscode.ts	/^interface LockInfo {$/;"	i
LockManager	tsvscode.ts	/^declare var LockManager: {$/;"	v
LockManager	tsvscode.ts	/^interface LockManager {$/;"	i
LockManagerSnapshot	tsvscode.ts	/^interface LockManagerSnapshot {$/;"	i
LockOptions	tsvscode.ts	/^interface LockOptions {$/;"	i
Lowercase	ests.ts	/^type Lowercase<S extends string> = intrinsic;$/;"	a
MAX	tsvscode.ts	/^    readonly MAX: 0x8008;$/;"	p	interface:WebGL2RenderingContextBase
MAX	tsvscode.ts	/^    readonly MAX: 0x8008;$/;"	v
MAX_3D_TEXTURE_SIZE	tsvscode.ts	/^    readonly MAX_3D_TEXTURE_SIZE: 0x8073;$/;"	p	interface:WebGL2RenderingContextBase
MAX_3D_TEXTURE_SIZE	tsvscode.ts	/^    readonly MAX_3D_TEXTURE_SIZE: 0x8073;$/;"	v
MAX_ARRAY_TEXTURE_LAYERS	tsvscode.ts	/^    readonly MAX_ARRAY_TEXTURE_LAYERS: 0x88FF;$/;"	p	interface:WebGL2RenderingContextBase
MAX_ARRAY_TEXTURE_LAYERS	tsvscode.ts	/^    readonly MAX_ARRAY_TEXTURE_LAYERS: 0x88FF;$/;"	v
MAX_CLIENT_WAIT_TIMEOUT_WEBGL	tsvscode.ts	/^    readonly MAX_CLIENT_WAIT_TIMEOUT_WEBGL: 0x9247;$/;"	p	interface:WebGL2RenderingContextBase
MAX_CLIENT_WAIT_TIMEOUT_WEBGL	tsvscode.ts	/^    readonly MAX_CLIENT_WAIT_TIMEOUT_WEBGL: 0x9247;$/;"	v
MAX_COLOR_ATTACHMENTS	tsvscode.ts	/^    readonly MAX_COLOR_ATTACHMENTS: 0x8CDF;$/;"	p	interface:WebGL2RenderingContextBase
MAX_COLOR_ATTACHMENTS	tsvscode.ts	/^    readonly MAX_COLOR_ATTACHMENTS: 0x8CDF;$/;"	v
MAX_COLOR_ATTACHMENTS_WEBGL	tsvscode.ts	/^    readonly MAX_COLOR_ATTACHMENTS_WEBGL: 0x8CDF;$/;"	p	interface:WEBGL_draw_buffers
MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	tsvscode.ts	/^    readonly MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: 0x8A33;$/;"	p	interface:WebGL2RenderingContextBase
MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	tsvscode.ts	/^    readonly MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: 0x8A33;$/;"	v
MAX_COMBINED_TEXTURE_IMAGE_UNITS	tsvscode.ts	/^    readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS: 0x8B4D;$/;"	p	interface:WebGLRenderingContextBase
MAX_COMBINED_TEXTURE_IMAGE_UNITS	tsvscode.ts	/^    readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS: 0x8B4D;$/;"	v
MAX_COMBINED_UNIFORM_BLOCKS	tsvscode.ts	/^    readonly MAX_COMBINED_UNIFORM_BLOCKS: 0x8A2E;$/;"	p	interface:WebGL2RenderingContextBase
MAX_COMBINED_UNIFORM_BLOCKS	tsvscode.ts	/^    readonly MAX_COMBINED_UNIFORM_BLOCKS: 0x8A2E;$/;"	v
MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	tsvscode.ts	/^    readonly MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: 0x8A31;$/;"	p	interface:WebGL2RenderingContextBase
MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	tsvscode.ts	/^    readonly MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: 0x8A31;$/;"	v
MAX_CUBE_MAP_TEXTURE_SIZE	tsvscode.ts	/^    readonly MAX_CUBE_MAP_TEXTURE_SIZE: 0x851C;$/;"	p	interface:WebGLRenderingContextBase
MAX_CUBE_MAP_TEXTURE_SIZE	tsvscode.ts	/^    readonly MAX_CUBE_MAP_TEXTURE_SIZE: 0x851C;$/;"	v
MAX_DRAW_BUFFERS	tsvscode.ts	/^    readonly MAX_DRAW_BUFFERS: 0x8824;$/;"	p	interface:WebGL2RenderingContextBase
MAX_DRAW_BUFFERS	tsvscode.ts	/^    readonly MAX_DRAW_BUFFERS: 0x8824;$/;"	v
MAX_DRAW_BUFFERS_WEBGL	tsvscode.ts	/^    readonly MAX_DRAW_BUFFERS_WEBGL: 0x8824;$/;"	p	interface:WEBGL_draw_buffers
MAX_ELEMENTS_INDICES	tsvscode.ts	/^    readonly MAX_ELEMENTS_INDICES: 0x80E9;$/;"	p	interface:WebGL2RenderingContextBase
MAX_ELEMENTS_INDICES	tsvscode.ts	/^    readonly MAX_ELEMENTS_INDICES: 0x80E9;$/;"	v
MAX_ELEMENTS_VERTICES	tsvscode.ts	/^    readonly MAX_ELEMENTS_VERTICES: 0x80E8;$/;"	p	interface:WebGL2RenderingContextBase
MAX_ELEMENTS_VERTICES	tsvscode.ts	/^    readonly MAX_ELEMENTS_VERTICES: 0x80E8;$/;"	v
MAX_ELEMENT_INDEX	tsvscode.ts	/^    readonly MAX_ELEMENT_INDEX: 0x8D6B;$/;"	p	interface:WebGL2RenderingContextBase
MAX_ELEMENT_INDEX	tsvscode.ts	/^    readonly MAX_ELEMENT_INDEX: 0x8D6B;$/;"	v
MAX_EXT	tsvscode.ts	/^    readonly MAX_EXT: 0x8008;$/;"	p	interface:EXT_blend_minmax
MAX_FRAGMENT_INPUT_COMPONENTS	tsvscode.ts	/^    readonly MAX_FRAGMENT_INPUT_COMPONENTS: 0x9125;$/;"	p	interface:WebGL2RenderingContextBase
MAX_FRAGMENT_INPUT_COMPONENTS	tsvscode.ts	/^    readonly MAX_FRAGMENT_INPUT_COMPONENTS: 0x9125;$/;"	v
MAX_FRAGMENT_UNIFORM_BLOCKS	tsvscode.ts	/^    readonly MAX_FRAGMENT_UNIFORM_BLOCKS: 0x8A2D;$/;"	p	interface:WebGL2RenderingContextBase
MAX_FRAGMENT_UNIFORM_BLOCKS	tsvscode.ts	/^    readonly MAX_FRAGMENT_UNIFORM_BLOCKS: 0x8A2D;$/;"	v
MAX_FRAGMENT_UNIFORM_COMPONENTS	tsvscode.ts	/^    readonly MAX_FRAGMENT_UNIFORM_COMPONENTS: 0x8B49;$/;"	p	interface:WebGL2RenderingContextBase
MAX_FRAGMENT_UNIFORM_COMPONENTS	tsvscode.ts	/^    readonly MAX_FRAGMENT_UNIFORM_COMPONENTS: 0x8B49;$/;"	v
MAX_FRAGMENT_UNIFORM_VECTORS	tsvscode.ts	/^    readonly MAX_FRAGMENT_UNIFORM_VECTORS: 0x8DFD;$/;"	p	interface:WebGLRenderingContextBase
MAX_FRAGMENT_UNIFORM_VECTORS	tsvscode.ts	/^    readonly MAX_FRAGMENT_UNIFORM_VECTORS: 0x8DFD;$/;"	v
MAX_PROGRAM_TEXEL_OFFSET	tsvscode.ts	/^    readonly MAX_PROGRAM_TEXEL_OFFSET: 0x8905;$/;"	p	interface:WebGL2RenderingContextBase
MAX_PROGRAM_TEXEL_OFFSET	tsvscode.ts	/^    readonly MAX_PROGRAM_TEXEL_OFFSET: 0x8905;$/;"	v
MAX_RENDERBUFFER_SIZE	tsvscode.ts	/^    readonly MAX_RENDERBUFFER_SIZE: 0x84E8;$/;"	p	interface:WebGLRenderingContextBase
MAX_RENDERBUFFER_SIZE	tsvscode.ts	/^    readonly MAX_RENDERBUFFER_SIZE: 0x84E8;$/;"	v
MAX_SAMPLES	tsvscode.ts	/^    readonly MAX_SAMPLES: 0x8D57;$/;"	p	interface:WebGL2RenderingContextBase
MAX_SAMPLES	tsvscode.ts	/^    readonly MAX_SAMPLES: 0x8D57;$/;"	v
MAX_SERVER_WAIT_TIMEOUT	tsvscode.ts	/^    readonly MAX_SERVER_WAIT_TIMEOUT: 0x9111;$/;"	p	interface:WebGL2RenderingContextBase
MAX_SERVER_WAIT_TIMEOUT	tsvscode.ts	/^    readonly MAX_SERVER_WAIT_TIMEOUT: 0x9111;$/;"	v
MAX_TEXTURE_IMAGE_UNITS	tsvscode.ts	/^    readonly MAX_TEXTURE_IMAGE_UNITS: 0x8872;$/;"	p	interface:WebGLRenderingContextBase
MAX_TEXTURE_IMAGE_UNITS	tsvscode.ts	/^    readonly MAX_TEXTURE_IMAGE_UNITS: 0x8872;$/;"	v
MAX_TEXTURE_LOD_BIAS	tsvscode.ts	/^    readonly MAX_TEXTURE_LOD_BIAS: 0x84FD;$/;"	p	interface:WebGL2RenderingContextBase
MAX_TEXTURE_LOD_BIAS	tsvscode.ts	/^    readonly MAX_TEXTURE_LOD_BIAS: 0x84FD;$/;"	v
MAX_TEXTURE_MAX_ANISOTROPY_EXT	tsvscode.ts	/^    readonly MAX_TEXTURE_MAX_ANISOTROPY_EXT: 0x84FF;$/;"	p	interface:EXT_texture_filter_anisotropic
MAX_TEXTURE_SIZE	tsvscode.ts	/^    readonly MAX_TEXTURE_SIZE: 0x0D33;$/;"	p	interface:WebGLRenderingContextBase
MAX_TEXTURE_SIZE	tsvscode.ts	/^    readonly MAX_TEXTURE_SIZE: 0x0D33;$/;"	v
MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	tsvscode.ts	/^    readonly MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: 0x8C8A;$/;"	p	interface:WebGL2RenderingContextBase
MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	tsvscode.ts	/^    readonly MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: 0x8C8A;$/;"	v
MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	tsvscode.ts	/^    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: 0x8C8B;$/;"	p	interface:WebGL2RenderingContextBase
MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	tsvscode.ts	/^    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: 0x8C8B;$/;"	v
MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	tsvscode.ts	/^    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: 0x8C80;$/;"	p	interface:WebGL2RenderingContextBase
MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	tsvscode.ts	/^    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: 0x8C80;$/;"	v
MAX_UNIFORM_BLOCK_SIZE	tsvscode.ts	/^    readonly MAX_UNIFORM_BLOCK_SIZE: 0x8A30;$/;"	p	interface:WebGL2RenderingContextBase
MAX_UNIFORM_BLOCK_SIZE	tsvscode.ts	/^    readonly MAX_UNIFORM_BLOCK_SIZE: 0x8A30;$/;"	v
MAX_UNIFORM_BUFFER_BINDINGS	tsvscode.ts	/^    readonly MAX_UNIFORM_BUFFER_BINDINGS: 0x8A2F;$/;"	p	interface:WebGL2RenderingContextBase
MAX_UNIFORM_BUFFER_BINDINGS	tsvscode.ts	/^    readonly MAX_UNIFORM_BUFFER_BINDINGS: 0x8A2F;$/;"	v
MAX_VALUE	ests.ts	/^    readonly MAX_VALUE: number;$/;"	p	interface:NumberConstructor
MAX_VARYING_COMPONENTS	tsvscode.ts	/^    readonly MAX_VARYING_COMPONENTS: 0x8B4B;$/;"	p	interface:WebGL2RenderingContextBase
MAX_VARYING_COMPONENTS	tsvscode.ts	/^    readonly MAX_VARYING_COMPONENTS: 0x8B4B;$/;"	v
MAX_VARYING_VECTORS	tsvscode.ts	/^    readonly MAX_VARYING_VECTORS: 0x8DFC;$/;"	p	interface:WebGLRenderingContextBase
MAX_VARYING_VECTORS	tsvscode.ts	/^    readonly MAX_VARYING_VECTORS: 0x8DFC;$/;"	v
MAX_VERTEX_ATTRIBS	tsvscode.ts	/^    readonly MAX_VERTEX_ATTRIBS: 0x8869;$/;"	p	interface:WebGLRenderingContextBase
MAX_VERTEX_ATTRIBS	tsvscode.ts	/^    readonly MAX_VERTEX_ATTRIBS: 0x8869;$/;"	v
MAX_VERTEX_OUTPUT_COMPONENTS	tsvscode.ts	/^    readonly MAX_VERTEX_OUTPUT_COMPONENTS: 0x9122;$/;"	p	interface:WebGL2RenderingContextBase
MAX_VERTEX_OUTPUT_COMPONENTS	tsvscode.ts	/^    readonly MAX_VERTEX_OUTPUT_COMPONENTS: 0x9122;$/;"	v
MAX_VERTEX_TEXTURE_IMAGE_UNITS	tsvscode.ts	/^    readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS: 0x8B4C;$/;"	p	interface:WebGLRenderingContextBase
MAX_VERTEX_TEXTURE_IMAGE_UNITS	tsvscode.ts	/^    readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS: 0x8B4C;$/;"	v
MAX_VERTEX_UNIFORM_BLOCKS	tsvscode.ts	/^    readonly MAX_VERTEX_UNIFORM_BLOCKS: 0x8A2B;$/;"	p	interface:WebGL2RenderingContextBase
MAX_VERTEX_UNIFORM_BLOCKS	tsvscode.ts	/^    readonly MAX_VERTEX_UNIFORM_BLOCKS: 0x8A2B;$/;"	v
MAX_VERTEX_UNIFORM_COMPONENTS	tsvscode.ts	/^    readonly MAX_VERTEX_UNIFORM_COMPONENTS: 0x8B4A;$/;"	p	interface:WebGL2RenderingContextBase
MAX_VERTEX_UNIFORM_COMPONENTS	tsvscode.ts	/^    readonly MAX_VERTEX_UNIFORM_COMPONENTS: 0x8B4A;$/;"	v
MAX_VERTEX_UNIFORM_VECTORS	tsvscode.ts	/^    readonly MAX_VERTEX_UNIFORM_VECTORS: 0x8DFB;$/;"	p	interface:WebGLRenderingContextBase
MAX_VERTEX_UNIFORM_VECTORS	tsvscode.ts	/^    readonly MAX_VERTEX_UNIFORM_VECTORS: 0x8DFB;$/;"	v
MAX_VIEWPORT_DIMS	tsvscode.ts	/^    readonly MAX_VIEWPORT_DIMS: 0x0D3A;$/;"	p	interface:WebGLRenderingContextBase
MAX_VIEWPORT_DIMS	tsvscode.ts	/^    readonly MAX_VIEWPORT_DIMS: 0x0D3A;$/;"	v
MAX_VIEWS_OVR	tsvscode.ts	/^    readonly MAX_VIEWS_OVR: 0x9631;$/;"	p	interface:OVR_multiview2
MEDIA_ERR_ABORTED	tsvscode.ts	/^    readonly MEDIA_ERR_ABORTED: 1;$/;"	p	interface:MediaError
MEDIA_ERR_ABORTED	tsvscode.ts	/^    readonly MEDIA_ERR_ABORTED: 1;$/;"	v
MEDIA_ERR_DECODE	tsvscode.ts	/^    readonly MEDIA_ERR_DECODE: 3;$/;"	p	interface:MediaError
MEDIA_ERR_DECODE	tsvscode.ts	/^    readonly MEDIA_ERR_DECODE: 3;$/;"	v
MEDIA_ERR_NETWORK	tsvscode.ts	/^    readonly MEDIA_ERR_NETWORK: 2;$/;"	p	interface:MediaError
MEDIA_ERR_NETWORK	tsvscode.ts	/^    readonly MEDIA_ERR_NETWORK: 2;$/;"	v
MEDIA_ERR_SRC_NOT_SUPPORTED	tsvscode.ts	/^    readonly MEDIA_ERR_SRC_NOT_SUPPORTED: 4;$/;"	p	interface:MediaError
MEDIA_ERR_SRC_NOT_SUPPORTED	tsvscode.ts	/^    readonly MEDIA_ERR_SRC_NOT_SUPPORTED: 4;$/;"	v
MEDIA_RULE	tsvscode.ts	/^    readonly MEDIA_RULE: 4;$/;"	p	interface:CSSRule
MEDIA_RULE	tsvscode.ts	/^    readonly MEDIA_RULE: 4;$/;"	v
MEDIUM_FLOAT	tsvscode.ts	/^    readonly MEDIUM_FLOAT: 0x8DF1;$/;"	p	interface:WebGLRenderingContextBase
MEDIUM_FLOAT	tsvscode.ts	/^    readonly MEDIUM_FLOAT: 0x8DF1;$/;"	v
MEDIUM_INT	tsvscode.ts	/^    readonly MEDIUM_INT: 0x8DF4;$/;"	p	interface:WebGLRenderingContextBase
MEDIUM_INT	tsvscode.ts	/^    readonly MEDIUM_INT: 0x8DF4;$/;"	v
MIDIAccess	tsvscode.ts	/^declare var MIDIAccess: {$/;"	v
MIDIAccess	tsvscode.ts	/^interface MIDIAccess extends EventTarget {$/;"	i
MIDIAccessEventMap	tsvscode.ts	/^interface MIDIAccessEventMap {$/;"	i
MIDIConnectionEvent	tsvscode.ts	/^declare var MIDIConnectionEvent: {$/;"	v
MIDIConnectionEvent	tsvscode.ts	/^interface MIDIConnectionEvent extends Event {$/;"	i
MIDIConnectionEventInit	tsvscode.ts	/^interface MIDIConnectionEventInit extends EventInit {$/;"	i
MIDIInput	tsvscode.ts	/^declare var MIDIInput: {$/;"	v
MIDIInput	tsvscode.ts	/^interface MIDIInput extends MIDIPort {$/;"	i
MIDIInputEventMap	tsvscode.ts	/^interface MIDIInputEventMap extends MIDIPortEventMap {$/;"	i
MIDIInputMap	tsvscode.ts	/^declare var MIDIInputMap: {$/;"	v
MIDIInputMap	tsvscode.ts	/^interface MIDIInputMap {$/;"	i
MIDIMessageEvent	tsvscode.ts	/^declare var MIDIMessageEvent: {$/;"	v
MIDIMessageEvent	tsvscode.ts	/^interface MIDIMessageEvent extends Event {$/;"	i
MIDIMessageEventInit	tsvscode.ts	/^interface MIDIMessageEventInit extends EventInit {$/;"	i
MIDIOptions	tsvscode.ts	/^interface MIDIOptions {$/;"	i
MIDIOutput	tsvscode.ts	/^declare var MIDIOutput: {$/;"	v
MIDIOutput	tsvscode.ts	/^interface MIDIOutput extends MIDIPort {$/;"	i
MIDIOutputMap	tsvscode.ts	/^declare var MIDIOutputMap: {$/;"	v
MIDIOutputMap	tsvscode.ts	/^interface MIDIOutputMap {$/;"	i
MIDIPort	tsvscode.ts	/^declare var MIDIPort: {$/;"	v
MIDIPort	tsvscode.ts	/^interface MIDIPort extends EventTarget {$/;"	i
MIDIPortEventMap	tsvscode.ts	/^interface MIDIPortEventMap {$/;"	i
MIN	tsvscode.ts	/^    readonly MIN: 0x8007;$/;"	p	interface:WebGL2RenderingContextBase
MIN	tsvscode.ts	/^    readonly MIN: 0x8007;$/;"	v
MIN_EXT	tsvscode.ts	/^    readonly MIN_EXT: 0x8007;$/;"	p	interface:EXT_blend_minmax
MIN_PROGRAM_TEXEL_OFFSET	tsvscode.ts	/^    readonly MIN_PROGRAM_TEXEL_OFFSET: 0x8904;$/;"	p	interface:WebGL2RenderingContextBase
MIN_PROGRAM_TEXEL_OFFSET	tsvscode.ts	/^    readonly MIN_PROGRAM_TEXEL_OFFSET: 0x8904;$/;"	v
MIN_VALUE	ests.ts	/^    readonly MIN_VALUE: number;$/;"	p	interface:NumberConstructor
MIRRORED_REPEAT	tsvscode.ts	/^    readonly MIRRORED_REPEAT: 0x8370;$/;"	p	interface:WebGLRenderingContextBase
MIRRORED_REPEAT	tsvscode.ts	/^    readonly MIRRORED_REPEAT: 0x8370;$/;"	v
MODIFICATION	tsvscode.ts	/^    readonly MODIFICATION: 1;$/;"	p	interface:MutationEvent
MODIFICATION	tsvscode.ts	/^    readonly MODIFICATION: 1;$/;"	v
Math	ests.ts	/^declare var Math: Math;$/;"	v
Math	ests.ts	/^interface Math {$/;"	i
MathMLElement	tsvscode.ts	/^declare var MathMLElement: {$/;"	v
MathMLElement	tsvscode.ts	/^interface MathMLElement extends Element, ElementCSSInlineStyle, GlobalEventHandlers, HTMLOrSVGEl/;"	i
MathMLElementEventMap	tsvscode.ts	/^interface MathMLElementEventMap extends ElementEventMap, GlobalEventHandlersEventMap {$/;"	i
MathMLElementTagNameMap	tsvscode.ts	/^interface MathMLElementTagNameMap {$/;"	i	namespace:CSS
MediaCapabilities	tsvscode.ts	/^declare var MediaCapabilities: {$/;"	v
MediaCapabilities	tsvscode.ts	/^interface MediaCapabilities {$/;"	i
MediaCapabilitiesDecodingInfo	tsvscode.ts	/^interface MediaCapabilitiesDecodingInfo extends MediaCapabilitiesInfo {$/;"	i
MediaCapabilitiesEncodingInfo	tsvscode.ts	/^interface MediaCapabilitiesEncodingInfo extends MediaCapabilitiesInfo {$/;"	i
MediaCapabilitiesInfo	tsvscode.ts	/^interface MediaCapabilitiesInfo {$/;"	i
MediaConfiguration	tsvscode.ts	/^interface MediaConfiguration {$/;"	i
MediaDecodingConfiguration	tsvscode.ts	/^interface MediaDecodingConfiguration extends MediaConfiguration {$/;"	i
MediaDeviceInfo	tsvscode.ts	/^declare var MediaDeviceInfo: {$/;"	v
MediaDeviceInfo	tsvscode.ts	/^interface MediaDeviceInfo {$/;"	i
MediaDevices	tsvscode.ts	/^declare var MediaDevices: {$/;"	v
MediaDevices	tsvscode.ts	/^interface MediaDevices extends EventTarget {$/;"	i
MediaDevicesEventMap	tsvscode.ts	/^interface MediaDevicesEventMap {$/;"	i
MediaElementAudioSourceNode	tsvscode.ts	/^declare var MediaElementAudioSourceNode: {$/;"	v
MediaElementAudioSourceNode	tsvscode.ts	/^interface MediaElementAudioSourceNode extends AudioNode {$/;"	i
MediaElementAudioSourceOptions	tsvscode.ts	/^interface MediaElementAudioSourceOptions {$/;"	i
MediaEncodingConfiguration	tsvscode.ts	/^interface MediaEncodingConfiguration extends MediaConfiguration {$/;"	i
MediaEncryptedEvent	tsvscode.ts	/^declare var MediaEncryptedEvent: {$/;"	v
MediaEncryptedEvent	tsvscode.ts	/^interface MediaEncryptedEvent extends Event {$/;"	i
MediaEncryptedEventInit	tsvscode.ts	/^interface MediaEncryptedEventInit extends EventInit {$/;"	i
MediaError	tsvscode.ts	/^declare var MediaError: {$/;"	v
MediaError	tsvscode.ts	/^interface MediaError {$/;"	i
MediaImage	tsvscode.ts	/^interface MediaImage {$/;"	i
MediaKeyMessageEvent	tsvscode.ts	/^declare var MediaKeyMessageEvent: {$/;"	v
MediaKeyMessageEvent	tsvscode.ts	/^interface MediaKeyMessageEvent extends Event {$/;"	i
MediaKeyMessageEventInit	tsvscode.ts	/^interface MediaKeyMessageEventInit extends EventInit {$/;"	i
MediaKeySession	tsvscode.ts	/^declare var MediaKeySession: {$/;"	v
MediaKeySession	tsvscode.ts	/^interface MediaKeySession extends EventTarget {$/;"	i
MediaKeySessionEventMap	tsvscode.ts	/^interface MediaKeySessionEventMap {$/;"	i
MediaKeyStatusMap	tsvscode.ts	/^declare var MediaKeyStatusMap: {$/;"	v
MediaKeyStatusMap	tsvscode.ts	/^interface MediaKeyStatusMap {$/;"	i
MediaKeySystemAccess	tsvscode.ts	/^declare var MediaKeySystemAccess: {$/;"	v
MediaKeySystemAccess	tsvscode.ts	/^interface MediaKeySystemAccess {$/;"	i
MediaKeySystemConfiguration	tsvscode.ts	/^interface MediaKeySystemConfiguration {$/;"	i
MediaKeySystemMediaCapability	tsvscode.ts	/^interface MediaKeySystemMediaCapability {$/;"	i
MediaKeys	tsvscode.ts	/^declare var MediaKeys: {$/;"	v
MediaKeys	tsvscode.ts	/^interface MediaKeys {$/;"	i
MediaList	tsvscode.ts	/^declare var MediaList: {$/;"	v
MediaList	tsvscode.ts	/^interface MediaList {$/;"	i
MediaMetadata	tsvscode.ts	/^declare var MediaMetadata: {$/;"	v
MediaMetadata	tsvscode.ts	/^interface MediaMetadata {$/;"	i
MediaMetadataInit	tsvscode.ts	/^interface MediaMetadataInit {$/;"	i
MediaPositionState	tsvscode.ts	/^interface MediaPositionState {$/;"	i
MediaQueryList	tsvscode.ts	/^declare var MediaQueryList: {$/;"	v
MediaQueryList	tsvscode.ts	/^interface MediaQueryList extends EventTarget {$/;"	i
MediaQueryListEvent	tsvscode.ts	/^declare var MediaQueryListEvent: {$/;"	v
MediaQueryListEvent	tsvscode.ts	/^interface MediaQueryListEvent extends Event {$/;"	i
MediaQueryListEventInit	tsvscode.ts	/^interface MediaQueryListEventInit extends EventInit {$/;"	i
MediaQueryListEventMap	tsvscode.ts	/^interface MediaQueryListEventMap {$/;"	i
MediaRecorder	tsvscode.ts	/^declare var MediaRecorder: {$/;"	v
MediaRecorder	tsvscode.ts	/^interface MediaRecorder extends EventTarget {$/;"	i
MediaRecorderEventMap	tsvscode.ts	/^interface MediaRecorderEventMap {$/;"	i
MediaRecorderOptions	tsvscode.ts	/^interface MediaRecorderOptions {$/;"	i
MediaSession	tsvscode.ts	/^declare var MediaSession: {$/;"	v
MediaSession	tsvscode.ts	/^interface MediaSession {$/;"	i
MediaSessionActionDetails	tsvscode.ts	/^interface MediaSessionActionDetails {$/;"	i
MediaSessionActionHandler	tsvscode.ts	/^interface MediaSessionActionHandler {$/;"	i	namespace:CSS
MediaSource	tsvscode.ts	/^declare var MediaSource: {$/;"	v
MediaSource	tsvscode.ts	/^interface MediaSource extends EventTarget {$/;"	i
MediaSourceEventMap	tsvscode.ts	/^interface MediaSourceEventMap {$/;"	i
MediaStream	tsvscode.ts	/^declare var MediaStream: {$/;"	v
MediaStream	tsvscode.ts	/^interface MediaStream extends EventTarget {$/;"	i
MediaStreamAudioDestinationNode	tsvscode.ts	/^declare var MediaStreamAudioDestinationNode: {$/;"	v
MediaStreamAudioDestinationNode	tsvscode.ts	/^interface MediaStreamAudioDestinationNode extends AudioNode {$/;"	i
MediaStreamAudioSourceNode	tsvscode.ts	/^declare var MediaStreamAudioSourceNode: {$/;"	v
MediaStreamAudioSourceNode	tsvscode.ts	/^interface MediaStreamAudioSourceNode extends AudioNode {$/;"	i
MediaStreamAudioSourceOptions	tsvscode.ts	/^interface MediaStreamAudioSourceOptions {$/;"	i
MediaStreamConstraints	tsvscode.ts	/^interface MediaStreamConstraints {$/;"	i
MediaStreamEventMap	tsvscode.ts	/^interface MediaStreamEventMap {$/;"	i
MediaStreamTrack	tsvscode.ts	/^declare var MediaStreamTrack: {$/;"	v
MediaStreamTrack	tsvscode.ts	/^interface MediaStreamTrack extends EventTarget {$/;"	i
MediaStreamTrackEvent	tsvscode.ts	/^declare var MediaStreamTrackEvent: {$/;"	v
MediaStreamTrackEvent	tsvscode.ts	/^interface MediaStreamTrackEvent extends Event {$/;"	i
MediaStreamTrackEventInit	tsvscode.ts	/^interface MediaStreamTrackEventInit extends EventInit {$/;"	i
MediaStreamTrackEventMap	tsvscode.ts	/^interface MediaStreamTrackEventMap {$/;"	i
MediaTrackCapabilities	tsvscode.ts	/^interface MediaTrackCapabilities {$/;"	i
MediaTrackConstraintSet	tsvscode.ts	/^interface MediaTrackConstraintSet {$/;"	i
MediaTrackConstraints	tsvscode.ts	/^interface MediaTrackConstraints extends MediaTrackConstraintSet {$/;"	i
MediaTrackSettings	tsvscode.ts	/^interface MediaTrackSettings {$/;"	i
MediaTrackSupportedConstraints	tsvscode.ts	/^interface MediaTrackSupportedConstraints {$/;"	i
MessageChannel	tsvscode.ts	/^declare var MessageChannel: {$/;"	v
MessageChannel	tsvscode.ts	/^interface MessageChannel {$/;"	i
MessageEvent	tsvscode.ts	/^declare var MessageEvent: {$/;"	v
MessageEvent	tsvscode.ts	/^interface MessageEvent<T = any> extends Event {$/;"	i
MessageEventInit	tsvscode.ts	/^interface MessageEventInit<T = any> extends EventInit {$/;"	i
MessagePort	tsvscode.ts	/^declare var MessagePort: {$/;"	v
MessagePort	tsvscode.ts	/^interface MessagePort extends EventTarget {$/;"	i
MessagePortEventMap	tsvscode.ts	/^interface MessagePortEventMap {$/;"	i
MimeType	tsvscode.ts	/^declare var MimeType: {$/;"	v
MimeType	tsvscode.ts	/^interface MimeType {$/;"	i
MimeTypeArray	tsvscode.ts	/^declare var MimeTypeArray: {$/;"	v
MimeTypeArray	tsvscode.ts	/^interface MimeTypeArray {$/;"	i
MouseEvent	tsvscode.ts	/^declare var MouseEvent: {$/;"	v
MouseEvent	tsvscode.ts	/^interface MouseEvent extends UIEvent {$/;"	i
MouseEventInit	tsvscode.ts	/^interface MouseEventInit extends EventModifierInit {$/;"	i
MultiCacheQueryOptions	tsvscode.ts	/^interface MultiCacheQueryOptions extends CacheQueryOptions {$/;"	i
MutationCallback	tsvscode.ts	/^interface MutationCallback {$/;"	i	namespace:CSS
MutationEvent	tsvscode.ts	/^declare var MutationEvent: {$/;"	v
MutationEvent	tsvscode.ts	/^interface MutationEvent extends Event {$/;"	i
MutationObserver	tsvscode.ts	/^declare var MutationObserver: {$/;"	v
MutationObserver	tsvscode.ts	/^interface MutationObserver {$/;"	i
MutationObserverInit	tsvscode.ts	/^interface MutationObserverInit {$/;"	i
MutationRecord	tsvscode.ts	/^declare var MutationRecord: {$/;"	v
MutationRecord	tsvscode.ts	/^interface MutationRecord {$/;"	i
NAMESPACE_ERR	tsvscode.ts	/^    readonly NAMESPACE_ERR: 14;$/;"	p	interface:DOMException
NAMESPACE_ERR	tsvscode.ts	/^    readonly NAMESPACE_ERR: 14;$/;"	v
NAMESPACE_RULE	tsvscode.ts	/^    readonly NAMESPACE_RULE: 10;$/;"	p	interface:CSSRule
NAMESPACE_RULE	tsvscode.ts	/^    readonly NAMESPACE_RULE: 10;$/;"	v
NEAREST	tsvscode.ts	/^    readonly NEAREST: 0x2600;$/;"	p	interface:WebGLRenderingContextBase
NEAREST	tsvscode.ts	/^    readonly NEAREST: 0x2600;$/;"	v
NEAREST_MIPMAP_LINEAR	tsvscode.ts	/^    readonly NEAREST_MIPMAP_LINEAR: 0x2702;$/;"	p	interface:WebGLRenderingContextBase
NEAREST_MIPMAP_LINEAR	tsvscode.ts	/^    readonly NEAREST_MIPMAP_LINEAR: 0x2702;$/;"	v
NEAREST_MIPMAP_NEAREST	tsvscode.ts	/^    readonly NEAREST_MIPMAP_NEAREST: 0x2700;$/;"	p	interface:WebGLRenderingContextBase
NEAREST_MIPMAP_NEAREST	tsvscode.ts	/^    readonly NEAREST_MIPMAP_NEAREST: 0x2700;$/;"	v
NEGATIVE_INFINITY	ests.ts	/^    readonly NEGATIVE_INFINITY: number;$/;"	p	interface:NumberConstructor
NETWORK_EMPTY	tsvscode.ts	/^    readonly NETWORK_EMPTY: 0;$/;"	p	interface:HTMLMediaElement
NETWORK_EMPTY	tsvscode.ts	/^    readonly NETWORK_EMPTY: 0;$/;"	v
NETWORK_ERR	tsvscode.ts	/^    readonly NETWORK_ERR: 19;$/;"	p	interface:DOMException
NETWORK_ERR	tsvscode.ts	/^    readonly NETWORK_ERR: 19;$/;"	v
NETWORK_IDLE	tsvscode.ts	/^    readonly NETWORK_IDLE: 1;$/;"	p	interface:HTMLMediaElement
NETWORK_IDLE	tsvscode.ts	/^    readonly NETWORK_IDLE: 1;$/;"	v
NETWORK_LOADING	tsvscode.ts	/^    readonly NETWORK_LOADING: 2;$/;"	p	interface:HTMLMediaElement
NETWORK_LOADING	tsvscode.ts	/^    readonly NETWORK_LOADING: 2;$/;"	v
NETWORK_NO_SOURCE	tsvscode.ts	/^    readonly NETWORK_NO_SOURCE: 3;$/;"	p	interface:HTMLMediaElement
NETWORK_NO_SOURCE	tsvscode.ts	/^    readonly NETWORK_NO_SOURCE: 3;$/;"	v
NEVER	tsvscode.ts	/^    readonly NEVER: 0x0200;$/;"	p	interface:WebGLRenderingContextBase
NEVER	tsvscode.ts	/^    readonly NEVER: 0x0200;$/;"	v
NICEST	tsvscode.ts	/^    readonly NICEST: 0x1102;$/;"	p	interface:WebGLRenderingContextBase
NICEST	tsvscode.ts	/^    readonly NICEST: 0x1102;$/;"	v
NONE	tsvscode.ts	/^    readonly NONE: 0;$/;"	p	interface:Event
NONE	tsvscode.ts	/^    readonly NONE: 0;$/;"	p	interface:HTMLTrackElement
NONE	tsvscode.ts	/^    readonly NONE: 0;$/;"	p	interface:WebGLRenderingContextBase
NONE	tsvscode.ts	/^    readonly NONE: 0;$/;"	v
NOTATION_NODE	tsvscode.ts	/^    readonly NOTATION_NODE: 12;$/;"	p	interface:Node
NOTATION_NODE	tsvscode.ts	/^    readonly NOTATION_NODE: 12;$/;"	v
NOTEQUAL	tsvscode.ts	/^    readonly NOTEQUAL: 0x0205;$/;"	p	interface:WebGLRenderingContextBase
NOTEQUAL	tsvscode.ts	/^    readonly NOTEQUAL: 0x0205;$/;"	v
NOT_FOUND_ERR	tsvscode.ts	/^    readonly NOT_FOUND_ERR: 8;$/;"	p	interface:DOMException
NOT_FOUND_ERR	tsvscode.ts	/^    readonly NOT_FOUND_ERR: 8;$/;"	v
NOT_SUPPORTED_ERR	tsvscode.ts	/^    readonly NOT_SUPPORTED_ERR: 9;$/;"	p	interface:DOMException
NOT_SUPPORTED_ERR	tsvscode.ts	/^    readonly NOT_SUPPORTED_ERR: 9;$/;"	v
NO_DATA_ALLOWED_ERR	tsvscode.ts	/^    readonly NO_DATA_ALLOWED_ERR: 6;$/;"	p	interface:DOMException
NO_DATA_ALLOWED_ERR	tsvscode.ts	/^    readonly NO_DATA_ALLOWED_ERR: 6;$/;"	v
NO_ERROR	tsvscode.ts	/^    readonly NO_ERROR: 0;$/;"	p	interface:WebGLRenderingContextBase
NO_ERROR	tsvscode.ts	/^    readonly NO_ERROR: 0;$/;"	v
NO_MODIFICATION_ALLOWED_ERR	tsvscode.ts	/^    readonly NO_MODIFICATION_ALLOWED_ERR: 7;$/;"	p	interface:DOMException
NO_MODIFICATION_ALLOWED_ERR	tsvscode.ts	/^    readonly NO_MODIFICATION_ALLOWED_ERR: 7;$/;"	v
NUMBER_TYPE	tsvscode.ts	/^    readonly NUMBER_TYPE: 1;$/;"	p	interface:XPathResult
NUMBER_TYPE	tsvscode.ts	/^    readonly NUMBER_TYPE: 1;$/;"	v
NaN	ests.ts	/^    readonly NaN: number;$/;"	p	interface:NumberConstructor
NaN	ests.ts	/^declare var NaN: number;$/;"	v
NamedNodeMap	tsvscode.ts	/^declare var NamedNodeMap: {$/;"	v
NamedNodeMap	tsvscode.ts	/^interface NamedNodeMap {$/;"	i
NavigationPreloadManager	tsvscode.ts	/^declare var NavigationPreloadManager: {$/;"	v
NavigationPreloadManager	tsvscode.ts	/^interface NavigationPreloadManager {$/;"	i
NavigationPreloadState	tsvscode.ts	/^interface NavigationPreloadState {$/;"	i
Navigator	tsvscode.ts	/^declare var Navigator: {$/;"	v
Navigator	tsvscode.ts	/^interface Navigator extends NavigatorAutomationInformation, NavigatorBadge, NavigatorConcurrentH/;"	i
NavigatorAutomationInformation	tsvscode.ts	/^interface NavigatorAutomationInformation {$/;"	i
NavigatorBadge	tsvscode.ts	/^interface NavigatorBadge {$/;"	i
NavigatorConcurrentHardware	tsvscode.ts	/^interface NavigatorConcurrentHardware {$/;"	i
NavigatorContentUtils	tsvscode.ts	/^interface NavigatorContentUtils {$/;"	i
NavigatorCookies	tsvscode.ts	/^interface NavigatorCookies {$/;"	i
NavigatorID	tsvscode.ts	/^interface NavigatorID {$/;"	i
NavigatorLanguage	tsvscode.ts	/^interface NavigatorLanguage {$/;"	i
NavigatorLocks	tsvscode.ts	/^interface NavigatorLocks {$/;"	i
NavigatorOnLine	tsvscode.ts	/^interface NavigatorOnLine {$/;"	i
NavigatorPlugins	tsvscode.ts	/^interface NavigatorPlugins {$/;"	i
NavigatorStorage	tsvscode.ts	/^interface NavigatorStorage {$/;"	i
NewableFunction	ests.ts	/^interface NewableFunction extends Function {$/;"	i
NoInfer	ests.ts	/^type NoInfer<T> = intrinsic;$/;"	a
Node	tsvscode.ts	/^declare var Node: {$/;"	v
Node	tsvscode.ts	/^interface Node extends EventTarget {$/;"	i
NodeFilter	tsvscode.ts	/^declare var NodeFilter: {$/;"	v
NodeFilter	tsvscode.ts	/^type NodeFilter = ((node: Node) => number) | { acceptNode(node: Node): number; };$/;"	a
NodeIterator	tsvscode.ts	/^declare var NodeIterator: {$/;"	v
NodeIterator	tsvscode.ts	/^interface NodeIterator {$/;"	i
NodeList	tsvscode.ts	/^declare var NodeList: {$/;"	v
NodeList	tsvscode.ts	/^interface NodeList {$/;"	i
NodeListOf	tsvscode.ts	/^interface NodeListOf<TNode extends Node> extends NodeList {$/;"	i
NonDocumentTypeChildNode	tsvscode.ts	/^interface NonDocumentTypeChildNode {$/;"	i
NonElementParentNode	tsvscode.ts	/^interface NonElementParentNode {$/;"	i
NonNullable	ests.ts	/^type NonNullable<T> = T & {};$/;"	a
Notification	tsvscode.ts	/^declare var Notification: {$/;"	v
Notification	tsvscode.ts	/^interface Notification extends EventTarget {$/;"	i
NotificationEventMap	tsvscode.ts	/^interface NotificationEventMap {$/;"	i
NotificationOptions	tsvscode.ts	/^interface NotificationOptions {$/;"	i
NotificationPermissionCallback	tsvscode.ts	/^interface NotificationPermissionCallback {$/;"	i	namespace:CSS
Number	ests.ts	/^declare var Number: NumberConstructor;$/;"	v
Number	ests.ts	/^interface Number {$/;"	i
NumberConstructor	ests.ts	/^interface NumberConstructor {$/;"	i
NumberFormat	ests.ts	/^    interface NumberFormat {$/;"	i	namespace:Intl
NumberFormat	ests.ts	/^    var NumberFormat: NumberFormatConstructor;$/;"	v	namespace:Intl
NumberFormatConstructor	ests.ts	/^    interface NumberFormatConstructor {$/;"	i	namespace:Intl
NumberFormatOptions	ests.ts	/^    interface NumberFormatOptions {$/;"	i	namespace:Intl
NumberFormatOptionsCurrencyDisplay	ests.ts	/^    type NumberFormatOptionsCurrencyDisplay = keyof NumberFormatOptionsCurrencyDisplayRegistry;$/;"	a	namespace:Intl
NumberFormatOptionsCurrencyDisplayRegistry	ests.ts	/^    interface NumberFormatOptionsCurrencyDisplayRegistry {$/;"	i	namespace:Intl
NumberFormatOptionsCurrencyDisplayRegistry	ests.ts	/^    type NumberFormatOptionsCurrencyDisplay = keyof NumberFormatOptionsCurrencyDisplayRegistry;$/;"	a	namespace:Intl
NumberFormatOptionsStyle	ests.ts	/^    type NumberFormatOptionsStyle = keyof NumberFormatOptionsStyleRegistry;$/;"	a	namespace:Intl
NumberFormatOptionsStyleRegistry	ests.ts	/^    interface NumberFormatOptionsStyleRegistry {$/;"	i	namespace:Intl
NumberFormatOptionsStyleRegistry	ests.ts	/^    type NumberFormatOptionsStyle = keyof NumberFormatOptionsStyleRegistry;$/;"	a	namespace:Intl
NumberFormatOptionsUseGrouping	ests.ts	/^    type NumberFormatOptionsUseGrouping = {} extends NumberFormatOptionsUseGroupingRegistry ? bo/;"	a	namespace:Intl
NumberFormatOptionsUseGroupingRegistry	ests.ts	/^    interface NumberFormatOptionsUseGroupingRegistry {}$/;"	i	namespace:Intl
OBJECT_TYPE	tsvscode.ts	/^    readonly OBJECT_TYPE: 0x9112;$/;"	p	interface:WebGL2RenderingContextBase
OBJECT_TYPE	tsvscode.ts	/^    readonly OBJECT_TYPE: 0x9112;$/;"	v
OES_draw_buffers_indexed	tsvscode.ts	/^interface OES_draw_buffers_indexed {$/;"	i
OES_element_index_uint	tsvscode.ts	/^interface OES_element_index_uint {$/;"	i
OES_fbo_render_mipmap	tsvscode.ts	/^interface OES_fbo_render_mipmap {$/;"	i
OES_standard_derivatives	tsvscode.ts	/^interface OES_standard_derivatives {$/;"	i
OES_texture_float	tsvscode.ts	/^interface OES_texture_float {$/;"	i
OES_texture_float_linear	tsvscode.ts	/^interface OES_texture_float_linear {$/;"	i
OES_texture_half_float	tsvscode.ts	/^interface OES_texture_half_float {$/;"	i
OES_texture_half_float_linear	tsvscode.ts	/^interface OES_texture_half_float_linear {$/;"	i
OES_vertex_array_object	tsvscode.ts	/^interface OES_vertex_array_object {$/;"	i
ONE	tsvscode.ts	/^    readonly ONE: 1;$/;"	p	interface:WebGLRenderingContextBase
ONE	tsvscode.ts	/^    readonly ONE: 1;$/;"	v
ONE_MINUS_CONSTANT_ALPHA	tsvscode.ts	/^    readonly ONE_MINUS_CONSTANT_ALPHA: 0x8004;$/;"	p	interface:WebGLRenderingContextBase
ONE_MINUS_CONSTANT_ALPHA	tsvscode.ts	/^    readonly ONE_MINUS_CONSTANT_ALPHA: 0x8004;$/;"	v
ONE_MINUS_CONSTANT_COLOR	tsvscode.ts	/^    readonly ONE_MINUS_CONSTANT_COLOR: 0x8002;$/;"	p	interface:WebGLRenderingContextBase
ONE_MINUS_CONSTANT_COLOR	tsvscode.ts	/^    readonly ONE_MINUS_CONSTANT_COLOR: 0x8002;$/;"	v
ONE_MINUS_DST_ALPHA	tsvscode.ts	/^    readonly ONE_MINUS_DST_ALPHA: 0x0305;$/;"	p	interface:WebGLRenderingContextBase
ONE_MINUS_DST_ALPHA	tsvscode.ts	/^    readonly ONE_MINUS_DST_ALPHA: 0x0305;$/;"	v
ONE_MINUS_DST_COLOR	tsvscode.ts	/^    readonly ONE_MINUS_DST_COLOR: 0x0307;$/;"	p	interface:WebGLRenderingContextBase
ONE_MINUS_DST_COLOR	tsvscode.ts	/^    readonly ONE_MINUS_DST_COLOR: 0x0307;$/;"	v
ONE_MINUS_SRC_ALPHA	tsvscode.ts	/^    readonly ONE_MINUS_SRC_ALPHA: 0x0303;$/;"	p	interface:WebGLRenderingContextBase
ONE_MINUS_SRC_ALPHA	tsvscode.ts	/^    readonly ONE_MINUS_SRC_ALPHA: 0x0303;$/;"	v
ONE_MINUS_SRC_COLOR	tsvscode.ts	/^    readonly ONE_MINUS_SRC_COLOR: 0x0301;$/;"	p	interface:WebGLRenderingContextBase
ONE_MINUS_SRC_COLOR	tsvscode.ts	/^    readonly ONE_MINUS_SRC_COLOR: 0x0301;$/;"	v
OPEN	tsvscode.ts	/^    readonly OPEN: 1;$/;"	p	interface:EventSource
OPEN	tsvscode.ts	/^    readonly OPEN: 1;$/;"	p	interface:WebSocket
OPEN	tsvscode.ts	/^    readonly OPEN: 1;$/;"	v
OPENED	tsvscode.ts	/^    readonly OPENED: 1;$/;"	p	interface:XMLHttpRequest
OPENED	tsvscode.ts	/^    readonly OPENED: 1;$/;"	v
ORDERED_NODE_ITERATOR_TYPE	tsvscode.ts	/^    readonly ORDERED_NODE_ITERATOR_TYPE: 5;$/;"	p	interface:XPathResult
ORDERED_NODE_ITERATOR_TYPE	tsvscode.ts	/^    readonly ORDERED_NODE_ITERATOR_TYPE: 5;$/;"	v
ORDERED_NODE_SNAPSHOT_TYPE	tsvscode.ts	/^    readonly ORDERED_NODE_SNAPSHOT_TYPE: 7;$/;"	p	interface:XPathResult
ORDERED_NODE_SNAPSHOT_TYPE	tsvscode.ts	/^    readonly ORDERED_NODE_SNAPSHOT_TYPE: 7;$/;"	v
OUT_OF_MEMORY	tsvscode.ts	/^    readonly OUT_OF_MEMORY: 0x0505;$/;"	p	interface:WebGLRenderingContextBase
OUT_OF_MEMORY	tsvscode.ts	/^    readonly OUT_OF_MEMORY: 0x0505;$/;"	v
OVR_multiview2	tsvscode.ts	/^interface OVR_multiview2 {$/;"	i
Object	ests.ts	/^declare var Object: ObjectConstructor;$/;"	v
Object	ests.ts	/^interface Object {$/;"	i
ObjectConstructor	ests.ts	/^interface ObjectConstructor {$/;"	i
OfflineAudioCompletionEvent	tsvscode.ts	/^declare var OfflineAudioCompletionEvent: {$/;"	v
OfflineAudioCompletionEvent	tsvscode.ts	/^interface OfflineAudioCompletionEvent extends Event {$/;"	i
OfflineAudioCompletionEventInit	tsvscode.ts	/^interface OfflineAudioCompletionEventInit extends EventInit {$/;"	i
OfflineAudioContext	tsvscode.ts	/^declare var OfflineAudioContext: {$/;"	v
OfflineAudioContext	tsvscode.ts	/^interface OfflineAudioContext extends BaseAudioContext {$/;"	i
OfflineAudioContextEventMap	tsvscode.ts	/^interface OfflineAudioContextEventMap extends BaseAudioContextEventMap {$/;"	i
OfflineAudioContextOptions	tsvscode.ts	/^interface OfflineAudioContextOptions {$/;"	i
OffscreenCanvas	tsvscode.ts	/^declare var OffscreenCanvas: {$/;"	v
OffscreenCanvas	tsvscode.ts	/^interface OffscreenCanvas extends EventTarget {$/;"	i
OffscreenCanvasEventMap	tsvscode.ts	/^interface OffscreenCanvasEventMap {$/;"	i
OffscreenCanvasRenderingContext2D	tsvscode.ts	/^declare var OffscreenCanvasRenderingContext2D: {$/;"	v
OffscreenCanvasRenderingContext2D	tsvscode.ts	/^interface OffscreenCanvasRenderingContext2D extends CanvasCompositing, CanvasDrawImage, CanvasDr/;"	i
Omit	ests.ts	/^type Omit<T, K extends keyof any> = Pick<T, Exclude<keyof T, K>>;$/;"	a
OmitThisParameter	ests.ts	/^type OmitThisParameter<T> = unknown extends ThisParameterType<T> ? T : T extends (...args: infer/;"	a
OnBeforeUnloadEventHandlerNonNull	tsvscode.ts	/^interface OnBeforeUnloadEventHandlerNonNull {$/;"	i	namespace:CSS
OnErrorEventHandlerNonNull	tsvscode.ts	/^interface OnErrorEventHandlerNonNull {$/;"	i	namespace:CSS
Option	tsvscode.ts	/^declare var Option: {$/;"	v	namespace:CSS
OptionalEffectTiming	tsvscode.ts	/^interface OptionalEffectTiming {$/;"	i
OscillatorNode	tsvscode.ts	/^declare var OscillatorNode: {$/;"	v
OscillatorNode	tsvscode.ts	/^interface OscillatorNode extends AudioScheduledSourceNode {$/;"	i
OscillatorOptions	tsvscode.ts	/^interface OscillatorOptions extends AudioNodeOptions {$/;"	i
OverconstrainedError	tsvscode.ts	/^declare var OverconstrainedError: {$/;"	v
OverconstrainedError	tsvscode.ts	/^interface OverconstrainedError extends DOMException {$/;"	i
PACK_ALIGNMENT	tsvscode.ts	/^    readonly PACK_ALIGNMENT: 0x0D05;$/;"	p	interface:WebGLRenderingContextBase
PACK_ALIGNMENT	tsvscode.ts	/^    readonly PACK_ALIGNMENT: 0x0D05;$/;"	v
PACK_ROW_LENGTH	tsvscode.ts	/^    readonly PACK_ROW_LENGTH: 0x0D02;$/;"	p	interface:WebGL2RenderingContextBase
PACK_ROW_LENGTH	tsvscode.ts	/^    readonly PACK_ROW_LENGTH: 0x0D02;$/;"	v
PACK_SKIP_PIXELS	tsvscode.ts	/^    readonly PACK_SKIP_PIXELS: 0x0D04;$/;"	p	interface:WebGL2RenderingContextBase
PACK_SKIP_PIXELS	tsvscode.ts	/^    readonly PACK_SKIP_PIXELS: 0x0D04;$/;"	v
PACK_SKIP_ROWS	tsvscode.ts	/^    readonly PACK_SKIP_ROWS: 0x0D03;$/;"	p	interface:WebGL2RenderingContextBase
PACK_SKIP_ROWS	tsvscode.ts	/^    readonly PACK_SKIP_ROWS: 0x0D03;$/;"	v
PAGE_RULE	tsvscode.ts	/^    readonly PAGE_RULE: 6;$/;"	p	interface:CSSRule
PAGE_RULE	tsvscode.ts	/^    readonly PAGE_RULE: 6;$/;"	v
PERMISSION_DENIED	tsvscode.ts	/^    readonly PERMISSION_DENIED: 1;$/;"	p	interface:GeolocationPositionError
PERMISSION_DENIED	tsvscode.ts	/^    readonly PERMISSION_DENIED: 1;$/;"	v
PI	ests.ts	/^    readonly PI: number;$/;"	p	interface:Math
PIXEL_PACK_BUFFER	tsvscode.ts	/^    readonly PIXEL_PACK_BUFFER: 0x88EB;$/;"	p	interface:WebGL2RenderingContextBase
PIXEL_PACK_BUFFER	tsvscode.ts	/^    readonly PIXEL_PACK_BUFFER: 0x88EB;$/;"	v
PIXEL_PACK_BUFFER_BINDING	tsvscode.ts	/^    readonly PIXEL_PACK_BUFFER_BINDING: 0x88ED;$/;"	p	interface:WebGL2RenderingContextBase
PIXEL_PACK_BUFFER_BINDING	tsvscode.ts	/^    readonly PIXEL_PACK_BUFFER_BINDING: 0x88ED;$/;"	v
PIXEL_UNPACK_BUFFER	tsvscode.ts	/^    readonly PIXEL_UNPACK_BUFFER: 0x88EC;$/;"	p	interface:WebGL2RenderingContextBase
PIXEL_UNPACK_BUFFER	tsvscode.ts	/^    readonly PIXEL_UNPACK_BUFFER: 0x88EC;$/;"	v
PIXEL_UNPACK_BUFFER_BINDING	tsvscode.ts	/^    readonly PIXEL_UNPACK_BUFFER_BINDING: 0x88EF;$/;"	p	interface:WebGL2RenderingContextBase
PIXEL_UNPACK_BUFFER_BINDING	tsvscode.ts	/^    readonly PIXEL_UNPACK_BUFFER_BINDING: 0x88EF;$/;"	v
POINTS	tsvscode.ts	/^    readonly POINTS: 0x0000;$/;"	p	interface:WebGLRenderingContextBase
POINTS	tsvscode.ts	/^    readonly POINTS: 0x0000;$/;"	v
POLYGON_OFFSET_FACTOR	tsvscode.ts	/^    readonly POLYGON_OFFSET_FACTOR: 0x8038;$/;"	p	interface:WebGLRenderingContextBase
POLYGON_OFFSET_FACTOR	tsvscode.ts	/^    readonly POLYGON_OFFSET_FACTOR: 0x8038;$/;"	v
POLYGON_OFFSET_FILL	tsvscode.ts	/^    readonly POLYGON_OFFSET_FILL: 0x8037;$/;"	p	interface:WebGLRenderingContextBase
POLYGON_OFFSET_FILL	tsvscode.ts	/^    readonly POLYGON_OFFSET_FILL: 0x8037;$/;"	v
POLYGON_OFFSET_UNITS	tsvscode.ts	/^    readonly POLYGON_OFFSET_UNITS: 0x2A00;$/;"	p	interface:WebGLRenderingContextBase
POLYGON_OFFSET_UNITS	tsvscode.ts	/^    readonly POLYGON_OFFSET_UNITS: 0x2A00;$/;"	v
POSITION_UNAVAILABLE	tsvscode.ts	/^    readonly POSITION_UNAVAILABLE: 2;$/;"	p	interface:GeolocationPositionError
POSITION_UNAVAILABLE	tsvscode.ts	/^    readonly POSITION_UNAVAILABLE: 2;$/;"	v
POSITIVE_INFINITY	ests.ts	/^    readonly POSITIVE_INFINITY: number;$/;"	p	interface:NumberConstructor
PROCESSING_INSTRUCTION_NODE	tsvscode.ts	/^    readonly PROCESSING_INSTRUCTION_NODE: 7;$/;"	p	interface:Node
PROCESSING_INSTRUCTION_NODE	tsvscode.ts	/^    readonly PROCESSING_INSTRUCTION_NODE: 7;$/;"	v
PageTransitionEvent	tsvscode.ts	/^declare var PageTransitionEvent: {$/;"	v
PageTransitionEvent	tsvscode.ts	/^interface PageTransitionEvent extends Event {$/;"	i
PageTransitionEventInit	tsvscode.ts	/^interface PageTransitionEventInit extends EventInit {$/;"	i
PannerNode	tsvscode.ts	/^declare var PannerNode: {$/;"	v
PannerNode	tsvscode.ts	/^interface PannerNode extends AudioNode {$/;"	i
PannerOptions	tsvscode.ts	/^interface PannerOptions extends AudioNodeOptions {$/;"	i
Parameters	ests.ts	/^type Parameters<T extends (...args: any) => any> = T extends (...args: infer P) => any ? P : nev/;"	a
ParentNode	tsvscode.ts	/^interface ParentNode extends Node {$/;"	i
Partial	ests.ts	/^type Partial<T> = {$/;"	a
Path2D	tsvscode.ts	/^declare var Path2D: {$/;"	v
Path2D	tsvscode.ts	/^interface Path2D extends CanvasPath {$/;"	i
PaymentCurrencyAmount	tsvscode.ts	/^interface PaymentCurrencyAmount {$/;"	i
PaymentDetailsBase	tsvscode.ts	/^interface PaymentDetailsBase {$/;"	i
PaymentDetailsInit	tsvscode.ts	/^interface PaymentDetailsInit extends PaymentDetailsBase {$/;"	i
PaymentDetailsModifier	tsvscode.ts	/^interface PaymentDetailsModifier {$/;"	i
PaymentDetailsUpdate	tsvscode.ts	/^interface PaymentDetailsUpdate extends PaymentDetailsBase {$/;"	i
PaymentItem	tsvscode.ts	/^interface PaymentItem {$/;"	i
PaymentMethodChangeEvent	tsvscode.ts	/^declare var PaymentMethodChangeEvent: {$/;"	v
PaymentMethodChangeEvent	tsvscode.ts	/^interface PaymentMethodChangeEvent extends PaymentRequestUpdateEvent {$/;"	i
PaymentMethodChangeEventInit	tsvscode.ts	/^interface PaymentMethodChangeEventInit extends PaymentRequestUpdateEventInit {$/;"	i
PaymentMethodData	tsvscode.ts	/^interface PaymentMethodData {$/;"	i
PaymentRequest	tsvscode.ts	/^declare var PaymentRequest: {$/;"	v
PaymentRequest	tsvscode.ts	/^interface PaymentRequest extends EventTarget {$/;"	i
PaymentRequestEventMap	tsvscode.ts	/^interface PaymentRequestEventMap {$/;"	i
PaymentRequestUpdateEvent	tsvscode.ts	/^declare var PaymentRequestUpdateEvent: {$/;"	v
PaymentRequestUpdateEvent	tsvscode.ts	/^interface PaymentRequestUpdateEvent extends Event {$/;"	i
PaymentRequestUpdateEventInit	tsvscode.ts	/^interface PaymentRequestUpdateEventInit extends EventInit {$/;"	i
PaymentResponse	tsvscode.ts	/^declare var PaymentResponse: {$/;"	v
PaymentResponse	tsvscode.ts	/^interface PaymentResponse extends EventTarget {$/;"	i
PaymentValidationErrors	tsvscode.ts	/^interface PaymentValidationErrors {$/;"	i
Pbkdf2Params	tsvscode.ts	/^interface Pbkdf2Params extends Algorithm {$/;"	i
Performance	tsvscode.ts	/^declare var Performance: {$/;"	v
Performance	tsvscode.ts	/^interface Performance extends EventTarget {$/;"	i
PerformanceEntry	tsvscode.ts	/^declare var PerformanceEntry: {$/;"	v
PerformanceEntry	tsvscode.ts	/^interface PerformanceEntry {$/;"	i
PerformanceEventMap	tsvscode.ts	/^interface PerformanceEventMap {$/;"	i
PerformanceEventTiming	tsvscode.ts	/^declare var PerformanceEventTiming: {$/;"	v
PerformanceEventTiming	tsvscode.ts	/^interface PerformanceEventTiming extends PerformanceEntry {$/;"	i
PerformanceMark	tsvscode.ts	/^declare var PerformanceMark: {$/;"	v
PerformanceMark	tsvscode.ts	/^interface PerformanceMark extends PerformanceEntry {$/;"	i
PerformanceMarkOptions	tsvscode.ts	/^interface PerformanceMarkOptions {$/;"	i
PerformanceMeasure	tsvscode.ts	/^declare var PerformanceMeasure: {$/;"	v
PerformanceMeasure	tsvscode.ts	/^interface PerformanceMeasure extends PerformanceEntry {$/;"	i
PerformanceMeasureOptions	tsvscode.ts	/^interface PerformanceMeasureOptions {$/;"	i
PerformanceNavigation	tsvscode.ts	/^declare var PerformanceNavigation: {$/;"	v
PerformanceNavigation	tsvscode.ts	/^interface PerformanceNavigation {$/;"	i
PerformanceNavigationTiming	tsvscode.ts	/^declare var PerformanceNavigationTiming: {$/;"	v
PerformanceNavigationTiming	tsvscode.ts	/^interface PerformanceNavigationTiming extends PerformanceResourceTiming {$/;"	i
PerformanceObserver	tsvscode.ts	/^declare var PerformanceObserver: {$/;"	v
PerformanceObserver	tsvscode.ts	/^interface PerformanceObserver {$/;"	i
PerformanceObserverCallback	tsvscode.ts	/^interface PerformanceObserverCallback {$/;"	i	namespace:CSS
PerformanceObserverEntryList	tsvscode.ts	/^declare var PerformanceObserverEntryList: {$/;"	v
PerformanceObserverEntryList	tsvscode.ts	/^interface PerformanceObserverEntryList {$/;"	i
PerformanceObserverInit	tsvscode.ts	/^interface PerformanceObserverInit {$/;"	i
PerformancePaintTiming	tsvscode.ts	/^declare var PerformancePaintTiming: {$/;"	v
PerformancePaintTiming	tsvscode.ts	/^interface PerformancePaintTiming extends PerformanceEntry {$/;"	i
PerformanceResourceTiming	tsvscode.ts	/^declare var PerformanceResourceTiming: {$/;"	v
PerformanceResourceTiming	tsvscode.ts	/^interface PerformanceResourceTiming extends PerformanceEntry {$/;"	i
PerformanceServerTiming	tsvscode.ts	/^declare var PerformanceServerTiming: {$/;"	v
PerformanceServerTiming	tsvscode.ts	/^interface PerformanceServerTiming {$/;"	i
PerformanceTiming	tsvscode.ts	/^declare var PerformanceTiming: {$/;"	v
PerformanceTiming	tsvscode.ts	/^interface PerformanceTiming {$/;"	i
PeriodicWave	tsvscode.ts	/^declare var PeriodicWave: {$/;"	v
PeriodicWave	tsvscode.ts	/^interface PeriodicWave {$/;"	i
PeriodicWaveConstraints	tsvscode.ts	/^interface PeriodicWaveConstraints {$/;"	i
PeriodicWaveOptions	tsvscode.ts	/^interface PeriodicWaveOptions extends PeriodicWaveConstraints {$/;"	i
PermissionDescriptor	tsvscode.ts	/^interface PermissionDescriptor {$/;"	i
PermissionStatus	tsvscode.ts	/^declare var PermissionStatus: {$/;"	v
PermissionStatus	tsvscode.ts	/^interface PermissionStatus extends EventTarget {$/;"	i
PermissionStatusEventMap	tsvscode.ts	/^interface PermissionStatusEventMap {$/;"	i
Permissions	tsvscode.ts	/^declare var Permissions: {$/;"	v
Permissions	tsvscode.ts	/^interface Permissions {$/;"	i
Pick	ests.ts	/^type Pick<T, K extends keyof T> = {$/;"	a
PictureInPictureEvent	tsvscode.ts	/^declare var PictureInPictureEvent: {$/;"	v
PictureInPictureEvent	tsvscode.ts	/^interface PictureInPictureEvent extends Event {$/;"	i
PictureInPictureEventInit	tsvscode.ts	/^interface PictureInPictureEventInit extends EventInit {$/;"	i
PictureInPictureWindow	tsvscode.ts	/^declare var PictureInPictureWindow: {$/;"	v
PictureInPictureWindow	tsvscode.ts	/^interface PictureInPictureWindow extends EventTarget {$/;"	i
PictureInPictureWindowEventMap	tsvscode.ts	/^interface PictureInPictureWindowEventMap {$/;"	i
PlaneLayout	tsvscode.ts	/^interface PlaneLayout {$/;"	i
Plugin	tsvscode.ts	/^declare var Plugin: {$/;"	v
Plugin	tsvscode.ts	/^interface Plugin {$/;"	i
PluginArray	tsvscode.ts	/^declare var PluginArray: {$/;"	v
PluginArray	tsvscode.ts	/^interface PluginArray {$/;"	i
PointerEvent	tsvscode.ts	/^declare var PointerEvent: {$/;"	v
PointerEvent	tsvscode.ts	/^interface PointerEvent extends MouseEvent {$/;"	i
PointerEventInit	tsvscode.ts	/^interface PointerEventInit extends MouseEventInit {$/;"	i
PopStateEvent	tsvscode.ts	/^declare var PopStateEvent: {$/;"	v
PopStateEvent	tsvscode.ts	/^interface PopStateEvent extends Event {$/;"	i
PopStateEventInit	tsvscode.ts	/^interface PopStateEventInit extends EventInit {$/;"	i
PopoverInvokerElement	tsvscode.ts	/^interface PopoverInvokerElement {$/;"	i
PositionCallback	tsvscode.ts	/^interface PositionCallback {$/;"	i	namespace:CSS
PositionErrorCallback	tsvscode.ts	/^interface PositionErrorCallback {$/;"	i	namespace:CSS
PositionOptions	tsvscode.ts	/^interface PositionOptions {$/;"	i
ProcessingInstruction	tsvscode.ts	/^declare var ProcessingInstruction: {$/;"	v
ProcessingInstruction	tsvscode.ts	/^interface ProcessingInstruction extends CharacterData, LinkStyle {$/;"	i
ProgressEvent	tsvscode.ts	/^declare var ProgressEvent: {$/;"	v
ProgressEvent	tsvscode.ts	/^interface ProgressEvent<T extends EventTarget = EventTarget> extends Event {$/;"	i
ProgressEventInit	tsvscode.ts	/^interface ProgressEventInit extends EventInit {$/;"	i
Promise	ests.ts	/^interface Promise<T> {$/;"	i
PromiseConstructorLike	ests.ts	/^declare type PromiseConstructorLike = new <T>(executor: (resolve: (value: T | PromiseLike<T>) =>/;"	a
PromiseLike	ests.ts	/^interface PromiseLike<T> {$/;"	i
PromiseRejectionEvent	tsvscode.ts	/^declare var PromiseRejectionEvent: {$/;"	v
PromiseRejectionEvent	tsvscode.ts	/^interface PromiseRejectionEvent extends Event {$/;"	i
PromiseRejectionEventInit	tsvscode.ts	/^interface PromiseRejectionEventInit extends EventInit {$/;"	i
PropertyDefinition	tsvscode.ts	/^interface PropertyDefinition {$/;"	i
PropertyDescriptor	ests.ts	/^interface PropertyDescriptor {$/;"	i
PropertyDescriptorMap	ests.ts	/^interface PropertyDescriptorMap {$/;"	i
PropertyIndexedKeyframes	tsvscode.ts	/^interface PropertyIndexedKeyframes {$/;"	i
PropertyKey	ests.ts	/^declare type PropertyKey = string | number | symbol;$/;"	a
PublicKeyCredential	tsvscode.ts	/^declare var PublicKeyCredential: {$/;"	v
PublicKeyCredential	tsvscode.ts	/^interface PublicKeyCredential extends Credential {$/;"	i
PublicKeyCredentialCreationOptions	tsvscode.ts	/^interface PublicKeyCredentialCreationOptions {$/;"	i
PublicKeyCredentialDescriptor	tsvscode.ts	/^interface PublicKeyCredentialDescriptor {$/;"	i
PublicKeyCredentialEntity	tsvscode.ts	/^interface PublicKeyCredentialEntity {$/;"	i
PublicKeyCredentialParameters	tsvscode.ts	/^interface PublicKeyCredentialParameters {$/;"	i
PublicKeyCredentialRequestOptions	tsvscode.ts	/^interface PublicKeyCredentialRequestOptions {$/;"	i
PublicKeyCredentialRpEntity	tsvscode.ts	/^interface PublicKeyCredentialRpEntity extends PublicKeyCredentialEntity {$/;"	i
PublicKeyCredentialUserEntity	tsvscode.ts	/^interface PublicKeyCredentialUserEntity extends PublicKeyCredentialEntity {$/;"	i
PushManager	tsvscode.ts	/^declare var PushManager: {$/;"	v
PushManager	tsvscode.ts	/^interface PushManager {$/;"	i
PushSubscription	tsvscode.ts	/^declare var PushSubscription: {$/;"	v
PushSubscription	tsvscode.ts	/^interface PushSubscription {$/;"	i
PushSubscriptionJSON	tsvscode.ts	/^interface PushSubscriptionJSON {$/;"	i
PushSubscriptionOptions	tsvscode.ts	/^declare var PushSubscriptionOptions: {$/;"	v
PushSubscriptionOptions	tsvscode.ts	/^interface PushSubscriptionOptions {$/;"	i
PushSubscriptionOptionsInit	tsvscode.ts	/^interface PushSubscriptionOptionsInit {$/;"	i
Q	tsvscode.ts	/^    Q?: number;$/;"	p	interface:BiquadFilterOptions
Q	tsvscode.ts	/^    readonly Q: AudioParam;$/;"	p	interface:BiquadFilterNode
QUERY_RESULT	tsvscode.ts	/^    readonly QUERY_RESULT: 0x8866;$/;"	p	interface:WebGL2RenderingContextBase
QUERY_RESULT	tsvscode.ts	/^    readonly QUERY_RESULT: 0x8866;$/;"	v
QUERY_RESULT_AVAILABLE	tsvscode.ts	/^    readonly QUERY_RESULT_AVAILABLE: 0x8867;$/;"	p	interface:WebGL2RenderingContextBase
QUERY_RESULT_AVAILABLE	tsvscode.ts	/^    readonly QUERY_RESULT_AVAILABLE: 0x8867;$/;"	v
QUOTA_EXCEEDED_ERR	tsvscode.ts	/^    readonly QUOTA_EXCEEDED_ERR: 22;$/;"	p	interface:DOMException
QUOTA_EXCEEDED_ERR	tsvscode.ts	/^    readonly QUOTA_EXCEEDED_ERR: 22;$/;"	v
QueuingStrategy	tsvscode.ts	/^interface QueuingStrategy<T = any> {$/;"	i
QueuingStrategyInit	tsvscode.ts	/^interface QueuingStrategyInit {$/;"	i
QueuingStrategySize	tsvscode.ts	/^interface QueuingStrategySize<T = any> {$/;"	i	namespace:CSS
R11F_G11F_B10F	tsvscode.ts	/^    readonly R11F_G11F_B10F: 0x8C3A;$/;"	p	interface:WebGL2RenderingContextBase
R11F_G11F_B10F	tsvscode.ts	/^    readonly R11F_G11F_B10F: 0x8C3A;$/;"	v
R16F	tsvscode.ts	/^    readonly R16F: 0x822D;$/;"	p	interface:WebGL2RenderingContextBase
R16F	tsvscode.ts	/^    readonly R16F: 0x822D;$/;"	v
R16I	tsvscode.ts	/^    readonly R16I: 0x8233;$/;"	p	interface:WebGL2RenderingContextBase
R16I	tsvscode.ts	/^    readonly R16I: 0x8233;$/;"	v
R16UI	tsvscode.ts	/^    readonly R16UI: 0x8234;$/;"	p	interface:WebGL2RenderingContextBase
R16UI	tsvscode.ts	/^    readonly R16UI: 0x8234;$/;"	v
R16_EXT	tsvscode.ts	/^    readonly R16_EXT: 0x822A;$/;"	p	interface:EXT_texture_norm16
R16_SNORM_EXT	tsvscode.ts	/^    readonly R16_SNORM_EXT: 0x8F98;$/;"	p	interface:EXT_texture_norm16
R32F	tsvscode.ts	/^    readonly R32F: 0x822E;$/;"	p	interface:WebGL2RenderingContextBase
R32F	tsvscode.ts	/^    readonly R32F: 0x822E;$/;"	v
R32I	tsvscode.ts	/^    readonly R32I: 0x8235;$/;"	p	interface:WebGL2RenderingContextBase
R32I	tsvscode.ts	/^    readonly R32I: 0x8235;$/;"	v
R32UI	tsvscode.ts	/^    readonly R32UI: 0x8236;$/;"	p	interface:WebGL2RenderingContextBase
R32UI	tsvscode.ts	/^    readonly R32UI: 0x8236;$/;"	v
R8	tsvscode.ts	/^    readonly R8: 0x8229;$/;"	p	interface:WebGL2RenderingContextBase
R8	tsvscode.ts	/^    readonly R8: 0x8229;$/;"	v
R8I	tsvscode.ts	/^    readonly R8I: 0x8231;$/;"	p	interface:WebGL2RenderingContextBase
R8I	tsvscode.ts	/^    readonly R8I: 0x8231;$/;"	v
R8UI	tsvscode.ts	/^    readonly R8UI: 0x8232;$/;"	p	interface:WebGL2RenderingContextBase
R8UI	tsvscode.ts	/^    readonly R8UI: 0x8232;$/;"	v
R8_SNORM	tsvscode.ts	/^    readonly R8_SNORM: 0x8F94;$/;"	p	interface:WebGL2RenderingContextBase
R8_SNORM	tsvscode.ts	/^    readonly R8_SNORM: 0x8F94;$/;"	v
RASTERIZER_DISCARD	tsvscode.ts	/^    readonly RASTERIZER_DISCARD: 0x8C89;$/;"	p	interface:WebGL2RenderingContextBase
RASTERIZER_DISCARD	tsvscode.ts	/^    readonly RASTERIZER_DISCARD: 0x8C89;$/;"	v
READ_BUFFER	tsvscode.ts	/^    readonly READ_BUFFER: 0x0C02;$/;"	p	interface:WebGL2RenderingContextBase
READ_BUFFER	tsvscode.ts	/^    readonly READ_BUFFER: 0x0C02;$/;"	v
READ_FRAMEBUFFER	tsvscode.ts	/^    readonly READ_FRAMEBUFFER: 0x8CA8;$/;"	p	interface:WebGL2RenderingContextBase
READ_FRAMEBUFFER	tsvscode.ts	/^    readonly READ_FRAMEBUFFER: 0x8CA8;$/;"	v
READ_FRAMEBUFFER_BINDING	tsvscode.ts	/^    readonly READ_FRAMEBUFFER_BINDING: 0x8CAA;$/;"	p	interface:WebGL2RenderingContextBase
READ_FRAMEBUFFER_BINDING	tsvscode.ts	/^    readonly READ_FRAMEBUFFER_BINDING: 0x8CAA;$/;"	v
RED	tsvscode.ts	/^    readonly RED: 0x1903;$/;"	p	interface:WebGL2RenderingContextBase
RED	tsvscode.ts	/^    readonly RED: 0x1903;$/;"	v
RED_BITS	tsvscode.ts	/^    readonly RED_BITS: 0x0D52;$/;"	p	interface:WebGLRenderingContextBase
RED_BITS	tsvscode.ts	/^    readonly RED_BITS: 0x0D52;$/;"	v
RED_INTEGER	tsvscode.ts	/^    readonly RED_INTEGER: 0x8D94;$/;"	p	interface:WebGL2RenderingContextBase
RED_INTEGER	tsvscode.ts	/^    readonly RED_INTEGER: 0x8D94;$/;"	v
REMOVAL	tsvscode.ts	/^    readonly REMOVAL: 3;$/;"	p	interface:MutationEvent
REMOVAL	tsvscode.ts	/^    readonly REMOVAL: 3;$/;"	v
RENDERBUFFER	tsvscode.ts	/^    readonly RENDERBUFFER: 0x8D41;$/;"	p	interface:WebGLRenderingContextBase
RENDERBUFFER	tsvscode.ts	/^    readonly RENDERBUFFER: 0x8D41;$/;"	v
RENDERBUFFER_ALPHA_SIZE	tsvscode.ts	/^    readonly RENDERBUFFER_ALPHA_SIZE: 0x8D53;$/;"	p	interface:WebGLRenderingContextBase
RENDERBUFFER_ALPHA_SIZE	tsvscode.ts	/^    readonly RENDERBUFFER_ALPHA_SIZE: 0x8D53;$/;"	v
RENDERBUFFER_BINDING	tsvscode.ts	/^    readonly RENDERBUFFER_BINDING: 0x8CA7;$/;"	p	interface:WebGLRenderingContextBase
RENDERBUFFER_BINDING	tsvscode.ts	/^    readonly RENDERBUFFER_BINDING: 0x8CA7;$/;"	v
RENDERBUFFER_BLUE_SIZE	tsvscode.ts	/^    readonly RENDERBUFFER_BLUE_SIZE: 0x8D52;$/;"	p	interface:WebGLRenderingContextBase
RENDERBUFFER_BLUE_SIZE	tsvscode.ts	/^    readonly RENDERBUFFER_BLUE_SIZE: 0x8D52;$/;"	v
RENDERBUFFER_DEPTH_SIZE	tsvscode.ts	/^    readonly RENDERBUFFER_DEPTH_SIZE: 0x8D54;$/;"	p	interface:WebGLRenderingContextBase
RENDERBUFFER_DEPTH_SIZE	tsvscode.ts	/^    readonly RENDERBUFFER_DEPTH_SIZE: 0x8D54;$/;"	v
RENDERBUFFER_GREEN_SIZE	tsvscode.ts	/^    readonly RENDERBUFFER_GREEN_SIZE: 0x8D51;$/;"	p	interface:WebGLRenderingContextBase
RENDERBUFFER_GREEN_SIZE	tsvscode.ts	/^    readonly RENDERBUFFER_GREEN_SIZE: 0x8D51;$/;"	v
RENDERBUFFER_HEIGHT	tsvscode.ts	/^    readonly RENDERBUFFER_HEIGHT: 0x8D43;$/;"	p	interface:WebGLRenderingContextBase
RENDERBUFFER_HEIGHT	tsvscode.ts	/^    readonly RENDERBUFFER_HEIGHT: 0x8D43;$/;"	v
RENDERBUFFER_INTERNAL_FORMAT	tsvscode.ts	/^    readonly RENDERBUFFER_INTERNAL_FORMAT: 0x8D44;$/;"	p	interface:WebGLRenderingContextBase
RENDERBUFFER_INTERNAL_FORMAT	tsvscode.ts	/^    readonly RENDERBUFFER_INTERNAL_FORMAT: 0x8D44;$/;"	v
RENDERBUFFER_RED_SIZE	tsvscode.ts	/^    readonly RENDERBUFFER_RED_SIZE: 0x8D50;$/;"	p	interface:WebGLRenderingContextBase
RENDERBUFFER_RED_SIZE	tsvscode.ts	/^    readonly RENDERBUFFER_RED_SIZE: 0x8D50;$/;"	v
RENDERBUFFER_SAMPLES	tsvscode.ts	/^    readonly RENDERBUFFER_SAMPLES: 0x8CAB;$/;"	p	interface:WebGL2RenderingContextBase
RENDERBUFFER_SAMPLES	tsvscode.ts	/^    readonly RENDERBUFFER_SAMPLES: 0x8CAB;$/;"	v
RENDERBUFFER_STENCIL_SIZE	tsvscode.ts	/^    readonly RENDERBUFFER_STENCIL_SIZE: 0x8D55;$/;"	p	interface:WebGLRenderingContextBase
RENDERBUFFER_STENCIL_SIZE	tsvscode.ts	/^    readonly RENDERBUFFER_STENCIL_SIZE: 0x8D55;$/;"	v
RENDERBUFFER_WIDTH	tsvscode.ts	/^    readonly RENDERBUFFER_WIDTH: 0x8D42;$/;"	p	interface:WebGLRenderingContextBase
RENDERBUFFER_WIDTH	tsvscode.ts	/^    readonly RENDERBUFFER_WIDTH: 0x8D42;$/;"	v
RENDERER	tsvscode.ts	/^    readonly RENDERER: 0x1F01;$/;"	p	interface:WebGLRenderingContextBase
RENDERER	tsvscode.ts	/^    readonly RENDERER: 0x1F01;$/;"	v
REPEAT	tsvscode.ts	/^    readonly REPEAT: 0x2901;$/;"	p	interface:WebGLRenderingContextBase
REPEAT	tsvscode.ts	/^    readonly REPEAT: 0x2901;$/;"	v
REPLACE	tsvscode.ts	/^    readonly REPLACE: 0x1E01;$/;"	p	interface:WebGLRenderingContextBase
REPLACE	tsvscode.ts	/^    readonly REPLACE: 0x1E01;$/;"	v
RG	tsvscode.ts	/^    readonly RG: 0x8227;$/;"	p	interface:WebGL2RenderingContextBase
RG	tsvscode.ts	/^    readonly RG: 0x8227;$/;"	v
RG16F	tsvscode.ts	/^    readonly RG16F: 0x822F;$/;"	p	interface:WebGL2RenderingContextBase
RG16F	tsvscode.ts	/^    readonly RG16F: 0x822F;$/;"	v
RG16I	tsvscode.ts	/^    readonly RG16I: 0x8239;$/;"	p	interface:WebGL2RenderingContextBase
RG16I	tsvscode.ts	/^    readonly RG16I: 0x8239;$/;"	v
RG16UI	tsvscode.ts	/^    readonly RG16UI: 0x823A;$/;"	p	interface:WebGL2RenderingContextBase
RG16UI	tsvscode.ts	/^    readonly RG16UI: 0x823A;$/;"	v
RG16_EXT	tsvscode.ts	/^    readonly RG16_EXT: 0x822C;$/;"	p	interface:EXT_texture_norm16
RG16_SNORM_EXT	tsvscode.ts	/^    readonly RG16_SNORM_EXT: 0x8F99;$/;"	p	interface:EXT_texture_norm16
RG32F	tsvscode.ts	/^    readonly RG32F: 0x8230;$/;"	p	interface:WebGL2RenderingContextBase
RG32F	tsvscode.ts	/^    readonly RG32F: 0x8230;$/;"	v
RG32I	tsvscode.ts	/^    readonly RG32I: 0x823B;$/;"	p	interface:WebGL2RenderingContextBase
RG32I	tsvscode.ts	/^    readonly RG32I: 0x823B;$/;"	v
RG32UI	tsvscode.ts	/^    readonly RG32UI: 0x823C;$/;"	p	interface:WebGL2RenderingContextBase
RG32UI	tsvscode.ts	/^    readonly RG32UI: 0x823C;$/;"	v
RG8	tsvscode.ts	/^    readonly RG8: 0x822B;$/;"	p	interface:WebGL2RenderingContextBase
RG8	tsvscode.ts	/^    readonly RG8: 0x822B;$/;"	v
RG8I	tsvscode.ts	/^    readonly RG8I: 0x8237;$/;"	p	interface:WebGL2RenderingContextBase
RG8I	tsvscode.ts	/^    readonly RG8I: 0x8237;$/;"	v
RG8UI	tsvscode.ts	/^    readonly RG8UI: 0x8238;$/;"	p	interface:WebGL2RenderingContextBase
RG8UI	tsvscode.ts	/^    readonly RG8UI: 0x8238;$/;"	v
RG8_SNORM	tsvscode.ts	/^    readonly RG8_SNORM: 0x8F95;$/;"	p	interface:WebGL2RenderingContextBase
RG8_SNORM	tsvscode.ts	/^    readonly RG8_SNORM: 0x8F95;$/;"	v
RGB	tsvscode.ts	/^    readonly RGB: 0x1907;$/;"	p	interface:WebGLRenderingContextBase
RGB	tsvscode.ts	/^    readonly RGB: 0x1907;$/;"	v
RGB10_A2	tsvscode.ts	/^    readonly RGB10_A2: 0x8059;$/;"	p	interface:WebGL2RenderingContextBase
RGB10_A2	tsvscode.ts	/^    readonly RGB10_A2: 0x8059;$/;"	v
RGB10_A2UI	tsvscode.ts	/^    readonly RGB10_A2UI: 0x906F;$/;"	p	interface:WebGL2RenderingContextBase
RGB10_A2UI	tsvscode.ts	/^    readonly RGB10_A2UI: 0x906F;$/;"	v
RGB16F	tsvscode.ts	/^    readonly RGB16F: 0x881B;$/;"	p	interface:WebGL2RenderingContextBase
RGB16F	tsvscode.ts	/^    readonly RGB16F: 0x881B;$/;"	v
RGB16F_EXT	tsvscode.ts	/^    readonly RGB16F_EXT: 0x881B;$/;"	p	interface:EXT_color_buffer_half_float
RGB16I	tsvscode.ts	/^    readonly RGB16I: 0x8D89;$/;"	p	interface:WebGL2RenderingContextBase
RGB16I	tsvscode.ts	/^    readonly RGB16I: 0x8D89;$/;"	v
RGB16UI	tsvscode.ts	/^    readonly RGB16UI: 0x8D77;$/;"	p	interface:WebGL2RenderingContextBase
RGB16UI	tsvscode.ts	/^    readonly RGB16UI: 0x8D77;$/;"	v
RGB16_EXT	tsvscode.ts	/^    readonly RGB16_EXT: 0x8054;$/;"	p	interface:EXT_texture_norm16
RGB16_SNORM_EXT	tsvscode.ts	/^    readonly RGB16_SNORM_EXT: 0x8F9A;$/;"	p	interface:EXT_texture_norm16
RGB32F	tsvscode.ts	/^    readonly RGB32F: 0x8815;$/;"	p	interface:WebGL2RenderingContextBase
RGB32F	tsvscode.ts	/^    readonly RGB32F: 0x8815;$/;"	v
RGB32I	tsvscode.ts	/^    readonly RGB32I: 0x8D83;$/;"	p	interface:WebGL2RenderingContextBase
RGB32I	tsvscode.ts	/^    readonly RGB32I: 0x8D83;$/;"	v
RGB32UI	tsvscode.ts	/^    readonly RGB32UI: 0x8D71;$/;"	p	interface:WebGL2RenderingContextBase
RGB32UI	tsvscode.ts	/^    readonly RGB32UI: 0x8D71;$/;"	v
RGB565	tsvscode.ts	/^    readonly RGB565: 0x8D62;$/;"	p	interface:WebGLRenderingContextBase
RGB565	tsvscode.ts	/^    readonly RGB565: 0x8D62;$/;"	v
RGB5_A1	tsvscode.ts	/^    readonly RGB5_A1: 0x8057;$/;"	p	interface:WebGLRenderingContextBase
RGB5_A1	tsvscode.ts	/^    readonly RGB5_A1: 0x8057;$/;"	v
RGB8	tsvscode.ts	/^    readonly RGB8: 0x8051;$/;"	p	interface:WebGL2RenderingContextBase
RGB8	tsvscode.ts	/^    readonly RGB8: 0x8051;$/;"	v
RGB8I	tsvscode.ts	/^    readonly RGB8I: 0x8D8F;$/;"	p	interface:WebGL2RenderingContextBase
RGB8I	tsvscode.ts	/^    readonly RGB8I: 0x8D8F;$/;"	v
RGB8UI	tsvscode.ts	/^    readonly RGB8UI: 0x8D7D;$/;"	p	interface:WebGL2RenderingContextBase
RGB8UI	tsvscode.ts	/^    readonly RGB8UI: 0x8D7D;$/;"	v
RGB8_SNORM	tsvscode.ts	/^    readonly RGB8_SNORM: 0x8F96;$/;"	p	interface:WebGL2RenderingContextBase
RGB8_SNORM	tsvscode.ts	/^    readonly RGB8_SNORM: 0x8F96;$/;"	v
RGB9_E5	tsvscode.ts	/^    readonly RGB9_E5: 0x8C3D;$/;"	p	interface:WebGL2RenderingContextBase
RGB9_E5	tsvscode.ts	/^    readonly RGB9_E5: 0x8C3D;$/;"	v
RGBA	tsvscode.ts	/^    readonly RGBA: 0x1908;$/;"	p	interface:WebGLRenderingContextBase
RGBA	tsvscode.ts	/^    readonly RGBA: 0x1908;$/;"	v
RGBA16F	tsvscode.ts	/^    readonly RGBA16F: 0x881A;$/;"	p	interface:WebGL2RenderingContextBase
RGBA16F	tsvscode.ts	/^    readonly RGBA16F: 0x881A;$/;"	v
RGBA16F_EXT	tsvscode.ts	/^    readonly RGBA16F_EXT: 0x881A;$/;"	p	interface:EXT_color_buffer_half_float
RGBA16I	tsvscode.ts	/^    readonly RGBA16I: 0x8D88;$/;"	p	interface:WebGL2RenderingContextBase
RGBA16I	tsvscode.ts	/^    readonly RGBA16I: 0x8D88;$/;"	v
RGBA16UI	tsvscode.ts	/^    readonly RGBA16UI: 0x8D76;$/;"	p	interface:WebGL2RenderingContextBase
RGBA16UI	tsvscode.ts	/^    readonly RGBA16UI: 0x8D76;$/;"	v
RGBA16_EXT	tsvscode.ts	/^    readonly RGBA16_EXT: 0x805B;$/;"	p	interface:EXT_texture_norm16
RGBA16_SNORM_EXT	tsvscode.ts	/^    readonly RGBA16_SNORM_EXT: 0x8F9B;$/;"	p	interface:EXT_texture_norm16
RGBA32F	tsvscode.ts	/^    readonly RGBA32F: 0x8814;$/;"	p	interface:WebGL2RenderingContextBase
RGBA32F	tsvscode.ts	/^    readonly RGBA32F: 0x8814;$/;"	v
RGBA32F_EXT	tsvscode.ts	/^    readonly RGBA32F_EXT: 0x8814;$/;"	p	interface:WEBGL_color_buffer_float
RGBA32I	tsvscode.ts	/^    readonly RGBA32I: 0x8D82;$/;"	p	interface:WebGL2RenderingContextBase
RGBA32I	tsvscode.ts	/^    readonly RGBA32I: 0x8D82;$/;"	v
RGBA32UI	tsvscode.ts	/^    readonly RGBA32UI: 0x8D70;$/;"	p	interface:WebGL2RenderingContextBase
RGBA32UI	tsvscode.ts	/^    readonly RGBA32UI: 0x8D70;$/;"	v
RGBA4	tsvscode.ts	/^    readonly RGBA4: 0x8056;$/;"	p	interface:WebGLRenderingContextBase
RGBA4	tsvscode.ts	/^    readonly RGBA4: 0x8056;$/;"	v
RGBA8	tsvscode.ts	/^    readonly RGBA8: 0x8058;$/;"	p	interface:WebGLRenderingContextBase
RGBA8	tsvscode.ts	/^    readonly RGBA8: 0x8058;$/;"	v
RGBA8I	tsvscode.ts	/^    readonly RGBA8I: 0x8D8E;$/;"	p	interface:WebGL2RenderingContextBase
RGBA8I	tsvscode.ts	/^    readonly RGBA8I: 0x8D8E;$/;"	v
RGBA8UI	tsvscode.ts	/^    readonly RGBA8UI: 0x8D7C;$/;"	p	interface:WebGL2RenderingContextBase
RGBA8UI	tsvscode.ts	/^    readonly RGBA8UI: 0x8D7C;$/;"	v
RGBA8_SNORM	tsvscode.ts	/^    readonly RGBA8_SNORM: 0x8F97;$/;"	p	interface:WebGL2RenderingContextBase
RGBA8_SNORM	tsvscode.ts	/^    readonly RGBA8_SNORM: 0x8F97;$/;"	v
RGBA_INTEGER	tsvscode.ts	/^    readonly RGBA_INTEGER: 0x8D99;$/;"	p	interface:WebGL2RenderingContextBase
RGBA_INTEGER	tsvscode.ts	/^    readonly RGBA_INTEGER: 0x8D99;$/;"	v
RGB_INTEGER	tsvscode.ts	/^    readonly RGB_INTEGER: 0x8D98;$/;"	p	interface:WebGL2RenderingContextBase
RGB_INTEGER	tsvscode.ts	/^    readonly RGB_INTEGER: 0x8D98;$/;"	v
RG_INTEGER	tsvscode.ts	/^    readonly RG_INTEGER: 0x8228;$/;"	p	interface:WebGL2RenderingContextBase
RG_INTEGER	tsvscode.ts	/^    readonly RG_INTEGER: 0x8228;$/;"	v
RTCAnswerOptions	tsvscode.ts	/^interface RTCAnswerOptions extends RTCOfferAnswerOptions {$/;"	i
RTCCertificate	tsvscode.ts	/^declare var RTCCertificate: {$/;"	v
RTCCertificate	tsvscode.ts	/^interface RTCCertificate {$/;"	i
RTCCertificateExpiration	tsvscode.ts	/^interface RTCCertificateExpiration {$/;"	i
RTCConfiguration	tsvscode.ts	/^interface RTCConfiguration {$/;"	i
RTCDTMFSender	tsvscode.ts	/^declare var RTCDTMFSender: {$/;"	v
RTCDTMFSender	tsvscode.ts	/^interface RTCDTMFSender extends EventTarget {$/;"	i
RTCDTMFSenderEventMap	tsvscode.ts	/^interface RTCDTMFSenderEventMap {$/;"	i
RTCDTMFToneChangeEvent	tsvscode.ts	/^declare var RTCDTMFToneChangeEvent: {$/;"	v
RTCDTMFToneChangeEvent	tsvscode.ts	/^interface RTCDTMFToneChangeEvent extends Event {$/;"	i
RTCDTMFToneChangeEventInit	tsvscode.ts	/^interface RTCDTMFToneChangeEventInit extends EventInit {$/;"	i
RTCDataChannel	tsvscode.ts	/^declare var RTCDataChannel: {$/;"	v
RTCDataChannel	tsvscode.ts	/^interface RTCDataChannel extends EventTarget {$/;"	i
RTCDataChannelEvent	tsvscode.ts	/^declare var RTCDataChannelEvent: {$/;"	v
RTCDataChannelEvent	tsvscode.ts	/^interface RTCDataChannelEvent extends Event {$/;"	i
RTCDataChannelEventInit	tsvscode.ts	/^interface RTCDataChannelEventInit extends EventInit {$/;"	i
RTCDataChannelEventMap	tsvscode.ts	/^interface RTCDataChannelEventMap {$/;"	i
RTCDataChannelInit	tsvscode.ts	/^interface RTCDataChannelInit {$/;"	i
RTCDtlsFingerprint	tsvscode.ts	/^interface RTCDtlsFingerprint {$/;"	i
RTCDtlsTransport	tsvscode.ts	/^declare var RTCDtlsTransport: {$/;"	v
RTCDtlsTransport	tsvscode.ts	/^interface RTCDtlsTransport extends EventTarget {$/;"	i
RTCDtlsTransportEventMap	tsvscode.ts	/^interface RTCDtlsTransportEventMap {$/;"	i
RTCEncodedAudioFrame	tsvscode.ts	/^declare var RTCEncodedAudioFrame: {$/;"	v
RTCEncodedAudioFrame	tsvscode.ts	/^interface RTCEncodedAudioFrame {$/;"	i
RTCEncodedAudioFrameMetadata	tsvscode.ts	/^interface RTCEncodedAudioFrameMetadata {$/;"	i
RTCEncodedVideoFrame	tsvscode.ts	/^declare var RTCEncodedVideoFrame: {$/;"	v
RTCEncodedVideoFrame	tsvscode.ts	/^interface RTCEncodedVideoFrame {$/;"	i
RTCEncodedVideoFrameMetadata	tsvscode.ts	/^interface RTCEncodedVideoFrameMetadata {$/;"	i
RTCError	tsvscode.ts	/^declare var RTCError: {$/;"	v
RTCError	tsvscode.ts	/^interface RTCError extends DOMException {$/;"	i
RTCErrorEvent	tsvscode.ts	/^declare var RTCErrorEvent: {$/;"	v
RTCErrorEvent	tsvscode.ts	/^interface RTCErrorEvent extends Event {$/;"	i
RTCErrorEventInit	tsvscode.ts	/^interface RTCErrorEventInit extends EventInit {$/;"	i
RTCErrorInit	tsvscode.ts	/^interface RTCErrorInit {$/;"	i
RTCIceCandidate	tsvscode.ts	/^declare var RTCIceCandidate: {$/;"	v
RTCIceCandidate	tsvscode.ts	/^interface RTCIceCandidate {$/;"	i
RTCIceCandidateInit	tsvscode.ts	/^interface RTCIceCandidateInit {$/;"	i
RTCIceCandidatePair	tsvscode.ts	/^interface RTCIceCandidatePair {$/;"	i
RTCIceCandidatePairStats	tsvscode.ts	/^interface RTCIceCandidatePairStats extends RTCStats {$/;"	i
RTCIceServer	tsvscode.ts	/^interface RTCIceServer {$/;"	i
RTCIceTransport	tsvscode.ts	/^declare var RTCIceTransport: {$/;"	v
RTCIceTransport	tsvscode.ts	/^interface RTCIceTransport extends EventTarget {$/;"	i
RTCIceTransportEventMap	tsvscode.ts	/^interface RTCIceTransportEventMap {$/;"	i
RTCInboundRtpStreamStats	tsvscode.ts	/^interface RTCInboundRtpStreamStats extends RTCReceivedRtpStreamStats {$/;"	i
RTCLocalSessionDescriptionInit	tsvscode.ts	/^interface RTCLocalSessionDescriptionInit {$/;"	i
RTCOfferAnswerOptions	tsvscode.ts	/^interface RTCOfferAnswerOptions {$/;"	i
RTCOfferOptions	tsvscode.ts	/^interface RTCOfferOptions extends RTCOfferAnswerOptions {$/;"	i
RTCOutboundRtpStreamStats	tsvscode.ts	/^interface RTCOutboundRtpStreamStats extends RTCSentRtpStreamStats {$/;"	i
RTCPeerConnection	tsvscode.ts	/^declare var RTCPeerConnection: {$/;"	v
RTCPeerConnection	tsvscode.ts	/^interface RTCPeerConnection extends EventTarget {$/;"	i
RTCPeerConnectionErrorCallback	tsvscode.ts	/^interface RTCPeerConnectionErrorCallback {$/;"	i	namespace:CSS
RTCPeerConnectionEventMap	tsvscode.ts	/^interface RTCPeerConnectionEventMap {$/;"	i
RTCPeerConnectionIceErrorEvent	tsvscode.ts	/^declare var RTCPeerConnectionIceErrorEvent: {$/;"	v
RTCPeerConnectionIceErrorEvent	tsvscode.ts	/^interface RTCPeerConnectionIceErrorEvent extends Event {$/;"	i
RTCPeerConnectionIceErrorEventInit	tsvscode.ts	/^interface RTCPeerConnectionIceErrorEventInit extends EventInit {$/;"	i
RTCPeerConnectionIceEvent	tsvscode.ts	/^declare var RTCPeerConnectionIceEvent: {$/;"	v
RTCPeerConnectionIceEvent	tsvscode.ts	/^interface RTCPeerConnectionIceEvent extends Event {$/;"	i
RTCPeerConnectionIceEventInit	tsvscode.ts	/^interface RTCPeerConnectionIceEventInit extends EventInit {$/;"	i
RTCReceivedRtpStreamStats	tsvscode.ts	/^interface RTCReceivedRtpStreamStats extends RTCRtpStreamStats {$/;"	i
RTCRtcpParameters	tsvscode.ts	/^interface RTCRtcpParameters {$/;"	i
RTCRtpCapabilities	tsvscode.ts	/^interface RTCRtpCapabilities {$/;"	i
RTCRtpCodec	tsvscode.ts	/^interface RTCRtpCodec {$/;"	i
RTCRtpCodecCapability	tsvscode.ts	/^interface RTCRtpCodecCapability extends RTCRtpCodec {$/;"	i
RTCRtpCodecParameters	tsvscode.ts	/^interface RTCRtpCodecParameters extends RTCRtpCodec {$/;"	i
RTCRtpCodingParameters	tsvscode.ts	/^interface RTCRtpCodingParameters {$/;"	i
RTCRtpContributingSource	tsvscode.ts	/^interface RTCRtpContributingSource {$/;"	i
RTCRtpEncodingParameters	tsvscode.ts	/^interface RTCRtpEncodingParameters extends RTCRtpCodingParameters {$/;"	i
RTCRtpHeaderExtensionCapability	tsvscode.ts	/^interface RTCRtpHeaderExtensionCapability {$/;"	i
RTCRtpHeaderExtensionParameters	tsvscode.ts	/^interface RTCRtpHeaderExtensionParameters {$/;"	i
RTCRtpParameters	tsvscode.ts	/^interface RTCRtpParameters {$/;"	i
RTCRtpReceiveParameters	tsvscode.ts	/^interface RTCRtpReceiveParameters extends RTCRtpParameters {$/;"	i
RTCRtpReceiver	tsvscode.ts	/^declare var RTCRtpReceiver: {$/;"	v
RTCRtpReceiver	tsvscode.ts	/^interface RTCRtpReceiver {$/;"	i
RTCRtpScriptTransform	tsvscode.ts	/^declare var RTCRtpScriptTransform: {$/;"	v
RTCRtpScriptTransform	tsvscode.ts	/^interface RTCRtpScriptTransform {$/;"	i
RTCRtpSendParameters	tsvscode.ts	/^interface RTCRtpSendParameters extends RTCRtpParameters {$/;"	i
RTCRtpSender	tsvscode.ts	/^declare var RTCRtpSender: {$/;"	v
RTCRtpSender	tsvscode.ts	/^interface RTCRtpSender {$/;"	i
RTCRtpStreamStats	tsvscode.ts	/^interface RTCRtpStreamStats extends RTCStats {$/;"	i
RTCRtpSynchronizationSource	tsvscode.ts	/^interface RTCRtpSynchronizationSource extends RTCRtpContributingSource {$/;"	i
RTCRtpTransceiver	tsvscode.ts	/^declare var RTCRtpTransceiver: {$/;"	v
RTCRtpTransceiver	tsvscode.ts	/^interface RTCRtpTransceiver {$/;"	i
RTCRtpTransceiverInit	tsvscode.ts	/^interface RTCRtpTransceiverInit {$/;"	i
RTCSctpTransport	tsvscode.ts	/^declare var RTCSctpTransport: {$/;"	v
RTCSctpTransport	tsvscode.ts	/^interface RTCSctpTransport extends EventTarget {$/;"	i
RTCSctpTransportEventMap	tsvscode.ts	/^interface RTCSctpTransportEventMap {$/;"	i
RTCSentRtpStreamStats	tsvscode.ts	/^interface RTCSentRtpStreamStats extends RTCRtpStreamStats {$/;"	i
RTCSessionDescription	tsvscode.ts	/^declare var RTCSessionDescription: {$/;"	v
RTCSessionDescription	tsvscode.ts	/^interface RTCSessionDescription {$/;"	i
RTCSessionDescriptionCallback	tsvscode.ts	/^interface RTCSessionDescriptionCallback {$/;"	i	namespace:CSS
RTCSessionDescriptionInit	tsvscode.ts	/^interface RTCSessionDescriptionInit {$/;"	i
RTCSetParameterOptions	tsvscode.ts	/^interface RTCSetParameterOptions {$/;"	i
RTCStats	tsvscode.ts	/^interface RTCStats {$/;"	i
RTCStatsReport	tsvscode.ts	/^declare var RTCStatsReport: {$/;"	v
RTCStatsReport	tsvscode.ts	/^interface RTCStatsReport {$/;"	i
RTCTrackEvent	tsvscode.ts	/^declare var RTCTrackEvent: {$/;"	v
RTCTrackEvent	tsvscode.ts	/^interface RTCTrackEvent extends Event {$/;"	i
RTCTrackEventInit	tsvscode.ts	/^interface RTCTrackEventInit extends EventInit {$/;"	i
RTCTransportStats	tsvscode.ts	/^interface RTCTransportStats extends RTCStats {$/;"	i
RadioNodeList	tsvscode.ts	/^declare var RadioNodeList: {$/;"	v
RadioNodeList	tsvscode.ts	/^interface RadioNodeList extends NodeList {$/;"	i
Range	tsvscode.ts	/^declare var Range: {$/;"	v
Range	tsvscode.ts	/^interface Range extends AbstractRange {$/;"	i
RangeError	ests.ts	/^declare var RangeError: RangeErrorConstructor;$/;"	v
RangeError	ests.ts	/^interface RangeError extends Error {$/;"	i
RangeErrorConstructor	ests.ts	/^interface RangeErrorConstructor extends ErrorConstructor {$/;"	i
ReadableByteStreamController	tsvscode.ts	/^declare var ReadableByteStreamController: {$/;"	v
ReadableByteStreamController	tsvscode.ts	/^interface ReadableByteStreamController {$/;"	i
ReadableStream	tsvscode.ts	/^declare var ReadableStream: {$/;"	v
ReadableStream	tsvscode.ts	/^interface ReadableStream<R = any> {$/;"	i
ReadableStreamBYOBReader	tsvscode.ts	/^declare var ReadableStreamBYOBReader: {$/;"	v
ReadableStreamBYOBReader	tsvscode.ts	/^interface ReadableStreamBYOBReader extends ReadableStreamGenericReader {$/;"	i
ReadableStreamBYOBRequest	tsvscode.ts	/^declare var ReadableStreamBYOBRequest: {$/;"	v
ReadableStreamBYOBRequest	tsvscode.ts	/^interface ReadableStreamBYOBRequest {$/;"	i
ReadableStreamDefaultController	tsvscode.ts	/^declare var ReadableStreamDefaultController: {$/;"	v
ReadableStreamDefaultController	tsvscode.ts	/^interface ReadableStreamDefaultController<R = any> {$/;"	i
ReadableStreamDefaultReader	tsvscode.ts	/^declare var ReadableStreamDefaultReader: {$/;"	v
ReadableStreamDefaultReader	tsvscode.ts	/^interface ReadableStreamDefaultReader<R = any> extends ReadableStreamGenericReader {$/;"	i
ReadableStreamGenericReader	tsvscode.ts	/^interface ReadableStreamGenericReader {$/;"	i
ReadableStreamGetReaderOptions	tsvscode.ts	/^interface ReadableStreamGetReaderOptions {$/;"	i
ReadableStreamReadDoneResult	tsvscode.ts	/^interface ReadableStreamReadDoneResult<T> {$/;"	i
ReadableStreamReadValueResult	tsvscode.ts	/^interface ReadableStreamReadValueResult<T> {$/;"	i
ReadableWritablePair	tsvscode.ts	/^interface ReadableWritablePair<R = any, W = any> {$/;"	i
Readonly	ests.ts	/^type Readonly<T> = {$/;"	a
ReadonlyArray	ests.ts	/^interface ReadonlyArray<T> {$/;"	i
Record	ests.ts	/^type Record<K extends keyof any, T> = {$/;"	a
ReferenceError	ests.ts	/^declare var ReferenceError: ReferenceErrorConstructor;$/;"	v
ReferenceError	ests.ts	/^interface ReferenceError extends Error {$/;"	i
ReferenceErrorConstructor	ests.ts	/^interface ReferenceErrorConstructor extends ErrorConstructor {$/;"	i
RegExp	ests.ts	/^declare var RegExp: RegExpConstructor;$/;"	v
RegExp	ests.ts	/^interface RegExp {$/;"	i
RegExpConstructor	ests.ts	/^interface RegExpConstructor {$/;"	i
RegExpExecArray	ests.ts	/^interface RegExpExecArray extends Array<string> {$/;"	i
RegExpMatchArray	ests.ts	/^interface RegExpMatchArray extends Array<string> {$/;"	i
RegistrationOptions	tsvscode.ts	/^interface RegistrationOptions {$/;"	i
RemotePlayback	tsvscode.ts	/^declare var RemotePlayback: {$/;"	v
RemotePlayback	tsvscode.ts	/^interface RemotePlayback extends EventTarget {$/;"	i
RemotePlaybackAvailabilityCallback	tsvscode.ts	/^interface RemotePlaybackAvailabilityCallback {$/;"	i	namespace:CSS
RemotePlaybackEventMap	tsvscode.ts	/^interface RemotePlaybackEventMap {$/;"	i
Report	tsvscode.ts	/^declare var Report: {$/;"	v
Report	tsvscode.ts	/^interface Report {$/;"	i
ReportBody	tsvscode.ts	/^declare var ReportBody: {$/;"	v
ReportBody	tsvscode.ts	/^interface ReportBody {$/;"	i
ReportingObserver	tsvscode.ts	/^declare var ReportingObserver: {$/;"	v
ReportingObserver	tsvscode.ts	/^interface ReportingObserver {$/;"	i
ReportingObserverCallback	tsvscode.ts	/^interface ReportingObserverCallback {$/;"	i	namespace:CSS
ReportingObserverOptions	tsvscode.ts	/^interface ReportingObserverOptions {$/;"	i
Request	tsvscode.ts	/^declare var Request: {$/;"	v
Request	tsvscode.ts	/^interface Request extends Body {$/;"	i
RequestInit	tsvscode.ts	/^interface RequestInit {$/;"	i
Required	ests.ts	/^type Required<T> = {$/;"	a
ResizeObserver	tsvscode.ts	/^declare var ResizeObserver: {$/;"	v
ResizeObserver	tsvscode.ts	/^interface ResizeObserver {$/;"	i
ResizeObserverCallback	tsvscode.ts	/^interface ResizeObserverCallback {$/;"	i	namespace:CSS
ResizeObserverEntry	tsvscode.ts	/^declare var ResizeObserverEntry: {$/;"	v
ResizeObserverEntry	tsvscode.ts	/^interface ResizeObserverEntry {$/;"	i
ResizeObserverOptions	tsvscode.ts	/^interface ResizeObserverOptions {$/;"	i
ResizeObserverSize	tsvscode.ts	/^declare var ResizeObserverSize: {$/;"	v
ResizeObserverSize	tsvscode.ts	/^interface ResizeObserverSize {$/;"	i
ResolvedCollatorOptions	ests.ts	/^    interface ResolvedCollatorOptions {$/;"	i	namespace:Intl
ResolvedDateTimeFormatOptions	ests.ts	/^    interface ResolvedDateTimeFormatOptions {$/;"	i	namespace:Intl
ResolvedNumberFormatOptions	ests.ts	/^    interface ResolvedNumberFormatOptions {$/;"	i	namespace:Intl
ResolvedNumberFormatOptionsUseGrouping	ests.ts	/^    type ResolvedNumberFormatOptionsUseGrouping = {} extends NumberFormatOptionsUseGroupingRegis/;"	a	namespace:Intl
Response	tsvscode.ts	/^declare var Response: {$/;"	v
Response	tsvscode.ts	/^interface Response extends Body {$/;"	i
ResponseInit	tsvscode.ts	/^interface ResponseInit {$/;"	i
ReturnType	ests.ts	/^type ReturnType<T extends (...args: any) => any> = T extends (...args: any) => infer R ? R : any/;"	a
RsaHashedImportParams	tsvscode.ts	/^interface RsaHashedImportParams extends Algorithm {$/;"	i
RsaHashedKeyAlgorithm	tsvscode.ts	/^interface RsaHashedKeyAlgorithm extends RsaKeyAlgorithm {$/;"	i
RsaHashedKeyGenParams	tsvscode.ts	/^interface RsaHashedKeyGenParams extends RsaKeyGenParams {$/;"	i
RsaKeyAlgorithm	tsvscode.ts	/^interface RsaKeyAlgorithm extends KeyAlgorithm {$/;"	i
RsaKeyGenParams	tsvscode.ts	/^interface RsaKeyGenParams extends Algorithm {$/;"	i
RsaOaepParams	tsvscode.ts	/^interface RsaOaepParams extends Algorithm {$/;"	i
RsaOtherPrimesInfo	tsvscode.ts	/^interface RsaOtherPrimesInfo {$/;"	i
RsaPssParams	tsvscode.ts	/^interface RsaPssParams extends Algorithm {$/;"	i
S	ests.ts	/^    every<S extends T>(predicate: (value: T, index: number, array: T[]) => value is S, thisArg?:/;"	p	interface:Array
S	ests.ts	/^    every<S extends T>(predicate: (value: T, index: number, array: readonly T[]) => value is S, /;"	p	interface:ReadonlyArray
SAMPLER_2D	tsvscode.ts	/^    readonly SAMPLER_2D: 0x8B5E;$/;"	p	interface:WebGLRenderingContextBase
SAMPLER_2D	tsvscode.ts	/^    readonly SAMPLER_2D: 0x8B5E;$/;"	v
SAMPLER_2D_ARRAY	tsvscode.ts	/^    readonly SAMPLER_2D_ARRAY: 0x8DC1;$/;"	p	interface:WebGL2RenderingContextBase
SAMPLER_2D_ARRAY	tsvscode.ts	/^    readonly SAMPLER_2D_ARRAY: 0x8DC1;$/;"	v
SAMPLER_2D_ARRAY_SHADOW	tsvscode.ts	/^    readonly SAMPLER_2D_ARRAY_SHADOW: 0x8DC4;$/;"	p	interface:WebGL2RenderingContextBase
SAMPLER_2D_ARRAY_SHADOW	tsvscode.ts	/^    readonly SAMPLER_2D_ARRAY_SHADOW: 0x8DC4;$/;"	v
SAMPLER_2D_SHADOW	tsvscode.ts	/^    readonly SAMPLER_2D_SHADOW: 0x8B62;$/;"	p	interface:WebGL2RenderingContextBase
SAMPLER_2D_SHADOW	tsvscode.ts	/^    readonly SAMPLER_2D_SHADOW: 0x8B62;$/;"	v
SAMPLER_3D	tsvscode.ts	/^    readonly SAMPLER_3D: 0x8B5F;$/;"	p	interface:WebGL2RenderingContextBase
SAMPLER_3D	tsvscode.ts	/^    readonly SAMPLER_3D: 0x8B5F;$/;"	v
SAMPLER_BINDING	tsvscode.ts	/^    readonly SAMPLER_BINDING: 0x8919;$/;"	p	interface:WebGL2RenderingContextBase
SAMPLER_BINDING	tsvscode.ts	/^    readonly SAMPLER_BINDING: 0x8919;$/;"	v
SAMPLER_CUBE	tsvscode.ts	/^    readonly SAMPLER_CUBE: 0x8B60;$/;"	p	interface:WebGLRenderingContextBase
SAMPLER_CUBE	tsvscode.ts	/^    readonly SAMPLER_CUBE: 0x8B60;$/;"	v
SAMPLER_CUBE_SHADOW	tsvscode.ts	/^    readonly SAMPLER_CUBE_SHADOW: 0x8DC5;$/;"	p	interface:WebGL2RenderingContextBase
SAMPLER_CUBE_SHADOW	tsvscode.ts	/^    readonly SAMPLER_CUBE_SHADOW: 0x8DC5;$/;"	v
SAMPLES	tsvscode.ts	/^    readonly SAMPLES: 0x80A9;$/;"	p	interface:WebGLRenderingContextBase
SAMPLES	tsvscode.ts	/^    readonly SAMPLES: 0x80A9;$/;"	v
SAMPLE_ALPHA_TO_COVERAGE	tsvscode.ts	/^    readonly SAMPLE_ALPHA_TO_COVERAGE: 0x809E;$/;"	p	interface:WebGLRenderingContextBase
SAMPLE_ALPHA_TO_COVERAGE	tsvscode.ts	/^    readonly SAMPLE_ALPHA_TO_COVERAGE: 0x809E;$/;"	v
SAMPLE_BUFFERS	tsvscode.ts	/^    readonly SAMPLE_BUFFERS: 0x80A8;$/;"	p	interface:WebGLRenderingContextBase
SAMPLE_BUFFERS	tsvscode.ts	/^    readonly SAMPLE_BUFFERS: 0x80A8;$/;"	v
SAMPLE_COVERAGE	tsvscode.ts	/^    readonly SAMPLE_COVERAGE: 0x80A0;$/;"	p	interface:WebGLRenderingContextBase
SAMPLE_COVERAGE	tsvscode.ts	/^    readonly SAMPLE_COVERAGE: 0x80A0;$/;"	v
SAMPLE_COVERAGE_INVERT	tsvscode.ts	/^    readonly SAMPLE_COVERAGE_INVERT: 0x80AB;$/;"	p	interface:WebGLRenderingContextBase
SAMPLE_COVERAGE_INVERT	tsvscode.ts	/^    readonly SAMPLE_COVERAGE_INVERT: 0x80AB;$/;"	v
SAMPLE_COVERAGE_VALUE	tsvscode.ts	/^    readonly SAMPLE_COVERAGE_VALUE: 0x80AA;$/;"	p	interface:WebGLRenderingContextBase
SAMPLE_COVERAGE_VALUE	tsvscode.ts	/^    readonly SAMPLE_COVERAGE_VALUE: 0x80AA;$/;"	v
SCISSOR_BOX	tsvscode.ts	/^    readonly SCISSOR_BOX: 0x0C10;$/;"	p	interface:WebGLRenderingContextBase
SCISSOR_BOX	tsvscode.ts	/^    readonly SCISSOR_BOX: 0x0C10;$/;"	v
SCISSOR_TEST	tsvscode.ts	/^    readonly SCISSOR_TEST: 0x0C11;$/;"	p	interface:WebGLRenderingContextBase
SCISSOR_TEST	tsvscode.ts	/^    readonly SCISSOR_TEST: 0x0C11;$/;"	v
SECURITY_ERR	tsvscode.ts	/^    readonly SECURITY_ERR: 18;$/;"	p	interface:DOMException
SECURITY_ERR	tsvscode.ts	/^    readonly SECURITY_ERR: 18;$/;"	v
SEPARATE_ATTRIBS	tsvscode.ts	/^    readonly SEPARATE_ATTRIBS: 0x8C8D;$/;"	p	interface:WebGL2RenderingContextBase
SEPARATE_ATTRIBS	tsvscode.ts	/^    readonly SEPARATE_ATTRIBS: 0x8C8D;$/;"	v
SHADER_TYPE	tsvscode.ts	/^    readonly SHADER_TYPE: 0x8B4F;$/;"	p	interface:WebGLRenderingContextBase
SHADER_TYPE	tsvscode.ts	/^    readonly SHADER_TYPE: 0x8B4F;$/;"	v
SHADING_LANGUAGE_VERSION	tsvscode.ts	/^    readonly SHADING_LANGUAGE_VERSION: 0x8B8C;$/;"	p	interface:WebGLRenderingContextBase
SHADING_LANGUAGE_VERSION	tsvscode.ts	/^    readonly SHADING_LANGUAGE_VERSION: 0x8B8C;$/;"	v
SHORT	tsvscode.ts	/^    readonly SHORT: 0x1402;$/;"	p	interface:WebGLRenderingContextBase
SHORT	tsvscode.ts	/^    readonly SHORT: 0x1402;$/;"	v
SHOW_ALL	tsvscode.ts	/^    readonly SHOW_ALL: 0xFFFFFFFF;$/;"	v
SHOW_ATTRIBUTE	tsvscode.ts	/^    readonly SHOW_ATTRIBUTE: 0x2;$/;"	v
SHOW_CDATA_SECTION	tsvscode.ts	/^    readonly SHOW_CDATA_SECTION: 0x8;$/;"	v
SHOW_COMMENT	tsvscode.ts	/^    readonly SHOW_COMMENT: 0x80;$/;"	v
SHOW_DOCUMENT	tsvscode.ts	/^    readonly SHOW_DOCUMENT: 0x100;$/;"	v
SHOW_DOCUMENT_FRAGMENT	tsvscode.ts	/^    readonly SHOW_DOCUMENT_FRAGMENT: 0x400;$/;"	v
SHOW_DOCUMENT_TYPE	tsvscode.ts	/^    readonly SHOW_DOCUMENT_TYPE: 0x200;$/;"	v
SHOW_ELEMENT	tsvscode.ts	/^    readonly SHOW_ELEMENT: 0x1;$/;"	v
SHOW_ENTITY	tsvscode.ts	/^    readonly SHOW_ENTITY: 0x20;$/;"	v
SHOW_ENTITY_REFERENCE	tsvscode.ts	/^    readonly SHOW_ENTITY_REFERENCE: 0x10;$/;"	v
SHOW_NOTATION	tsvscode.ts	/^    readonly SHOW_NOTATION: 0x800;$/;"	v
SHOW_PROCESSING_INSTRUCTION	tsvscode.ts	/^    readonly SHOW_PROCESSING_INSTRUCTION: 0x40;$/;"	v
SHOW_TEXT	tsvscode.ts	/^    readonly SHOW_TEXT: 0x4;$/;"	v
SIGNALED	tsvscode.ts	/^    readonly SIGNALED: 0x9119;$/;"	p	interface:WebGL2RenderingContextBase
SIGNALED	tsvscode.ts	/^    readonly SIGNALED: 0x9119;$/;"	v
SIGNED_NORMALIZED	tsvscode.ts	/^    readonly SIGNED_NORMALIZED: 0x8F9C;$/;"	p	interface:WebGL2RenderingContextBase
SIGNED_NORMALIZED	tsvscode.ts	/^    readonly SIGNED_NORMALIZED: 0x8F9C;$/;"	v
SQRT1_2	ests.ts	/^    readonly SQRT1_2: number;$/;"	p	interface:Math
SQRT2	ests.ts	/^    readonly SQRT2: number;$/;"	p	interface:Math
SRC_ALPHA	tsvscode.ts	/^    readonly SRC_ALPHA: 0x0302;$/;"	p	interface:WebGLRenderingContextBase
SRC_ALPHA	tsvscode.ts	/^    readonly SRC_ALPHA: 0x0302;$/;"	v
SRC_ALPHA_SATURATE	tsvscode.ts	/^    readonly SRC_ALPHA_SATURATE: 0x0308;$/;"	p	interface:WebGLRenderingContextBase
SRC_ALPHA_SATURATE	tsvscode.ts	/^    readonly SRC_ALPHA_SATURATE: 0x0308;$/;"	v
SRC_COLOR	tsvscode.ts	/^    readonly SRC_COLOR: 0x0300;$/;"	p	interface:WebGLRenderingContextBase
SRC_COLOR	tsvscode.ts	/^    readonly SRC_COLOR: 0x0300;$/;"	v
SRGB	tsvscode.ts	/^    readonly SRGB: 0x8C40;$/;"	p	interface:WebGL2RenderingContextBase
SRGB	tsvscode.ts	/^    readonly SRGB: 0x8C40;$/;"	v
SRGB8	tsvscode.ts	/^    readonly SRGB8: 0x8C41;$/;"	p	interface:WebGL2RenderingContextBase
SRGB8	tsvscode.ts	/^    readonly SRGB8: 0x8C41;$/;"	v
SRGB8_ALPHA8	tsvscode.ts	/^    readonly SRGB8_ALPHA8: 0x8C43;$/;"	p	interface:WebGL2RenderingContextBase
SRGB8_ALPHA8	tsvscode.ts	/^    readonly SRGB8_ALPHA8: 0x8C43;$/;"	v
SRGB8_ALPHA8_EXT	tsvscode.ts	/^    readonly SRGB8_ALPHA8_EXT: 0x8C43;$/;"	p	interface:EXT_sRGB
SRGB_ALPHA_EXT	tsvscode.ts	/^    readonly SRGB_ALPHA_EXT: 0x8C42;$/;"	p	interface:EXT_sRGB
SRGB_EXT	tsvscode.ts	/^    readonly SRGB_EXT: 0x8C40;$/;"	p	interface:EXT_sRGB
START_TO_END	tsvscode.ts	/^    readonly START_TO_END: 1;$/;"	p	interface:Range
START_TO_END	tsvscode.ts	/^    readonly START_TO_END: 1;$/;"	v
START_TO_START	tsvscode.ts	/^    readonly START_TO_START: 0;$/;"	p	interface:Range
START_TO_START	tsvscode.ts	/^    readonly START_TO_START: 0;$/;"	v
STATIC_COPY	tsvscode.ts	/^    readonly STATIC_COPY: 0x88E6;$/;"	p	interface:WebGL2RenderingContextBase
STATIC_COPY	tsvscode.ts	/^    readonly STATIC_COPY: 0x88E6;$/;"	v
STATIC_DRAW	tsvscode.ts	/^    readonly STATIC_DRAW: 0x88E4;$/;"	p	interface:WebGLRenderingContextBase
STATIC_DRAW	tsvscode.ts	/^    readonly STATIC_DRAW: 0x88E4;$/;"	v
STATIC_READ	tsvscode.ts	/^    readonly STATIC_READ: 0x88E5;$/;"	p	interface:WebGL2RenderingContextBase
STATIC_READ	tsvscode.ts	/^    readonly STATIC_READ: 0x88E5;$/;"	v
STENCIL	tsvscode.ts	/^    readonly STENCIL: 0x1802;$/;"	p	interface:WebGL2RenderingContextBase
STENCIL	tsvscode.ts	/^    readonly STENCIL: 0x1802;$/;"	v
STENCIL_ATTACHMENT	tsvscode.ts	/^    readonly STENCIL_ATTACHMENT: 0x8D20;$/;"	p	interface:WebGLRenderingContextBase
STENCIL_ATTACHMENT	tsvscode.ts	/^    readonly STENCIL_ATTACHMENT: 0x8D20;$/;"	v
STENCIL_BACK_FAIL	tsvscode.ts	/^    readonly STENCIL_BACK_FAIL: 0x8801;$/;"	p	interface:WebGLRenderingContextBase
STENCIL_BACK_FAIL	tsvscode.ts	/^    readonly STENCIL_BACK_FAIL: 0x8801;$/;"	v
STENCIL_BACK_FUNC	tsvscode.ts	/^    readonly STENCIL_BACK_FUNC: 0x8800;$/;"	p	interface:WebGLRenderingContextBase
STENCIL_BACK_FUNC	tsvscode.ts	/^    readonly STENCIL_BACK_FUNC: 0x8800;$/;"	v
STENCIL_BACK_PASS_DEPTH_FAIL	tsvscode.ts	/^    readonly STENCIL_BACK_PASS_DEPTH_FAIL: 0x8802;$/;"	p	interface:WebGLRenderingContextBase
STENCIL_BACK_PASS_DEPTH_FAIL	tsvscode.ts	/^    readonly STENCIL_BACK_PASS_DEPTH_FAIL: 0x8802;$/;"	v
STENCIL_BACK_PASS_DEPTH_PASS	tsvscode.ts	/^    readonly STENCIL_BACK_PASS_DEPTH_PASS: 0x8803;$/;"	p	interface:WebGLRenderingContextBase
STENCIL_BACK_PASS_DEPTH_PASS	tsvscode.ts	/^    readonly STENCIL_BACK_PASS_DEPTH_PASS: 0x8803;$/;"	v
STENCIL_BACK_REF	tsvscode.ts	/^    readonly STENCIL_BACK_REF: 0x8CA3;$/;"	p	interface:WebGLRenderingContextBase
STENCIL_BACK_REF	tsvscode.ts	/^    readonly STENCIL_BACK_REF: 0x8CA3;$/;"	v
STENCIL_BACK_VALUE_MASK	tsvscode.ts	/^    readonly STENCIL_BACK_VALUE_MASK: 0x8CA4;$/;"	p	interface:WebGLRenderingContextBase
STENCIL_BACK_VALUE_MASK	tsvscode.ts	/^    readonly STENCIL_BACK_VALUE_MASK: 0x8CA4;$/;"	v
STENCIL_BACK_WRITEMASK	tsvscode.ts	/^    readonly STENCIL_BACK_WRITEMASK: 0x8CA5;$/;"	p	interface:WebGLRenderingContextBase
STENCIL_BACK_WRITEMASK	tsvscode.ts	/^    readonly STENCIL_BACK_WRITEMASK: 0x8CA5;$/;"	v
STENCIL_BITS	tsvscode.ts	/^    readonly STENCIL_BITS: 0x0D57;$/;"	p	interface:WebGLRenderingContextBase
STENCIL_BITS	tsvscode.ts	/^    readonly STENCIL_BITS: 0x0D57;$/;"	v
STENCIL_BUFFER_BIT	tsvscode.ts	/^    readonly STENCIL_BUFFER_BIT: 0x00000400;$/;"	p	interface:WebGLRenderingContextBase
STENCIL_BUFFER_BIT	tsvscode.ts	/^    readonly STENCIL_BUFFER_BIT: 0x00000400;$/;"	v
STENCIL_CLEAR_VALUE	tsvscode.ts	/^    readonly STENCIL_CLEAR_VALUE: 0x0B91;$/;"	p	interface:WebGLRenderingContextBase
STENCIL_CLEAR_VALUE	tsvscode.ts	/^    readonly STENCIL_CLEAR_VALUE: 0x0B91;$/;"	v
STENCIL_FAIL	tsvscode.ts	/^    readonly STENCIL_FAIL: 0x0B94;$/;"	p	interface:WebGLRenderingContextBase
STENCIL_FAIL	tsvscode.ts	/^    readonly STENCIL_FAIL: 0x0B94;$/;"	v
STENCIL_FUNC	tsvscode.ts	/^    readonly STENCIL_FUNC: 0x0B92;$/;"	p	interface:WebGLRenderingContextBase
STENCIL_FUNC	tsvscode.ts	/^    readonly STENCIL_FUNC: 0x0B92;$/;"	v
STENCIL_INDEX8	tsvscode.ts	/^    readonly STENCIL_INDEX8: 0x8D48;$/;"	p	interface:WebGLRenderingContextBase
STENCIL_INDEX8	tsvscode.ts	/^    readonly STENCIL_INDEX8: 0x8D48;$/;"	v
STENCIL_PASS_DEPTH_FAIL	tsvscode.ts	/^    readonly STENCIL_PASS_DEPTH_FAIL: 0x0B95;$/;"	p	interface:WebGLRenderingContextBase
STENCIL_PASS_DEPTH_FAIL	tsvscode.ts	/^    readonly STENCIL_PASS_DEPTH_FAIL: 0x0B95;$/;"	v
STENCIL_PASS_DEPTH_PASS	tsvscode.ts	/^    readonly STENCIL_PASS_DEPTH_PASS: 0x0B96;$/;"	p	interface:WebGLRenderingContextBase
STENCIL_PASS_DEPTH_PASS	tsvscode.ts	/^    readonly STENCIL_PASS_DEPTH_PASS: 0x0B96;$/;"	v
STENCIL_REF	tsvscode.ts	/^    readonly STENCIL_REF: 0x0B97;$/;"	p	interface:WebGLRenderingContextBase
STENCIL_REF	tsvscode.ts	/^    readonly STENCIL_REF: 0x0B97;$/;"	v
STENCIL_TEST	tsvscode.ts	/^    readonly STENCIL_TEST: 0x0B90;$/;"	p	interface:WebGLRenderingContextBase
STENCIL_TEST	tsvscode.ts	/^    readonly STENCIL_TEST: 0x0B90;$/;"	v
STENCIL_VALUE_MASK	tsvscode.ts	/^    readonly STENCIL_VALUE_MASK: 0x0B93;$/;"	p	interface:WebGLRenderingContextBase
STENCIL_VALUE_MASK	tsvscode.ts	/^    readonly STENCIL_VALUE_MASK: 0x0B93;$/;"	v
STENCIL_WRITEMASK	tsvscode.ts	/^    readonly STENCIL_WRITEMASK: 0x0B98;$/;"	p	interface:WebGLRenderingContextBase
STENCIL_WRITEMASK	tsvscode.ts	/^    readonly STENCIL_WRITEMASK: 0x0B98;$/;"	v
STREAM_COPY	tsvscode.ts	/^    readonly STREAM_COPY: 0x88E2;$/;"	p	interface:WebGL2RenderingContextBase
STREAM_COPY	tsvscode.ts	/^    readonly STREAM_COPY: 0x88E2;$/;"	v
STREAM_DRAW	tsvscode.ts	/^    readonly STREAM_DRAW: 0x88E0;$/;"	p	interface:WebGLRenderingContextBase
STREAM_DRAW	tsvscode.ts	/^    readonly STREAM_DRAW: 0x88E0;$/;"	v
STREAM_READ	tsvscode.ts	/^    readonly STREAM_READ: 0x88E1;$/;"	p	interface:WebGL2RenderingContextBase
STREAM_READ	tsvscode.ts	/^    readonly STREAM_READ: 0x88E1;$/;"	v
STRING_TYPE	tsvscode.ts	/^    readonly STRING_TYPE: 2;$/;"	p	interface:XPathResult
STRING_TYPE	tsvscode.ts	/^    readonly STRING_TYPE: 2;$/;"	v
STYLE_RULE	tsvscode.ts	/^    readonly STYLE_RULE: 1;$/;"	p	interface:CSSRule
STYLE_RULE	tsvscode.ts	/^    readonly STYLE_RULE: 1;$/;"	v
SUBPIXEL_BITS	tsvscode.ts	/^    readonly SUBPIXEL_BITS: 0x0D50;$/;"	p	interface:WebGLRenderingContextBase
SUBPIXEL_BITS	tsvscode.ts	/^    readonly SUBPIXEL_BITS: 0x0D50;$/;"	v
SUPPORTS_RULE	tsvscode.ts	/^    readonly SUPPORTS_RULE: 12;$/;"	p	interface:CSSRule
SUPPORTS_RULE	tsvscode.ts	/^    readonly SUPPORTS_RULE: 12;$/;"	v
SVGAElement	tsvscode.ts	/^declare var SVGAElement: {$/;"	v
SVGAElement	tsvscode.ts	/^interface SVGAElement extends SVGGraphicsElement, SVGURIReference {$/;"	i
SVGAngle	tsvscode.ts	/^declare var SVGAngle: {$/;"	v
SVGAngle	tsvscode.ts	/^interface SVGAngle {$/;"	i
SVGAnimateElement	tsvscode.ts	/^declare var SVGAnimateElement: {$/;"	v
SVGAnimateElement	tsvscode.ts	/^interface SVGAnimateElement extends SVGAnimationElement {$/;"	i
SVGAnimateMotionElement	tsvscode.ts	/^declare var SVGAnimateMotionElement: {$/;"	v
SVGAnimateMotionElement	tsvscode.ts	/^interface SVGAnimateMotionElement extends SVGAnimationElement {$/;"	i
SVGAnimateTransformElement	tsvscode.ts	/^declare var SVGAnimateTransformElement: {$/;"	v
SVGAnimateTransformElement	tsvscode.ts	/^interface SVGAnimateTransformElement extends SVGAnimationElement {$/;"	i
SVGAnimatedAngle	tsvscode.ts	/^declare var SVGAnimatedAngle: {$/;"	v
SVGAnimatedAngle	tsvscode.ts	/^interface SVGAnimatedAngle {$/;"	i
SVGAnimatedBoolean	tsvscode.ts	/^declare var SVGAnimatedBoolean: {$/;"	v
SVGAnimatedBoolean	tsvscode.ts	/^interface SVGAnimatedBoolean {$/;"	i
SVGAnimatedEnumeration	tsvscode.ts	/^declare var SVGAnimatedEnumeration: {$/;"	v
SVGAnimatedEnumeration	tsvscode.ts	/^interface SVGAnimatedEnumeration {$/;"	i
SVGAnimatedInteger	tsvscode.ts	/^declare var SVGAnimatedInteger: {$/;"	v
SVGAnimatedInteger	tsvscode.ts	/^interface SVGAnimatedInteger {$/;"	i
SVGAnimatedLength	tsvscode.ts	/^declare var SVGAnimatedLength: {$/;"	v
SVGAnimatedLength	tsvscode.ts	/^interface SVGAnimatedLength {$/;"	i
SVGAnimatedLengthList	tsvscode.ts	/^declare var SVGAnimatedLengthList: {$/;"	v
SVGAnimatedLengthList	tsvscode.ts	/^interface SVGAnimatedLengthList {$/;"	i
SVGAnimatedNumber	tsvscode.ts	/^declare var SVGAnimatedNumber: {$/;"	v
SVGAnimatedNumber	tsvscode.ts	/^interface SVGAnimatedNumber {$/;"	i
SVGAnimatedNumberList	tsvscode.ts	/^declare var SVGAnimatedNumberList: {$/;"	v
SVGAnimatedNumberList	tsvscode.ts	/^interface SVGAnimatedNumberList {$/;"	i
SVGAnimatedPoints	tsvscode.ts	/^interface SVGAnimatedPoints {$/;"	i
SVGAnimatedPreserveAspectRatio	tsvscode.ts	/^declare var SVGAnimatedPreserveAspectRatio: {$/;"	v
SVGAnimatedPreserveAspectRatio	tsvscode.ts	/^interface SVGAnimatedPreserveAspectRatio {$/;"	i
SVGAnimatedRect	tsvscode.ts	/^declare var SVGAnimatedRect: {$/;"	v
SVGAnimatedRect	tsvscode.ts	/^interface SVGAnimatedRect {$/;"	i
SVGAnimatedString	tsvscode.ts	/^declare var SVGAnimatedString: {$/;"	v
SVGAnimatedString	tsvscode.ts	/^interface SVGAnimatedString {$/;"	i
SVGAnimatedTransformList	tsvscode.ts	/^declare var SVGAnimatedTransformList: {$/;"	v
SVGAnimatedTransformList	tsvscode.ts	/^interface SVGAnimatedTransformList {$/;"	i
SVGAnimationElement	tsvscode.ts	/^declare var SVGAnimationElement: {$/;"	v
SVGAnimationElement	tsvscode.ts	/^interface SVGAnimationElement extends SVGElement, SVGTests {$/;"	i
SVGBoundingBoxOptions	tsvscode.ts	/^interface SVGBoundingBoxOptions {$/;"	i
SVGCircleElement	tsvscode.ts	/^declare var SVGCircleElement: {$/;"	v
SVGCircleElement	tsvscode.ts	/^interface SVGCircleElement extends SVGGeometryElement {$/;"	i
SVGClipPathElement	tsvscode.ts	/^declare var SVGClipPathElement: {$/;"	v
SVGClipPathElement	tsvscode.ts	/^interface SVGClipPathElement extends SVGElement {$/;"	i
SVGComponentTransferFunctionElement	tsvscode.ts	/^declare var SVGComponentTransferFunctionElement: {$/;"	v
SVGComponentTransferFunctionElement	tsvscode.ts	/^interface SVGComponentTransferFunctionElement extends SVGElement {$/;"	i
SVGDefsElement	tsvscode.ts	/^declare var SVGDefsElement: {$/;"	v
SVGDefsElement	tsvscode.ts	/^interface SVGDefsElement extends SVGGraphicsElement {$/;"	i
SVGDescElement	tsvscode.ts	/^declare var SVGDescElement: {$/;"	v
SVGDescElement	tsvscode.ts	/^interface SVGDescElement extends SVGElement {$/;"	i
SVGElement	tsvscode.ts	/^declare var SVGElement: {$/;"	v
SVGElement	tsvscode.ts	/^interface SVGElement extends Element, ElementCSSInlineStyle, GlobalEventHandlers, HTMLOrSVGEleme/;"	i
SVGElementEventMap	tsvscode.ts	/^interface SVGElementEventMap extends ElementEventMap, GlobalEventHandlersEventMap {$/;"	i
SVGElementTagNameMap	tsvscode.ts	/^interface SVGElementTagNameMap {$/;"	i	namespace:CSS
SVGEllipseElement	tsvscode.ts	/^declare var SVGEllipseElement: {$/;"	v
SVGEllipseElement	tsvscode.ts	/^interface SVGEllipseElement extends SVGGeometryElement {$/;"	i
SVGFEBlendElement	tsvscode.ts	/^declare var SVGFEBlendElement: {$/;"	v
SVGFEBlendElement	tsvscode.ts	/^interface SVGFEBlendElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {$/;"	i
SVGFEColorMatrixElement	tsvscode.ts	/^declare var SVGFEColorMatrixElement: {$/;"	v
SVGFEColorMatrixElement	tsvscode.ts	/^interface SVGFEColorMatrixElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {$/;"	i
SVGFEComponentTransferElement	tsvscode.ts	/^declare var SVGFEComponentTransferElement: {$/;"	v
SVGFEComponentTransferElement	tsvscode.ts	/^interface SVGFEComponentTransferElement extends SVGElement, SVGFilterPrimitiveStandardAttributes/;"	i
SVGFECompositeElement	tsvscode.ts	/^declare var SVGFECompositeElement: {$/;"	v
SVGFECompositeElement	tsvscode.ts	/^interface SVGFECompositeElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {$/;"	i
SVGFEConvolveMatrixElement	tsvscode.ts	/^declare var SVGFEConvolveMatrixElement: {$/;"	v
SVGFEConvolveMatrixElement	tsvscode.ts	/^interface SVGFEConvolveMatrixElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {$/;"	i
SVGFEDiffuseLightingElement	tsvscode.ts	/^declare var SVGFEDiffuseLightingElement: {$/;"	v
SVGFEDiffuseLightingElement	tsvscode.ts	/^interface SVGFEDiffuseLightingElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {$/;"	i
SVGFEDisplacementMapElement	tsvscode.ts	/^declare var SVGFEDisplacementMapElement: {$/;"	v
SVGFEDisplacementMapElement	tsvscode.ts	/^interface SVGFEDisplacementMapElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {$/;"	i
SVGFEDistantLightElement	tsvscode.ts	/^declare var SVGFEDistantLightElement: {$/;"	v
SVGFEDistantLightElement	tsvscode.ts	/^interface SVGFEDistantLightElement extends SVGElement {$/;"	i
SVGFEDropShadowElement	tsvscode.ts	/^declare var SVGFEDropShadowElement: {$/;"	v
SVGFEDropShadowElement	tsvscode.ts	/^interface SVGFEDropShadowElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {$/;"	i
SVGFEFloodElement	tsvscode.ts	/^declare var SVGFEFloodElement: {$/;"	v
SVGFEFloodElement	tsvscode.ts	/^interface SVGFEFloodElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {$/;"	i
SVGFEFuncAElement	tsvscode.ts	/^declare var SVGFEFuncAElement: {$/;"	v
SVGFEFuncAElement	tsvscode.ts	/^interface SVGFEFuncAElement extends SVGComponentTransferFunctionElement {$/;"	i
SVGFEFuncBElement	tsvscode.ts	/^declare var SVGFEFuncBElement: {$/;"	v
SVGFEFuncBElement	tsvscode.ts	/^interface SVGFEFuncBElement extends SVGComponentTransferFunctionElement {$/;"	i
SVGFEFuncGElement	tsvscode.ts	/^declare var SVGFEFuncGElement: {$/;"	v
SVGFEFuncGElement	tsvscode.ts	/^interface SVGFEFuncGElement extends SVGComponentTransferFunctionElement {$/;"	i
SVGFEFuncRElement	tsvscode.ts	/^declare var SVGFEFuncRElement: {$/;"	v
SVGFEFuncRElement	tsvscode.ts	/^interface SVGFEFuncRElement extends SVGComponentTransferFunctionElement {$/;"	i
SVGFEGaussianBlurElement	tsvscode.ts	/^declare var SVGFEGaussianBlurElement: {$/;"	v
SVGFEGaussianBlurElement	tsvscode.ts	/^interface SVGFEGaussianBlurElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {$/;"	i
SVGFEImageElement	tsvscode.ts	/^declare var SVGFEImageElement: {$/;"	v
SVGFEImageElement	tsvscode.ts	/^interface SVGFEImageElement extends SVGElement, SVGFilterPrimitiveStandardAttributes, SVGURIRefe/;"	i
SVGFEMergeElement	tsvscode.ts	/^declare var SVGFEMergeElement: {$/;"	v
SVGFEMergeElement	tsvscode.ts	/^interface SVGFEMergeElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {$/;"	i
SVGFEMergeNodeElement	tsvscode.ts	/^declare var SVGFEMergeNodeElement: {$/;"	v
SVGFEMergeNodeElement	tsvscode.ts	/^interface SVGFEMergeNodeElement extends SVGElement {$/;"	i
SVGFEMorphologyElement	tsvscode.ts	/^declare var SVGFEMorphologyElement: {$/;"	v
SVGFEMorphologyElement	tsvscode.ts	/^interface SVGFEMorphologyElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {$/;"	i
SVGFEOffsetElement	tsvscode.ts	/^declare var SVGFEOffsetElement: {$/;"	v
SVGFEOffsetElement	tsvscode.ts	/^interface SVGFEOffsetElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {$/;"	i
SVGFEPointLightElement	tsvscode.ts	/^declare var SVGFEPointLightElement: {$/;"	v
SVGFEPointLightElement	tsvscode.ts	/^interface SVGFEPointLightElement extends SVGElement {$/;"	i
SVGFESpecularLightingElement	tsvscode.ts	/^declare var SVGFESpecularLightingElement: {$/;"	v
SVGFESpecularLightingElement	tsvscode.ts	/^interface SVGFESpecularLightingElement extends SVGElement, SVGFilterPrimitiveStandardAttributes /;"	i
SVGFESpotLightElement	tsvscode.ts	/^declare var SVGFESpotLightElement: {$/;"	v
SVGFESpotLightElement	tsvscode.ts	/^interface SVGFESpotLightElement extends SVGElement {$/;"	i
SVGFETileElement	tsvscode.ts	/^declare var SVGFETileElement: {$/;"	v
SVGFETileElement	tsvscode.ts	/^interface SVGFETileElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {$/;"	i
SVGFETurbulenceElement	tsvscode.ts	/^declare var SVGFETurbulenceElement: {$/;"	v
SVGFETurbulenceElement	tsvscode.ts	/^interface SVGFETurbulenceElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {$/;"	i
SVGFilterElement	tsvscode.ts	/^declare var SVGFilterElement: {$/;"	v
SVGFilterElement	tsvscode.ts	/^interface SVGFilterElement extends SVGElement, SVGURIReference {$/;"	i
SVGFilterPrimitiveStandardAttributes	tsvscode.ts	/^interface SVGFilterPrimitiveStandardAttributes {$/;"	i
SVGFitToViewBox	tsvscode.ts	/^interface SVGFitToViewBox {$/;"	i
SVGForeignObjectElement	tsvscode.ts	/^declare var SVGForeignObjectElement: {$/;"	v
SVGForeignObjectElement	tsvscode.ts	/^interface SVGForeignObjectElement extends SVGGraphicsElement {$/;"	i
SVGGElement	tsvscode.ts	/^declare var SVGGElement: {$/;"	v
SVGGElement	tsvscode.ts	/^interface SVGGElement extends SVGGraphicsElement {$/;"	i
SVGGeometryElement	tsvscode.ts	/^declare var SVGGeometryElement: {$/;"	v
SVGGeometryElement	tsvscode.ts	/^interface SVGGeometryElement extends SVGGraphicsElement {$/;"	i
SVGGradientElement	tsvscode.ts	/^declare var SVGGradientElement: {$/;"	v
SVGGradientElement	tsvscode.ts	/^interface SVGGradientElement extends SVGElement, SVGURIReference {$/;"	i
SVGGraphicsElement	tsvscode.ts	/^declare var SVGGraphicsElement: {$/;"	v
SVGGraphicsElement	tsvscode.ts	/^interface SVGGraphicsElement extends SVGElement, SVGTests {$/;"	i
SVGImageElement	tsvscode.ts	/^declare var SVGImageElement: {$/;"	v
SVGImageElement	tsvscode.ts	/^interface SVGImageElement extends SVGGraphicsElement, SVGURIReference {$/;"	i
SVGLength	tsvscode.ts	/^declare var SVGLength: {$/;"	v
SVGLength	tsvscode.ts	/^interface SVGLength {$/;"	i
SVGLengthList	tsvscode.ts	/^declare var SVGLengthList: {$/;"	v
SVGLengthList	tsvscode.ts	/^interface SVGLengthList {$/;"	i
SVGLineElement	tsvscode.ts	/^declare var SVGLineElement: {$/;"	v
SVGLineElement	tsvscode.ts	/^interface SVGLineElement extends SVGGeometryElement {$/;"	i
SVGLinearGradientElement	tsvscode.ts	/^declare var SVGLinearGradientElement: {$/;"	v
SVGLinearGradientElement	tsvscode.ts	/^interface SVGLinearGradientElement extends SVGGradientElement {$/;"	i
SVGMPathElement	tsvscode.ts	/^declare var SVGMPathElement: {$/;"	v
SVGMPathElement	tsvscode.ts	/^interface SVGMPathElement extends SVGElement, SVGURIReference {$/;"	i
SVGMarkerElement	tsvscode.ts	/^declare var SVGMarkerElement: {$/;"	v
SVGMarkerElement	tsvscode.ts	/^interface SVGMarkerElement extends SVGElement, SVGFitToViewBox {$/;"	i
SVGMaskElement	tsvscode.ts	/^declare var SVGMaskElement: {$/;"	v
SVGMaskElement	tsvscode.ts	/^interface SVGMaskElement extends SVGElement {$/;"	i
SVGMatrix	tsvscode.ts	/^declare var SVGMatrix: typeof DOMMatrix;$/;"	v
SVGMatrix	tsvscode.ts	/^type SVGMatrix = DOMMatrix;$/;"	a
SVGMetadataElement	tsvscode.ts	/^declare var SVGMetadataElement: {$/;"	v
SVGMetadataElement	tsvscode.ts	/^interface SVGMetadataElement extends SVGElement {$/;"	i
SVGNumber	tsvscode.ts	/^declare var SVGNumber: {$/;"	v
SVGNumber	tsvscode.ts	/^interface SVGNumber {$/;"	i
SVGNumberList	tsvscode.ts	/^declare var SVGNumberList: {$/;"	v
SVGNumberList	tsvscode.ts	/^interface SVGNumberList {$/;"	i
SVGPathElement	tsvscode.ts	/^declare var SVGPathElement: {$/;"	v
SVGPathElement	tsvscode.ts	/^interface SVGPathElement extends SVGGeometryElement {$/;"	i
SVGPatternElement	tsvscode.ts	/^declare var SVGPatternElement: {$/;"	v
SVGPatternElement	tsvscode.ts	/^interface SVGPatternElement extends SVGElement, SVGFitToViewBox, SVGURIReference {$/;"	i
SVGPoint	tsvscode.ts	/^declare var SVGPoint: typeof DOMPoint;$/;"	v
SVGPoint	tsvscode.ts	/^type SVGPoint = DOMPoint;$/;"	a
SVGPointList	tsvscode.ts	/^declare var SVGPointList: {$/;"	v
SVGPointList	tsvscode.ts	/^interface SVGPointList {$/;"	i
SVGPolygonElement	tsvscode.ts	/^declare var SVGPolygonElement: {$/;"	v
SVGPolygonElement	tsvscode.ts	/^interface SVGPolygonElement extends SVGGeometryElement, SVGAnimatedPoints {$/;"	i
SVGPolylineElement	tsvscode.ts	/^declare var SVGPolylineElement: {$/;"	v
SVGPolylineElement	tsvscode.ts	/^interface SVGPolylineElement extends SVGGeometryElement, SVGAnimatedPoints {$/;"	i
SVGPreserveAspectRatio	tsvscode.ts	/^declare var SVGPreserveAspectRatio: {$/;"	v
SVGPreserveAspectRatio	tsvscode.ts	/^interface SVGPreserveAspectRatio {$/;"	i
SVGRadialGradientElement	tsvscode.ts	/^declare var SVGRadialGradientElement: {$/;"	v
SVGRadialGradientElement	tsvscode.ts	/^interface SVGRadialGradientElement extends SVGGradientElement {$/;"	i
SVGRect	tsvscode.ts	/^declare var SVGRect: typeof DOMRect;$/;"	v
SVGRect	tsvscode.ts	/^type SVGRect = DOMRect;$/;"	a
SVGRectElement	tsvscode.ts	/^declare var SVGRectElement: {$/;"	v
SVGRectElement	tsvscode.ts	/^interface SVGRectElement extends SVGGeometryElement {$/;"	i
SVGSVGElement	tsvscode.ts	/^declare var SVGSVGElement: {$/;"	v
SVGSVGElement	tsvscode.ts	/^interface SVGSVGElement extends SVGGraphicsElement, SVGFitToViewBox, WindowEventHandlers {$/;"	i
SVGSVGElementEventMap	tsvscode.ts	/^interface SVGSVGElementEventMap extends SVGElementEventMap, WindowEventHandlersEventMap {$/;"	i
SVGScriptElement	tsvscode.ts	/^declare var SVGScriptElement: {$/;"	v
SVGScriptElement	tsvscode.ts	/^interface SVGScriptElement extends SVGElement, SVGURIReference {$/;"	i
SVGSetElement	tsvscode.ts	/^declare var SVGSetElement: {$/;"	v
SVGSetElement	tsvscode.ts	/^interface SVGSetElement extends SVGAnimationElement {$/;"	i
SVGStopElement	tsvscode.ts	/^declare var SVGStopElement: {$/;"	v
SVGStopElement	tsvscode.ts	/^interface SVGStopElement extends SVGElement {$/;"	i
SVGStringList	tsvscode.ts	/^declare var SVGStringList: {$/;"	v
SVGStringList	tsvscode.ts	/^interface SVGStringList {$/;"	i
SVGStyleElement	tsvscode.ts	/^declare var SVGStyleElement: {$/;"	v
SVGStyleElement	tsvscode.ts	/^interface SVGStyleElement extends SVGElement, LinkStyle {$/;"	i
SVGSwitchElement	tsvscode.ts	/^declare var SVGSwitchElement: {$/;"	v
SVGSwitchElement	tsvscode.ts	/^interface SVGSwitchElement extends SVGGraphicsElement {$/;"	i
SVGSymbolElement	tsvscode.ts	/^declare var SVGSymbolElement: {$/;"	v
SVGSymbolElement	tsvscode.ts	/^interface SVGSymbolElement extends SVGElement, SVGFitToViewBox {$/;"	i
SVGTSpanElement	tsvscode.ts	/^declare var SVGTSpanElement: {$/;"	v
SVGTSpanElement	tsvscode.ts	/^interface SVGTSpanElement extends SVGTextPositioningElement {$/;"	i
SVGTests	tsvscode.ts	/^interface SVGTests {$/;"	i
SVGTextContentElement	tsvscode.ts	/^declare var SVGTextContentElement: {$/;"	v
SVGTextContentElement	tsvscode.ts	/^interface SVGTextContentElement extends SVGGraphicsElement {$/;"	i
SVGTextElement	tsvscode.ts	/^declare var SVGTextElement: {$/;"	v
SVGTextElement	tsvscode.ts	/^interface SVGTextElement extends SVGTextPositioningElement {$/;"	i
SVGTextPathElement	tsvscode.ts	/^declare var SVGTextPathElement: {$/;"	v
SVGTextPathElement	tsvscode.ts	/^interface SVGTextPathElement extends SVGTextContentElement, SVGURIReference {$/;"	i
SVGTextPositioningElement	tsvscode.ts	/^declare var SVGTextPositioningElement: {$/;"	v
SVGTextPositioningElement	tsvscode.ts	/^interface SVGTextPositioningElement extends SVGTextContentElement {$/;"	i
SVGTitleElement	tsvscode.ts	/^declare var SVGTitleElement: {$/;"	v
SVGTitleElement	tsvscode.ts	/^interface SVGTitleElement extends SVGElement {$/;"	i
SVGTransform	tsvscode.ts	/^declare var SVGTransform: {$/;"	v
SVGTransform	tsvscode.ts	/^interface SVGTransform {$/;"	i
SVGTransformList	tsvscode.ts	/^declare var SVGTransformList: {$/;"	v
SVGTransformList	tsvscode.ts	/^interface SVGTransformList {$/;"	i
SVGURIReference	tsvscode.ts	/^interface SVGURIReference {$/;"	i
SVGUnitTypes	tsvscode.ts	/^declare var SVGUnitTypes: {$/;"	v
SVGUnitTypes	tsvscode.ts	/^interface SVGUnitTypes {$/;"	i
SVGUseElement	tsvscode.ts	/^declare var SVGUseElement: {$/;"	v
SVGUseElement	tsvscode.ts	/^interface SVGUseElement extends SVGGraphicsElement, SVGURIReference {$/;"	i
SVGViewElement	tsvscode.ts	/^declare var SVGViewElement: {$/;"	v
SVGViewElement	tsvscode.ts	/^interface SVGViewElement extends SVGElement, SVGFitToViewBox {$/;"	i
SVG_ANGLETYPE_DEG	tsvscode.ts	/^    readonly SVG_ANGLETYPE_DEG: 2;$/;"	p	interface:SVGAngle
SVG_ANGLETYPE_DEG	tsvscode.ts	/^    readonly SVG_ANGLETYPE_DEG: 2;$/;"	v
SVG_ANGLETYPE_GRAD	tsvscode.ts	/^    readonly SVG_ANGLETYPE_GRAD: 4;$/;"	p	interface:SVGAngle
SVG_ANGLETYPE_GRAD	tsvscode.ts	/^    readonly SVG_ANGLETYPE_GRAD: 4;$/;"	v
SVG_ANGLETYPE_RAD	tsvscode.ts	/^    readonly SVG_ANGLETYPE_RAD: 3;$/;"	p	interface:SVGAngle
SVG_ANGLETYPE_RAD	tsvscode.ts	/^    readonly SVG_ANGLETYPE_RAD: 3;$/;"	v
SVG_ANGLETYPE_UNKNOWN	tsvscode.ts	/^    readonly SVG_ANGLETYPE_UNKNOWN: 0;$/;"	p	interface:SVGAngle
SVG_ANGLETYPE_UNKNOWN	tsvscode.ts	/^    readonly SVG_ANGLETYPE_UNKNOWN: 0;$/;"	v
SVG_ANGLETYPE_UNSPECIFIED	tsvscode.ts	/^    readonly SVG_ANGLETYPE_UNSPECIFIED: 1;$/;"	p	interface:SVGAngle
SVG_ANGLETYPE_UNSPECIFIED	tsvscode.ts	/^    readonly SVG_ANGLETYPE_UNSPECIFIED: 1;$/;"	v
SVG_CHANNEL_A	tsvscode.ts	/^    readonly SVG_CHANNEL_A: 4;$/;"	p	interface:SVGFEDisplacementMapElement
SVG_CHANNEL_A	tsvscode.ts	/^    readonly SVG_CHANNEL_A: 4;$/;"	v
SVG_CHANNEL_B	tsvscode.ts	/^    readonly SVG_CHANNEL_B: 3;$/;"	p	interface:SVGFEDisplacementMapElement
SVG_CHANNEL_B	tsvscode.ts	/^    readonly SVG_CHANNEL_B: 3;$/;"	v
SVG_CHANNEL_G	tsvscode.ts	/^    readonly SVG_CHANNEL_G: 2;$/;"	p	interface:SVGFEDisplacementMapElement
SVG_CHANNEL_G	tsvscode.ts	/^    readonly SVG_CHANNEL_G: 2;$/;"	v
SVG_CHANNEL_R	tsvscode.ts	/^    readonly SVG_CHANNEL_R: 1;$/;"	p	interface:SVGFEDisplacementMapElement
SVG_CHANNEL_R	tsvscode.ts	/^    readonly SVG_CHANNEL_R: 1;$/;"	v
SVG_CHANNEL_UNKNOWN	tsvscode.ts	/^    readonly SVG_CHANNEL_UNKNOWN: 0;$/;"	p	interface:SVGFEDisplacementMapElement
SVG_CHANNEL_UNKNOWN	tsvscode.ts	/^    readonly SVG_CHANNEL_UNKNOWN: 0;$/;"	v
SVG_EDGEMODE_DUPLICATE	tsvscode.ts	/^    readonly SVG_EDGEMODE_DUPLICATE: 1;$/;"	p	interface:SVGFEConvolveMatrixElement
SVG_EDGEMODE_DUPLICATE	tsvscode.ts	/^    readonly SVG_EDGEMODE_DUPLICATE: 1;$/;"	v
SVG_EDGEMODE_NONE	tsvscode.ts	/^    readonly SVG_EDGEMODE_NONE: 3;$/;"	p	interface:SVGFEConvolveMatrixElement
SVG_EDGEMODE_NONE	tsvscode.ts	/^    readonly SVG_EDGEMODE_NONE: 3;$/;"	v
SVG_EDGEMODE_UNKNOWN	tsvscode.ts	/^    readonly SVG_EDGEMODE_UNKNOWN: 0;$/;"	p	interface:SVGFEConvolveMatrixElement
SVG_EDGEMODE_UNKNOWN	tsvscode.ts	/^    readonly SVG_EDGEMODE_UNKNOWN: 0;$/;"	v
SVG_EDGEMODE_WRAP	tsvscode.ts	/^    readonly SVG_EDGEMODE_WRAP: 2;$/;"	p	interface:SVGFEConvolveMatrixElement
SVG_EDGEMODE_WRAP	tsvscode.ts	/^    readonly SVG_EDGEMODE_WRAP: 2;$/;"	v
SVG_FEBLEND_MODE_COLOR	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_COLOR: 15;$/;"	p	interface:SVGFEBlendElement
SVG_FEBLEND_MODE_COLOR	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_COLOR: 15;$/;"	v
SVG_FEBLEND_MODE_COLOR_BURN	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_COLOR_BURN: 8;$/;"	p	interface:SVGFEBlendElement
SVG_FEBLEND_MODE_COLOR_BURN	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_COLOR_BURN: 8;$/;"	v
SVG_FEBLEND_MODE_COLOR_DODGE	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_COLOR_DODGE: 7;$/;"	p	interface:SVGFEBlendElement
SVG_FEBLEND_MODE_COLOR_DODGE	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_COLOR_DODGE: 7;$/;"	v
SVG_FEBLEND_MODE_DARKEN	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_DARKEN: 4;$/;"	p	interface:SVGFEBlendElement
SVG_FEBLEND_MODE_DARKEN	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_DARKEN: 4;$/;"	v
SVG_FEBLEND_MODE_DIFFERENCE	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_DIFFERENCE: 11;$/;"	p	interface:SVGFEBlendElement
SVG_FEBLEND_MODE_DIFFERENCE	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_DIFFERENCE: 11;$/;"	v
SVG_FEBLEND_MODE_EXCLUSION	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_EXCLUSION: 12;$/;"	p	interface:SVGFEBlendElement
SVG_FEBLEND_MODE_EXCLUSION	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_EXCLUSION: 12;$/;"	v
SVG_FEBLEND_MODE_HARD_LIGHT	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_HARD_LIGHT: 9;$/;"	p	interface:SVGFEBlendElement
SVG_FEBLEND_MODE_HARD_LIGHT	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_HARD_LIGHT: 9;$/;"	v
SVG_FEBLEND_MODE_HUE	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_HUE: 13;$/;"	p	interface:SVGFEBlendElement
SVG_FEBLEND_MODE_HUE	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_HUE: 13;$/;"	v
SVG_FEBLEND_MODE_LIGHTEN	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_LIGHTEN: 5;$/;"	p	interface:SVGFEBlendElement
SVG_FEBLEND_MODE_LIGHTEN	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_LIGHTEN: 5;$/;"	v
SVG_FEBLEND_MODE_LUMINOSITY	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_LUMINOSITY: 16;$/;"	p	interface:SVGFEBlendElement
SVG_FEBLEND_MODE_LUMINOSITY	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_LUMINOSITY: 16;$/;"	v
SVG_FEBLEND_MODE_MULTIPLY	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_MULTIPLY: 2;$/;"	p	interface:SVGFEBlendElement
SVG_FEBLEND_MODE_MULTIPLY	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_MULTIPLY: 2;$/;"	v
SVG_FEBLEND_MODE_NORMAL	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_NORMAL: 1;$/;"	p	interface:SVGFEBlendElement
SVG_FEBLEND_MODE_NORMAL	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_NORMAL: 1;$/;"	v
SVG_FEBLEND_MODE_OVERLAY	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_OVERLAY: 6;$/;"	p	interface:SVGFEBlendElement
SVG_FEBLEND_MODE_OVERLAY	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_OVERLAY: 6;$/;"	v
SVG_FEBLEND_MODE_SATURATION	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_SATURATION: 14;$/;"	p	interface:SVGFEBlendElement
SVG_FEBLEND_MODE_SATURATION	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_SATURATION: 14;$/;"	v
SVG_FEBLEND_MODE_SCREEN	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_SCREEN: 3;$/;"	p	interface:SVGFEBlendElement
SVG_FEBLEND_MODE_SCREEN	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_SCREEN: 3;$/;"	v
SVG_FEBLEND_MODE_SOFT_LIGHT	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_SOFT_LIGHT: 10;$/;"	p	interface:SVGFEBlendElement
SVG_FEBLEND_MODE_SOFT_LIGHT	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_SOFT_LIGHT: 10;$/;"	v
SVG_FEBLEND_MODE_UNKNOWN	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_UNKNOWN: 0;$/;"	p	interface:SVGFEBlendElement
SVG_FEBLEND_MODE_UNKNOWN	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_UNKNOWN: 0;$/;"	v
SVG_FECOLORMATRIX_TYPE_HUEROTATE	tsvscode.ts	/^    readonly SVG_FECOLORMATRIX_TYPE_HUEROTATE: 3;$/;"	p	interface:SVGFEColorMatrixElement
SVG_FECOLORMATRIX_TYPE_HUEROTATE	tsvscode.ts	/^    readonly SVG_FECOLORMATRIX_TYPE_HUEROTATE: 3;$/;"	v
SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA	tsvscode.ts	/^    readonly SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA: 4;$/;"	p	interface:SVGFEColorMatrixElement
SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA	tsvscode.ts	/^    readonly SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA: 4;$/;"	v
SVG_FECOLORMATRIX_TYPE_MATRIX	tsvscode.ts	/^    readonly SVG_FECOLORMATRIX_TYPE_MATRIX: 1;$/;"	p	interface:SVGFEColorMatrixElement
SVG_FECOLORMATRIX_TYPE_MATRIX	tsvscode.ts	/^    readonly SVG_FECOLORMATRIX_TYPE_MATRIX: 1;$/;"	v
SVG_FECOLORMATRIX_TYPE_SATURATE	tsvscode.ts	/^    readonly SVG_FECOLORMATRIX_TYPE_SATURATE: 2;$/;"	p	interface:SVGFEColorMatrixElement
SVG_FECOLORMATRIX_TYPE_SATURATE	tsvscode.ts	/^    readonly SVG_FECOLORMATRIX_TYPE_SATURATE: 2;$/;"	v
SVG_FECOLORMATRIX_TYPE_UNKNOWN	tsvscode.ts	/^    readonly SVG_FECOLORMATRIX_TYPE_UNKNOWN: 0;$/;"	p	interface:SVGFEColorMatrixElement
SVG_FECOLORMATRIX_TYPE_UNKNOWN	tsvscode.ts	/^    readonly SVG_FECOLORMATRIX_TYPE_UNKNOWN: 0;$/;"	v
SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE	tsvscode.ts	/^    readonly SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE: 3;$/;"	p	interface:SVGComponentTransferFunctionElement
SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE	tsvscode.ts	/^    readonly SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE: 3;$/;"	v
SVG_FECOMPONENTTRANSFER_TYPE_GAMMA	tsvscode.ts	/^    readonly SVG_FECOMPONENTTRANSFER_TYPE_GAMMA: 5;$/;"	p	interface:SVGComponentTransferFunctionElement
SVG_FECOMPONENTTRANSFER_TYPE_GAMMA	tsvscode.ts	/^    readonly SVG_FECOMPONENTTRANSFER_TYPE_GAMMA: 5;$/;"	v
SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY	tsvscode.ts	/^    readonly SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY: 1;$/;"	p	interface:SVGComponentTransferFunctionElement
SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY	tsvscode.ts	/^    readonly SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY: 1;$/;"	v
SVG_FECOMPONENTTRANSFER_TYPE_LINEAR	tsvscode.ts	/^    readonly SVG_FECOMPONENTTRANSFER_TYPE_LINEAR: 4;$/;"	p	interface:SVGComponentTransferFunctionElement
SVG_FECOMPONENTTRANSFER_TYPE_LINEAR	tsvscode.ts	/^    readonly SVG_FECOMPONENTTRANSFER_TYPE_LINEAR: 4;$/;"	v
SVG_FECOMPONENTTRANSFER_TYPE_TABLE	tsvscode.ts	/^    readonly SVG_FECOMPONENTTRANSFER_TYPE_TABLE: 2;$/;"	p	interface:SVGComponentTransferFunctionElement
SVG_FECOMPONENTTRANSFER_TYPE_TABLE	tsvscode.ts	/^    readonly SVG_FECOMPONENTTRANSFER_TYPE_TABLE: 2;$/;"	v
SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN	tsvscode.ts	/^    readonly SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN: 0;$/;"	p	interface:SVGComponentTransferFunctionElement
SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN	tsvscode.ts	/^    readonly SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN: 0;$/;"	v
SVG_FECOMPOSITE_OPERATOR_ARITHMETIC	tsvscode.ts	/^    readonly SVG_FECOMPOSITE_OPERATOR_ARITHMETIC: 6;$/;"	p	interface:SVGFECompositeElement
SVG_FECOMPOSITE_OPERATOR_ARITHMETIC	tsvscode.ts	/^    readonly SVG_FECOMPOSITE_OPERATOR_ARITHMETIC: 6;$/;"	v
SVG_FECOMPOSITE_OPERATOR_ATOP	tsvscode.ts	/^    readonly SVG_FECOMPOSITE_OPERATOR_ATOP: 4;$/;"	p	interface:SVGFECompositeElement
SVG_FECOMPOSITE_OPERATOR_ATOP	tsvscode.ts	/^    readonly SVG_FECOMPOSITE_OPERATOR_ATOP: 4;$/;"	v
SVG_FECOMPOSITE_OPERATOR_IN	tsvscode.ts	/^    readonly SVG_FECOMPOSITE_OPERATOR_IN: 2;$/;"	p	interface:SVGFECompositeElement
SVG_FECOMPOSITE_OPERATOR_IN	tsvscode.ts	/^    readonly SVG_FECOMPOSITE_OPERATOR_IN: 2;$/;"	v
SVG_FECOMPOSITE_OPERATOR_OUT	tsvscode.ts	/^    readonly SVG_FECOMPOSITE_OPERATOR_OUT: 3;$/;"	p	interface:SVGFECompositeElement
SVG_FECOMPOSITE_OPERATOR_OUT	tsvscode.ts	/^    readonly SVG_FECOMPOSITE_OPERATOR_OUT: 3;$/;"	v
SVG_FECOMPOSITE_OPERATOR_OVER	tsvscode.ts	/^    readonly SVG_FECOMPOSITE_OPERATOR_OVER: 1;$/;"	p	interface:SVGFECompositeElement
SVG_FECOMPOSITE_OPERATOR_OVER	tsvscode.ts	/^    readonly SVG_FECOMPOSITE_OPERATOR_OVER: 1;$/;"	v
SVG_FECOMPOSITE_OPERATOR_UNKNOWN	tsvscode.ts	/^    readonly SVG_FECOMPOSITE_OPERATOR_UNKNOWN: 0;$/;"	p	interface:SVGFECompositeElement
SVG_FECOMPOSITE_OPERATOR_UNKNOWN	tsvscode.ts	/^    readonly SVG_FECOMPOSITE_OPERATOR_UNKNOWN: 0;$/;"	v
SVG_FECOMPOSITE_OPERATOR_XOR	tsvscode.ts	/^    readonly SVG_FECOMPOSITE_OPERATOR_XOR: 5;$/;"	p	interface:SVGFECompositeElement
SVG_FECOMPOSITE_OPERATOR_XOR	tsvscode.ts	/^    readonly SVG_FECOMPOSITE_OPERATOR_XOR: 5;$/;"	v
SVG_LENGTHTYPE_CM	tsvscode.ts	/^    readonly SVG_LENGTHTYPE_CM: 6;$/;"	p	interface:SVGLength
SVG_LENGTHTYPE_CM	tsvscode.ts	/^    readonly SVG_LENGTHTYPE_CM: 6;$/;"	v
SVG_LENGTHTYPE_EMS	tsvscode.ts	/^    readonly SVG_LENGTHTYPE_EMS: 3;$/;"	p	interface:SVGLength
SVG_LENGTHTYPE_EMS	tsvscode.ts	/^    readonly SVG_LENGTHTYPE_EMS: 3;$/;"	v
SVG_LENGTHTYPE_EXS	tsvscode.ts	/^    readonly SVG_LENGTHTYPE_EXS: 4;$/;"	p	interface:SVGLength
SVG_LENGTHTYPE_EXS	tsvscode.ts	/^    readonly SVG_LENGTHTYPE_EXS: 4;$/;"	v
SVG_LENGTHTYPE_IN	tsvscode.ts	/^    readonly SVG_LENGTHTYPE_IN: 8;$/;"	p	interface:SVGLength
SVG_LENGTHTYPE_IN	tsvscode.ts	/^    readonly SVG_LENGTHTYPE_IN: 8;$/;"	v
SVG_LENGTHTYPE_MM	tsvscode.ts	/^    readonly SVG_LENGTHTYPE_MM: 7;$/;"	p	interface:SVGLength
SVG_LENGTHTYPE_MM	tsvscode.ts	/^    readonly SVG_LENGTHTYPE_MM: 7;$/;"	v
SVG_LENGTHTYPE_NUMBER	tsvscode.ts	/^    readonly SVG_LENGTHTYPE_NUMBER: 1;$/;"	p	interface:SVGLength
SVG_LENGTHTYPE_NUMBER	tsvscode.ts	/^    readonly SVG_LENGTHTYPE_NUMBER: 1;$/;"	v
SVG_LENGTHTYPE_PC	tsvscode.ts	/^    readonly SVG_LENGTHTYPE_PC: 10;$/;"	p	interface:SVGLength
SVG_LENGTHTYPE_PC	tsvscode.ts	/^    readonly SVG_LENGTHTYPE_PC: 10;$/;"	v
SVG_LENGTHTYPE_PERCENTAGE	tsvscode.ts	/^    readonly SVG_LENGTHTYPE_PERCENTAGE: 2;$/;"	p	interface:SVGLength
SVG_LENGTHTYPE_PERCENTAGE	tsvscode.ts	/^    readonly SVG_LENGTHTYPE_PERCENTAGE: 2;$/;"	v
SVG_LENGTHTYPE_PT	tsvscode.ts	/^    readonly SVG_LENGTHTYPE_PT: 9;$/;"	p	interface:SVGLength
SVG_LENGTHTYPE_PT	tsvscode.ts	/^    readonly SVG_LENGTHTYPE_PT: 9;$/;"	v
SVG_LENGTHTYPE_PX	tsvscode.ts	/^    readonly SVG_LENGTHTYPE_PX: 5;$/;"	p	interface:SVGLength
SVG_LENGTHTYPE_PX	tsvscode.ts	/^    readonly SVG_LENGTHTYPE_PX: 5;$/;"	v
SVG_LENGTHTYPE_UNKNOWN	tsvscode.ts	/^    readonly SVG_LENGTHTYPE_UNKNOWN: 0;$/;"	p	interface:SVGLength
SVG_LENGTHTYPE_UNKNOWN	tsvscode.ts	/^    readonly SVG_LENGTHTYPE_UNKNOWN: 0;$/;"	v
SVG_MARKERUNITS_STROKEWIDTH	tsvscode.ts	/^    readonly SVG_MARKERUNITS_STROKEWIDTH: 2;$/;"	p	interface:SVGMarkerElement
SVG_MARKERUNITS_STROKEWIDTH	tsvscode.ts	/^    readonly SVG_MARKERUNITS_STROKEWIDTH: 2;$/;"	v
SVG_MARKERUNITS_UNKNOWN	tsvscode.ts	/^    readonly SVG_MARKERUNITS_UNKNOWN: 0;$/;"	p	interface:SVGMarkerElement
SVG_MARKERUNITS_UNKNOWN	tsvscode.ts	/^    readonly SVG_MARKERUNITS_UNKNOWN: 0;$/;"	v
SVG_MARKERUNITS_USERSPACEONUSE	tsvscode.ts	/^    readonly SVG_MARKERUNITS_USERSPACEONUSE: 1;$/;"	p	interface:SVGMarkerElement
SVG_MARKERUNITS_USERSPACEONUSE	tsvscode.ts	/^    readonly SVG_MARKERUNITS_USERSPACEONUSE: 1;$/;"	v
SVG_MARKER_ORIENT_ANGLE	tsvscode.ts	/^    readonly SVG_MARKER_ORIENT_ANGLE: 2;$/;"	p	interface:SVGMarkerElement
SVG_MARKER_ORIENT_ANGLE	tsvscode.ts	/^    readonly SVG_MARKER_ORIENT_ANGLE: 2;$/;"	v
SVG_MARKER_ORIENT_AUTO	tsvscode.ts	/^    readonly SVG_MARKER_ORIENT_AUTO: 1;$/;"	p	interface:SVGMarkerElement
SVG_MARKER_ORIENT_AUTO	tsvscode.ts	/^    readonly SVG_MARKER_ORIENT_AUTO: 1;$/;"	v
SVG_MARKER_ORIENT_UNKNOWN	tsvscode.ts	/^    readonly SVG_MARKER_ORIENT_UNKNOWN: 0;$/;"	p	interface:SVGMarkerElement
SVG_MARKER_ORIENT_UNKNOWN	tsvscode.ts	/^    readonly SVG_MARKER_ORIENT_UNKNOWN: 0;$/;"	v
SVG_MEETORSLICE_MEET	tsvscode.ts	/^    readonly SVG_MEETORSLICE_MEET: 1;$/;"	p	interface:SVGPreserveAspectRatio
SVG_MEETORSLICE_MEET	tsvscode.ts	/^    readonly SVG_MEETORSLICE_MEET: 1;$/;"	v
SVG_MEETORSLICE_SLICE	tsvscode.ts	/^    readonly SVG_MEETORSLICE_SLICE: 2;$/;"	p	interface:SVGPreserveAspectRatio
SVG_MEETORSLICE_SLICE	tsvscode.ts	/^    readonly SVG_MEETORSLICE_SLICE: 2;$/;"	v
SVG_MEETORSLICE_UNKNOWN	tsvscode.ts	/^    readonly SVG_MEETORSLICE_UNKNOWN: 0;$/;"	p	interface:SVGPreserveAspectRatio
SVG_MEETORSLICE_UNKNOWN	tsvscode.ts	/^    readonly SVG_MEETORSLICE_UNKNOWN: 0;$/;"	v
SVG_MORPHOLOGY_OPERATOR_DILATE	tsvscode.ts	/^    readonly SVG_MORPHOLOGY_OPERATOR_DILATE: 2;$/;"	p	interface:SVGFEMorphologyElement
SVG_MORPHOLOGY_OPERATOR_DILATE	tsvscode.ts	/^    readonly SVG_MORPHOLOGY_OPERATOR_DILATE: 2;$/;"	v
SVG_MORPHOLOGY_OPERATOR_ERODE	tsvscode.ts	/^    readonly SVG_MORPHOLOGY_OPERATOR_ERODE: 1;$/;"	p	interface:SVGFEMorphologyElement
SVG_MORPHOLOGY_OPERATOR_ERODE	tsvscode.ts	/^    readonly SVG_MORPHOLOGY_OPERATOR_ERODE: 1;$/;"	v
SVG_MORPHOLOGY_OPERATOR_UNKNOWN	tsvscode.ts	/^    readonly SVG_MORPHOLOGY_OPERATOR_UNKNOWN: 0;$/;"	p	interface:SVGFEMorphologyElement
SVG_MORPHOLOGY_OPERATOR_UNKNOWN	tsvscode.ts	/^    readonly SVG_MORPHOLOGY_OPERATOR_UNKNOWN: 0;$/;"	v
SVG_PRESERVEASPECTRATIO_NONE	tsvscode.ts	/^    readonly SVG_PRESERVEASPECTRATIO_NONE: 1;$/;"	p	interface:SVGPreserveAspectRatio
SVG_PRESERVEASPECTRATIO_NONE	tsvscode.ts	/^    readonly SVG_PRESERVEASPECTRATIO_NONE: 1;$/;"	v
SVG_PRESERVEASPECTRATIO_UNKNOWN	tsvscode.ts	/^    readonly SVG_PRESERVEASPECTRATIO_UNKNOWN: 0;$/;"	p	interface:SVGPreserveAspectRatio
SVG_PRESERVEASPECTRATIO_UNKNOWN	tsvscode.ts	/^    readonly SVG_PRESERVEASPECTRATIO_UNKNOWN: 0;$/;"	v
SVG_PRESERVEASPECTRATIO_XMAXYMAX	tsvscode.ts	/^    readonly SVG_PRESERVEASPECTRATIO_XMAXYMAX: 10;$/;"	p	interface:SVGPreserveAspectRatio
SVG_PRESERVEASPECTRATIO_XMAXYMAX	tsvscode.ts	/^    readonly SVG_PRESERVEASPECTRATIO_XMAXYMAX: 10;$/;"	v
SVG_PRESERVEASPECTRATIO_XMAXYMID	tsvscode.ts	/^    readonly SVG_PRESERVEASPECTRATIO_XMAXYMID: 7;$/;"	p	interface:SVGPreserveAspectRatio
SVG_PRESERVEASPECTRATIO_XMAXYMID	tsvscode.ts	/^    readonly SVG_PRESERVEASPECTRATIO_XMAXYMID: 7;$/;"	v
SVG_PRESERVEASPECTRATIO_XMAXYMIN	tsvscode.ts	/^    readonly SVG_PRESERVEASPECTRATIO_XMAXYMIN: 4;$/;"	p	interface:SVGPreserveAspectRatio
SVG_PRESERVEASPECTRATIO_XMAXYMIN	tsvscode.ts	/^    readonly SVG_PRESERVEASPECTRATIO_XMAXYMIN: 4;$/;"	v
SVG_PRESERVEASPECTRATIO_XMIDYMAX	tsvscode.ts	/^    readonly SVG_PRESERVEASPECTRATIO_XMIDYMAX: 9;$/;"	p	interface:SVGPreserveAspectRatio
SVG_PRESERVEASPECTRATIO_XMIDYMAX	tsvscode.ts	/^    readonly SVG_PRESERVEASPECTRATIO_XMIDYMAX: 9;$/;"	v
SVG_PRESERVEASPECTRATIO_XMIDYMID	tsvscode.ts	/^    readonly SVG_PRESERVEASPECTRATIO_XMIDYMID: 6;$/;"	p	interface:SVGPreserveAspectRatio
SVG_PRESERVEASPECTRATIO_XMIDYMID	tsvscode.ts	/^    readonly SVG_PRESERVEASPECTRATIO_XMIDYMID: 6;$/;"	v
SVG_PRESERVEASPECTRATIO_XMIDYMIN	tsvscode.ts	/^    readonly SVG_PRESERVEASPECTRATIO_XMIDYMIN: 3;$/;"	p	interface:SVGPreserveAspectRatio
SVG_PRESERVEASPECTRATIO_XMIDYMIN	tsvscode.ts	/^    readonly SVG_PRESERVEASPECTRATIO_XMIDYMIN: 3;$/;"	v
SVG_PRESERVEASPECTRATIO_XMINYMAX	tsvscode.ts	/^    readonly SVG_PRESERVEASPECTRATIO_XMINYMAX: 8;$/;"	p	interface:SVGPreserveAspectRatio
SVG_PRESERVEASPECTRATIO_XMINYMAX	tsvscode.ts	/^    readonly SVG_PRESERVEASPECTRATIO_XMINYMAX: 8;$/;"	v
SVG_PRESERVEASPECTRATIO_XMINYMID	tsvscode.ts	/^    readonly SVG_PRESERVEASPECTRATIO_XMINYMID: 5;$/;"	p	interface:SVGPreserveAspectRatio
SVG_PRESERVEASPECTRATIO_XMINYMID	tsvscode.ts	/^    readonly SVG_PRESERVEASPECTRATIO_XMINYMID: 5;$/;"	v
SVG_PRESERVEASPECTRATIO_XMINYMIN	tsvscode.ts	/^    readonly SVG_PRESERVEASPECTRATIO_XMINYMIN: 2;$/;"	p	interface:SVGPreserveAspectRatio
SVG_PRESERVEASPECTRATIO_XMINYMIN	tsvscode.ts	/^    readonly SVG_PRESERVEASPECTRATIO_XMINYMIN: 2;$/;"	v
SVG_SPREADMETHOD_PAD	tsvscode.ts	/^    readonly SVG_SPREADMETHOD_PAD: 1;$/;"	p	interface:SVGGradientElement
SVG_SPREADMETHOD_PAD	tsvscode.ts	/^    readonly SVG_SPREADMETHOD_PAD: 1;$/;"	v
SVG_SPREADMETHOD_REFLECT	tsvscode.ts	/^    readonly SVG_SPREADMETHOD_REFLECT: 2;$/;"	p	interface:SVGGradientElement
SVG_SPREADMETHOD_REFLECT	tsvscode.ts	/^    readonly SVG_SPREADMETHOD_REFLECT: 2;$/;"	v
SVG_SPREADMETHOD_REPEAT	tsvscode.ts	/^    readonly SVG_SPREADMETHOD_REPEAT: 3;$/;"	p	interface:SVGGradientElement
SVG_SPREADMETHOD_REPEAT	tsvscode.ts	/^    readonly SVG_SPREADMETHOD_REPEAT: 3;$/;"	v
SVG_SPREADMETHOD_UNKNOWN	tsvscode.ts	/^    readonly SVG_SPREADMETHOD_UNKNOWN: 0;$/;"	p	interface:SVGGradientElement
SVG_SPREADMETHOD_UNKNOWN	tsvscode.ts	/^    readonly SVG_SPREADMETHOD_UNKNOWN: 0;$/;"	v
SVG_STITCHTYPE_NOSTITCH	tsvscode.ts	/^    readonly SVG_STITCHTYPE_NOSTITCH: 2;$/;"	p	interface:SVGFETurbulenceElement
SVG_STITCHTYPE_NOSTITCH	tsvscode.ts	/^    readonly SVG_STITCHTYPE_NOSTITCH: 2;$/;"	v
SVG_STITCHTYPE_STITCH	tsvscode.ts	/^    readonly SVG_STITCHTYPE_STITCH: 1;$/;"	p	interface:SVGFETurbulenceElement
SVG_STITCHTYPE_STITCH	tsvscode.ts	/^    readonly SVG_STITCHTYPE_STITCH: 1;$/;"	v
SVG_STITCHTYPE_UNKNOWN	tsvscode.ts	/^    readonly SVG_STITCHTYPE_UNKNOWN: 0;$/;"	p	interface:SVGFETurbulenceElement
SVG_STITCHTYPE_UNKNOWN	tsvscode.ts	/^    readonly SVG_STITCHTYPE_UNKNOWN: 0;$/;"	v
SVG_TRANSFORM_MATRIX	tsvscode.ts	/^    readonly SVG_TRANSFORM_MATRIX: 1;$/;"	p	interface:SVGTransform
SVG_TRANSFORM_MATRIX	tsvscode.ts	/^    readonly SVG_TRANSFORM_MATRIX: 1;$/;"	v
SVG_TRANSFORM_ROTATE	tsvscode.ts	/^    readonly SVG_TRANSFORM_ROTATE: 4;$/;"	p	interface:SVGTransform
SVG_TRANSFORM_ROTATE	tsvscode.ts	/^    readonly SVG_TRANSFORM_ROTATE: 4;$/;"	v
SVG_TRANSFORM_SCALE	tsvscode.ts	/^    readonly SVG_TRANSFORM_SCALE: 3;$/;"	p	interface:SVGTransform
SVG_TRANSFORM_SCALE	tsvscode.ts	/^    readonly SVG_TRANSFORM_SCALE: 3;$/;"	v
SVG_TRANSFORM_SKEWX	tsvscode.ts	/^    readonly SVG_TRANSFORM_SKEWX: 5;$/;"	p	interface:SVGTransform
SVG_TRANSFORM_SKEWX	tsvscode.ts	/^    readonly SVG_TRANSFORM_SKEWX: 5;$/;"	v
SVG_TRANSFORM_SKEWY	tsvscode.ts	/^    readonly SVG_TRANSFORM_SKEWY: 6;$/;"	p	interface:SVGTransform
SVG_TRANSFORM_SKEWY	tsvscode.ts	/^    readonly SVG_TRANSFORM_SKEWY: 6;$/;"	v
SVG_TRANSFORM_TRANSLATE	tsvscode.ts	/^    readonly SVG_TRANSFORM_TRANSLATE: 2;$/;"	p	interface:SVGTransform
SVG_TRANSFORM_TRANSLATE	tsvscode.ts	/^    readonly SVG_TRANSFORM_TRANSLATE: 2;$/;"	v
SVG_TRANSFORM_UNKNOWN	tsvscode.ts	/^    readonly SVG_TRANSFORM_UNKNOWN: 0;$/;"	p	interface:SVGTransform
SVG_TRANSFORM_UNKNOWN	tsvscode.ts	/^    readonly SVG_TRANSFORM_UNKNOWN: 0;$/;"	v
SVG_TURBULENCE_TYPE_FRACTALNOISE	tsvscode.ts	/^    readonly SVG_TURBULENCE_TYPE_FRACTALNOISE: 1;$/;"	p	interface:SVGFETurbulenceElement
SVG_TURBULENCE_TYPE_FRACTALNOISE	tsvscode.ts	/^    readonly SVG_TURBULENCE_TYPE_FRACTALNOISE: 1;$/;"	v
SVG_TURBULENCE_TYPE_TURBULENCE	tsvscode.ts	/^    readonly SVG_TURBULENCE_TYPE_TURBULENCE: 2;$/;"	p	interface:SVGFETurbulenceElement
SVG_TURBULENCE_TYPE_TURBULENCE	tsvscode.ts	/^    readonly SVG_TURBULENCE_TYPE_TURBULENCE: 2;$/;"	v
SVG_TURBULENCE_TYPE_UNKNOWN	tsvscode.ts	/^    readonly SVG_TURBULENCE_TYPE_UNKNOWN: 0;$/;"	p	interface:SVGFETurbulenceElement
SVG_TURBULENCE_TYPE_UNKNOWN	tsvscode.ts	/^    readonly SVG_TURBULENCE_TYPE_UNKNOWN: 0;$/;"	v
SVG_UNIT_TYPE_OBJECTBOUNDINGBOX	tsvscode.ts	/^    readonly SVG_UNIT_TYPE_OBJECTBOUNDINGBOX: 2;$/;"	p	interface:SVGUnitTypes
SVG_UNIT_TYPE_OBJECTBOUNDINGBOX	tsvscode.ts	/^    readonly SVG_UNIT_TYPE_OBJECTBOUNDINGBOX: 2;$/;"	v
SVG_UNIT_TYPE_UNKNOWN	tsvscode.ts	/^    readonly SVG_UNIT_TYPE_UNKNOWN: 0;$/;"	p	interface:SVGUnitTypes
SVG_UNIT_TYPE_UNKNOWN	tsvscode.ts	/^    readonly SVG_UNIT_TYPE_UNKNOWN: 0;$/;"	v
SVG_UNIT_TYPE_USERSPACEONUSE	tsvscode.ts	/^    readonly SVG_UNIT_TYPE_USERSPACEONUSE: 1;$/;"	p	interface:SVGUnitTypes
SVG_UNIT_TYPE_USERSPACEONUSE	tsvscode.ts	/^    readonly SVG_UNIT_TYPE_USERSPACEONUSE: 1;$/;"	v
SYNC_CONDITION	tsvscode.ts	/^    readonly SYNC_CONDITION: 0x9113;$/;"	p	interface:WebGL2RenderingContextBase
SYNC_CONDITION	tsvscode.ts	/^    readonly SYNC_CONDITION: 0x9113;$/;"	v
SYNC_FENCE	tsvscode.ts	/^    readonly SYNC_FENCE: 0x9116;$/;"	p	interface:WebGL2RenderingContextBase
SYNC_FENCE	tsvscode.ts	/^    readonly SYNC_FENCE: 0x9116;$/;"	v
SYNC_FLAGS	tsvscode.ts	/^    readonly SYNC_FLAGS: 0x9115;$/;"	p	interface:WebGL2RenderingContextBase
SYNC_FLAGS	tsvscode.ts	/^    readonly SYNC_FLAGS: 0x9115;$/;"	v
SYNC_FLUSH_COMMANDS_BIT	tsvscode.ts	/^    readonly SYNC_FLUSH_COMMANDS_BIT: 0x00000001;$/;"	p	interface:WebGL2RenderingContextBase
SYNC_FLUSH_COMMANDS_BIT	tsvscode.ts	/^    readonly SYNC_FLUSH_COMMANDS_BIT: 0x00000001;$/;"	v
SYNC_GPU_COMMANDS_COMPLETE	tsvscode.ts	/^    readonly SYNC_GPU_COMMANDS_COMPLETE: 0x9117;$/;"	p	interface:WebGL2RenderingContextBase
SYNC_GPU_COMMANDS_COMPLETE	tsvscode.ts	/^    readonly SYNC_GPU_COMMANDS_COMPLETE: 0x9117;$/;"	v
SYNC_STATUS	tsvscode.ts	/^    readonly SYNC_STATUS: 0x9114;$/;"	p	interface:WebGL2RenderingContextBase
SYNC_STATUS	tsvscode.ts	/^    readonly SYNC_STATUS: 0x9114;$/;"	v
SYNTAX_ERR	tsvscode.ts	/^    readonly SYNTAX_ERR: 12;$/;"	p	interface:DOMException
SYNTAX_ERR	tsvscode.ts	/^    readonly SYNTAX_ERR: 12;$/;"	v
Screen	tsvscode.ts	/^declare var Screen: {$/;"	v
Screen	tsvscode.ts	/^interface Screen {$/;"	i
ScreenOrientation	tsvscode.ts	/^declare var ScreenOrientation: {$/;"	v
ScreenOrientation	tsvscode.ts	/^interface ScreenOrientation extends EventTarget {$/;"	i
ScreenOrientationEventMap	tsvscode.ts	/^interface ScreenOrientationEventMap {$/;"	i
ScriptProcessorNode	tsvscode.ts	/^declare var ScriptProcessorNode: {$/;"	v
ScriptProcessorNode	tsvscode.ts	/^interface ScriptProcessorNode extends AudioNode {$/;"	i
ScriptProcessorNodeEventMap	tsvscode.ts	/^interface ScriptProcessorNodeEventMap {$/;"	i
ScrollIntoViewOptions	tsvscode.ts	/^interface ScrollIntoViewOptions extends ScrollOptions {$/;"	i
ScrollOptions	tsvscode.ts	/^interface ScrollOptions {$/;"	i
ScrollToOptions	tsvscode.ts	/^interface ScrollToOptions extends ScrollOptions {$/;"	i
SecurityPolicyViolationEvent	tsvscode.ts	/^declare var SecurityPolicyViolationEvent: {$/;"	v
SecurityPolicyViolationEvent	tsvscode.ts	/^interface SecurityPolicyViolationEvent extends Event {$/;"	i
SecurityPolicyViolationEventInit	tsvscode.ts	/^interface SecurityPolicyViolationEventInit extends EventInit {$/;"	i
Selection	tsvscode.ts	/^declare var Selection: {$/;"	v
Selection	tsvscode.ts	/^interface Selection {$/;"	i
ServiceWorker	tsvscode.ts	/^declare var ServiceWorker: {$/;"	v
ServiceWorker	tsvscode.ts	/^interface ServiceWorker extends EventTarget, AbstractWorker {$/;"	i
ServiceWorkerContainer	tsvscode.ts	/^declare var ServiceWorkerContainer: {$/;"	v
ServiceWorkerContainer	tsvscode.ts	/^interface ServiceWorkerContainer extends EventTarget {$/;"	i
ServiceWorkerContainerEventMap	tsvscode.ts	/^interface ServiceWorkerContainerEventMap {$/;"	i
ServiceWorkerEventMap	tsvscode.ts	/^interface ServiceWorkerEventMap extends AbstractWorkerEventMap {$/;"	i
ServiceWorkerRegistration	tsvscode.ts	/^declare var ServiceWorkerRegistration: {$/;"	v
ServiceWorkerRegistration	tsvscode.ts	/^interface ServiceWorkerRegistration extends EventTarget {$/;"	i
ServiceWorkerRegistrationEventMap	tsvscode.ts	/^interface ServiceWorkerRegistrationEventMap {$/;"	i
ShadowRoot	tsvscode.ts	/^declare var ShadowRoot: {$/;"	v
ShadowRoot	tsvscode.ts	/^interface ShadowRoot extends DocumentFragment, DocumentOrShadowRoot, InnerHTML {$/;"	i
ShadowRootEventMap	tsvscode.ts	/^interface ShadowRootEventMap {$/;"	i
ShadowRootInit	tsvscode.ts	/^interface ShadowRootInit {$/;"	i
ShareData	tsvscode.ts	/^interface ShareData {$/;"	i
SharedWorker	tsvscode.ts	/^declare var SharedWorker: {$/;"	v
SharedWorker	tsvscode.ts	/^interface SharedWorker extends EventTarget, AbstractWorker {$/;"	i
Slottable	tsvscode.ts	/^interface Slottable {$/;"	i
SourceBuffer	tsvscode.ts	/^declare var SourceBuffer: {$/;"	v
SourceBuffer	tsvscode.ts	/^interface SourceBuffer extends EventTarget {$/;"	i
SourceBufferEventMap	tsvscode.ts	/^interface SourceBufferEventMap {$/;"	i
SourceBufferList	tsvscode.ts	/^declare var SourceBufferList: {$/;"	v
SourceBufferList	tsvscode.ts	/^interface SourceBufferList extends EventTarget {$/;"	i
SourceBufferListEventMap	tsvscode.ts	/^interface SourceBufferListEventMap {$/;"	i
SpeechRecognitionAlternative	tsvscode.ts	/^declare var SpeechRecognitionAlternative: {$/;"	v
SpeechRecognitionAlternative	tsvscode.ts	/^interface SpeechRecognitionAlternative {$/;"	i
SpeechRecognitionResult	tsvscode.ts	/^declare var SpeechRecognitionResult: {$/;"	v
SpeechRecognitionResult	tsvscode.ts	/^interface SpeechRecognitionResult {$/;"	i
SpeechRecognitionResultList	tsvscode.ts	/^declare var SpeechRecognitionResultList: {$/;"	v
SpeechRecognitionResultList	tsvscode.ts	/^interface SpeechRecognitionResultList {$/;"	i
SpeechSynthesis	tsvscode.ts	/^declare var SpeechSynthesis: {$/;"	v
SpeechSynthesis	tsvscode.ts	/^interface SpeechSynthesis extends EventTarget {$/;"	i
SpeechSynthesisErrorEvent	tsvscode.ts	/^declare var SpeechSynthesisErrorEvent: {$/;"	v
SpeechSynthesisErrorEvent	tsvscode.ts	/^interface SpeechSynthesisErrorEvent extends SpeechSynthesisEvent {$/;"	i
SpeechSynthesisErrorEventInit	tsvscode.ts	/^interface SpeechSynthesisErrorEventInit extends SpeechSynthesisEventInit {$/;"	i
SpeechSynthesisEvent	tsvscode.ts	/^declare var SpeechSynthesisEvent: {$/;"	v
SpeechSynthesisEvent	tsvscode.ts	/^interface SpeechSynthesisEvent extends Event {$/;"	i
SpeechSynthesisEventInit	tsvscode.ts	/^interface SpeechSynthesisEventInit extends EventInit {$/;"	i
SpeechSynthesisEventMap	tsvscode.ts	/^interface SpeechSynthesisEventMap {$/;"	i
SpeechSynthesisUtterance	tsvscode.ts	/^declare var SpeechSynthesisUtterance: {$/;"	v
SpeechSynthesisUtterance	tsvscode.ts	/^interface SpeechSynthesisUtterance extends EventTarget {$/;"	i
SpeechSynthesisUtteranceEventMap	tsvscode.ts	/^interface SpeechSynthesisUtteranceEventMap {$/;"	i
SpeechSynthesisVoice	tsvscode.ts	/^declare var SpeechSynthesisVoice: {$/;"	v
SpeechSynthesisVoice	tsvscode.ts	/^interface SpeechSynthesisVoice {$/;"	i
StaticRange	tsvscode.ts	/^declare var StaticRange: {$/;"	v
StaticRange	tsvscode.ts	/^interface StaticRange extends AbstractRange {$/;"	i
StaticRangeInit	tsvscode.ts	/^interface StaticRangeInit {$/;"	i
StereoPannerNode	tsvscode.ts	/^declare var StereoPannerNode: {$/;"	v
StereoPannerNode	tsvscode.ts	/^interface StereoPannerNode extends AudioNode {$/;"	i
StereoPannerOptions	tsvscode.ts	/^interface StereoPannerOptions extends AudioNodeOptions {$/;"	i
Storage	tsvscode.ts	/^declare var Storage: {$/;"	v
Storage	tsvscode.ts	/^interface Storage {$/;"	i
StorageEstimate	tsvscode.ts	/^interface StorageEstimate {$/;"	i
StorageEvent	tsvscode.ts	/^declare var StorageEvent: {$/;"	v
StorageEvent	tsvscode.ts	/^interface StorageEvent extends Event {$/;"	i
StorageEventInit	tsvscode.ts	/^interface StorageEventInit extends EventInit {$/;"	i
StorageManager	tsvscode.ts	/^declare var StorageManager: {$/;"	v
StorageManager	tsvscode.ts	/^interface StorageManager {$/;"	i
StreamPipeOptions	tsvscode.ts	/^interface StreamPipeOptions {$/;"	i
String	ests.ts	/^declare var String: StringConstructor;$/;"	v
String	ests.ts	/^interface String {$/;"	i
StringConstructor	ests.ts	/^interface StringConstructor {$/;"	i
StructuredSerializeOptions	tsvscode.ts	/^interface StructuredSerializeOptions {$/;"	i
StyleMedia	tsvscode.ts	/^interface StyleMedia {$/;"	i
StylePropertyMap	tsvscode.ts	/^declare var StylePropertyMap: {$/;"	v
StylePropertyMap	tsvscode.ts	/^interface StylePropertyMap extends StylePropertyMapReadOnly {$/;"	i
StylePropertyMapReadOnly	tsvscode.ts	/^declare var StylePropertyMapReadOnly: {$/;"	v
StylePropertyMapReadOnly	tsvscode.ts	/^interface StylePropertyMapReadOnly {$/;"	i
StyleSheet	tsvscode.ts	/^declare var StyleSheet: {$/;"	v
StyleSheet	tsvscode.ts	/^interface StyleSheet {$/;"	i
StyleSheetList	tsvscode.ts	/^declare var StyleSheetList: {$/;"	v
StyleSheetList	tsvscode.ts	/^interface StyleSheetList {$/;"	i
SubmitEvent	tsvscode.ts	/^declare var SubmitEvent: {$/;"	v
SubmitEvent	tsvscode.ts	/^interface SubmitEvent extends Event {$/;"	i
SubmitEventInit	tsvscode.ts	/^interface SubmitEventInit extends EventInit {$/;"	i
SubtleCrypto	tsvscode.ts	/^declare var SubtleCrypto: {$/;"	v
SubtleCrypto	tsvscode.ts	/^interface SubtleCrypto {$/;"	i
SyntaxError	ests.ts	/^declare var SyntaxError: SyntaxErrorConstructor;$/;"	v
SyntaxError	ests.ts	/^interface SyntaxError extends Error {$/;"	i
SyntaxErrorConstructor	ests.ts	/^interface SyntaxErrorConstructor extends ErrorConstructor {$/;"	i
TEXTPATH_METHODTYPE_ALIGN	tsvscode.ts	/^    readonly TEXTPATH_METHODTYPE_ALIGN: 1;$/;"	p	interface:SVGTextPathElement
TEXTPATH_METHODTYPE_ALIGN	tsvscode.ts	/^    readonly TEXTPATH_METHODTYPE_ALIGN: 1;$/;"	v
TEXTPATH_METHODTYPE_STRETCH	tsvscode.ts	/^    readonly TEXTPATH_METHODTYPE_STRETCH: 2;$/;"	p	interface:SVGTextPathElement
TEXTPATH_METHODTYPE_STRETCH	tsvscode.ts	/^    readonly TEXTPATH_METHODTYPE_STRETCH: 2;$/;"	v
TEXTPATH_METHODTYPE_UNKNOWN	tsvscode.ts	/^    readonly TEXTPATH_METHODTYPE_UNKNOWN: 0;$/;"	p	interface:SVGTextPathElement
TEXTPATH_METHODTYPE_UNKNOWN	tsvscode.ts	/^    readonly TEXTPATH_METHODTYPE_UNKNOWN: 0;$/;"	v
TEXTPATH_SPACINGTYPE_AUTO	tsvscode.ts	/^    readonly TEXTPATH_SPACINGTYPE_AUTO: 1;$/;"	p	interface:SVGTextPathElement
TEXTPATH_SPACINGTYPE_AUTO	tsvscode.ts	/^    readonly TEXTPATH_SPACINGTYPE_AUTO: 1;$/;"	v
TEXTPATH_SPACINGTYPE_EXACT	tsvscode.ts	/^    readonly TEXTPATH_SPACINGTYPE_EXACT: 2;$/;"	p	interface:SVGTextPathElement
TEXTPATH_SPACINGTYPE_EXACT	tsvscode.ts	/^    readonly TEXTPATH_SPACINGTYPE_EXACT: 2;$/;"	v
TEXTPATH_SPACINGTYPE_UNKNOWN	tsvscode.ts	/^    readonly TEXTPATH_SPACINGTYPE_UNKNOWN: 0;$/;"	p	interface:SVGTextPathElement
TEXTPATH_SPACINGTYPE_UNKNOWN	tsvscode.ts	/^    readonly TEXTPATH_SPACINGTYPE_UNKNOWN: 0;$/;"	v
TEXTURE	tsvscode.ts	/^    readonly TEXTURE: 0x1702;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE	tsvscode.ts	/^    readonly TEXTURE: 0x1702;$/;"	v
TEXTURE0	tsvscode.ts	/^    readonly TEXTURE0: 0x84C0;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE0	tsvscode.ts	/^    readonly TEXTURE0: 0x84C0;$/;"	v
TEXTURE1	tsvscode.ts	/^    readonly TEXTURE1: 0x84C1;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE1	tsvscode.ts	/^    readonly TEXTURE1: 0x84C1;$/;"	v
TEXTURE10	tsvscode.ts	/^    readonly TEXTURE10: 0x84CA;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE10	tsvscode.ts	/^    readonly TEXTURE10: 0x84CA;$/;"	v
TEXTURE11	tsvscode.ts	/^    readonly TEXTURE11: 0x84CB;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE11	tsvscode.ts	/^    readonly TEXTURE11: 0x84CB;$/;"	v
TEXTURE12	tsvscode.ts	/^    readonly TEXTURE12: 0x84CC;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE12	tsvscode.ts	/^    readonly TEXTURE12: 0x84CC;$/;"	v
TEXTURE13	tsvscode.ts	/^    readonly TEXTURE13: 0x84CD;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE13	tsvscode.ts	/^    readonly TEXTURE13: 0x84CD;$/;"	v
TEXTURE14	tsvscode.ts	/^    readonly TEXTURE14: 0x84CE;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE14	tsvscode.ts	/^    readonly TEXTURE14: 0x84CE;$/;"	v
TEXTURE15	tsvscode.ts	/^    readonly TEXTURE15: 0x84CF;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE15	tsvscode.ts	/^    readonly TEXTURE15: 0x84CF;$/;"	v
TEXTURE16	tsvscode.ts	/^    readonly TEXTURE16: 0x84D0;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE16	tsvscode.ts	/^    readonly TEXTURE16: 0x84D0;$/;"	v
TEXTURE17	tsvscode.ts	/^    readonly TEXTURE17: 0x84D1;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE17	tsvscode.ts	/^    readonly TEXTURE17: 0x84D1;$/;"	v
TEXTURE18	tsvscode.ts	/^    readonly TEXTURE18: 0x84D2;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE18	tsvscode.ts	/^    readonly TEXTURE18: 0x84D2;$/;"	v
TEXTURE19	tsvscode.ts	/^    readonly TEXTURE19: 0x84D3;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE19	tsvscode.ts	/^    readonly TEXTURE19: 0x84D3;$/;"	v
TEXTURE2	tsvscode.ts	/^    readonly TEXTURE2: 0x84C2;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE2	tsvscode.ts	/^    readonly TEXTURE2: 0x84C2;$/;"	v
TEXTURE20	tsvscode.ts	/^    readonly TEXTURE20: 0x84D4;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE20	tsvscode.ts	/^    readonly TEXTURE20: 0x84D4;$/;"	v
TEXTURE21	tsvscode.ts	/^    readonly TEXTURE21: 0x84D5;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE21	tsvscode.ts	/^    readonly TEXTURE21: 0x84D5;$/;"	v
TEXTURE22	tsvscode.ts	/^    readonly TEXTURE22: 0x84D6;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE22	tsvscode.ts	/^    readonly TEXTURE22: 0x84D6;$/;"	v
TEXTURE23	tsvscode.ts	/^    readonly TEXTURE23: 0x84D7;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE23	tsvscode.ts	/^    readonly TEXTURE23: 0x84D7;$/;"	v
TEXTURE24	tsvscode.ts	/^    readonly TEXTURE24: 0x84D8;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE24	tsvscode.ts	/^    readonly TEXTURE24: 0x84D8;$/;"	v
TEXTURE25	tsvscode.ts	/^    readonly TEXTURE25: 0x84D9;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE25	tsvscode.ts	/^    readonly TEXTURE25: 0x84D9;$/;"	v
TEXTURE26	tsvscode.ts	/^    readonly TEXTURE26: 0x84DA;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE26	tsvscode.ts	/^    readonly TEXTURE26: 0x84DA;$/;"	v
TEXTURE27	tsvscode.ts	/^    readonly TEXTURE27: 0x84DB;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE27	tsvscode.ts	/^    readonly TEXTURE27: 0x84DB;$/;"	v
TEXTURE28	tsvscode.ts	/^    readonly TEXTURE28: 0x84DC;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE28	tsvscode.ts	/^    readonly TEXTURE28: 0x84DC;$/;"	v
TEXTURE29	tsvscode.ts	/^    readonly TEXTURE29: 0x84DD;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE29	tsvscode.ts	/^    readonly TEXTURE29: 0x84DD;$/;"	v
TEXTURE3	tsvscode.ts	/^    readonly TEXTURE3: 0x84C3;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE3	tsvscode.ts	/^    readonly TEXTURE3: 0x84C3;$/;"	v
TEXTURE30	tsvscode.ts	/^    readonly TEXTURE30: 0x84DE;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE30	tsvscode.ts	/^    readonly TEXTURE30: 0x84DE;$/;"	v
TEXTURE31	tsvscode.ts	/^    readonly TEXTURE31: 0x84DF;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE31	tsvscode.ts	/^    readonly TEXTURE31: 0x84DF;$/;"	v
TEXTURE4	tsvscode.ts	/^    readonly TEXTURE4: 0x84C4;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE4	tsvscode.ts	/^    readonly TEXTURE4: 0x84C4;$/;"	v
TEXTURE5	tsvscode.ts	/^    readonly TEXTURE5: 0x84C5;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE5	tsvscode.ts	/^    readonly TEXTURE5: 0x84C5;$/;"	v
TEXTURE6	tsvscode.ts	/^    readonly TEXTURE6: 0x84C6;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE6	tsvscode.ts	/^    readonly TEXTURE6: 0x84C6;$/;"	v
TEXTURE7	tsvscode.ts	/^    readonly TEXTURE7: 0x84C7;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE7	tsvscode.ts	/^    readonly TEXTURE7: 0x84C7;$/;"	v
TEXTURE8	tsvscode.ts	/^    readonly TEXTURE8: 0x84C8;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE8	tsvscode.ts	/^    readonly TEXTURE8: 0x84C8;$/;"	v
TEXTURE9	tsvscode.ts	/^    readonly TEXTURE9: 0x84C9;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE9	tsvscode.ts	/^    readonly TEXTURE9: 0x84C9;$/;"	v
TEXTURE_2D	tsvscode.ts	/^    readonly TEXTURE_2D: 0x0DE1;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE_2D	tsvscode.ts	/^    readonly TEXTURE_2D: 0x0DE1;$/;"	v
TEXTURE_2D_ARRAY	tsvscode.ts	/^    readonly TEXTURE_2D_ARRAY: 0x8C1A;$/;"	p	interface:WebGL2RenderingContextBase
TEXTURE_2D_ARRAY	tsvscode.ts	/^    readonly TEXTURE_2D_ARRAY: 0x8C1A;$/;"	v
TEXTURE_3D	tsvscode.ts	/^    readonly TEXTURE_3D: 0x806F;$/;"	p	interface:WebGL2RenderingContextBase
TEXTURE_3D	tsvscode.ts	/^    readonly TEXTURE_3D: 0x806F;$/;"	v
TEXTURE_BASE_LEVEL	tsvscode.ts	/^    readonly TEXTURE_BASE_LEVEL: 0x813C;$/;"	p	interface:WebGL2RenderingContextBase
TEXTURE_BASE_LEVEL	tsvscode.ts	/^    readonly TEXTURE_BASE_LEVEL: 0x813C;$/;"	v
TEXTURE_BINDING_2D	tsvscode.ts	/^    readonly TEXTURE_BINDING_2D: 0x8069;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE_BINDING_2D	tsvscode.ts	/^    readonly TEXTURE_BINDING_2D: 0x8069;$/;"	v
TEXTURE_BINDING_2D_ARRAY	tsvscode.ts	/^    readonly TEXTURE_BINDING_2D_ARRAY: 0x8C1D;$/;"	p	interface:WebGL2RenderingContextBase
TEXTURE_BINDING_2D_ARRAY	tsvscode.ts	/^    readonly TEXTURE_BINDING_2D_ARRAY: 0x8C1D;$/;"	v
TEXTURE_BINDING_3D	tsvscode.ts	/^    readonly TEXTURE_BINDING_3D: 0x806A;$/;"	p	interface:WebGL2RenderingContextBase
TEXTURE_BINDING_3D	tsvscode.ts	/^    readonly TEXTURE_BINDING_3D: 0x806A;$/;"	v
TEXTURE_BINDING_CUBE_MAP	tsvscode.ts	/^    readonly TEXTURE_BINDING_CUBE_MAP: 0x8514;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE_BINDING_CUBE_MAP	tsvscode.ts	/^    readonly TEXTURE_BINDING_CUBE_MAP: 0x8514;$/;"	v
TEXTURE_COMPARE_FUNC	tsvscode.ts	/^    readonly TEXTURE_COMPARE_FUNC: 0x884D;$/;"	p	interface:WebGL2RenderingContextBase
TEXTURE_COMPARE_FUNC	tsvscode.ts	/^    readonly TEXTURE_COMPARE_FUNC: 0x884D;$/;"	v
TEXTURE_COMPARE_MODE	tsvscode.ts	/^    readonly TEXTURE_COMPARE_MODE: 0x884C;$/;"	p	interface:WebGL2RenderingContextBase
TEXTURE_COMPARE_MODE	tsvscode.ts	/^    readonly TEXTURE_COMPARE_MODE: 0x884C;$/;"	v
TEXTURE_CUBE_MAP	tsvscode.ts	/^    readonly TEXTURE_CUBE_MAP: 0x8513;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE_CUBE_MAP	tsvscode.ts	/^    readonly TEXTURE_CUBE_MAP: 0x8513;$/;"	v
TEXTURE_CUBE_MAP_NEGATIVE_X	tsvscode.ts	/^    readonly TEXTURE_CUBE_MAP_NEGATIVE_X: 0x8516;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE_CUBE_MAP_NEGATIVE_X	tsvscode.ts	/^    readonly TEXTURE_CUBE_MAP_NEGATIVE_X: 0x8516;$/;"	v
TEXTURE_CUBE_MAP_NEGATIVE_Y	tsvscode.ts	/^    readonly TEXTURE_CUBE_MAP_NEGATIVE_Y: 0x8518;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE_CUBE_MAP_NEGATIVE_Y	tsvscode.ts	/^    readonly TEXTURE_CUBE_MAP_NEGATIVE_Y: 0x8518;$/;"	v
TEXTURE_CUBE_MAP_NEGATIVE_Z	tsvscode.ts	/^    readonly TEXTURE_CUBE_MAP_NEGATIVE_Z: 0x851A;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE_CUBE_MAP_NEGATIVE_Z	tsvscode.ts	/^    readonly TEXTURE_CUBE_MAP_NEGATIVE_Z: 0x851A;$/;"	v
TEXTURE_CUBE_MAP_POSITIVE_X	tsvscode.ts	/^    readonly TEXTURE_CUBE_MAP_POSITIVE_X: 0x8515;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE_CUBE_MAP_POSITIVE_X	tsvscode.ts	/^    readonly TEXTURE_CUBE_MAP_POSITIVE_X: 0x8515;$/;"	v
TEXTURE_CUBE_MAP_POSITIVE_Y	tsvscode.ts	/^    readonly TEXTURE_CUBE_MAP_POSITIVE_Y: 0x8517;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE_CUBE_MAP_POSITIVE_Y	tsvscode.ts	/^    readonly TEXTURE_CUBE_MAP_POSITIVE_Y: 0x8517;$/;"	v
TEXTURE_CUBE_MAP_POSITIVE_Z	tsvscode.ts	/^    readonly TEXTURE_CUBE_MAP_POSITIVE_Z: 0x8519;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE_CUBE_MAP_POSITIVE_Z	tsvscode.ts	/^    readonly TEXTURE_CUBE_MAP_POSITIVE_Z: 0x8519;$/;"	v
TEXTURE_IMMUTABLE_FORMAT	tsvscode.ts	/^    readonly TEXTURE_IMMUTABLE_FORMAT: 0x912F;$/;"	p	interface:WebGL2RenderingContextBase
TEXTURE_IMMUTABLE_FORMAT	tsvscode.ts	/^    readonly TEXTURE_IMMUTABLE_FORMAT: 0x912F;$/;"	v
TEXTURE_IMMUTABLE_LEVELS	tsvscode.ts	/^    readonly TEXTURE_IMMUTABLE_LEVELS: 0x82DF;$/;"	p	interface:WebGL2RenderingContextBase
TEXTURE_IMMUTABLE_LEVELS	tsvscode.ts	/^    readonly TEXTURE_IMMUTABLE_LEVELS: 0x82DF;$/;"	v
TEXTURE_MAG_FILTER	tsvscode.ts	/^    readonly TEXTURE_MAG_FILTER: 0x2800;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE_MAG_FILTER	tsvscode.ts	/^    readonly TEXTURE_MAG_FILTER: 0x2800;$/;"	v
TEXTURE_MAX_ANISOTROPY_EXT	tsvscode.ts	/^    readonly TEXTURE_MAX_ANISOTROPY_EXT: 0x84FE;$/;"	p	interface:EXT_texture_filter_anisotropic
TEXTURE_MAX_LEVEL	tsvscode.ts	/^    readonly TEXTURE_MAX_LEVEL: 0x813D;$/;"	p	interface:WebGL2RenderingContextBase
TEXTURE_MAX_LEVEL	tsvscode.ts	/^    readonly TEXTURE_MAX_LEVEL: 0x813D;$/;"	v
TEXTURE_MAX_LOD	tsvscode.ts	/^    readonly TEXTURE_MAX_LOD: 0x813B;$/;"	p	interface:WebGL2RenderingContextBase
TEXTURE_MAX_LOD	tsvscode.ts	/^    readonly TEXTURE_MAX_LOD: 0x813B;$/;"	v
TEXTURE_MIN_FILTER	tsvscode.ts	/^    readonly TEXTURE_MIN_FILTER: 0x2801;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE_MIN_FILTER	tsvscode.ts	/^    readonly TEXTURE_MIN_FILTER: 0x2801;$/;"	v
TEXTURE_MIN_LOD	tsvscode.ts	/^    readonly TEXTURE_MIN_LOD: 0x813A;$/;"	p	interface:WebGL2RenderingContextBase
TEXTURE_MIN_LOD	tsvscode.ts	/^    readonly TEXTURE_MIN_LOD: 0x813A;$/;"	v
TEXTURE_WRAP_R	tsvscode.ts	/^    readonly TEXTURE_WRAP_R: 0x8072;$/;"	p	interface:WebGL2RenderingContextBase
TEXTURE_WRAP_R	tsvscode.ts	/^    readonly TEXTURE_WRAP_R: 0x8072;$/;"	v
TEXTURE_WRAP_S	tsvscode.ts	/^    readonly TEXTURE_WRAP_S: 0x2802;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE_WRAP_S	tsvscode.ts	/^    readonly TEXTURE_WRAP_S: 0x2802;$/;"	v
TEXTURE_WRAP_T	tsvscode.ts	/^    readonly TEXTURE_WRAP_T: 0x2803;$/;"	p	interface:WebGLRenderingContextBase
TEXTURE_WRAP_T	tsvscode.ts	/^    readonly TEXTURE_WRAP_T: 0x2803;$/;"	v
TEXT_NODE	tsvscode.ts	/^    readonly TEXT_NODE: 3;$/;"	p	interface:Node
TEXT_NODE	tsvscode.ts	/^    readonly TEXT_NODE: 3;$/;"	v
TIMEOUT	tsvscode.ts	/^    readonly TIMEOUT: 3;$/;"	p	interface:GeolocationPositionError
TIMEOUT	tsvscode.ts	/^    readonly TIMEOUT: 3;$/;"	v
TIMEOUT_ERR	tsvscode.ts	/^    readonly TIMEOUT_ERR: 23;$/;"	p	interface:DOMException
TIMEOUT_ERR	tsvscode.ts	/^    readonly TIMEOUT_ERR: 23;$/;"	v
TIMEOUT_EXPIRED	tsvscode.ts	/^    readonly TIMEOUT_EXPIRED: 0x911B;$/;"	p	interface:WebGL2RenderingContextBase
TIMEOUT_EXPIRED	tsvscode.ts	/^    readonly TIMEOUT_EXPIRED: 0x911B;$/;"	v
TIMEOUT_IGNORED	tsvscode.ts	/^    readonly TIMEOUT_IGNORED: -1;$/;"	p	interface:WebGL2RenderingContextBase
TIMEOUT_IGNORED	tsvscode.ts	/^    readonly TIMEOUT_IGNORED: -1;$/;"	v
TRANSFORM_FEEDBACK	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK: 0x8E22;$/;"	p	interface:WebGL2RenderingContextBase
TRANSFORM_FEEDBACK	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK: 0x8E22;$/;"	v
TRANSFORM_FEEDBACK_ACTIVE	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_ACTIVE: 0x8E24;$/;"	p	interface:WebGL2RenderingContextBase
TRANSFORM_FEEDBACK_ACTIVE	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_ACTIVE: 0x8E24;$/;"	v
TRANSFORM_FEEDBACK_BINDING	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_BINDING: 0x8E25;$/;"	p	interface:WebGL2RenderingContextBase
TRANSFORM_FEEDBACK_BINDING	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_BINDING: 0x8E25;$/;"	v
TRANSFORM_FEEDBACK_BUFFER	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_BUFFER: 0x8C8E;$/;"	p	interface:WebGL2RenderingContextBase
TRANSFORM_FEEDBACK_BUFFER	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_BUFFER: 0x8C8E;$/;"	v
TRANSFORM_FEEDBACK_BUFFER_BINDING	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_BUFFER_BINDING: 0x8C8F;$/;"	p	interface:WebGL2RenderingContextBase
TRANSFORM_FEEDBACK_BUFFER_BINDING	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_BUFFER_BINDING: 0x8C8F;$/;"	v
TRANSFORM_FEEDBACK_BUFFER_MODE	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_BUFFER_MODE: 0x8C7F;$/;"	p	interface:WebGL2RenderingContextBase
TRANSFORM_FEEDBACK_BUFFER_MODE	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_BUFFER_MODE: 0x8C7F;$/;"	v
TRANSFORM_FEEDBACK_BUFFER_SIZE	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_BUFFER_SIZE: 0x8C85;$/;"	p	interface:WebGL2RenderingContextBase
TRANSFORM_FEEDBACK_BUFFER_SIZE	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_BUFFER_SIZE: 0x8C85;$/;"	v
TRANSFORM_FEEDBACK_BUFFER_START	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_BUFFER_START: 0x8C84;$/;"	p	interface:WebGL2RenderingContextBase
TRANSFORM_FEEDBACK_BUFFER_START	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_BUFFER_START: 0x8C84;$/;"	v
TRANSFORM_FEEDBACK_PAUSED	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_PAUSED: 0x8E23;$/;"	p	interface:WebGL2RenderingContextBase
TRANSFORM_FEEDBACK_PAUSED	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_PAUSED: 0x8E23;$/;"	v
TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: 0x8C88;$/;"	p	interface:WebGL2RenderingContextBase
TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: 0x8C88;$/;"	v
TRANSFORM_FEEDBACK_VARYINGS	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_VARYINGS: 0x8C83;$/;"	p	interface:WebGL2RenderingContextBase
TRANSFORM_FEEDBACK_VARYINGS	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_VARYINGS: 0x8C83;$/;"	v
TRIANGLES	tsvscode.ts	/^    readonly TRIANGLES: 0x0004;$/;"	p	interface:WebGLRenderingContextBase
TRIANGLES	tsvscode.ts	/^    readonly TRIANGLES: 0x0004;$/;"	v
TRIANGLE_FAN	tsvscode.ts	/^    readonly TRIANGLE_FAN: 0x0006;$/;"	p	interface:WebGLRenderingContextBase
TRIANGLE_FAN	tsvscode.ts	/^    readonly TRIANGLE_FAN: 0x0006;$/;"	v
TRIANGLE_STRIP	tsvscode.ts	/^    readonly TRIANGLE_STRIP: 0x0005;$/;"	p	interface:WebGLRenderingContextBase
TRIANGLE_STRIP	tsvscode.ts	/^    readonly TRIANGLE_STRIP: 0x0005;$/;"	v
TYPE_BACK_FORWARD	tsvscode.ts	/^    readonly TYPE_BACK_FORWARD: 2;$/;"	p	interface:PerformanceNavigation
TYPE_BACK_FORWARD	tsvscode.ts	/^    readonly TYPE_BACK_FORWARD: 2;$/;"	v
TYPE_MISMATCH_ERR	tsvscode.ts	/^    readonly TYPE_MISMATCH_ERR: 17;$/;"	p	interface:DOMException
TYPE_MISMATCH_ERR	tsvscode.ts	/^    readonly TYPE_MISMATCH_ERR: 17;$/;"	v
TYPE_NAVIGATE	tsvscode.ts	/^    readonly TYPE_NAVIGATE: 0;$/;"	p	interface:PerformanceNavigation
TYPE_NAVIGATE	tsvscode.ts	/^    readonly TYPE_NAVIGATE: 0;$/;"	v
TYPE_RELOAD	tsvscode.ts	/^    readonly TYPE_RELOAD: 1;$/;"	p	interface:PerformanceNavigation
TYPE_RELOAD	tsvscode.ts	/^    readonly TYPE_RELOAD: 1;$/;"	v
TYPE_RESERVED	tsvscode.ts	/^    readonly TYPE_RESERVED: 255;$/;"	p	interface:PerformanceNavigation
TYPE_RESERVED	tsvscode.ts	/^    readonly TYPE_RESERVED: 255;$/;"	v
TemplateStringsArray	ests.ts	/^interface TemplateStringsArray extends ReadonlyArray<string> {$/;"	i
Text	tsvscode.ts	/^declare var Text: {$/;"	v
Text	tsvscode.ts	/^interface Text extends CharacterData, Slottable {$/;"	i
TextDecodeOptions	tsvscode.ts	/^interface TextDecodeOptions {$/;"	i
TextDecoder	tsvscode.ts	/^declare var TextDecoder: {$/;"	v
TextDecoder	tsvscode.ts	/^interface TextDecoder extends TextDecoderCommon {$/;"	i
TextDecoderCommon	tsvscode.ts	/^interface TextDecoderCommon {$/;"	i
TextDecoderOptions	tsvscode.ts	/^interface TextDecoderOptions {$/;"	i
TextDecoderStream	tsvscode.ts	/^declare var TextDecoderStream: {$/;"	v
TextDecoderStream	tsvscode.ts	/^interface TextDecoderStream extends GenericTransformStream, TextDecoderCommon {$/;"	i
TextEncoder	tsvscode.ts	/^declare var TextEncoder: {$/;"	v
TextEncoder	tsvscode.ts	/^interface TextEncoder extends TextEncoderCommon {$/;"	i
TextEncoderCommon	tsvscode.ts	/^interface TextEncoderCommon {$/;"	i
TextEncoderEncodeIntoResult	tsvscode.ts	/^interface TextEncoderEncodeIntoResult {$/;"	i
TextEncoderStream	tsvscode.ts	/^declare var TextEncoderStream: {$/;"	v
TextEncoderStream	tsvscode.ts	/^interface TextEncoderStream extends GenericTransformStream, TextEncoderCommon {$/;"	i
TextMetrics	tsvscode.ts	/^declare var TextMetrics: {$/;"	v
TextMetrics	tsvscode.ts	/^interface TextMetrics {$/;"	i
TextTrack	tsvscode.ts	/^declare var TextTrack: {$/;"	v
TextTrack	tsvscode.ts	/^interface TextTrack extends EventTarget {$/;"	i
TextTrackCue	tsvscode.ts	/^declare var TextTrackCue: {$/;"	v
TextTrackCue	tsvscode.ts	/^interface TextTrackCue extends EventTarget {$/;"	i
TextTrackCueEventMap	tsvscode.ts	/^interface TextTrackCueEventMap {$/;"	i
TextTrackCueList	tsvscode.ts	/^declare var TextTrackCueList: {$/;"	v
TextTrackCueList	tsvscode.ts	/^interface TextTrackCueList {$/;"	i
TextTrackEventMap	tsvscode.ts	/^interface TextTrackEventMap {$/;"	i
TextTrackList	tsvscode.ts	/^declare var TextTrackList: {$/;"	v
TextTrackList	tsvscode.ts	/^interface TextTrackList extends EventTarget {$/;"	i
TextTrackListEventMap	tsvscode.ts	/^interface TextTrackListEventMap {$/;"	i
ThisParameterType	ests.ts	/^type ThisParameterType<T> = T extends (this: infer U, ...args: never) => any ? U : unknown;$/;"	a
ThisType	ests.ts	/^interface ThisType<T> {}$/;"	i
TimeRanges	tsvscode.ts	/^declare var TimeRanges: {$/;"	v
TimeRanges	tsvscode.ts	/^interface TimeRanges {$/;"	i
ToggleEvent	tsvscode.ts	/^declare var ToggleEvent: {$/;"	v
ToggleEvent	tsvscode.ts	/^interface ToggleEvent extends Event {$/;"	i
ToggleEventInit	tsvscode.ts	/^interface ToggleEventInit extends EventInit {$/;"	i
Touch	tsvscode.ts	/^declare var Touch: {$/;"	v
Touch	tsvscode.ts	/^interface Touch {$/;"	i
TouchEvent	tsvscode.ts	/^declare var TouchEvent: {$/;"	v
TouchEvent	tsvscode.ts	/^interface TouchEvent extends UIEvent {$/;"	i
TouchEventInit	tsvscode.ts	/^interface TouchEventInit extends EventModifierInit {$/;"	i
TouchInit	tsvscode.ts	/^interface TouchInit {$/;"	i
TouchList	tsvscode.ts	/^declare var TouchList: {$/;"	v
TouchList	tsvscode.ts	/^interface TouchList {$/;"	i
TrackEvent	tsvscode.ts	/^declare var TrackEvent: {$/;"	v
TrackEvent	tsvscode.ts	/^interface TrackEvent extends Event {$/;"	i
TrackEventInit	tsvscode.ts	/^interface TrackEventInit extends EventInit {$/;"	i
TransformStream	tsvscode.ts	/^declare var TransformStream: {$/;"	v
TransformStream	tsvscode.ts	/^interface TransformStream<I = any, O = any> {$/;"	i
TransformStreamDefaultController	tsvscode.ts	/^declare var TransformStreamDefaultController: {$/;"	v
TransformStreamDefaultController	tsvscode.ts	/^interface TransformStreamDefaultController<O = any> {$/;"	i
Transformer	tsvscode.ts	/^interface Transformer<I = any, O = any> {$/;"	i
TransformerFlushCallback	tsvscode.ts	/^interface TransformerFlushCallback<O> {$/;"	i	namespace:CSS
TransformerStartCallback	tsvscode.ts	/^interface TransformerStartCallback<O> {$/;"	i	namespace:CSS
TransformerTransformCallback	tsvscode.ts	/^interface TransformerTransformCallback<I, O> {$/;"	i	namespace:CSS
TransitionEvent	tsvscode.ts	/^declare var TransitionEvent: {$/;"	v
TransitionEvent	tsvscode.ts	/^interface TransitionEvent extends Event {$/;"	i
TransitionEventInit	tsvscode.ts	/^interface TransitionEventInit extends EventInit {$/;"	i
TreeWalker	tsvscode.ts	/^declare var TreeWalker: {$/;"	v
TreeWalker	tsvscode.ts	/^interface TreeWalker {$/;"	i
TypeError	ests.ts	/^declare var TypeError: TypeErrorConstructor;$/;"	v
TypeError	ests.ts	/^interface TypeError extends Error {$/;"	i
TypeErrorConstructor	ests.ts	/^interface TypeErrorConstructor extends ErrorConstructor {$/;"	i
TypedPropertyDescriptor	ests.ts	/^interface TypedPropertyDescriptor<T> {$/;"	i
UIEvent	tsvscode.ts	/^declare var UIEvent: {$/;"	v
UIEvent	tsvscode.ts	/^interface UIEvent extends Event {$/;"	i
UIEventInit	tsvscode.ts	/^interface UIEventInit extends EventInit {$/;"	i
ULongRange	tsvscode.ts	/^interface ULongRange {$/;"	i
UNIFORM_ARRAY_STRIDE	tsvscode.ts	/^    readonly UNIFORM_ARRAY_STRIDE: 0x8A3C;$/;"	p	interface:WebGL2RenderingContextBase
UNIFORM_ARRAY_STRIDE	tsvscode.ts	/^    readonly UNIFORM_ARRAY_STRIDE: 0x8A3C;$/;"	v
UNIFORM_BLOCK_ACTIVE_UNIFORMS	tsvscode.ts	/^    readonly UNIFORM_BLOCK_ACTIVE_UNIFORMS: 0x8A42;$/;"	p	interface:WebGL2RenderingContextBase
UNIFORM_BLOCK_ACTIVE_UNIFORMS	tsvscode.ts	/^    readonly UNIFORM_BLOCK_ACTIVE_UNIFORMS: 0x8A42;$/;"	v
UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	tsvscode.ts	/^    readonly UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: 0x8A43;$/;"	p	interface:WebGL2RenderingContextBase
UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	tsvscode.ts	/^    readonly UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: 0x8A43;$/;"	v
UNIFORM_BLOCK_BINDING	tsvscode.ts	/^    readonly UNIFORM_BLOCK_BINDING: 0x8A3F;$/;"	p	interface:WebGL2RenderingContextBase
UNIFORM_BLOCK_BINDING	tsvscode.ts	/^    readonly UNIFORM_BLOCK_BINDING: 0x8A3F;$/;"	v
UNIFORM_BLOCK_DATA_SIZE	tsvscode.ts	/^    readonly UNIFORM_BLOCK_DATA_SIZE: 0x8A40;$/;"	p	interface:WebGL2RenderingContextBase
UNIFORM_BLOCK_DATA_SIZE	tsvscode.ts	/^    readonly UNIFORM_BLOCK_DATA_SIZE: 0x8A40;$/;"	v
UNIFORM_BLOCK_INDEX	tsvscode.ts	/^    readonly UNIFORM_BLOCK_INDEX: 0x8A3A;$/;"	p	interface:WebGL2RenderingContextBase
UNIFORM_BLOCK_INDEX	tsvscode.ts	/^    readonly UNIFORM_BLOCK_INDEX: 0x8A3A;$/;"	v
UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	tsvscode.ts	/^    readonly UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: 0x8A46;$/;"	p	interface:WebGL2RenderingContextBase
UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	tsvscode.ts	/^    readonly UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: 0x8A46;$/;"	v
UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	tsvscode.ts	/^    readonly UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: 0x8A44;$/;"	p	interface:WebGL2RenderingContextBase
UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	tsvscode.ts	/^    readonly UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: 0x8A44;$/;"	v
UNIFORM_BUFFER	tsvscode.ts	/^    readonly UNIFORM_BUFFER: 0x8A11;$/;"	p	interface:WebGL2RenderingContextBase
UNIFORM_BUFFER	tsvscode.ts	/^    readonly UNIFORM_BUFFER: 0x8A11;$/;"	v
UNIFORM_BUFFER_BINDING	tsvscode.ts	/^    readonly UNIFORM_BUFFER_BINDING: 0x8A28;$/;"	p	interface:WebGL2RenderingContextBase
UNIFORM_BUFFER_BINDING	tsvscode.ts	/^    readonly UNIFORM_BUFFER_BINDING: 0x8A28;$/;"	v
UNIFORM_BUFFER_OFFSET_ALIGNMENT	tsvscode.ts	/^    readonly UNIFORM_BUFFER_OFFSET_ALIGNMENT: 0x8A34;$/;"	p	interface:WebGL2RenderingContextBase
UNIFORM_BUFFER_OFFSET_ALIGNMENT	tsvscode.ts	/^    readonly UNIFORM_BUFFER_OFFSET_ALIGNMENT: 0x8A34;$/;"	v
UNIFORM_BUFFER_SIZE	tsvscode.ts	/^    readonly UNIFORM_BUFFER_SIZE: 0x8A2A;$/;"	p	interface:WebGL2RenderingContextBase
UNIFORM_BUFFER_SIZE	tsvscode.ts	/^    readonly UNIFORM_BUFFER_SIZE: 0x8A2A;$/;"	v
UNIFORM_BUFFER_START	tsvscode.ts	/^    readonly UNIFORM_BUFFER_START: 0x8A29;$/;"	p	interface:WebGL2RenderingContextBase
UNIFORM_BUFFER_START	tsvscode.ts	/^    readonly UNIFORM_BUFFER_START: 0x8A29;$/;"	v
UNIFORM_IS_ROW_MAJOR	tsvscode.ts	/^    readonly UNIFORM_IS_ROW_MAJOR: 0x8A3E;$/;"	p	interface:WebGL2RenderingContextBase
UNIFORM_IS_ROW_MAJOR	tsvscode.ts	/^    readonly UNIFORM_IS_ROW_MAJOR: 0x8A3E;$/;"	v
UNIFORM_MATRIX_STRIDE	tsvscode.ts	/^    readonly UNIFORM_MATRIX_STRIDE: 0x8A3D;$/;"	p	interface:WebGL2RenderingContextBase
UNIFORM_MATRIX_STRIDE	tsvscode.ts	/^    readonly UNIFORM_MATRIX_STRIDE: 0x8A3D;$/;"	v
UNIFORM_OFFSET	tsvscode.ts	/^    readonly UNIFORM_OFFSET: 0x8A3B;$/;"	p	interface:WebGL2RenderingContextBase
UNIFORM_OFFSET	tsvscode.ts	/^    readonly UNIFORM_OFFSET: 0x8A3B;$/;"	v
UNIFORM_SIZE	tsvscode.ts	/^    readonly UNIFORM_SIZE: 0x8A38;$/;"	p	interface:WebGL2RenderingContextBase
UNIFORM_SIZE	tsvscode.ts	/^    readonly UNIFORM_SIZE: 0x8A38;$/;"	v
UNIFORM_TYPE	tsvscode.ts	/^    readonly UNIFORM_TYPE: 0x8A37;$/;"	p	interface:WebGL2RenderingContextBase
UNIFORM_TYPE	tsvscode.ts	/^    readonly UNIFORM_TYPE: 0x8A37;$/;"	v
UNMASKED_RENDERER_WEBGL	tsvscode.ts	/^    readonly UNMASKED_RENDERER_WEBGL: 0x9246;$/;"	p	interface:WEBGL_debug_renderer_info
UNMASKED_VENDOR_WEBGL	tsvscode.ts	/^    readonly UNMASKED_VENDOR_WEBGL: 0x9245;$/;"	p	interface:WEBGL_debug_renderer_info
UNORDERED_NODE_ITERATOR_TYPE	tsvscode.ts	/^    readonly UNORDERED_NODE_ITERATOR_TYPE: 4;$/;"	p	interface:XPathResult
UNORDERED_NODE_ITERATOR_TYPE	tsvscode.ts	/^    readonly UNORDERED_NODE_ITERATOR_TYPE: 4;$/;"	v
UNORDERED_NODE_SNAPSHOT_TYPE	tsvscode.ts	/^    readonly UNORDERED_NODE_SNAPSHOT_TYPE: 6;$/;"	p	interface:XPathResult
UNORDERED_NODE_SNAPSHOT_TYPE	tsvscode.ts	/^    readonly UNORDERED_NODE_SNAPSHOT_TYPE: 6;$/;"	v
UNPACK_ALIGNMENT	tsvscode.ts	/^    readonly UNPACK_ALIGNMENT: 0x0CF5;$/;"	p	interface:WebGLRenderingContextBase
UNPACK_ALIGNMENT	tsvscode.ts	/^    readonly UNPACK_ALIGNMENT: 0x0CF5;$/;"	v
UNPACK_COLORSPACE_CONVERSION_WEBGL	tsvscode.ts	/^    readonly UNPACK_COLORSPACE_CONVERSION_WEBGL: 0x9243;$/;"	p	interface:WebGLRenderingContextBase
UNPACK_COLORSPACE_CONVERSION_WEBGL	tsvscode.ts	/^    readonly UNPACK_COLORSPACE_CONVERSION_WEBGL: 0x9243;$/;"	v
UNPACK_FLIP_Y_WEBGL	tsvscode.ts	/^    readonly UNPACK_FLIP_Y_WEBGL: 0x9240;$/;"	p	interface:WebGLRenderingContextBase
UNPACK_FLIP_Y_WEBGL	tsvscode.ts	/^    readonly UNPACK_FLIP_Y_WEBGL: 0x9240;$/;"	v
UNPACK_IMAGE_HEIGHT	tsvscode.ts	/^    readonly UNPACK_IMAGE_HEIGHT: 0x806E;$/;"	p	interface:WebGL2RenderingContextBase
UNPACK_IMAGE_HEIGHT	tsvscode.ts	/^    readonly UNPACK_IMAGE_HEIGHT: 0x806E;$/;"	v
UNPACK_PREMULTIPLY_ALPHA_WEBGL	tsvscode.ts	/^    readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL: 0x9241;$/;"	p	interface:WebGLRenderingContextBase
UNPACK_PREMULTIPLY_ALPHA_WEBGL	tsvscode.ts	/^    readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL: 0x9241;$/;"	v
UNPACK_ROW_LENGTH	tsvscode.ts	/^    readonly UNPACK_ROW_LENGTH: 0x0CF2;$/;"	p	interface:WebGL2RenderingContextBase
UNPACK_ROW_LENGTH	tsvscode.ts	/^    readonly UNPACK_ROW_LENGTH: 0x0CF2;$/;"	v
UNPACK_SKIP_IMAGES	tsvscode.ts	/^    readonly UNPACK_SKIP_IMAGES: 0x806D;$/;"	p	interface:WebGL2RenderingContextBase
UNPACK_SKIP_IMAGES	tsvscode.ts	/^    readonly UNPACK_SKIP_IMAGES: 0x806D;$/;"	v
UNPACK_SKIP_PIXELS	tsvscode.ts	/^    readonly UNPACK_SKIP_PIXELS: 0x0CF4;$/;"	p	interface:WebGL2RenderingContextBase
UNPACK_SKIP_PIXELS	tsvscode.ts	/^    readonly UNPACK_SKIP_PIXELS: 0x0CF4;$/;"	v
UNPACK_SKIP_ROWS	tsvscode.ts	/^    readonly UNPACK_SKIP_ROWS: 0x0CF3;$/;"	p	interface:WebGL2RenderingContextBase
UNPACK_SKIP_ROWS	tsvscode.ts	/^    readonly UNPACK_SKIP_ROWS: 0x0CF3;$/;"	v
UNSENT	tsvscode.ts	/^    readonly UNSENT: 0;$/;"	p	interface:XMLHttpRequest
UNSENT	tsvscode.ts	/^    readonly UNSENT: 0;$/;"	v
UNSIGNALED	tsvscode.ts	/^    readonly UNSIGNALED: 0x9118;$/;"	p	interface:WebGL2RenderingContextBase
UNSIGNALED	tsvscode.ts	/^    readonly UNSIGNALED: 0x9118;$/;"	v
UNSIGNED_BYTE	tsvscode.ts	/^    readonly UNSIGNED_BYTE: 0x1401;$/;"	p	interface:WebGLRenderingContextBase
UNSIGNED_BYTE	tsvscode.ts	/^    readonly UNSIGNED_BYTE: 0x1401;$/;"	v
UNSIGNED_INT	tsvscode.ts	/^    readonly UNSIGNED_INT: 0x1405;$/;"	p	interface:WebGLRenderingContextBase
UNSIGNED_INT	tsvscode.ts	/^    readonly UNSIGNED_INT: 0x1405;$/;"	v
UNSIGNED_INT_10F_11F_11F_REV	tsvscode.ts	/^    readonly UNSIGNED_INT_10F_11F_11F_REV: 0x8C3B;$/;"	p	interface:WebGL2RenderingContextBase
UNSIGNED_INT_10F_11F_11F_REV	tsvscode.ts	/^    readonly UNSIGNED_INT_10F_11F_11F_REV: 0x8C3B;$/;"	v
UNSIGNED_INT_24_8	tsvscode.ts	/^    readonly UNSIGNED_INT_24_8: 0x84FA;$/;"	p	interface:WebGL2RenderingContextBase
UNSIGNED_INT_24_8	tsvscode.ts	/^    readonly UNSIGNED_INT_24_8: 0x84FA;$/;"	v
UNSIGNED_INT_24_8_WEBGL	tsvscode.ts	/^    readonly UNSIGNED_INT_24_8_WEBGL: 0x84FA;$/;"	p	interface:WEBGL_depth_texture
UNSIGNED_INT_2_10_10_10_REV	tsvscode.ts	/^    readonly UNSIGNED_INT_2_10_10_10_REV: 0x8368;$/;"	p	interface:WebGL2RenderingContextBase
UNSIGNED_INT_2_10_10_10_REV	tsvscode.ts	/^    readonly UNSIGNED_INT_2_10_10_10_REV: 0x8368;$/;"	v
UNSIGNED_INT_5_9_9_9_REV	tsvscode.ts	/^    readonly UNSIGNED_INT_5_9_9_9_REV: 0x8C3E;$/;"	p	interface:WebGL2RenderingContextBase
UNSIGNED_INT_5_9_9_9_REV	tsvscode.ts	/^    readonly UNSIGNED_INT_5_9_9_9_REV: 0x8C3E;$/;"	v
UNSIGNED_INT_SAMPLER_2D	tsvscode.ts	/^    readonly UNSIGNED_INT_SAMPLER_2D: 0x8DD2;$/;"	p	interface:WebGL2RenderingContextBase
UNSIGNED_INT_SAMPLER_2D	tsvscode.ts	/^    readonly UNSIGNED_INT_SAMPLER_2D: 0x8DD2;$/;"	v
UNSIGNED_INT_SAMPLER_2D_ARRAY	tsvscode.ts	/^    readonly UNSIGNED_INT_SAMPLER_2D_ARRAY: 0x8DD7;$/;"	p	interface:WebGL2RenderingContextBase
UNSIGNED_INT_SAMPLER_2D_ARRAY	tsvscode.ts	/^    readonly UNSIGNED_INT_SAMPLER_2D_ARRAY: 0x8DD7;$/;"	v
UNSIGNED_INT_SAMPLER_3D	tsvscode.ts	/^    readonly UNSIGNED_INT_SAMPLER_3D: 0x8DD3;$/;"	p	interface:WebGL2RenderingContextBase
UNSIGNED_INT_SAMPLER_3D	tsvscode.ts	/^    readonly UNSIGNED_INT_SAMPLER_3D: 0x8DD3;$/;"	v
UNSIGNED_INT_SAMPLER_CUBE	tsvscode.ts	/^    readonly UNSIGNED_INT_SAMPLER_CUBE: 0x8DD4;$/;"	p	interface:WebGL2RenderingContextBase
UNSIGNED_INT_SAMPLER_CUBE	tsvscode.ts	/^    readonly UNSIGNED_INT_SAMPLER_CUBE: 0x8DD4;$/;"	v
UNSIGNED_INT_VEC2	tsvscode.ts	/^    readonly UNSIGNED_INT_VEC2: 0x8DC6;$/;"	p	interface:WebGL2RenderingContextBase
UNSIGNED_INT_VEC2	tsvscode.ts	/^    readonly UNSIGNED_INT_VEC2: 0x8DC6;$/;"	v
UNSIGNED_INT_VEC3	tsvscode.ts	/^    readonly UNSIGNED_INT_VEC3: 0x8DC7;$/;"	p	interface:WebGL2RenderingContextBase
UNSIGNED_INT_VEC3	tsvscode.ts	/^    readonly UNSIGNED_INT_VEC3: 0x8DC7;$/;"	v
UNSIGNED_INT_VEC4	tsvscode.ts	/^    readonly UNSIGNED_INT_VEC4: 0x8DC8;$/;"	p	interface:WebGL2RenderingContextBase
UNSIGNED_INT_VEC4	tsvscode.ts	/^    readonly UNSIGNED_INT_VEC4: 0x8DC8;$/;"	v
UNSIGNED_NORMALIZED	tsvscode.ts	/^    readonly UNSIGNED_NORMALIZED: 0x8C17;$/;"	p	interface:WebGL2RenderingContextBase
UNSIGNED_NORMALIZED	tsvscode.ts	/^    readonly UNSIGNED_NORMALIZED: 0x8C17;$/;"	v
UNSIGNED_NORMALIZED_EXT	tsvscode.ts	/^    readonly UNSIGNED_NORMALIZED_EXT: 0x8C17;$/;"	p	interface:EXT_color_buffer_half_float
UNSIGNED_NORMALIZED_EXT	tsvscode.ts	/^    readonly UNSIGNED_NORMALIZED_EXT: 0x8C17;$/;"	p	interface:WEBGL_color_buffer_float
UNSIGNED_SHORT	tsvscode.ts	/^    readonly UNSIGNED_SHORT: 0x1403;$/;"	p	interface:WebGLRenderingContextBase
UNSIGNED_SHORT	tsvscode.ts	/^    readonly UNSIGNED_SHORT: 0x1403;$/;"	v
UNSIGNED_SHORT_4_4_4_4	tsvscode.ts	/^    readonly UNSIGNED_SHORT_4_4_4_4: 0x8033;$/;"	p	interface:WebGLRenderingContextBase
UNSIGNED_SHORT_4_4_4_4	tsvscode.ts	/^    readonly UNSIGNED_SHORT_4_4_4_4: 0x8033;$/;"	v
UNSIGNED_SHORT_5_5_5_1	tsvscode.ts	/^    readonly UNSIGNED_SHORT_5_5_5_1: 0x8034;$/;"	p	interface:WebGLRenderingContextBase
UNSIGNED_SHORT_5_5_5_1	tsvscode.ts	/^    readonly UNSIGNED_SHORT_5_5_5_1: 0x8034;$/;"	v
UNSIGNED_SHORT_5_6_5	tsvscode.ts	/^    readonly UNSIGNED_SHORT_5_6_5: 0x8363;$/;"	p	interface:WebGLRenderingContextBase
UNSIGNED_SHORT_5_6_5	tsvscode.ts	/^    readonly UNSIGNED_SHORT_5_6_5: 0x8363;$/;"	v
URIError	ests.ts	/^declare var URIError: URIErrorConstructor;$/;"	v
URIError	ests.ts	/^interface URIError extends Error {$/;"	i
URIErrorConstructor	ests.ts	/^interface URIErrorConstructor extends ErrorConstructor {$/;"	i
URL	tsvscode.ts	/^    readonly URL: string;$/;"	p	interface:Document
URL	tsvscode.ts	/^declare var URL: {$/;"	v
URL	tsvscode.ts	/^interface URL {$/;"	i
URLSearchParams	tsvscode.ts	/^declare var URLSearchParams: {$/;"	v
URLSearchParams	tsvscode.ts	/^interface URLSearchParams {$/;"	i
URL_MISMATCH_ERR	tsvscode.ts	/^    readonly URL_MISMATCH_ERR: 21;$/;"	p	interface:DOMException
URL_MISMATCH_ERR	tsvscode.ts	/^    readonly URL_MISMATCH_ERR: 21;$/;"	v
UTC	ests.ts	/^    UTC(year: number, monthIndex: number, date?: number, hours?: number, minutes?: number, secon/;"	m	interface:DateConstructor
Uint16Array	ests.ts	/^declare var Uint16Array: Uint16ArrayConstructor;$/;"	v
Uint16Array	ests.ts	/^interface Uint16Array {$/;"	i
Uint16ArrayConstructor	ests.ts	/^interface Uint16ArrayConstructor {$/;"	i
Uint32Array	ests.ts	/^declare var Uint32Array: Uint32ArrayConstructor;$/;"	v
Uint32Array	ests.ts	/^interface Uint32Array {$/;"	i
Uint32ArrayConstructor	ests.ts	/^interface Uint32ArrayConstructor {$/;"	i
Uint8Array	ests.ts	/^declare var Uint8Array: Uint8ArrayConstructor;$/;"	v
Uint8Array	ests.ts	/^interface Uint8Array {$/;"	i
Uint8ArrayConstructor	ests.ts	/^interface Uint8ArrayConstructor {$/;"	i
Uint8ClampedArray	ests.ts	/^declare var Uint8ClampedArray: Uint8ClampedArrayConstructor;$/;"	v
Uint8ClampedArray	ests.ts	/^interface Uint8ClampedArray {$/;"	i
Uint8ClampedArrayConstructor	ests.ts	/^interface Uint8ClampedArrayConstructor {$/;"	i
Uncapitalize	ests.ts	/^type Uncapitalize<S extends string> = intrinsic;$/;"	a
UnderlyingByteSource	tsvscode.ts	/^interface UnderlyingByteSource {$/;"	i
UnderlyingDefaultSource	tsvscode.ts	/^interface UnderlyingDefaultSource<R = any> {$/;"	i
UnderlyingSink	tsvscode.ts	/^interface UnderlyingSink<W = any> {$/;"	i
UnderlyingSinkAbortCallback	tsvscode.ts	/^interface UnderlyingSinkAbortCallback {$/;"	i	namespace:CSS
UnderlyingSinkCloseCallback	tsvscode.ts	/^interface UnderlyingSinkCloseCallback {$/;"	i	namespace:CSS
UnderlyingSinkStartCallback	tsvscode.ts	/^interface UnderlyingSinkStartCallback {$/;"	i	namespace:CSS
UnderlyingSinkWriteCallback	tsvscode.ts	/^interface UnderlyingSinkWriteCallback<W> {$/;"	i	namespace:CSS
UnderlyingSource	tsvscode.ts	/^interface UnderlyingSource<R = any> {$/;"	i
UnderlyingSourceCancelCallback	tsvscode.ts	/^interface UnderlyingSourceCancelCallback {$/;"	i	namespace:CSS
UnderlyingSourcePullCallback	tsvscode.ts	/^interface UnderlyingSourcePullCallback<R> {$/;"	i	namespace:CSS
UnderlyingSourceStartCallback	tsvscode.ts	/^interface UnderlyingSourceStartCallback<R> {$/;"	i	namespace:CSS
Uppercase	ests.ts	/^type Uppercase<S extends string> = intrinsic;$/;"	a
UserActivation	tsvscode.ts	/^declare var UserActivation: {$/;"	v
UserActivation	tsvscode.ts	/^interface UserActivation {$/;"	i
VALIDATE_STATUS	tsvscode.ts	/^    readonly VALIDATE_STATUS: 0x8B83;$/;"	p	interface:WebGLRenderingContextBase
VALIDATE_STATUS	tsvscode.ts	/^    readonly VALIDATE_STATUS: 0x8B83;$/;"	v
VALIDATION_ERR	tsvscode.ts	/^    readonly VALIDATION_ERR: 16;$/;"	p	interface:DOMException
VALIDATION_ERR	tsvscode.ts	/^    readonly VALIDATION_ERR: 16;$/;"	v
VENDOR	tsvscode.ts	/^    readonly VENDOR: 0x1F00;$/;"	p	interface:WebGLRenderingContextBase
VENDOR	tsvscode.ts	/^    readonly VENDOR: 0x1F00;$/;"	v
VERSION	tsvscode.ts	/^    readonly VERSION: 0x1F02;$/;"	p	interface:WebGLRenderingContextBase
VERSION	tsvscode.ts	/^    readonly VERSION: 0x1F02;$/;"	v
VERTEX_ARRAY_BINDING	tsvscode.ts	/^    readonly VERTEX_ARRAY_BINDING: 0x85B5;$/;"	p	interface:WebGL2RenderingContextBase
VERTEX_ARRAY_BINDING	tsvscode.ts	/^    readonly VERTEX_ARRAY_BINDING: 0x85B5;$/;"	v
VERTEX_ARRAY_BINDING_OES	tsvscode.ts	/^    readonly VERTEX_ARRAY_BINDING_OES: 0x85B5;$/;"	p	interface:OES_vertex_array_object
VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: 0x889F;$/;"	p	interface:WebGLRenderingContextBase
VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: 0x889F;$/;"	v
VERTEX_ATTRIB_ARRAY_DIVISOR	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_DIVISOR: 0x88FE;$/;"	p	interface:WebGL2RenderingContextBase
VERTEX_ATTRIB_ARRAY_DIVISOR	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_DIVISOR: 0x88FE;$/;"	v
VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE: 0x88FE;$/;"	p	interface:ANGLE_instanced_arrays
VERTEX_ATTRIB_ARRAY_ENABLED	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_ENABLED: 0x8622;$/;"	p	interface:WebGLRenderingContextBase
VERTEX_ATTRIB_ARRAY_ENABLED	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_ENABLED: 0x8622;$/;"	v
VERTEX_ATTRIB_ARRAY_INTEGER	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_INTEGER: 0x88FD;$/;"	p	interface:WebGL2RenderingContextBase
VERTEX_ATTRIB_ARRAY_INTEGER	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_INTEGER: 0x88FD;$/;"	v
VERTEX_ATTRIB_ARRAY_NORMALIZED	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_NORMALIZED: 0x886A;$/;"	p	interface:WebGLRenderingContextBase
VERTEX_ATTRIB_ARRAY_NORMALIZED	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_NORMALIZED: 0x886A;$/;"	v
VERTEX_ATTRIB_ARRAY_POINTER	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_POINTER: 0x8645;$/;"	p	interface:WebGLRenderingContextBase
VERTEX_ATTRIB_ARRAY_POINTER	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_POINTER: 0x8645;$/;"	v
VERTEX_ATTRIB_ARRAY_SIZE	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_SIZE: 0x8623;$/;"	p	interface:WebGLRenderingContextBase
VERTEX_ATTRIB_ARRAY_SIZE	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_SIZE: 0x8623;$/;"	v
VERTEX_ATTRIB_ARRAY_STRIDE	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_STRIDE: 0x8624;$/;"	p	interface:WebGLRenderingContextBase
VERTEX_ATTRIB_ARRAY_STRIDE	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_STRIDE: 0x8624;$/;"	v
VERTEX_ATTRIB_ARRAY_TYPE	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_TYPE: 0x8625;$/;"	p	interface:WebGLRenderingContextBase
VERTEX_ATTRIB_ARRAY_TYPE	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_TYPE: 0x8625;$/;"	v
VERTEX_SHADER	tsvscode.ts	/^    readonly VERTEX_SHADER: 0x8B31;$/;"	p	interface:WebGLRenderingContextBase
VERTEX_SHADER	tsvscode.ts	/^    readonly VERTEX_SHADER: 0x8B31;$/;"	v
VIEWPORT	tsvscode.ts	/^    readonly VIEWPORT: 0x0BA2;$/;"	p	interface:WebGLRenderingContextBase
VIEWPORT	tsvscode.ts	/^    readonly VIEWPORT: 0x0BA2;$/;"	v
VTTCue	tsvscode.ts	/^declare var VTTCue: {$/;"	v
VTTCue	tsvscode.ts	/^interface VTTCue extends TextTrackCue {$/;"	i
VTTRegion	tsvscode.ts	/^declare var VTTRegion: {$/;"	v
VTTRegion	tsvscode.ts	/^interface VTTRegion {$/;"	i
ValidityState	tsvscode.ts	/^declare var ValidityState: {$/;"	v
ValidityState	tsvscode.ts	/^interface ValidityState {$/;"	i
ValidityStateFlags	tsvscode.ts	/^interface ValidityStateFlags {$/;"	i
VideoColorSpace	tsvscode.ts	/^declare var VideoColorSpace: {$/;"	v
VideoColorSpace	tsvscode.ts	/^interface VideoColorSpace {$/;"	i
VideoColorSpaceInit	tsvscode.ts	/^interface VideoColorSpaceInit {$/;"	i
VideoConfiguration	tsvscode.ts	/^interface VideoConfiguration {$/;"	i
VideoDecoder	tsvscode.ts	/^declare var VideoDecoder: {$/;"	v
VideoDecoder	tsvscode.ts	/^interface VideoDecoder extends EventTarget {$/;"	i
VideoDecoderConfig	tsvscode.ts	/^interface VideoDecoderConfig {$/;"	i
VideoDecoderEventMap	tsvscode.ts	/^interface VideoDecoderEventMap {$/;"	i
VideoDecoderInit	tsvscode.ts	/^interface VideoDecoderInit {$/;"	i
VideoDecoderSupport	tsvscode.ts	/^interface VideoDecoderSupport {$/;"	i
VideoEncoder	tsvscode.ts	/^declare var VideoEncoder: {$/;"	v
VideoEncoder	tsvscode.ts	/^interface VideoEncoder extends EventTarget {$/;"	i
VideoEncoderConfig	tsvscode.ts	/^interface VideoEncoderConfig {$/;"	i
VideoEncoderEncodeOptions	tsvscode.ts	/^interface VideoEncoderEncodeOptions {$/;"	i
VideoEncoderEventMap	tsvscode.ts	/^interface VideoEncoderEventMap {$/;"	i
VideoEncoderInit	tsvscode.ts	/^interface VideoEncoderInit {$/;"	i
VideoEncoderSupport	tsvscode.ts	/^interface VideoEncoderSupport {$/;"	i
VideoFrame	tsvscode.ts	/^declare var VideoFrame: {$/;"	v
VideoFrame	tsvscode.ts	/^interface VideoFrame {$/;"	i
VideoFrameBufferInit	tsvscode.ts	/^interface VideoFrameBufferInit {$/;"	i
VideoFrameCallbackMetadata	tsvscode.ts	/^interface VideoFrameCallbackMetadata {$/;"	i
VideoFrameCopyToOptions	tsvscode.ts	/^interface VideoFrameCopyToOptions {$/;"	i
VideoFrameInit	tsvscode.ts	/^interface VideoFrameInit {$/;"	i
VideoFrameOutputCallback	tsvscode.ts	/^interface VideoFrameOutputCallback {$/;"	i	namespace:CSS
VideoFrameRequestCallback	tsvscode.ts	/^interface VideoFrameRequestCallback {$/;"	i	namespace:CSS
VideoPlaybackQuality	tsvscode.ts	/^declare var VideoPlaybackQuality: {$/;"	v
VideoPlaybackQuality	tsvscode.ts	/^interface VideoPlaybackQuality {$/;"	i
VisualViewport	tsvscode.ts	/^declare var VisualViewport: {$/;"	v
VisualViewport	tsvscode.ts	/^interface VisualViewport extends EventTarget {$/;"	i
VisualViewportEventMap	tsvscode.ts	/^interface VisualViewportEventMap {$/;"	i
VoidFunction	tsvscode.ts	/^interface VoidFunction {$/;"	i	namespace:CSS
WAIT_FAILED	tsvscode.ts	/^    readonly WAIT_FAILED: 0x911D;$/;"	p	interface:WebGL2RenderingContextBase
WAIT_FAILED	tsvscode.ts	/^    readonly WAIT_FAILED: 0x911D;$/;"	v
WEBGL_color_buffer_float	tsvscode.ts	/^interface WEBGL_color_buffer_float {$/;"	i
WEBGL_compressed_texture_astc	tsvscode.ts	/^interface WEBGL_compressed_texture_astc {$/;"	i
WEBGL_compressed_texture_etc	tsvscode.ts	/^interface WEBGL_compressed_texture_etc {$/;"	i
WEBGL_compressed_texture_etc1	tsvscode.ts	/^interface WEBGL_compressed_texture_etc1 {$/;"	i
WEBGL_compressed_texture_pvrtc	tsvscode.ts	/^interface WEBGL_compressed_texture_pvrtc {$/;"	i
WEBGL_compressed_texture_s3tc	tsvscode.ts	/^interface WEBGL_compressed_texture_s3tc {$/;"	i
WEBGL_compressed_texture_s3tc_srgb	tsvscode.ts	/^interface WEBGL_compressed_texture_s3tc_srgb {$/;"	i
WEBGL_debug_renderer_info	tsvscode.ts	/^interface WEBGL_debug_renderer_info {$/;"	i
WEBGL_debug_shaders	tsvscode.ts	/^interface WEBGL_debug_shaders {$/;"	i
WEBGL_depth_texture	tsvscode.ts	/^interface WEBGL_depth_texture {$/;"	i
WEBGL_draw_buffers	tsvscode.ts	/^interface WEBGL_draw_buffers {$/;"	i
WEBGL_lose_context	tsvscode.ts	/^interface WEBGL_lose_context {$/;"	i
WEBGL_multi_draw	tsvscode.ts	/^interface WEBGL_multi_draw {$/;"	i
WRONG_DOCUMENT_ERR	tsvscode.ts	/^    readonly WRONG_DOCUMENT_ERR: 4;$/;"	p	interface:DOMException
WRONG_DOCUMENT_ERR	tsvscode.ts	/^    readonly WRONG_DOCUMENT_ERR: 4;$/;"	v
WakeLock	tsvscode.ts	/^declare var WakeLock: {$/;"	v
WakeLock	tsvscode.ts	/^interface WakeLock {$/;"	i
WakeLockSentinel	tsvscode.ts	/^declare var WakeLockSentinel: {$/;"	v
WakeLockSentinel	tsvscode.ts	/^interface WakeLockSentinel extends EventTarget {$/;"	i
WakeLockSentinelEventMap	tsvscode.ts	/^interface WakeLockSentinelEventMap {$/;"	i
WaveShaperNode	tsvscode.ts	/^declare var WaveShaperNode: {$/;"	v
WaveShaperNode	tsvscode.ts	/^interface WaveShaperNode extends AudioNode {$/;"	i
WaveShaperOptions	tsvscode.ts	/^interface WaveShaperOptions extends AudioNodeOptions {$/;"	i
WeakKey	ests.ts	/^type WeakKey = WeakKeyTypes[keyof WeakKeyTypes];$/;"	a
WeakKeyTypes	ests.ts	/^interface WeakKeyTypes {$/;"	i
WebCodecsErrorCallback	tsvscode.ts	/^interface WebCodecsErrorCallback {$/;"	i	namespace:CSS
WebGL2RenderingContext	tsvscode.ts	/^declare var WebGL2RenderingContext: {$/;"	v
WebGL2RenderingContext	tsvscode.ts	/^interface WebGL2RenderingContext extends WebGL2RenderingContextBase, WebGL2RenderingContextOverl/;"	i
WebGL2RenderingContextBase	tsvscode.ts	/^interface WebGL2RenderingContextBase {$/;"	i
WebGL2RenderingContextOverloads	tsvscode.ts	/^interface WebGL2RenderingContextOverloads {$/;"	i
WebGLActiveInfo	tsvscode.ts	/^declare var WebGLActiveInfo: {$/;"	v
WebGLActiveInfo	tsvscode.ts	/^interface WebGLActiveInfo {$/;"	i
WebGLBuffer	tsvscode.ts	/^declare var WebGLBuffer: {$/;"	v
WebGLBuffer	tsvscode.ts	/^interface WebGLBuffer {$/;"	i
WebGLContextAttributes	tsvscode.ts	/^interface WebGLContextAttributes {$/;"	i
WebGLContextEvent	tsvscode.ts	/^declare var WebGLContextEvent: {$/;"	v
WebGLContextEvent	tsvscode.ts	/^interface WebGLContextEvent extends Event {$/;"	i
WebGLContextEventInit	tsvscode.ts	/^interface WebGLContextEventInit extends EventInit {$/;"	i
WebGLFramebuffer	tsvscode.ts	/^declare var WebGLFramebuffer: {$/;"	v
WebGLFramebuffer	tsvscode.ts	/^interface WebGLFramebuffer {$/;"	i
WebGLProgram	tsvscode.ts	/^declare var WebGLProgram: {$/;"	v
WebGLProgram	tsvscode.ts	/^interface WebGLProgram {$/;"	i
WebGLQuery	tsvscode.ts	/^declare var WebGLQuery: {$/;"	v
WebGLQuery	tsvscode.ts	/^interface WebGLQuery {$/;"	i
WebGLRenderbuffer	tsvscode.ts	/^declare var WebGLRenderbuffer: {$/;"	v
WebGLRenderbuffer	tsvscode.ts	/^interface WebGLRenderbuffer {$/;"	i
WebGLRenderingContext	tsvscode.ts	/^declare var WebGLRenderingContext: {$/;"	v
WebGLRenderingContext	tsvscode.ts	/^interface WebGLRenderingContext extends WebGLRenderingContextBase, WebGLRenderingContextOverload/;"	i
WebGLRenderingContextBase	tsvscode.ts	/^interface WebGLRenderingContextBase {$/;"	i
WebGLRenderingContextOverloads	tsvscode.ts	/^interface WebGLRenderingContextOverloads {$/;"	i
WebGLSampler	tsvscode.ts	/^declare var WebGLSampler: {$/;"	v
WebGLSampler	tsvscode.ts	/^interface WebGLSampler {$/;"	i
WebGLShader	tsvscode.ts	/^declare var WebGLShader: {$/;"	v
WebGLShader	tsvscode.ts	/^interface WebGLShader {$/;"	i
WebGLShaderPrecisionFormat	tsvscode.ts	/^declare var WebGLShaderPrecisionFormat: {$/;"	v
WebGLShaderPrecisionFormat	tsvscode.ts	/^interface WebGLShaderPrecisionFormat {$/;"	i
WebGLSync	tsvscode.ts	/^declare var WebGLSync: {$/;"	v
WebGLSync	tsvscode.ts	/^interface WebGLSync {$/;"	i
WebGLTexture	tsvscode.ts	/^declare var WebGLTexture: {$/;"	v
WebGLTexture	tsvscode.ts	/^interface WebGLTexture {$/;"	i
WebGLTransformFeedback	tsvscode.ts	/^declare var WebGLTransformFeedback: {$/;"	v
WebGLTransformFeedback	tsvscode.ts	/^interface WebGLTransformFeedback {$/;"	i
WebGLUniformLocation	tsvscode.ts	/^declare var WebGLUniformLocation: {$/;"	v
WebGLUniformLocation	tsvscode.ts	/^interface WebGLUniformLocation {$/;"	i
WebGLVertexArrayObject	tsvscode.ts	/^declare var WebGLVertexArrayObject: {$/;"	v
WebGLVertexArrayObject	tsvscode.ts	/^interface WebGLVertexArrayObject {$/;"	i
WebGLVertexArrayObjectOES	tsvscode.ts	/^interface WebGLVertexArrayObjectOES {$/;"	i
WebKitCSSMatrix	tsvscode.ts	/^declare var WebKitCSSMatrix: typeof DOMMatrix;$/;"	v
WebKitCSSMatrix	tsvscode.ts	/^type WebKitCSSMatrix = DOMMatrix;$/;"	a
WebSocket	tsvscode.ts	/^declare var WebSocket: {$/;"	v
WebSocket	tsvscode.ts	/^interface WebSocket extends EventTarget {$/;"	i
WebSocketEventMap	tsvscode.ts	/^interface WebSocketEventMap {$/;"	i
WebTransport	tsvscode.ts	/^declare var WebTransport: {$/;"	v
WebTransport	tsvscode.ts	/^interface WebTransport {$/;"	i
WebTransportBidirectionalStream	tsvscode.ts	/^declare var WebTransportBidirectionalStream: {$/;"	v
WebTransportBidirectionalStream	tsvscode.ts	/^interface WebTransportBidirectionalStream {$/;"	i
WebTransportCloseInfo	tsvscode.ts	/^interface WebTransportCloseInfo {$/;"	i
WebTransportDatagramDuplexStream	tsvscode.ts	/^declare var WebTransportDatagramDuplexStream: {$/;"	v
WebTransportDatagramDuplexStream	tsvscode.ts	/^interface WebTransportDatagramDuplexStream {$/;"	i
WebTransportError	tsvscode.ts	/^declare var WebTransportError: {$/;"	v
WebTransportError	tsvscode.ts	/^interface WebTransportError extends DOMException {$/;"	i
WebTransportErrorOptions	tsvscode.ts	/^interface WebTransportErrorOptions {$/;"	i
WebTransportHash	tsvscode.ts	/^interface WebTransportHash {$/;"	i
WebTransportOptions	tsvscode.ts	/^interface WebTransportOptions {$/;"	i
WebTransportSendStreamOptions	tsvscode.ts	/^interface WebTransportSendStreamOptions {$/;"	i
WheelEvent	tsvscode.ts	/^declare var WheelEvent: {$/;"	v
WheelEvent	tsvscode.ts	/^interface WheelEvent extends MouseEvent {$/;"	i
WheelEventInit	tsvscode.ts	/^interface WheelEventInit extends MouseEventInit {$/;"	i
Window	tsvscode.ts	/^declare var Window: {$/;"	v
Window	tsvscode.ts	/^interface Window extends EventTarget, AnimationFrameProvider, GlobalEventHandlers, WindowEventHa/;"	i
WindowEventHandlers	tsvscode.ts	/^interface WindowEventHandlers {$/;"	i
WindowEventHandlersEventMap	tsvscode.ts	/^interface WindowEventHandlersEventMap {$/;"	i
WindowEventMap	tsvscode.ts	/^interface WindowEventMap extends GlobalEventHandlersEventMap, WindowEventHandlersEventMap {$/;"	i
WindowLocalStorage	tsvscode.ts	/^interface WindowLocalStorage {$/;"	i
WindowOrWorkerGlobalScope	tsvscode.ts	/^interface WindowOrWorkerGlobalScope {$/;"	i
WindowPostMessageOptions	tsvscode.ts	/^interface WindowPostMessageOptions extends StructuredSerializeOptions {$/;"	i
WindowSessionStorage	tsvscode.ts	/^interface WindowSessionStorage {$/;"	i
Worker	tsvscode.ts	/^declare var Worker: {$/;"	v
Worker	tsvscode.ts	/^interface Worker extends EventTarget, AbstractWorker {$/;"	i
WorkerEventMap	tsvscode.ts	/^interface WorkerEventMap extends AbstractWorkerEventMap {$/;"	i
WorkerOptions	tsvscode.ts	/^interface WorkerOptions {$/;"	i
Worklet	tsvscode.ts	/^declare var Worklet: {$/;"	v
Worklet	tsvscode.ts	/^interface Worklet {$/;"	i
WorkletOptions	tsvscode.ts	/^interface WorkletOptions {$/;"	i
WritableStream	tsvscode.ts	/^declare var WritableStream: {$/;"	v
WritableStream	tsvscode.ts	/^interface WritableStream<W = any> {$/;"	i
WritableStreamDefaultController	tsvscode.ts	/^declare var WritableStreamDefaultController: {$/;"	v
WritableStreamDefaultController	tsvscode.ts	/^interface WritableStreamDefaultController {$/;"	i
WritableStreamDefaultWriter	tsvscode.ts	/^declare var WritableStreamDefaultWriter: {$/;"	v
WritableStreamDefaultWriter	tsvscode.ts	/^interface WritableStreamDefaultWriter<W = any> {$/;"	i
WriteParams	tsvscode.ts	/^interface WriteParams {$/;"	i
XMLDocument	tsvscode.ts	/^declare var XMLDocument: {$/;"	v
XMLDocument	tsvscode.ts	/^interface XMLDocument extends Document {$/;"	i
XMLHttpRequest	tsvscode.ts	/^declare var XMLHttpRequest: {$/;"	v
XMLHttpRequest	tsvscode.ts	/^interface XMLHttpRequest extends XMLHttpRequestEventTarget {$/;"	i
XMLHttpRequestEventMap	tsvscode.ts	/^interface XMLHttpRequestEventMap extends XMLHttpRequestEventTargetEventMap {$/;"	i
XMLHttpRequestEventTarget	tsvscode.ts	/^declare var XMLHttpRequestEventTarget: {$/;"	v
XMLHttpRequestEventTarget	tsvscode.ts	/^interface XMLHttpRequestEventTarget extends EventTarget {$/;"	i
XMLHttpRequestEventTargetEventMap	tsvscode.ts	/^interface XMLHttpRequestEventTargetEventMap {$/;"	i
XMLHttpRequestUpload	tsvscode.ts	/^declare var XMLHttpRequestUpload: {$/;"	v
XMLHttpRequestUpload	tsvscode.ts	/^interface XMLHttpRequestUpload extends XMLHttpRequestEventTarget {$/;"	i
XMLSerializer	tsvscode.ts	/^declare var XMLSerializer: {$/;"	v
XMLSerializer	tsvscode.ts	/^interface XMLSerializer {$/;"	i
XPathEvaluator	tsvscode.ts	/^declare var XPathEvaluator: {$/;"	v
XPathEvaluator	tsvscode.ts	/^interface XPathEvaluator extends XPathEvaluatorBase {$/;"	i
XPathEvaluatorBase	tsvscode.ts	/^interface XPathEvaluatorBase {$/;"	i
XPathExpression	tsvscode.ts	/^declare var XPathExpression: {$/;"	v
XPathExpression	tsvscode.ts	/^interface XPathExpression {$/;"	i
XPathNSResolver	tsvscode.ts	/^type XPathNSResolver = ((prefix: string | null) => string | null) | { lookupNamespaceURI(prefix:/;"	a
XPathResult	tsvscode.ts	/^declare var XPathResult: {$/;"	v
XPathResult	tsvscode.ts	/^interface XPathResult {$/;"	i
XSLTProcessor	tsvscode.ts	/^declare var XSLTProcessor: {$/;"	v
XSLTProcessor	tsvscode.ts	/^interface XSLTProcessor {$/;"	i
ZERO	tsvscode.ts	/^    readonly ZERO: 0;$/;"	p	interface:WebGLRenderingContextBase
ZERO	tsvscode.ts	/^    readonly ZERO: 0;$/;"	v
a	tsvscode.ts	/^    a: number;$/;"	p	interface:DOMMatrix
a	tsvscode.ts	/^    a?: number;$/;"	p	interface:DOMMatrix2DInit
a	tsvscode.ts	/^    readonly a: number;$/;"	p	interface:DOMMatrixReadOnly
aLink	tsvscode.ts	/^    aLink: string;$/;"	p	interface:HTMLBodyElement
abbr	tsvscode.ts	/^    abbr: string;$/;"	p	interface:HTMLTableCellElement
abort	tsvscode.ts	/^    abort(): Promise<void>;$/;"	m	interface:PaymentRequest
abort	tsvscode.ts	/^    abort(): void;$/;"	m	interface:FileReader
abort	tsvscode.ts	/^    abort(): void;$/;"	m	interface:IDBTransaction
abort	tsvscode.ts	/^    abort(): void;$/;"	m	interface:SourceBuffer
abort	tsvscode.ts	/^    abort(): void;$/;"	m	interface:XMLHttpRequest
abort	tsvscode.ts	/^    abort(reason?: any): AbortSignal;$/;"	v
abort	tsvscode.ts	/^    abort(reason?: any): Promise<void>;$/;"	m	interface:WritableStream
abort	tsvscode.ts	/^    abort(reason?: any): Promise<void>;$/;"	m	interface:WritableStreamDefaultWriter
abort	tsvscode.ts	/^    abort(reason?: any): void;$/;"	m	interface:AbortController
abort	tsvscode.ts	/^    abort?: UnderlyingSinkAbortCallback;$/;"	p	interface:UnderlyingSink
aborted	tsvscode.ts	/^    readonly aborted: boolean;$/;"	p	interface:AbortSignal
abs	ests.ts	/^    abs(x: number): number;$/;"	m	interface:Math
absolute	tsvscode.ts	/^    absolute?: boolean;$/;"	p	interface:DeviceOrientationEventInit
absolute	tsvscode.ts	/^    readonly absolute: boolean;$/;"	p	interface:DeviceOrientationEvent
acceleration	tsvscode.ts	/^    acceleration?: DeviceMotionEventAccelerationInit;$/;"	p	interface:DeviceMotionEventInit
acceleration	tsvscode.ts	/^    readonly acceleration: DeviceMotionEventAcceleration | null;$/;"	p	interface:DeviceMotionEvent
accelerationIncludingGravity	tsvscode.ts	/^    accelerationIncludingGravity?: DeviceMotionEventAccelerationInit;$/;"	p	interface:DeviceMotionEventInit
accelerationIncludingGravity	tsvscode.ts	/^    readonly accelerationIncludingGravity: DeviceMotionEventAcceleration | null;$/;"	p	interface:DeviceMotionEvent
accentColor	tsvscode.ts	/^    accentColor: string;$/;"	p	interface:CSSStyleDeclaration
accept	tsvscode.ts	/^    accept: string;$/;"	p	interface:HTMLInputElement
acceptCharset	tsvscode.ts	/^    acceptCharset: string;$/;"	p	interface:HTMLFormElement
accessKey	tsvscode.ts	/^    accessKey: string;$/;"	p	interface:HTMLElement
accessKeyLabel	tsvscode.ts	/^    readonly accessKeyLabel: string;$/;"	p	interface:HTMLElement
accuracy	tsvscode.ts	/^    readonly accuracy: number;$/;"	p	interface:GeolocationCoordinates
acos	ests.ts	/^    acos(x: number): number;$/;"	m	interface:Math
action	tsvscode.ts	/^    action: MediaSessionAction;$/;"	p	interface:MediaSessionActionDetails
action	tsvscode.ts	/^    action: string;$/;"	p	interface:HTMLFormElement
active	tsvscode.ts	/^    active?: boolean;$/;"	p	interface:RTCRtpEncodingParameters
active	tsvscode.ts	/^    readonly active: ServiceWorker | null;$/;"	p	interface:ServiceWorkerRegistration
active	tsvscode.ts	/^    readonly active: boolean;$/;"	p	interface:MediaStream
activeCues	tsvscode.ts	/^    readonly activeCues: TextTrackCueList | null;$/;"	p	interface:TextTrack
activeDuration	tsvscode.ts	/^    activeDuration?: CSSNumberish;$/;"	p	interface:ComputedEffectTiming
activeElement	tsvscode.ts	/^    readonly activeElement: Element | null;$/;"	p	interface:DocumentOrShadowRoot
activeSourceBuffers	tsvscode.ts	/^    readonly activeSourceBuffers: SourceBufferList;$/;"	p	interface:MediaSource
activeTexture	tsvscode.ts	/^    activeTexture(texture: GLenum): void;$/;"	m	interface:WebGLRenderingContextBase
actualBoundingBoxAscent	tsvscode.ts	/^    readonly actualBoundingBoxAscent: number;$/;"	p	interface:TextMetrics
actualBoundingBoxDescent	tsvscode.ts	/^    readonly actualBoundingBoxDescent: number;$/;"	p	interface:TextMetrics
actualBoundingBoxLeft	tsvscode.ts	/^    readonly actualBoundingBoxLeft: number;$/;"	p	interface:TextMetrics
actualBoundingBoxRight	tsvscode.ts	/^    readonly actualBoundingBoxRight: number;$/;"	p	interface:TextMetrics
add	tsvscode.ts	/^    add(...tokens: string[]): void;$/;"	m	interface:DOMTokenList
add	tsvscode.ts	/^    add(...values: CSSNumberish[]): CSSNumericValue;$/;"	m	interface:CSSNumericValue
add	tsvscode.ts	/^    add(data: File): DataTransferItem | null;$/;"	m	interface:DataTransferItemList
add	tsvscode.ts	/^    add(data: string, type: string): DataTransferItem | null;$/;"	m	interface:DataTransferItemList
add	tsvscode.ts	/^    add(element: HTMLOptionElement | HTMLOptGroupElement, before?: HTMLElement | number | null):/;"	m	interface:HTMLOptionsCollection
add	tsvscode.ts	/^    add(element: HTMLOptionElement | HTMLOptGroupElement, before?: HTMLElement | number | null):/;"	m	interface:HTMLSelectElement
add	tsvscode.ts	/^    add(request: RequestInfo | URL): Promise<void>;$/;"	m	interface:Cache
add	tsvscode.ts	/^    add(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>;$/;"	m	interface:IDBObjectStore
addAll	tsvscode.ts	/^    addAll(requests: RequestInfo[]): Promise<void>;$/;"	m	interface:Cache
addColorStop	tsvscode.ts	/^    addColorStop(offset: number, color: string): void;$/;"	m	interface:CanvasGradient
addCue	tsvscode.ts	/^    addCue(cue: TextTrackCue): void;$/;"	m	interface:TextTrack
addEventListener	tsvscode.ts	/^    addEventListener(type: string, callback: EventListenerOrEventListenerObject | null, options?/;"	m	interface:EventTarget
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: (this: EventSource, event: MessageEvent) => any, op/;"	m	interface:EventSource
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:AbortSignal
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:AbstractWorker
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:Animation
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:AudioBufferSourceNode
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:AudioContext
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:AudioScheduledSourceNode
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:AudioWorkletNode
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:BaseAudioContext
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:BroadcastChannel
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:CSSAnimation
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:CSSTransition
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:CanvasCaptureMediaStreamTrack
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:ConstantSourceNode
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:Document
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:Element
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:EventSource
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:FileReader
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:FontFaceSet
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:GlobalEventHandlers
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLAnchorElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLAreaElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLAudioElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLBRElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLBaseElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLBodyElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLButtonElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLCanvasElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLDListElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLDataElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLDataListElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLDetailsElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLDialogElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLDirectoryElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLDivElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLDocument
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLEmbedElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLFieldSetElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLFontElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLFormElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLFrameElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLFrameSetElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLHRElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLHeadElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLHeadingElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLHtmlElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLIFrameElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLImageElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLInputElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLLIElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLLabelElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLLegendElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLLinkElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLMapElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLMarqueeElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLMediaElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLMenuElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLMetaElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLMeterElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLModElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLOListElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLObjectElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLOptGroupElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLOptionElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLOutputElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLParagraphElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLParamElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLPictureElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLPreElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLProgressElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLQuoteElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLScriptElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLSelectElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLSlotElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLSourceElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLSpanElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLStyleElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLTableCaptionElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLTableCellElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLTableColElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLTableDataCellElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLTableElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLTableHeaderCellElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLTableRowElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLTableSectionElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLTemplateElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLTextAreaElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLTimeElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLTitleElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLTrackElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLUListElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLUnknownElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:HTMLVideoElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:IDBDatabase
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:IDBOpenDBRequest
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:IDBRequest
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:IDBTransaction
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:MIDIAccess
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:MIDIInput
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:MIDIOutput
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:MIDIPort
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:MathMLElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:MediaDevices
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:MediaKeySession
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:MediaQueryList
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:MediaRecorder
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:MediaSource
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:MediaStream
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:MediaStreamTrack
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:MessagePort
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:Notification
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:OfflineAudioContext
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:OffscreenCanvas
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:OscillatorNode
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:PaymentRequest
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:Performance
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:PermissionStatus
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:PictureInPictureWindow
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:RTCDTMFSender
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:RTCDataChannel
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:RTCDtlsTransport
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:RTCIceTransport
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:RTCPeerConnection
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:RTCSctpTransport
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:RemotePlayback
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGAElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGAnimateElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGAnimateMotionElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGAnimateTransformElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGAnimationElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGCircleElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGClipPathElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGComponentTransferFunctionElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGDefsElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGDescElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGEllipseElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGFEBlendElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGFEColorMatrixElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGFEComponentTransferElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGFECompositeElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGFEConvolveMatrixElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGFEDiffuseLightingElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGFEDisplacementMapElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGFEDistantLightElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGFEDropShadowElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGFEFloodElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGFEFuncAElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGFEFuncBElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGFEFuncGElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGFEFuncRElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGFEGaussianBlurElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGFEImageElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGFEMergeElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGFEMergeNodeElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGFEMorphologyElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGFEOffsetElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGFEPointLightElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGFESpecularLightingElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGFESpotLightElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGFETileElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGFETurbulenceElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGFilterElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGForeignObjectElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGGElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGGeometryElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGGradientElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGGraphicsElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGImageElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGLineElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGLinearGradientElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGMPathElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGMarkerElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGMaskElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGMetadataElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGPathElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGPatternElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGPolygonElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGPolylineElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGRadialGradientElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGRectElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGSVGElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGScriptElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGSetElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGStopElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGStyleElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGSwitchElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGSymbolElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGTSpanElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGTextContentElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGTextElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGTextPathElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGTextPositioningElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGTitleElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGUseElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SVGViewElement
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:ScreenOrientation
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:ScriptProcessorNode
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:ServiceWorker
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:ServiceWorkerContainer
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:ServiceWorkerRegistration
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:ShadowRoot
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SharedWorker
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SourceBuffer
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SourceBufferList
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SpeechSynthesis
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:SpeechSynthesisUtterance
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:TextTrack
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:TextTrackCue
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:TextTrackList
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:VTTCue
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:VideoDecoder
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:VideoEncoder
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:VisualViewport
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:WakeLockSentinel
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:WebSocket
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:Window
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:WindowEventHandlers
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:Worker
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:XMLDocument
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:XMLHttpRequest
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:XMLHttpRequestEventTarget
addEventListener	tsvscode.ts	/^    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boole/;"	m	interface:XMLHttpRequestUpload
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof AbortSignalEventMap>(type: K, listener: (this: AbortSignal,/;"	m	interface:AbortSignal
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof AbstractWorkerEventMap>(type: K, listener: (this: AbstractW/;"	m	interface:AbstractWorker
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof AbstractWorkerEventMap>(type: K, listener: (this: SharedWor/;"	m	interface:SharedWorker
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof AnimationEventMap>(type: K, listener: (this: Animation, ev:/;"	m	interface:Animation
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof AnimationEventMap>(type: K, listener: (this: CSSAnimation, /;"	m	interface:CSSAnimation
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof AnimationEventMap>(type: K, listener: (this: CSSTransition,/;"	m	interface:CSSTransition
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof AudioScheduledSourceNodeEventMap>(type: K, listener: (this:/;"	m	interface:AudioBufferSourceNode
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof AudioScheduledSourceNodeEventMap>(type: K, listener: (this:/;"	m	interface:AudioScheduledSourceNode
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof AudioScheduledSourceNodeEventMap>(type: K, listener: (this:/;"	m	interface:ConstantSourceNode
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof AudioScheduledSourceNodeEventMap>(type: K, listener: (this:/;"	m	interface:OscillatorNode
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof AudioWorkletNodeEventMap>(type: K, listener: (this: AudioWo/;"	m	interface:AudioWorkletNode
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof BaseAudioContextEventMap>(type: K, listener: (this: AudioCo/;"	m	interface:AudioContext
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof BaseAudioContextEventMap>(type: K, listener: (this: BaseAud/;"	m	interface:BaseAudioContext
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof BroadcastChannelEventMap>(type: K, listener: (this: Broadca/;"	m	interface:BroadcastChannel
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: D/;"	m	interface:Document
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: HTMLDocument, e/;"	m	interface:HTMLDocument
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: XMLDocument, ev/;"	m	interface:XMLDocument
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof ElementEventMap>(type: K, listener: (this: Element, ev: Ele/;"	m	interface:Element
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof EventSourceEventMap>(type: K, listener: (this: EventSource,/;"	m	interface:EventSource
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof FileReaderEventMap>(type: K, listener: (this: FileReader, e/;"	m	interface:FileReader
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof FontFaceSetEventMap>(type: K, listener: (this: FontFaceSet,/;"	m	interface:FontFaceSet
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: Glob/;"	m	interface:GlobalEventHandlers
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLBodyElementEventMap>(type: K, listener: (this: HTMLBody/;"	m	interface:HTMLBodyElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAnchorEl/;"	m	interface:HTMLAnchorElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAreaElem/;"	m	interface:HTMLAreaElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBRElemen/;"	m	interface:HTMLBRElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBaseElem/;"	m	interface:HTMLBaseElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLButtonEl/;"	m	interface:HTMLButtonElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLCanvasEl/;"	m	interface:HTMLCanvasElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDListEle/;"	m	interface:HTMLDListElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDataElem/;"	m	interface:HTMLDataElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDataList/;"	m	interface:HTMLDataListElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDetailsE/;"	m	interface:HTMLDetailsElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDialogEl/;"	m	interface:HTMLDialogElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDirector/;"	m	interface:HTMLDirectoryElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDivEleme/;"	m	interface:HTMLDivElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement,/;"	m	interface:HTMLElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLEmbedEle/;"	m	interface:HTMLEmbedElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFieldSet/;"	m	interface:HTMLFieldSetElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFontElem/;"	m	interface:HTMLFontElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFormElem/;"	m	interface:HTMLFormElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFrameEle/;"	m	interface:HTMLFrameElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHRElemen/;"	m	interface:HTMLHRElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHeadElem/;"	m	interface:HTMLHeadElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHeadingE/;"	m	interface:HTMLHeadingElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHtmlElem/;"	m	interface:HTMLHtmlElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLIFrameEl/;"	m	interface:HTMLIFrameElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLImageEle/;"	m	interface:HTMLImageElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLInputEle/;"	m	interface:HTMLInputElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLIElemen/;"	m	interface:HTMLLIElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLabelEle/;"	m	interface:HTMLLabelElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLegendEl/;"	m	interface:HTMLLegendElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLinkElem/;"	m	interface:HTMLLinkElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMapEleme/;"	m	interface:HTMLMapElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMarqueeE/;"	m	interface:HTMLMarqueeElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMenuElem/;"	m	interface:HTMLMenuElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMetaElem/;"	m	interface:HTMLMetaElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMeterEle/;"	m	interface:HTMLMeterElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLModEleme/;"	m	interface:HTMLModElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOListEle/;"	m	interface:HTMLOListElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLObjectEl/;"	m	interface:HTMLObjectElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOptGroup/;"	m	interface:HTMLOptGroupElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOptionEl/;"	m	interface:HTMLOptionElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOutputEl/;"	m	interface:HTMLOutputElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLParagrap/;"	m	interface:HTMLParagraphElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLParamEle/;"	m	interface:HTMLParamElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLPictureE/;"	m	interface:HTMLPictureElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLPreEleme/;"	m	interface:HTMLPreElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLProgress/;"	m	interface:HTMLProgressElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLQuoteEle/;"	m	interface:HTMLQuoteElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLScriptEl/;"	m	interface:HTMLScriptElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSelectEl/;"	m	interface:HTMLSelectElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSlotElem/;"	m	interface:HTMLSlotElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSourceEl/;"	m	interface:HTMLSourceElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSpanElem/;"	m	interface:HTMLSpanElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLStyleEle/;"	m	interface:HTMLStyleElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableCap/;"	m	interface:HTMLTableCaptionElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableCel/;"	m	interface:HTMLTableCellElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableCol/;"	m	interface:HTMLTableColElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableDat/;"	m	interface:HTMLTableDataCellElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableEle/;"	m	interface:HTMLTableElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableHea/;"	m	interface:HTMLTableHeaderCellElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableRow/;"	m	interface:HTMLTableRowElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableSec/;"	m	interface:HTMLTableSectionElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTemplate/;"	m	interface:HTMLTemplateElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTextArea/;"	m	interface:HTMLTextAreaElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTimeElem/;"	m	interface:HTMLTimeElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTitleEle/;"	m	interface:HTMLTitleElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTrackEle/;"	m	interface:HTMLTrackElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLUListEle/;"	m	interface:HTMLUListElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLUnknownE/;"	m	interface:HTMLUnknownElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLFrameSetElementEventMap>(type: K, listener: (this: HTML/;"	m	interface:HTMLFrameSetElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLMediaElementEventMap>(type: K, listener: (this: HTMLAud/;"	m	interface:HTMLAudioElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLMediaElementEventMap>(type: K, listener: (this: HTMLMed/;"	m	interface:HTMLMediaElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof HTMLVideoElementEventMap>(type: K, listener: (this: HTMLVid/;"	m	interface:HTMLVideoElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof IDBDatabaseEventMap>(type: K, listener: (this: IDBDatabase,/;"	m	interface:IDBDatabase
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof IDBOpenDBRequestEventMap>(type: K, listener: (this: IDBOpen/;"	m	interface:IDBOpenDBRequest
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof IDBRequestEventMap>(type: K, listener: (this: IDBRequest<T>/;"	m	interface:IDBRequest
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof IDBTransactionEventMap>(type: K, listener: (this: IDBTransa/;"	m	interface:IDBTransaction
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof MIDIAccessEventMap>(type: K, listener: (this: MIDIAccess, e/;"	m	interface:MIDIAccess
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof MIDIInputEventMap>(type: K, listener: (this: MIDIInput, ev:/;"	m	interface:MIDIInput
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof MIDIPortEventMap>(type: K, listener: (this: MIDIOutput, ev:/;"	m	interface:MIDIOutput
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof MIDIPortEventMap>(type: K, listener: (this: MIDIPort, ev: M/;"	m	interface:MIDIPort
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof MathMLElementEventMap>(type: K, listener: (this: MathMLElem/;"	m	interface:MathMLElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof MediaDevicesEventMap>(type: K, listener: (this: MediaDevice/;"	m	interface:MediaDevices
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof MediaKeySessionEventMap>(type: K, listener: (this: MediaKey/;"	m	interface:MediaKeySession
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof MediaQueryListEventMap>(type: K, listener: (this: MediaQuer/;"	m	interface:MediaQueryList
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof MediaRecorderEventMap>(type: K, listener: (this: MediaRecor/;"	m	interface:MediaRecorder
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof MediaSourceEventMap>(type: K, listener: (this: MediaSource,/;"	m	interface:MediaSource
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof MediaStreamEventMap>(type: K, listener: (this: MediaStream,/;"	m	interface:MediaStream
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof MediaStreamTrackEventMap>(type: K, listener: (this: CanvasC/;"	m	interface:CanvasCaptureMediaStreamTrack
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof MediaStreamTrackEventMap>(type: K, listener: (this: MediaSt/;"	m	interface:MediaStreamTrack
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof MessagePortEventMap>(type: K, listener: (this: MessagePort,/;"	m	interface:MessagePort
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof NotificationEventMap>(type: K, listener: (this: Notificatio/;"	m	interface:Notification
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof OfflineAudioContextEventMap>(type: K, listener: (this: Offl/;"	m	interface:OfflineAudioContext
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof OffscreenCanvasEventMap>(type: K, listener: (this: Offscree/;"	m	interface:OffscreenCanvas
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof PaymentRequestEventMap>(type: K, listener: (this: PaymentRe/;"	m	interface:PaymentRequest
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof PerformanceEventMap>(type: K, listener: (this: Performance,/;"	m	interface:Performance
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof PermissionStatusEventMap>(type: K, listener: (this: Permiss/;"	m	interface:PermissionStatus
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof PictureInPictureWindowEventMap>(type: K, listener: (this: P/;"	m	interface:PictureInPictureWindow
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof RTCDTMFSenderEventMap>(type: K, listener: (this: RTCDTMFSen/;"	m	interface:RTCDTMFSender
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof RTCDataChannelEventMap>(type: K, listener: (this: RTCDataCh/;"	m	interface:RTCDataChannel
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof RTCDtlsTransportEventMap>(type: K, listener: (this: RTCDtls/;"	m	interface:RTCDtlsTransport
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof RTCIceTransportEventMap>(type: K, listener: (this: RTCIceTr/;"	m	interface:RTCIceTransport
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof RTCPeerConnectionEventMap>(type: K, listener: (this: RTCPee/;"	m	interface:RTCPeerConnection
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof RTCSctpTransportEventMap>(type: K, listener: (this: RTCSctp/;"	m	interface:RTCSctpTransport
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof RemotePlaybackEventMap>(type: K, listener: (this: RemotePla/;"	m	interface:RemotePlayback
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAElement, /;"	m	interface:SVGAElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAnimateEle/;"	m	interface:SVGAnimateElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAnimateMot/;"	m	interface:SVGAnimateMotionElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAnimateTra/;"	m	interface:SVGAnimateTransformElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAnimationE/;"	m	interface:SVGAnimationElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGCircleElem/;"	m	interface:SVGCircleElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGClipPathEl/;"	m	interface:SVGClipPathElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGComponentT/;"	m	interface:SVGComponentTransferFunctionElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGDefsElemen/;"	m	interface:SVGDefsElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGDescElemen/;"	m	interface:SVGDescElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGElement, e/;"	m	interface:SVGElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGEllipseEle/;"	m	interface:SVGEllipseElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEBlendEle/;"	m	interface:SVGFEBlendElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEColorMat/;"	m	interface:SVGFEColorMatrixElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEComponen/;"	m	interface:SVGFEComponentTransferElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEComposit/;"	m	interface:SVGFECompositeElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEConvolve/;"	m	interface:SVGFEConvolveMatrixElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDiffuseL/;"	m	interface:SVGFEDiffuseLightingElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDisplace/;"	m	interface:SVGFEDisplacementMapElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDistantL/;"	m	interface:SVGFEDistantLightElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDropShad/;"	m	interface:SVGFEDropShadowElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFloodEle/;"	m	interface:SVGFEFloodElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncAEle/;"	m	interface:SVGFEFuncAElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncBEle/;"	m	interface:SVGFEFuncBElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncGEle/;"	m	interface:SVGFEFuncGElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncREle/;"	m	interface:SVGFEFuncRElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEGaussian/;"	m	interface:SVGFEGaussianBlurElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEImageEle/;"	m	interface:SVGFEImageElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMergeEle/;"	m	interface:SVGFEMergeElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMergeNod/;"	m	interface:SVGFEMergeNodeElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMorpholo/;"	m	interface:SVGFEMorphologyElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEOffsetEl/;"	m	interface:SVGFEOffsetElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEPointLig/;"	m	interface:SVGFEPointLightElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFESpecular/;"	m	interface:SVGFESpecularLightingElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFESpotLigh/;"	m	interface:SVGFESpotLightElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFETileElem/;"	m	interface:SVGFETileElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFETurbulen/;"	m	interface:SVGFETurbulenceElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFilterElem/;"	m	interface:SVGFilterElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGForeignObj/;"	m	interface:SVGForeignObjectElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGElement, /;"	m	interface:SVGGElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGeometryEl/;"	m	interface:SVGGeometryElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGradientEl/;"	m	interface:SVGGradientElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGraphicsEl/;"	m	interface:SVGGraphicsElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGImageEleme/;"	m	interface:SVGImageElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGLineElemen/;"	m	interface:SVGLineElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGLinearGrad/;"	m	interface:SVGLinearGradientElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMPathEleme/;"	m	interface:SVGMPathElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMarkerElem/;"	m	interface:SVGMarkerElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMaskElemen/;"	m	interface:SVGMaskElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMetadataEl/;"	m	interface:SVGMetadataElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPathElemen/;"	m	interface:SVGPathElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPatternEle/;"	m	interface:SVGPatternElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPolygonEle/;"	m	interface:SVGPolygonElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPolylineEl/;"	m	interface:SVGPolylineElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGRadialGrad/;"	m	interface:SVGRadialGradientElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGRectElemen/;"	m	interface:SVGRectElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGScriptElem/;"	m	interface:SVGScriptElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSetElement/;"	m	interface:SVGSetElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGStopElemen/;"	m	interface:SVGStopElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGStyleEleme/;"	m	interface:SVGStyleElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSwitchElem/;"	m	interface:SVGSwitchElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSymbolElem/;"	m	interface:SVGSymbolElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTSpanEleme/;"	m	interface:SVGTSpanElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextConten/;"	m	interface:SVGTextContentElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextElemen/;"	m	interface:SVGTextElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextPathEl/;"	m	interface:SVGTextPathElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextPositi/;"	m	interface:SVGTextPositioningElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTitleEleme/;"	m	interface:SVGTitleElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGUseElement/;"	m	interface:SVGUseElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGViewElemen/;"	m	interface:SVGViewElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SVGSVGElementEventMap>(type: K, listener: (this: SVGSVGElem/;"	m	interface:SVGSVGElement
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof ScreenOrientationEventMap>(type: K, listener: (this: Screen/;"	m	interface:ScreenOrientation
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof ScriptProcessorNodeEventMap>(type: K, listener: (this: Scri/;"	m	interface:ScriptProcessorNode
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof ServiceWorkerContainerEventMap>(type: K, listener: (this: S/;"	m	interface:ServiceWorkerContainer
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof ServiceWorkerEventMap>(type: K, listener: (this: ServiceWor/;"	m	interface:ServiceWorker
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof ServiceWorkerRegistrationEventMap>(type: K, listener: (this/;"	m	interface:ServiceWorkerRegistration
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof ShadowRootEventMap>(type: K, listener: (this: ShadowRoot, e/;"	m	interface:ShadowRoot
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SourceBufferEventMap>(type: K, listener: (this: SourceBuffe/;"	m	interface:SourceBuffer
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SourceBufferListEventMap>(type: K, listener: (this: SourceB/;"	m	interface:SourceBufferList
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SpeechSynthesisEventMap>(type: K, listener: (this: SpeechSy/;"	m	interface:SpeechSynthesis
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof SpeechSynthesisUtteranceEventMap>(type: K, listener: (this:/;"	m	interface:SpeechSynthesisUtterance
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof TextTrackCueEventMap>(type: K, listener: (this: TextTrackCu/;"	m	interface:TextTrackCue
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof TextTrackCueEventMap>(type: K, listener: (this: VTTCue, ev:/;"	m	interface:VTTCue
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof TextTrackEventMap>(type: K, listener: (this: TextTrack, ev:/;"	m	interface:TextTrack
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof TextTrackListEventMap>(type: K, listener: (this: TextTrackL/;"	m	interface:TextTrackList
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof VideoDecoderEventMap>(type: K, listener: (this: VideoDecode/;"	m	interface:VideoDecoder
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof VideoEncoderEventMap>(type: K, listener: (this: VideoEncode/;"	m	interface:VideoEncoder
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof VisualViewportEventMap>(type: K, listener: (this: VisualVie/;"	m	interface:VisualViewport
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof WakeLockSentinelEventMap>(type: K, listener: (this: WakeLoc/;"	m	interface:WakeLockSentinel
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof WebSocketEventMap>(type: K, listener: (this: WebSocket, ev:/;"	m	interface:WebSocket
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof WindowEventHandlersEventMap>(type: K, listener: (this: Wind/;"	m	interface:WindowEventHandlers
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof WindowEventMap>(type: K, listener: (this: Window, ev: Windo/;"	m	interface:Window
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof WorkerEventMap>(type: K, listener: (this: Worker, ev: Worke/;"	m	interface:Worker
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof XMLHttpRequestEventMap>(type: K, listener: (this: XMLHttpRe/;"	m	interface:XMLHttpRequest
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this/;"	m	interface:XMLHttpRequestEventTarget
addEventListener	tsvscode.ts	/^    addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this/;"	m	interface:XMLHttpRequestUpload
addIceCandidate	tsvscode.ts	/^    addIceCandidate(candidate: RTCIceCandidateInit, successCallback: VoidFunction, failureCallba/;"	m	interface:RTCPeerConnection
addIceCandidate	tsvscode.ts	/^    addIceCandidate(candidate?: RTCIceCandidateInit): Promise<void>;$/;"	m	interface:RTCPeerConnection
addListener	tsvscode.ts	/^    addListener(callback: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null): void/;"	m	interface:MediaQueryList
addModule	tsvscode.ts	/^    addModule(moduleURL: string | URL, options?: WorkletOptions): Promise<void>;$/;"	m	interface:Worklet
addPath	tsvscode.ts	/^    addPath(path: Path2D, transform?: DOMMatrix2DInit): void;$/;"	m	interface:Path2D
addRange	tsvscode.ts	/^    addRange(range: Range): void;$/;"	m	interface:Selection
addRule	tsvscode.ts	/^    addRule(selector?: string, style?: string, index?: number): number;$/;"	m	interface:CSSStyleSheet
addSourceBuffer	tsvscode.ts	/^    addSourceBuffer(type: string): SourceBuffer;$/;"	m	interface:MediaSource
addTextTrack	tsvscode.ts	/^    addTextTrack(kind: TextTrackKind, label?: string, language?: string): TextTrack;$/;"	m	interface:HTMLMediaElement
addTrack	tsvscode.ts	/^    addTrack(track: MediaStreamTrack): void;$/;"	m	interface:MediaStream
addTrack	tsvscode.ts	/^    addTrack(track: MediaStreamTrack, ...streams: MediaStream[]): RTCRtpSender;$/;"	m	interface:RTCPeerConnection
addTransceiver	tsvscode.ts	/^    addTransceiver(trackOrKind: MediaStreamTrack | string, init?: RTCRtpTransceiverInit): RTCRtp/;"	m	interface:RTCPeerConnection
addedNodes	tsvscode.ts	/^    readonly addedNodes: NodeList;$/;"	p	interface:MutationRecord
additionalData	tsvscode.ts	/^    additionalData?: BufferSource;$/;"	p	interface:AesGcmParams
additionalDisplayItems	tsvscode.ts	/^    additionalDisplayItems?: PaymentItem[];$/;"	p	interface:PaymentDetailsModifier
additiveSymbols	tsvscode.ts	/^    additiveSymbols: string;$/;"	p	interface:CSSCounterStyleRule
address	tsvscode.ts	/^    address?: string | null;$/;"	p	interface:RTCPeerConnectionIceErrorEventInit
address	tsvscode.ts	/^    readonly address: string | null;$/;"	p	interface:RTCIceCandidate
address	tsvscode.ts	/^    readonly address: string | null;$/;"	p	interface:RTCPeerConnectionIceErrorEvent
adoptNode	tsvscode.ts	/^    adoptNode<T extends Node>(node: T): T;$/;"	m	interface:Document
adoptedStyleSheets	tsvscode.ts	/^    adoptedStyleSheets: CSSStyleSheet[];$/;"	p	interface:DocumentOrShadowRoot
advance	tsvscode.ts	/^    advance(count: number): void;$/;"	m	interface:IDBCursor
advanced	tsvscode.ts	/^    advanced?: MediaTrackConstraintSet[];$/;"	p	interface:MediaTrackConstraints
after	tsvscode.ts	/^    after(...nodes: (Node | string)[]): void;$/;"	m	interface:ChildNode
album	tsvscode.ts	/^    album: string;$/;"	p	interface:MediaMetadata
album	tsvscode.ts	/^    album?: string;$/;"	p	interface:MediaMetadataInit
alert	tsvscode.ts	/^    alert(message?: any): void;$/;"	m	interface:Window
alert	tsvscode.ts	/^declare function alert(message?: any): void;$/;"	f	namespace:CSS
alg	tsvscode.ts	/^    alg: COSEAlgorithmIdentifier;$/;"	p	interface:PublicKeyCredentialParameters
alg	tsvscode.ts	/^    alg?: string;$/;"	p	interface:JsonWebKey
algorithm	tsvscode.ts	/^    algorithm?: string;$/;"	p	interface:RTCDtlsFingerprint
algorithm	tsvscode.ts	/^    algorithm?: string;$/;"	p	interface:WebTransportHash
algorithm	tsvscode.ts	/^    readonly algorithm: KeyAlgorithm;$/;"	p	interface:CryptoKey
align	tsvscode.ts	/^    align: AlignSetting;$/;"	p	interface:VTTCue
align	tsvscode.ts	/^    align: number;$/;"	p	interface:SVGPreserveAspectRatio
align	tsvscode.ts	/^    align: string;$/;"	p	interface:HTMLDivElement
align	tsvscode.ts	/^    align: string;$/;"	p	interface:HTMLEmbedElement
align	tsvscode.ts	/^    align: string;$/;"	p	interface:HTMLHRElement
align	tsvscode.ts	/^    align: string;$/;"	p	interface:HTMLHeadingElement
align	tsvscode.ts	/^    align: string;$/;"	p	interface:HTMLIFrameElement
align	tsvscode.ts	/^    align: string;$/;"	p	interface:HTMLImageElement
align	tsvscode.ts	/^    align: string;$/;"	p	interface:HTMLInputElement
align	tsvscode.ts	/^    align: string;$/;"	p	interface:HTMLLegendElement
align	tsvscode.ts	/^    align: string;$/;"	p	interface:HTMLObjectElement
align	tsvscode.ts	/^    align: string;$/;"	p	interface:HTMLParagraphElement
align	tsvscode.ts	/^    align: string;$/;"	p	interface:HTMLTableCaptionElement
align	tsvscode.ts	/^    align: string;$/;"	p	interface:HTMLTableCellElement
align	tsvscode.ts	/^    align: string;$/;"	p	interface:HTMLTableColElement
align	tsvscode.ts	/^    align: string;$/;"	p	interface:HTMLTableElement
align	tsvscode.ts	/^    align: string;$/;"	p	interface:HTMLTableRowElement
align	tsvscode.ts	/^    align: string;$/;"	p	interface:HTMLTableSectionElement
alignContent	tsvscode.ts	/^    alignContent: string;$/;"	p	interface:CSSStyleDeclaration
alignItems	tsvscode.ts	/^    alignItems: string;$/;"	p	interface:CSSStyleDeclaration
alignSelf	tsvscode.ts	/^    alignSelf: string;$/;"	p	interface:CSSStyleDeclaration
alignmentBaseline	tsvscode.ts	/^    alignmentBaseline: string;$/;"	p	interface:CSSStyleDeclaration
alinkColor	tsvscode.ts	/^    alinkColor: string;$/;"	p	interface:Document
all	tsvscode.ts	/^    all: string;$/;"	p	interface:CSSStyleDeclaration
all	tsvscode.ts	/^    readonly all: HTMLAllCollection;$/;"	p	interface:Document
allocationSize	tsvscode.ts	/^    allocationSize(options?: VideoFrameCopyToOptions): number;$/;"	m	interface:VideoFrame
allow	tsvscode.ts	/^    allow: string;$/;"	p	interface:HTMLIFrameElement
allowCredentials	tsvscode.ts	/^    allowCredentials?: PublicKeyCredentialDescriptor[];$/;"	p	interface:PublicKeyCredentialRequestOptions
allowFullscreen	tsvscode.ts	/^    allowFullscreen: boolean;$/;"	p	interface:HTMLIFrameElement
allowPooling	tsvscode.ts	/^    allowPooling?: boolean;$/;"	p	interface:WebTransportOptions
alpha	tsvscode.ts	/^    alpha?: AlphaOption;$/;"	p	interface:VideoEncoderConfig
alpha	tsvscode.ts	/^    alpha?: AlphaOption;$/;"	p	interface:VideoFrameInit
alpha	tsvscode.ts	/^    alpha?: boolean;$/;"	p	interface:CanvasRenderingContext2DSettings
alpha	tsvscode.ts	/^    alpha?: boolean;$/;"	p	interface:ImageBitmapRenderingContextSettings
alpha	tsvscode.ts	/^    alpha?: boolean;$/;"	p	interface:WebGLContextAttributes
alpha	tsvscode.ts	/^    alpha?: number | null;$/;"	p	interface:DeviceMotionEventRotationRateInit
alpha	tsvscode.ts	/^    alpha?: number | null;$/;"	p	interface:DeviceOrientationEventInit
alpha	tsvscode.ts	/^    readonly alpha: number | null;$/;"	p	interface:DeviceMotionEventRotationRate
alpha	tsvscode.ts	/^    readonly alpha: number | null;$/;"	p	interface:DeviceOrientationEvent
alphabeticBaseline	tsvscode.ts	/^    readonly alphabeticBaseline: number;$/;"	p	interface:TextMetrics
alt	tsvscode.ts	/^    alt: string;$/;"	p	interface:HTMLAreaElement
alt	tsvscode.ts	/^    alt: string;$/;"	p	interface:HTMLImageElement
alt	tsvscode.ts	/^    alt: string;$/;"	p	interface:HTMLInputElement
altKey	tsvscode.ts	/^    altKey?: boolean;$/;"	p	interface:EventModifierInit
altKey	tsvscode.ts	/^    readonly altKey: boolean;$/;"	p	interface:KeyboardEvent
altKey	tsvscode.ts	/^    readonly altKey: boolean;$/;"	p	interface:MouseEvent
altKey	tsvscode.ts	/^    readonly altKey: boolean;$/;"	p	interface:TouchEvent
altitude	tsvscode.ts	/^    readonly altitude: number | null;$/;"	p	interface:GeolocationCoordinates
altitudeAccuracy	tsvscode.ts	/^    readonly altitudeAccuracy: number | null;$/;"	p	interface:GeolocationCoordinates
altitudeAngle	tsvscode.ts	/^    altitudeAngle?: number;$/;"	p	interface:TouchInit
amount	tsvscode.ts	/^    amount: PaymentCurrencyAmount;$/;"	p	interface:PaymentItem
amplitude	tsvscode.ts	/^    readonly amplitude: SVGAnimatedNumber;$/;"	p	interface:SVGComponentTransferFunctionElement
ancestorOrigins	tsvscode.ts	/^    readonly ancestorOrigins: DOMStringList;$/;"	p	interface:Location
anchorNode	tsvscode.ts	/^    readonly anchorNode: Node | null;$/;"	p	interface:Selection
anchorOffset	tsvscode.ts	/^    readonly anchorOffset: number;$/;"	p	interface:Selection
anchors	tsvscode.ts	/^    readonly anchors: HTMLCollectionOf<HTMLAnchorElement>;$/;"	p	interface:Document
angle	tsvscode.ts	/^    angle: CSSNumericValue;$/;"	p	interface:CSSRotate
angle	tsvscode.ts	/^    angle?: number;$/;"	p	interface:CSSNumericType
angle	tsvscode.ts	/^    readonly angle: number;$/;"	p	interface:SVGTransform
angle	tsvscode.ts	/^    readonly angle: number;$/;"	p	interface:ScreenOrientation
animVal	tsvscode.ts	/^    readonly animVal: DOMRectReadOnly;$/;"	p	interface:SVGAnimatedRect
animVal	tsvscode.ts	/^    readonly animVal: SVGAngle;$/;"	p	interface:SVGAnimatedAngle
animVal	tsvscode.ts	/^    readonly animVal: SVGLength;$/;"	p	interface:SVGAnimatedLength
animVal	tsvscode.ts	/^    readonly animVal: SVGLengthList;$/;"	p	interface:SVGAnimatedLengthList
animVal	tsvscode.ts	/^    readonly animVal: SVGNumberList;$/;"	p	interface:SVGAnimatedNumberList
animVal	tsvscode.ts	/^    readonly animVal: SVGPreserveAspectRatio;$/;"	p	interface:SVGAnimatedPreserveAspectRatio
animVal	tsvscode.ts	/^    readonly animVal: SVGTransformList;$/;"	p	interface:SVGAnimatedTransformList
animVal	tsvscode.ts	/^    readonly animVal: boolean;$/;"	p	interface:SVGAnimatedBoolean
animVal	tsvscode.ts	/^    readonly animVal: number;$/;"	p	interface:SVGAnimatedEnumeration
animVal	tsvscode.ts	/^    readonly animVal: number;$/;"	p	interface:SVGAnimatedInteger
animVal	tsvscode.ts	/^    readonly animVal: number;$/;"	p	interface:SVGAnimatedNumber
animVal	tsvscode.ts	/^    readonly animVal: string;$/;"	p	interface:SVGAnimatedString
animate	tsvscode.ts	/^    animate(keyframes: Keyframe[] | PropertyIndexedKeyframes | null, options?: number | Keyframe/;"	m	interface:Animatable
animatedPoints	tsvscode.ts	/^    readonly animatedPoints: SVGPointList;$/;"	p	interface:SVGAnimatedPoints
animation	tsvscode.ts	/^    animation: string;$/;"	p	interface:CSSStyleDeclaration
animationComposition	tsvscode.ts	/^    animationComposition: string;$/;"	p	interface:CSSStyleDeclaration
animationDelay	tsvscode.ts	/^    animationDelay: string;$/;"	p	interface:CSSStyleDeclaration
animationDirection	tsvscode.ts	/^    animationDirection: string;$/;"	p	interface:CSSStyleDeclaration
animationDuration	tsvscode.ts	/^    animationDuration: string;$/;"	p	interface:CSSStyleDeclaration
animationFillMode	tsvscode.ts	/^    animationFillMode: string;$/;"	p	interface:CSSStyleDeclaration
animationIterationCount	tsvscode.ts	/^    animationIterationCount: string;$/;"	p	interface:CSSStyleDeclaration
animationName	tsvscode.ts	/^    animationName: string;$/;"	p	interface:CSSStyleDeclaration
animationName	tsvscode.ts	/^    animationName?: string;$/;"	p	interface:AnimationEventInit
animationName	tsvscode.ts	/^    readonly animationName: string;$/;"	p	interface:AnimationEvent
animationName	tsvscode.ts	/^    readonly animationName: string;$/;"	p	interface:CSSAnimation
animationPlayState	tsvscode.ts	/^    animationPlayState: string;$/;"	p	interface:CSSStyleDeclaration
animationTimingFunction	tsvscode.ts	/^    animationTimingFunction: string;$/;"	p	interface:CSSStyleDeclaration
animationsPaused	tsvscode.ts	/^    animationsPaused(): boolean;$/;"	m	interface:SVGSVGElement
antialias	tsvscode.ts	/^    antialias?: boolean;$/;"	p	interface:WebGLContextAttributes
any	ests.ts	/^    isArray(arg: any): arg is any[];$/;"	p	interface:ArrayConstructor
appCodeName	tsvscode.ts	/^    readonly appCodeName: string;$/;"	p	interface:NavigatorID
appName	tsvscode.ts	/^    readonly appName: string;$/;"	p	interface:NavigatorID
appVersion	tsvscode.ts	/^    readonly appVersion: string;$/;"	p	interface:NavigatorID
appearance	tsvscode.ts	/^    appearance: string;$/;"	p	interface:CSSStyleDeclaration
append	tsvscode.ts	/^    append(...nodes: (Node | string)[]): void;$/;"	m	interface:ParentNode
append	tsvscode.ts	/^    append(name: string, blobValue: Blob, filename?: string): void;$/;"	m	interface:FormData
append	tsvscode.ts	/^    append(name: string, value: string | Blob): void;$/;"	m	interface:FormData
append	tsvscode.ts	/^    append(name: string, value: string): void;$/;"	m	interface:FormData
append	tsvscode.ts	/^    append(name: string, value: string): void;$/;"	m	interface:Headers
append	tsvscode.ts	/^    append(name: string, value: string): void;$/;"	m	interface:URLSearchParams
append	tsvscode.ts	/^    append(property: string, ...values: (CSSStyleValue | string)[]): void;$/;"	m	interface:StylePropertyMap
appendBuffer	tsvscode.ts	/^    appendBuffer(data: BufferSource): void;$/;"	m	interface:SourceBuffer
appendChild	tsvscode.ts	/^    appendChild<T extends Node>(node: T): T;$/;"	m	interface:Node
appendData	tsvscode.ts	/^    appendData(data: string): void;$/;"	m	interface:CharacterData
appendItem	tsvscode.ts	/^    appendItem(newItem: DOMPoint): DOMPoint;$/;"	m	interface:SVGPointList
appendItem	tsvscode.ts	/^    appendItem(newItem: SVGLength): SVGLength;$/;"	m	interface:SVGLengthList
appendItem	tsvscode.ts	/^    appendItem(newItem: SVGNumber): SVGNumber;$/;"	m	interface:SVGNumberList
appendItem	tsvscode.ts	/^    appendItem(newItem: SVGTransform): SVGTransform;$/;"	m	interface:SVGTransformList
appendItem	tsvscode.ts	/^    appendItem(newItem: string): string;$/;"	m	interface:SVGStringList
appendMedium	tsvscode.ts	/^    appendMedium(medium: string): void;$/;"	m	interface:MediaList
appendRule	tsvscode.ts	/^    appendRule(rule: string): void;$/;"	m	interface:CSSKeyframesRule
appendWindowEnd	tsvscode.ts	/^    appendWindowEnd: number;$/;"	p	interface:SourceBuffer
appendWindowStart	tsvscode.ts	/^    appendWindowStart: number;$/;"	p	interface:SourceBuffer
appid	tsvscode.ts	/^    appid?: boolean;$/;"	p	interface:AuthenticationExtensionsClientOutputs
appid	tsvscode.ts	/^    appid?: string;$/;"	p	interface:AuthenticationExtensionsClientInputs
applets	tsvscode.ts	/^    readonly applets: HTMLCollection;$/;"	p	interface:Document
applicationServerKey	tsvscode.ts	/^    applicationServerKey?: BufferSource | string | null;$/;"	p	interface:PushSubscriptionOptionsInit
applicationServerKey	tsvscode.ts	/^    readonly applicationServerKey: ArrayBuffer | null;$/;"	p	interface:PushSubscriptionOptions
apply	ests.ts	/^    apply(this: Function, thisArg: any, argArray?: any): any;$/;"	m	interface:Function
apply	ests.ts	/^    apply<T, A extends any[], R>(this: (this: T, ...args: A) => R, thisArg: T, args: A): R;$/;"	m	interface:CallableFunction
apply	ests.ts	/^    apply<T, A extends any[]>(this: new (...args: A) => T, thisArg: T, args: A): void;$/;"	m	interface:NewableFunction
apply	ests.ts	/^    apply<T, R>(this: (this: T) => R, thisArg: T): R;$/;"	m	interface:CallableFunction
apply	ests.ts	/^    apply<T>(this: new () => T, thisArg: T): void;$/;"	m	interface:NewableFunction
applyConstraints	tsvscode.ts	/^    applyConstraints(constraints?: MediaTrackConstraints): Promise<void>;$/;"	m	interface:MediaStreamTrack
arc	tsvscode.ts	/^    arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, counterclock/;"	m	interface:CanvasPath
arcTo	tsvscode.ts	/^    arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void;$/;"	m	interface:CanvasPath
archive	tsvscode.ts	/^    archive: string;$/;"	p	interface:HTMLObjectElement
areas	tsvscode.ts	/^    readonly areas: HTMLCollection;$/;"	p	interface:HTMLMapElement
arguments	ests.ts	/^    arguments: any;$/;"	p	interface:Function
ariaAtomic	tsvscode.ts	/^    ariaAtomic: string | null;$/;"	p	interface:ARIAMixin
ariaAutoComplete	tsvscode.ts	/^    ariaAutoComplete: string | null;$/;"	p	interface:ARIAMixin
ariaBusy	tsvscode.ts	/^    ariaBusy: string | null;$/;"	p	interface:ARIAMixin
ariaChecked	tsvscode.ts	/^    ariaChecked: string | null;$/;"	p	interface:ARIAMixin
ariaColCount	tsvscode.ts	/^    ariaColCount: string | null;$/;"	p	interface:ARIAMixin
ariaColIndex	tsvscode.ts	/^    ariaColIndex: string | null;$/;"	p	interface:ARIAMixin
ariaColSpan	tsvscode.ts	/^    ariaColSpan: string | null;$/;"	p	interface:ARIAMixin
ariaCurrent	tsvscode.ts	/^    ariaCurrent: string | null;$/;"	p	interface:ARIAMixin
ariaDescription	tsvscode.ts	/^    ariaDescription: string | null;$/;"	p	interface:ARIAMixin
ariaDisabled	tsvscode.ts	/^    ariaDisabled: string | null;$/;"	p	interface:ARIAMixin
ariaExpanded	tsvscode.ts	/^    ariaExpanded: string | null;$/;"	p	interface:ARIAMixin
ariaHasPopup	tsvscode.ts	/^    ariaHasPopup: string | null;$/;"	p	interface:ARIAMixin
ariaHidden	tsvscode.ts	/^    ariaHidden: string | null;$/;"	p	interface:ARIAMixin
ariaInvalid	tsvscode.ts	/^    ariaInvalid: string | null;$/;"	p	interface:ARIAMixin
ariaKeyShortcuts	tsvscode.ts	/^    ariaKeyShortcuts: string | null;$/;"	p	interface:ARIAMixin
ariaLabel	tsvscode.ts	/^    ariaLabel: string | null;$/;"	p	interface:ARIAMixin
ariaLevel	tsvscode.ts	/^    ariaLevel: string | null;$/;"	p	interface:ARIAMixin
ariaLive	tsvscode.ts	/^    ariaLive: string | null;$/;"	p	interface:ARIAMixin
ariaModal	tsvscode.ts	/^    ariaModal: string | null;$/;"	p	interface:ARIAMixin
ariaMultiLine	tsvscode.ts	/^    ariaMultiLine: string | null;$/;"	p	interface:ARIAMixin
ariaMultiSelectable	tsvscode.ts	/^    ariaMultiSelectable: string | null;$/;"	p	interface:ARIAMixin
ariaOrientation	tsvscode.ts	/^    ariaOrientation: string | null;$/;"	p	interface:ARIAMixin
ariaPlaceholder	tsvscode.ts	/^    ariaPlaceholder: string | null;$/;"	p	interface:ARIAMixin
ariaPosInSet	tsvscode.ts	/^    ariaPosInSet: string | null;$/;"	p	interface:ARIAMixin
ariaPressed	tsvscode.ts	/^    ariaPressed: string | null;$/;"	p	interface:ARIAMixin
ariaReadOnly	tsvscode.ts	/^    ariaReadOnly: string | null;$/;"	p	interface:ARIAMixin
ariaRequired	tsvscode.ts	/^    ariaRequired: string | null;$/;"	p	interface:ARIAMixin
ariaRoleDescription	tsvscode.ts	/^    ariaRoleDescription: string | null;$/;"	p	interface:ARIAMixin
ariaRowCount	tsvscode.ts	/^    ariaRowCount: string | null;$/;"	p	interface:ARIAMixin
ariaRowIndex	tsvscode.ts	/^    ariaRowIndex: string | null;$/;"	p	interface:ARIAMixin
ariaRowSpan	tsvscode.ts	/^    ariaRowSpan: string | null;$/;"	p	interface:ARIAMixin
ariaSelected	tsvscode.ts	/^    ariaSelected: string | null;$/;"	p	interface:ARIAMixin
ariaSetSize	tsvscode.ts	/^    ariaSetSize: string | null;$/;"	p	interface:ARIAMixin
ariaSort	tsvscode.ts	/^    ariaSort: string | null;$/;"	p	interface:ARIAMixin
ariaValueMax	tsvscode.ts	/^    ariaValueMax: string | null;$/;"	p	interface:ARIAMixin
ariaValueMin	tsvscode.ts	/^    ariaValueMin: string | null;$/;"	p	interface:ARIAMixin
ariaValueNow	tsvscode.ts	/^    ariaValueNow: string | null;$/;"	p	interface:ARIAMixin
ariaValueText	tsvscode.ts	/^    ariaValueText: string | null;$/;"	p	interface:ARIAMixin
arrayBuffer	tsvscode.ts	/^    arrayBuffer(): Promise<ArrayBuffer>;$/;"	m	interface:Blob
arrayBuffer	tsvscode.ts	/^    arrayBuffer(): Promise<ArrayBuffer>;$/;"	m	interface:Body
artist	tsvscode.ts	/^    artist: string;$/;"	p	interface:MediaMetadata
artist	tsvscode.ts	/^    artist?: string;$/;"	p	interface:MediaMetadataInit
artwork	tsvscode.ts	/^    artwork: ReadonlyArray<MediaImage>;$/;"	p	interface:MediaMetadata
artwork	tsvscode.ts	/^    artwork?: MediaImage[];$/;"	p	interface:MediaMetadataInit
as	tsvscode.ts	/^    as: string;$/;"	p	interface:HTMLLinkElement
ascentOverride	tsvscode.ts	/^    ascentOverride: string;$/;"	p	interface:FontFace
ascentOverride	tsvscode.ts	/^    ascentOverride?: string;$/;"	p	interface:FontFaceDescriptors
asin	ests.ts	/^    asin(x: number): number;$/;"	m	interface:Math
aspectRatio	tsvscode.ts	/^    aspectRatio: string;$/;"	p	interface:CSSStyleDeclaration
aspectRatio	tsvscode.ts	/^    aspectRatio?: ConstrainDouble;$/;"	p	interface:MediaTrackConstraintSet
aspectRatio	tsvscode.ts	/^    aspectRatio?: DoubleRange;$/;"	p	interface:MediaTrackCapabilities
aspectRatio	tsvscode.ts	/^    aspectRatio?: boolean;$/;"	p	interface:MediaTrackSupportedConstraints
aspectRatio	tsvscode.ts	/^    aspectRatio?: number;$/;"	p	interface:MediaTrackSettings
assert	ests.ts	/^    \/** @deprecated*\/ assert?: ImportAssertions;$/;"	p	interface:ImportCallOptions
assert	tsvscode.ts	/^    assert(condition?: boolean, ...data: any[]): void;$/;"	m	interface:Console
assign	tsvscode.ts	/^    assign(...nodes: (Element | Text)[]): void;$/;"	m	interface:HTMLSlotElement
assign	tsvscode.ts	/^    assign(url: string | URL): void;$/;"	m	interface:Location
assignedElements	tsvscode.ts	/^    assignedElements(options?: AssignedNodesOptions): Element[];$/;"	m	interface:HTMLSlotElement
assignedNodes	tsvscode.ts	/^    assignedNodes(options?: AssignedNodesOptions): Node[];$/;"	m	interface:HTMLSlotElement
assignedSlot	tsvscode.ts	/^    readonly assignedSlot: HTMLSlotElement | null;$/;"	p	interface:Slottable
async	tsvscode.ts	/^    async: boolean;$/;"	p	interface:HTMLScriptElement
atan	ests.ts	/^    atan(x: number): number;$/;"	m	interface:Math
atan2	ests.ts	/^    atan2(y: number, x: number): number;$/;"	m	interface:Math
atob	tsvscode.ts	/^    atob(data: string): string;$/;"	m	interface:WindowOrWorkerGlobalScope
attachInternals	tsvscode.ts	/^    attachInternals(): ElementInternals;$/;"	m	interface:HTMLElement
attachShader	tsvscode.ts	/^    attachShader(program: WebGLProgram, shader: WebGLShader): void;$/;"	m	interface:WebGLRenderingContextBase
attachShadow	tsvscode.ts	/^    attachShadow(init: ShadowRootInit): ShadowRoot;$/;"	m	interface:Element
attack	tsvscode.ts	/^    attack?: number;$/;"	p	interface:DynamicsCompressorOptions
attack	tsvscode.ts	/^    readonly attack: AudioParam;$/;"	p	interface:DynamicsCompressorNode
attestation	tsvscode.ts	/^    attestation?: AttestationConveyancePreference;$/;"	p	interface:PublicKeyCredentialCreationOptions
attestationObject	tsvscode.ts	/^    readonly attestationObject: ArrayBuffer;$/;"	p	interface:AuthenticatorAttestationResponse
attrChange	tsvscode.ts	/^    readonly attrChange: number;$/;"	p	interface:MutationEvent
attrName	tsvscode.ts	/^    readonly attrName: string;$/;"	p	interface:MutationEvent
attributeFilter	tsvscode.ts	/^    attributeFilter?: string[];$/;"	p	interface:MutationObserverInit
attributeName	tsvscode.ts	/^    readonly attributeName: string | null;$/;"	p	interface:MutationRecord
attributeNamespace	tsvscode.ts	/^    readonly attributeNamespace: string | null;$/;"	p	interface:MutationRecord
attributeOldValue	tsvscode.ts	/^    attributeOldValue?: boolean;$/;"	p	interface:MutationObserverInit
attributeStyleMap	tsvscode.ts	/^    readonly attributeStyleMap: StylePropertyMap;$/;"	p	interface:ElementCSSInlineStyle
attributes	tsvscode.ts	/^    attributes?: boolean;$/;"	p	interface:MutationObserverInit
attributes	tsvscode.ts	/^    readonly attributes: NamedNodeMap;$/;"	p	interface:Element
audio	tsvscode.ts	/^    audio?: AudioConfiguration;$/;"	p	interface:MediaConfiguration
audio	tsvscode.ts	/^    audio?: boolean | MediaTrackConstraints;$/;"	p	interface:DisplayMediaStreamOptions
audio	tsvscode.ts	/^    audio?: boolean | MediaTrackConstraints;$/;"	p	interface:MediaStreamConstraints
audioBitsPerSecond	tsvscode.ts	/^    audioBitsPerSecond?: number;$/;"	p	interface:MediaRecorderOptions
audioBitsPerSecond	tsvscode.ts	/^    readonly audioBitsPerSecond: number;$/;"	p	interface:MediaRecorder
audioCapabilities	tsvscode.ts	/^    audioCapabilities?: MediaKeySystemMediaCapability[];$/;"	p	interface:MediaKeySystemConfiguration
audioLevel	tsvscode.ts	/^    audioLevel?: number;$/;"	p	interface:RTCInboundRtpStreamStats
audioLevel	tsvscode.ts	/^    audioLevel?: number;$/;"	p	interface:RTCRtpContributingSource
audioWorklet	tsvscode.ts	/^    readonly audioWorklet: AudioWorklet;$/;"	p	interface:BaseAudioContext
authenticatorAttachment	tsvscode.ts	/^    authenticatorAttachment?: AuthenticatorAttachment;$/;"	p	interface:AuthenticatorSelectionCriteria
authenticatorAttachment	tsvscode.ts	/^    readonly authenticatorAttachment: string | null;$/;"	p	interface:PublicKeyCredential
authenticatorData	tsvscode.ts	/^    readonly authenticatorData: ArrayBuffer;$/;"	p	interface:AuthenticatorAssertionResponse
authenticatorSelection	tsvscode.ts	/^    authenticatorSelection?: AuthenticatorSelectionCriteria;$/;"	p	interface:PublicKeyCredentialCreationOptions
autoAllocateChunkSize	tsvscode.ts	/^    autoAllocateChunkSize?: number;$/;"	p	interface:UnderlyingByteSource
autoAllocateChunkSize	tsvscode.ts	/^    autoAllocateChunkSize?: number;$/;"	p	interface:UnderlyingSource
autoGainControl	tsvscode.ts	/^    autoGainControl?: ConstrainBoolean;$/;"	p	interface:MediaTrackConstraintSet
autoGainControl	tsvscode.ts	/^    autoGainControl?: boolean;$/;"	p	interface:MediaTrackSettings
autoGainControl	tsvscode.ts	/^    autoGainControl?: boolean;$/;"	p	interface:MediaTrackSupportedConstraints
autoGainControl	tsvscode.ts	/^    autoGainControl?: boolean[];$/;"	p	interface:MediaTrackCapabilities
autoIncrement	tsvscode.ts	/^    autoIncrement?: boolean;$/;"	p	interface:IDBObjectStoreParameters
autoIncrement	tsvscode.ts	/^    readonly autoIncrement: boolean;$/;"	p	interface:IDBObjectStore
autocapitalize	tsvscode.ts	/^    autocapitalize: string;$/;"	p	interface:HTMLElement
autocomplete	tsvscode.ts	/^    autocomplete: AutoFill;$/;"	p	interface:HTMLInputElement
autocomplete	tsvscode.ts	/^    autocomplete: AutoFill;$/;"	p	interface:HTMLSelectElement
autocomplete	tsvscode.ts	/^    autocomplete: AutoFill;$/;"	p	interface:HTMLTextAreaElement
autocomplete	tsvscode.ts	/^    autocomplete: AutoFillBase;$/;"	p	interface:HTMLFormElement
autofocus	tsvscode.ts	/^    autofocus: boolean;$/;"	p	interface:HTMLOrSVGElement
automationRate	tsvscode.ts	/^    automationRate: AutomationRate;$/;"	p	interface:AudioParam
autoplay	tsvscode.ts	/^    autoplay: boolean;$/;"	p	interface:HTMLMediaElement
availHeight	tsvscode.ts	/^    readonly availHeight: number;$/;"	p	interface:Screen
availWidth	tsvscode.ts	/^    readonly availWidth: number;$/;"	p	interface:Screen
availableIncomingBitrate	tsvscode.ts	/^    availableIncomingBitrate?: number;$/;"	p	interface:RTCIceCandidatePairStats
availableOutgoingBitrate	tsvscode.ts	/^    availableOutgoingBitrate?: number;$/;"	p	interface:RTCIceCandidatePairStats
avc	tsvscode.ts	/^    avc?: AvcEncoderConfig;$/;"	p	interface:VideoEncoderConfig
ax	tsvscode.ts	/^    ax: CSSNumericValue;$/;"	p	interface:CSSSkew
ax	tsvscode.ts	/^    ax: CSSNumericValue;$/;"	p	interface:CSSSkewX
axes	tsvscode.ts	/^    readonly axes: ReadonlyArray<number>;$/;"	p	interface:Gamepad
axis	tsvscode.ts	/^    axis: string;$/;"	p	interface:HTMLTableCellElement
ay	tsvscode.ts	/^    ay: CSSNumericValue;$/;"	p	interface:CSSSkew
ay	tsvscode.ts	/^    ay: CSSNumericValue;$/;"	p	interface:CSSSkewY
azimuth	tsvscode.ts	/^    readonly azimuth: SVGAnimatedNumber;$/;"	p	interface:SVGFEDistantLightElement
azimuthAngle	tsvscode.ts	/^    azimuthAngle?: number;$/;"	p	interface:TouchInit
b	tsvscode.ts	/^    b: number;$/;"	p	interface:DOMMatrix
b	tsvscode.ts	/^    b?: number;$/;"	p	interface:DOMMatrix2DInit
b	tsvscode.ts	/^    readonly b: number;$/;"	p	interface:DOMMatrixReadOnly
back	tsvscode.ts	/^    back(): void;$/;"	m	interface:History
backdropFilter	tsvscode.ts	/^    backdropFilter: string;$/;"	p	interface:CSSStyleDeclaration
backfaceVisibility	tsvscode.ts	/^    backfaceVisibility: string;$/;"	p	interface:CSSStyleDeclaration
background	tsvscode.ts	/^    background: string;$/;"	p	interface:CSSStyleDeclaration
background	tsvscode.ts	/^    background: string;$/;"	p	interface:HTMLBodyElement
backgroundAttachment	tsvscode.ts	/^    backgroundAttachment: string;$/;"	p	interface:CSSStyleDeclaration
backgroundBlendMode	tsvscode.ts	/^    backgroundBlendMode: string;$/;"	p	interface:CSSStyleDeclaration
backgroundClip	tsvscode.ts	/^    backgroundClip: string;$/;"	p	interface:CSSStyleDeclaration
backgroundColor	tsvscode.ts	/^    backgroundColor: string;$/;"	p	interface:CSSStyleDeclaration
backgroundImage	tsvscode.ts	/^    backgroundImage: string;$/;"	p	interface:CSSStyleDeclaration
backgroundOrigin	tsvscode.ts	/^    backgroundOrigin: string;$/;"	p	interface:CSSStyleDeclaration
backgroundPosition	tsvscode.ts	/^    backgroundPosition: string;$/;"	p	interface:CSSStyleDeclaration
backgroundPositionX	tsvscode.ts	/^    backgroundPositionX: string;$/;"	p	interface:CSSStyleDeclaration
backgroundPositionY	tsvscode.ts	/^    backgroundPositionY: string;$/;"	p	interface:CSSStyleDeclaration
backgroundRepeat	tsvscode.ts	/^    backgroundRepeat: string;$/;"	p	interface:CSSStyleDeclaration
backgroundSize	tsvscode.ts	/^    backgroundSize: string;$/;"	p	interface:CSSStyleDeclaration
badInput	tsvscode.ts	/^    badInput?: boolean;$/;"	p	interface:ValidityStateFlags
badInput	tsvscode.ts	/^    readonly badInput: boolean;$/;"	p	interface:ValidityState
badge	tsvscode.ts	/^    badge?: string;$/;"	p	interface:NotificationOptions
badge	tsvscode.ts	/^    readonly badge: string;$/;"	p	interface:Notification
baseFrequencyX	tsvscode.ts	/^    readonly baseFrequencyX: SVGAnimatedNumber;$/;"	p	interface:SVGFETurbulenceElement
baseFrequencyY	tsvscode.ts	/^    readonly baseFrequencyY: SVGAnimatedNumber;$/;"	p	interface:SVGFETurbulenceElement
baseLatency	tsvscode.ts	/^    readonly baseLatency: number;$/;"	p	interface:AudioContext
basePalette	tsvscode.ts	/^    readonly basePalette: string;$/;"	p	interface:CSSFontPaletteValuesRule
baseURI	tsvscode.ts	/^    readonly baseURI: string;$/;"	p	interface:Node
baseURL	tsvscode.ts	/^    baseURL?: string;$/;"	p	interface:CSSStyleSheetInit
baseVal	tsvscode.ts	/^    baseVal: boolean;$/;"	p	interface:SVGAnimatedBoolean
baseVal	tsvscode.ts	/^    baseVal: number;$/;"	p	interface:SVGAnimatedEnumeration
baseVal	tsvscode.ts	/^    baseVal: number;$/;"	p	interface:SVGAnimatedInteger
baseVal	tsvscode.ts	/^    baseVal: number;$/;"	p	interface:SVGAnimatedNumber
baseVal	tsvscode.ts	/^    baseVal: string;$/;"	p	interface:SVGAnimatedString
baseVal	tsvscode.ts	/^    readonly baseVal: DOMRect;$/;"	p	interface:SVGAnimatedRect
baseVal	tsvscode.ts	/^    readonly baseVal: SVGAngle;$/;"	p	interface:SVGAnimatedAngle
baseVal	tsvscode.ts	/^    readonly baseVal: SVGLength;$/;"	p	interface:SVGAnimatedLength
baseVal	tsvscode.ts	/^    readonly baseVal: SVGLengthList;$/;"	p	interface:SVGAnimatedLengthList
baseVal	tsvscode.ts	/^    readonly baseVal: SVGNumberList;$/;"	p	interface:SVGAnimatedNumberList
baseVal	tsvscode.ts	/^    readonly baseVal: SVGPreserveAspectRatio;$/;"	p	interface:SVGAnimatedPreserveAspectRatio
baseVal	tsvscode.ts	/^    readonly baseVal: SVGTransformList;$/;"	p	interface:SVGAnimatedTransformList
baselineShift	tsvscode.ts	/^    baselineShift: string;$/;"	p	interface:CSSStyleDeclaration
baselineSource	tsvscode.ts	/^    baselineSource: string;$/;"	p	interface:CSSStyleDeclaration
before	tsvscode.ts	/^    before(...nodes: (Node | string)[]): void;$/;"	m	interface:ChildNode
beginElement	tsvscode.ts	/^    beginElement(): void;$/;"	m	interface:SVGAnimationElement
beginElementAt	tsvscode.ts	/^    beginElementAt(offset: number): void;$/;"	m	interface:SVGAnimationElement
beginPath	tsvscode.ts	/^    beginPath(): void;$/;"	m	interface:CanvasDrawPath
beginQuery	tsvscode.ts	/^    beginQuery(target: GLenum, query: WebGLQuery): void;$/;"	m	interface:WebGL2RenderingContextBase
beginTransformFeedback	tsvscode.ts	/^    beginTransformFeedback(primitiveMode: GLenum): void;$/;"	m	interface:WebGL2RenderingContextBase
behavior	tsvscode.ts	/^    behavior: string;$/;"	p	interface:HTMLMarqueeElement
behavior	tsvscode.ts	/^    behavior?: ScrollBehavior;$/;"	p	interface:ScrollOptions
beta	tsvscode.ts	/^    beta?: number | null;$/;"	p	interface:DeviceMotionEventRotationRateInit
beta	tsvscode.ts	/^    beta?: number | null;$/;"	p	interface:DeviceOrientationEventInit
beta	tsvscode.ts	/^    readonly beta: number | null;$/;"	p	interface:DeviceMotionEventRotationRate
beta	tsvscode.ts	/^    readonly beta: number | null;$/;"	p	interface:DeviceOrientationEvent
bezierCurveTo	tsvscode.ts	/^    bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number):/;"	m	interface:CanvasPath
bgColor	tsvscode.ts	/^    bgColor: string;$/;"	p	interface:Document
bgColor	tsvscode.ts	/^    bgColor: string;$/;"	p	interface:HTMLBodyElement
bgColor	tsvscode.ts	/^    bgColor: string;$/;"	p	interface:HTMLMarqueeElement
bgColor	tsvscode.ts	/^    bgColor: string;$/;"	p	interface:HTMLTableCellElement
bgColor	tsvscode.ts	/^    bgColor: string;$/;"	p	interface:HTMLTableElement
bgColor	tsvscode.ts	/^    bgColor: string;$/;"	p	interface:HTMLTableRowElement
bias	tsvscode.ts	/^    readonly bias: SVGAnimatedNumber;$/;"	p	interface:SVGFEConvolveMatrixElement
binaryType	tsvscode.ts	/^    binaryType: BinaryType;$/;"	p	interface:RTCDataChannel
binaryType	tsvscode.ts	/^    binaryType: BinaryType;$/;"	p	interface:WebSocket
bind	ests.ts	/^    bind(this: Function, thisArg: any, ...argArray: any[]): any;$/;"	m	interface:Function
bind	ests.ts	/^    bind<A extends any[], B extends any[], R>(this: new (...args: [...A, ...B]) => R, thisArg: a/;"	m	interface:NewableFunction
bind	ests.ts	/^    bind<T, A extends any[], B extends any[], R>(this: (this: T, ...args: [...A, ...B]) => R, th/;"	m	interface:CallableFunction
bind	ests.ts	/^    bind<T>(this: T, thisArg: ThisParameterType<T>): OmitThisParameter<T>;$/;"	m	interface:CallableFunction
bind	ests.ts	/^    bind<T>(this: T, thisArg: any): T;$/;"	m	interface:NewableFunction
bindAttribLocation	tsvscode.ts	/^    bindAttribLocation(program: WebGLProgram, index: GLuint, name: string): void;$/;"	m	interface:WebGLRenderingContextBase
bindBuffer	tsvscode.ts	/^    bindBuffer(target: GLenum, buffer: WebGLBuffer | null): void;$/;"	m	interface:WebGLRenderingContextBase
bindBufferBase	tsvscode.ts	/^    bindBufferBase(target: GLenum, index: GLuint, buffer: WebGLBuffer | null): void;$/;"	m	interface:WebGL2RenderingContextBase
bindBufferRange	tsvscode.ts	/^    bindBufferRange(target: GLenum, index: GLuint, buffer: WebGLBuffer | null, offset: GLintptr,/;"	m	interface:WebGL2RenderingContextBase
bindFramebuffer	tsvscode.ts	/^    bindFramebuffer(target: GLenum, framebuffer: WebGLFramebuffer | null): void;$/;"	m	interface:WebGLRenderingContextBase
bindRenderbuffer	tsvscode.ts	/^    bindRenderbuffer(target: GLenum, renderbuffer: WebGLRenderbuffer | null): void;$/;"	m	interface:WebGLRenderingContextBase
bindSampler	tsvscode.ts	/^    bindSampler(unit: GLuint, sampler: WebGLSampler | null): void;$/;"	m	interface:WebGL2RenderingContextBase
bindTexture	tsvscode.ts	/^    bindTexture(target: GLenum, texture: WebGLTexture | null): void;$/;"	m	interface:WebGLRenderingContextBase
bindTransformFeedback	tsvscode.ts	/^    bindTransformFeedback(target: GLenum, tf: WebGLTransformFeedback | null): void;$/;"	m	interface:WebGL2RenderingContextBase
bindVertexArray	tsvscode.ts	/^    bindVertexArray(array: WebGLVertexArrayObject | null): void;$/;"	m	interface:WebGL2RenderingContextBase
bindVertexArrayOES	tsvscode.ts	/^    bindVertexArrayOES(arrayObject: WebGLVertexArrayObjectOES | null): void;$/;"	m	interface:OES_vertex_array_object
bitrate	tsvscode.ts	/^    bitrate: number;$/;"	p	interface:VideoConfiguration
bitrate	tsvscode.ts	/^    bitrate?: number;$/;"	p	interface:AudioConfiguration
bitrate	tsvscode.ts	/^    bitrate?: number;$/;"	p	interface:VideoEncoderConfig
bitrateMode	tsvscode.ts	/^    bitrateMode?: VideoEncoderBitrateMode;$/;"	p	interface:VideoEncoderConfig
bitsPerSecond	tsvscode.ts	/^    bitsPerSecond?: number;$/;"	p	interface:MediaRecorderOptions
blendColor	tsvscode.ts	/^    blendColor(red: GLclampf, green: GLclampf, blue: GLclampf, alpha: GLclampf): void;$/;"	m	interface:WebGLRenderingContextBase
blendEquation	tsvscode.ts	/^    blendEquation(mode: GLenum): void;$/;"	m	interface:WebGLRenderingContextBase
blendEquationSeparate	tsvscode.ts	/^    blendEquationSeparate(modeRGB: GLenum, modeAlpha: GLenum): void;$/;"	m	interface:WebGLRenderingContextBase
blendEquationSeparateiOES	tsvscode.ts	/^    blendEquationSeparateiOES(buf: GLuint, modeRGB: GLenum, modeAlpha: GLenum): void;$/;"	m	interface:OES_draw_buffers_indexed
blendEquationiOES	tsvscode.ts	/^    blendEquationiOES(buf: GLuint, mode: GLenum): void;$/;"	m	interface:OES_draw_buffers_indexed
blendFunc	tsvscode.ts	/^    blendFunc(sfactor: GLenum, dfactor: GLenum): void;$/;"	m	interface:WebGLRenderingContextBase
blendFuncSeparate	tsvscode.ts	/^    blendFuncSeparate(srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum): void;$/;"	m	interface:WebGLRenderingContextBase
blendFuncSeparateiOES	tsvscode.ts	/^    blendFuncSeparateiOES(buf: GLuint, srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlph/;"	m	interface:OES_draw_buffers_indexed
blendFunciOES	tsvscode.ts	/^    blendFunciOES(buf: GLuint, src: GLenum, dst: GLenum): void;$/;"	m	interface:OES_draw_buffers_indexed
blitFramebuffer	tsvscode.ts	/^    blitFramebuffer(srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0:/;"	m	interface:WebGL2RenderingContextBase
blob	tsvscode.ts	/^    blob(): Promise<Blob>;$/;"	m	interface:Body
block	tsvscode.ts	/^    block?: ScrollLogicalPosition;$/;"	p	interface:ScrollIntoViewOptions
blockSize	tsvscode.ts	/^    blockSize: string;$/;"	p	interface:CSSStyleDeclaration
blockSize	tsvscode.ts	/^    readonly blockSize: number;$/;"	p	interface:ResizeObserverSize
blockedURI	tsvscode.ts	/^    blockedURI?: string;$/;"	p	interface:SecurityPolicyViolationEventInit
blockedURI	tsvscode.ts	/^    readonly blockedURI: string;$/;"	p	interface:SecurityPolicyViolationEvent
blur	tsvscode.ts	/^    blur(): void;$/;"	m	interface:HTMLOrSVGElement
blur	tsvscode.ts	/^    blur(): void;$/;"	m	interface:Window
body	tsvscode.ts	/^    body: HTMLElement;$/;"	p	interface:Document
body	tsvscode.ts	/^    body?: BodyInit | null;$/;"	p	interface:RequestInit
body	tsvscode.ts	/^    body?: string;$/;"	p	interface:NotificationOptions
body	tsvscode.ts	/^    readonly body: ReadableStream<Uint8Array> | null;$/;"	p	interface:Body
body	tsvscode.ts	/^    readonly body: ReportBody | null;$/;"	p	interface:Report
body	tsvscode.ts	/^    readonly body: string;$/;"	p	interface:Notification
bodyUsed	tsvscode.ts	/^    readonly bodyUsed: boolean;$/;"	p	interface:Body
booleanValue	tsvscode.ts	/^    readonly booleanValue: boolean;$/;"	p	interface:XPathResult
border	tsvscode.ts	/^    border: string;$/;"	p	interface:CSSStyleDeclaration
border	tsvscode.ts	/^    border: string;$/;"	p	interface:HTMLImageElement
border	tsvscode.ts	/^    border: string;$/;"	p	interface:HTMLObjectElement
border	tsvscode.ts	/^    border: string;$/;"	p	interface:HTMLTableElement
borderBlock	tsvscode.ts	/^    borderBlock: string;$/;"	p	interface:CSSStyleDeclaration
borderBlockColor	tsvscode.ts	/^    borderBlockColor: string;$/;"	p	interface:CSSStyleDeclaration
borderBlockEnd	tsvscode.ts	/^    borderBlockEnd: string;$/;"	p	interface:CSSStyleDeclaration
borderBlockEndColor	tsvscode.ts	/^    borderBlockEndColor: string;$/;"	p	interface:CSSStyleDeclaration
borderBlockEndStyle	tsvscode.ts	/^    borderBlockEndStyle: string;$/;"	p	interface:CSSStyleDeclaration
borderBlockEndWidth	tsvscode.ts	/^    borderBlockEndWidth: string;$/;"	p	interface:CSSStyleDeclaration
borderBlockStart	tsvscode.ts	/^    borderBlockStart: string;$/;"	p	interface:CSSStyleDeclaration
borderBlockStartColor	tsvscode.ts	/^    borderBlockStartColor: string;$/;"	p	interface:CSSStyleDeclaration
borderBlockStartStyle	tsvscode.ts	/^    borderBlockStartStyle: string;$/;"	p	interface:CSSStyleDeclaration
borderBlockStartWidth	tsvscode.ts	/^    borderBlockStartWidth: string;$/;"	p	interface:CSSStyleDeclaration
borderBlockStyle	tsvscode.ts	/^    borderBlockStyle: string;$/;"	p	interface:CSSStyleDeclaration
borderBlockWidth	tsvscode.ts	/^    borderBlockWidth: string;$/;"	p	interface:CSSStyleDeclaration
borderBottom	tsvscode.ts	/^    borderBottom: string;$/;"	p	interface:CSSStyleDeclaration
borderBottomColor	tsvscode.ts	/^    borderBottomColor: string;$/;"	p	interface:CSSStyleDeclaration
borderBottomLeftRadius	tsvscode.ts	/^    borderBottomLeftRadius: string;$/;"	p	interface:CSSStyleDeclaration
borderBottomRightRadius	tsvscode.ts	/^    borderBottomRightRadius: string;$/;"	p	interface:CSSStyleDeclaration
borderBottomStyle	tsvscode.ts	/^    borderBottomStyle: string;$/;"	p	interface:CSSStyleDeclaration
borderBottomWidth	tsvscode.ts	/^    borderBottomWidth: string;$/;"	p	interface:CSSStyleDeclaration
borderBoxSize	tsvscode.ts	/^    readonly borderBoxSize: ReadonlyArray<ResizeObserverSize>;$/;"	p	interface:ResizeObserverEntry
borderCollapse	tsvscode.ts	/^    borderCollapse: string;$/;"	p	interface:CSSStyleDeclaration
borderColor	tsvscode.ts	/^    borderColor: string;$/;"	p	interface:CSSStyleDeclaration
borderEndEndRadius	tsvscode.ts	/^    borderEndEndRadius: string;$/;"	p	interface:CSSStyleDeclaration
borderEndStartRadius	tsvscode.ts	/^    borderEndStartRadius: string;$/;"	p	interface:CSSStyleDeclaration
borderImage	tsvscode.ts	/^    borderImage: string;$/;"	p	interface:CSSStyleDeclaration
borderImageOutset	tsvscode.ts	/^    borderImageOutset: string;$/;"	p	interface:CSSStyleDeclaration
borderImageRepeat	tsvscode.ts	/^    borderImageRepeat: string;$/;"	p	interface:CSSStyleDeclaration
borderImageSlice	tsvscode.ts	/^    borderImageSlice: string;$/;"	p	interface:CSSStyleDeclaration
borderImageSource	tsvscode.ts	/^    borderImageSource: string;$/;"	p	interface:CSSStyleDeclaration
borderImageWidth	tsvscode.ts	/^    borderImageWidth: string;$/;"	p	interface:CSSStyleDeclaration
borderInline	tsvscode.ts	/^    borderInline: string;$/;"	p	interface:CSSStyleDeclaration
borderInlineColor	tsvscode.ts	/^    borderInlineColor: string;$/;"	p	interface:CSSStyleDeclaration
borderInlineEnd	tsvscode.ts	/^    borderInlineEnd: string;$/;"	p	interface:CSSStyleDeclaration
borderInlineEndColor	tsvscode.ts	/^    borderInlineEndColor: string;$/;"	p	interface:CSSStyleDeclaration
borderInlineEndStyle	tsvscode.ts	/^    borderInlineEndStyle: string;$/;"	p	interface:CSSStyleDeclaration
borderInlineEndWidth	tsvscode.ts	/^    borderInlineEndWidth: string;$/;"	p	interface:CSSStyleDeclaration
borderInlineStart	tsvscode.ts	/^    borderInlineStart: string;$/;"	p	interface:CSSStyleDeclaration
borderInlineStartColor	tsvscode.ts	/^    borderInlineStartColor: string;$/;"	p	interface:CSSStyleDeclaration
borderInlineStartStyle	tsvscode.ts	/^    borderInlineStartStyle: string;$/;"	p	interface:CSSStyleDeclaration
borderInlineStartWidth	tsvscode.ts	/^    borderInlineStartWidth: string;$/;"	p	interface:CSSStyleDeclaration
borderInlineStyle	tsvscode.ts	/^    borderInlineStyle: string;$/;"	p	interface:CSSStyleDeclaration
borderInlineWidth	tsvscode.ts	/^    borderInlineWidth: string;$/;"	p	interface:CSSStyleDeclaration
borderLeft	tsvscode.ts	/^    borderLeft: string;$/;"	p	interface:CSSStyleDeclaration
borderLeftColor	tsvscode.ts	/^    borderLeftColor: string;$/;"	p	interface:CSSStyleDeclaration
borderLeftStyle	tsvscode.ts	/^    borderLeftStyle: string;$/;"	p	interface:CSSStyleDeclaration
borderLeftWidth	tsvscode.ts	/^    borderLeftWidth: string;$/;"	p	interface:CSSStyleDeclaration
borderRadius	tsvscode.ts	/^    borderRadius: string;$/;"	p	interface:CSSStyleDeclaration
borderRight	tsvscode.ts	/^    borderRight: string;$/;"	p	interface:CSSStyleDeclaration
borderRightColor	tsvscode.ts	/^    borderRightColor: string;$/;"	p	interface:CSSStyleDeclaration
borderRightStyle	tsvscode.ts	/^    borderRightStyle: string;$/;"	p	interface:CSSStyleDeclaration
borderRightWidth	tsvscode.ts	/^    borderRightWidth: string;$/;"	p	interface:CSSStyleDeclaration
borderSpacing	tsvscode.ts	/^    borderSpacing: string;$/;"	p	interface:CSSStyleDeclaration
borderStartEndRadius	tsvscode.ts	/^    borderStartEndRadius: string;$/;"	p	interface:CSSStyleDeclaration
borderStartStartRadius	tsvscode.ts	/^    borderStartStartRadius: string;$/;"	p	interface:CSSStyleDeclaration
borderStyle	tsvscode.ts	/^    borderStyle: string;$/;"	p	interface:CSSStyleDeclaration
borderTop	tsvscode.ts	/^    borderTop: string;$/;"	p	interface:CSSStyleDeclaration
borderTopColor	tsvscode.ts	/^    borderTopColor: string;$/;"	p	interface:CSSStyleDeclaration
borderTopLeftRadius	tsvscode.ts	/^    borderTopLeftRadius: string;$/;"	p	interface:CSSStyleDeclaration
borderTopRightRadius	tsvscode.ts	/^    borderTopRightRadius: string;$/;"	p	interface:CSSStyleDeclaration
borderTopStyle	tsvscode.ts	/^    borderTopStyle: string;$/;"	p	interface:CSSStyleDeclaration
borderTopWidth	tsvscode.ts	/^    borderTopWidth: string;$/;"	p	interface:CSSStyleDeclaration
borderWidth	tsvscode.ts	/^    borderWidth: string;$/;"	p	interface:CSSStyleDeclaration
bottom	tsvscode.ts	/^    bottom: string;$/;"	p	interface:CSSStyleDeclaration
bottom	tsvscode.ts	/^    readonly bottom: number;$/;"	p	interface:DOMRectReadOnly
bound	tsvscode.ts	/^    bound(lower: any, upper: any, lowerOpen?: boolean, upperOpen?: boolean): IDBKeyRange;$/;"	v
boundingClientRect	tsvscode.ts	/^    boundingClientRect: DOMRectInit;$/;"	p	interface:IntersectionObserverEntryInit
boundingClientRect	tsvscode.ts	/^    readonly boundingClientRect: DOMRectReadOnly;$/;"	p	interface:IntersectionObserverEntry
box	tsvscode.ts	/^    box?: ResizeObserverBoxOptions;$/;"	p	interface:ResizeObserverOptions
boxShadow	tsvscode.ts	/^    boxShadow: string;$/;"	p	interface:CSSStyleDeclaration
boxSizing	tsvscode.ts	/^    boxSizing: string;$/;"	p	interface:CSSStyleDeclaration
breakAfter	tsvscode.ts	/^    breakAfter: string;$/;"	p	interface:CSSStyleDeclaration
breakBefore	tsvscode.ts	/^    breakBefore: string;$/;"	p	interface:CSSStyleDeclaration
breakInside	tsvscode.ts	/^    breakInside: string;$/;"	p	interface:CSSStyleDeclaration
btoa	tsvscode.ts	/^    btoa(data: string): string;$/;"	m	interface:WindowOrWorkerGlobalScope
bubbles	tsvscode.ts	/^    bubbles?: boolean;$/;"	p	interface:EventInit
bubbles	tsvscode.ts	/^    readonly bubbles: boolean;$/;"	p	interface:Event
buffer	ests.ts	/^    buffer: ArrayBufferLike;$/;"	p	interface:ArrayBufferView
buffer	ests.ts	/^    readonly buffer: ArrayBuffer;$/;"	p	interface:DataView
buffer	ests.ts	/^    readonly buffer: ArrayBufferLike;$/;"	p	interface:Float32Array
buffer	ests.ts	/^    readonly buffer: ArrayBufferLike;$/;"	p	interface:Float64Array
buffer	ests.ts	/^    readonly buffer: ArrayBufferLike;$/;"	p	interface:Int16Array
buffer	ests.ts	/^    readonly buffer: ArrayBufferLike;$/;"	p	interface:Int32Array
buffer	ests.ts	/^    readonly buffer: ArrayBufferLike;$/;"	p	interface:Int8Array
buffer	ests.ts	/^    readonly buffer: ArrayBufferLike;$/;"	p	interface:Uint16Array
buffer	ests.ts	/^    readonly buffer: ArrayBufferLike;$/;"	p	interface:Uint32Array
buffer	ests.ts	/^    readonly buffer: ArrayBufferLike;$/;"	p	interface:Uint8Array
buffer	ests.ts	/^    readonly buffer: ArrayBufferLike;$/;"	p	interface:Uint8ClampedArray
buffer	tsvscode.ts	/^    buffer: AudioBuffer | null;$/;"	p	interface:AudioBufferSourceNode
buffer	tsvscode.ts	/^    buffer: AudioBuffer | null;$/;"	p	interface:ConvolverNode
buffer	tsvscode.ts	/^    buffer?: AudioBuffer | null;$/;"	p	interface:AudioBufferSourceOptions
buffer	tsvscode.ts	/^    buffer?: AudioBuffer | null;$/;"	p	interface:ConvolverOptions
bufferData	tsvscode.ts	/^    bufferData(target: GLenum, data: AllowSharedBufferSource | null, usage: GLenum): void;$/;"	m	interface:WebGLRenderingContextOverloads
bufferData	tsvscode.ts	/^    bufferData(target: GLenum, size: GLsizeiptr, usage: GLenum): void;$/;"	m	interface:WebGL2RenderingContextOverloads
bufferData	tsvscode.ts	/^    bufferData(target: GLenum, size: GLsizeiptr, usage: GLenum): void;$/;"	m	interface:WebGLRenderingContextOverloads
bufferData	tsvscode.ts	/^    bufferData(target: GLenum, srcData: AllowSharedBufferSource | null, usage: GLenum): void;$/;"	m	interface:WebGL2RenderingContextOverloads
bufferData	tsvscode.ts	/^    bufferData(target: GLenum, srcData: ArrayBufferView, usage: GLenum, srcOffset: number, lengt/;"	m	interface:WebGL2RenderingContextOverloads
bufferSize	tsvscode.ts	/^    readonly bufferSize: number;$/;"	p	interface:ScriptProcessorNode
bufferSubData	tsvscode.ts	/^    bufferSubData(target: GLenum, dstByteOffset: GLintptr, srcData: AllowSharedBufferSource): vo/;"	m	interface:WebGL2RenderingContextOverloads
bufferSubData	tsvscode.ts	/^    bufferSubData(target: GLenum, dstByteOffset: GLintptr, srcData: ArrayBufferView, srcOffset: /;"	m	interface:WebGL2RenderingContextOverloads
bufferSubData	tsvscode.ts	/^    bufferSubData(target: GLenum, offset: GLintptr, data: AllowSharedBufferSource): void;$/;"	m	interface:WebGLRenderingContextOverloads
buffered	tsvscode.ts	/^    buffered?: boolean;$/;"	p	interface:PerformanceObserverInit
buffered	tsvscode.ts	/^    buffered?: boolean;$/;"	p	interface:ReportingObserverOptions
buffered	tsvscode.ts	/^    readonly buffered: TimeRanges;$/;"	p	interface:HTMLMediaElement
buffered	tsvscode.ts	/^    readonly buffered: TimeRanges;$/;"	p	interface:SourceBuffer
bufferedAmount	tsvscode.ts	/^    readonly bufferedAmount: number;$/;"	p	interface:RTCDataChannel
bufferedAmount	tsvscode.ts	/^    readonly bufferedAmount: number;$/;"	p	interface:WebSocket
bufferedAmountLowThreshold	tsvscode.ts	/^    bufferedAmountLowThreshold: number;$/;"	p	interface:RTCDataChannel
bundlePolicy	tsvscode.ts	/^    bundlePolicy?: RTCBundlePolicy;$/;"	p	interface:RTCConfiguration
button	tsvscode.ts	/^    button?: number;$/;"	p	interface:MouseEventInit
button	tsvscode.ts	/^    readonly button: number;$/;"	p	interface:MouseEvent
buttons	tsvscode.ts	/^    buttons?: number;$/;"	p	interface:MouseEventInit
buttons	tsvscode.ts	/^    readonly buttons: ReadonlyArray<GamepadButton>;$/;"	p	interface:Gamepad
buttons	tsvscode.ts	/^    readonly buttons: number;$/;"	p	interface:MouseEvent
byobRequest	tsvscode.ts	/^    readonly byobRequest: ReadableStreamBYOBRequest | null;$/;"	p	interface:ReadableByteStreamController
byteLength	ests.ts	/^    byteLength: number;$/;"	p	interface:ArrayBufferView
byteLength	ests.ts	/^    readonly byteLength: number;$/;"	p	interface:ArrayBuffer
byteLength	ests.ts	/^    readonly byteLength: number;$/;"	p	interface:DataView
byteLength	ests.ts	/^    readonly byteLength: number;$/;"	p	interface:Float32Array
byteLength	ests.ts	/^    readonly byteLength: number;$/;"	p	interface:Float64Array
byteLength	ests.ts	/^    readonly byteLength: number;$/;"	p	interface:Int16Array
byteLength	ests.ts	/^    readonly byteLength: number;$/;"	p	interface:Int32Array
byteLength	ests.ts	/^    readonly byteLength: number;$/;"	p	interface:Int8Array
byteLength	ests.ts	/^    readonly byteLength: number;$/;"	p	interface:Uint16Array
byteLength	ests.ts	/^    readonly byteLength: number;$/;"	p	interface:Uint32Array
byteLength	ests.ts	/^    readonly byteLength: number;$/;"	p	interface:Uint8Array
byteLength	ests.ts	/^    readonly byteLength: number;$/;"	p	interface:Uint8ClampedArray
byteLength	tsvscode.ts	/^    readonly byteLength: number;$/;"	p	interface:EncodedVideoChunk
byteOffset	ests.ts	/^    byteOffset: number;$/;"	p	interface:ArrayBufferView
byteOffset	ests.ts	/^    readonly byteOffset: number;$/;"	p	interface:DataView
byteOffset	ests.ts	/^    readonly byteOffset: number;$/;"	p	interface:Float32Array
byteOffset	ests.ts	/^    readonly byteOffset: number;$/;"	p	interface:Float64Array
byteOffset	ests.ts	/^    readonly byteOffset: number;$/;"	p	interface:Int16Array
byteOffset	ests.ts	/^    readonly byteOffset: number;$/;"	p	interface:Int32Array
byteOffset	ests.ts	/^    readonly byteOffset: number;$/;"	p	interface:Int8Array
byteOffset	ests.ts	/^    readonly byteOffset: number;$/;"	p	interface:Uint16Array
byteOffset	ests.ts	/^    readonly byteOffset: number;$/;"	p	interface:Uint32Array
byteOffset	ests.ts	/^    readonly byteOffset: number;$/;"	p	interface:Uint8Array
byteOffset	ests.ts	/^    readonly byteOffset: number;$/;"	p	interface:Uint8ClampedArray
bytesReceived	tsvscode.ts	/^    bytesReceived?: number;$/;"	p	interface:RTCIceCandidatePairStats
bytesReceived	tsvscode.ts	/^    bytesReceived?: number;$/;"	p	interface:RTCInboundRtpStreamStats
bytesReceived	tsvscode.ts	/^    bytesReceived?: number;$/;"	p	interface:RTCTransportStats
bytesSent	tsvscode.ts	/^    bytesSent?: number;$/;"	p	interface:RTCIceCandidatePairStats
bytesSent	tsvscode.ts	/^    bytesSent?: number;$/;"	p	interface:RTCSentRtpStreamStats
bytesSent	tsvscode.ts	/^    bytesSent?: number;$/;"	p	interface:RTCTransportStats
c	tsvscode.ts	/^    c: number;$/;"	p	interface:DOMMatrix
c	tsvscode.ts	/^    c?: number;$/;"	p	interface:DOMMatrix2DInit
c	tsvscode.ts	/^    readonly c: number;$/;"	p	interface:DOMMatrixReadOnly
cache	tsvscode.ts	/^    cache?: RequestCache;$/;"	p	interface:RequestInit
cache	tsvscode.ts	/^    readonly cache: RequestCache;$/;"	p	interface:Request
cacheName	tsvscode.ts	/^    cacheName?: string;$/;"	p	interface:MultiCacheQueryOptions
caches	tsvscode.ts	/^    readonly caches: CacheStorage;$/;"	p	interface:WindowOrWorkerGlobalScope
calendar	ests.ts	/^        calendar: string;$/;"	p	interface:Intl.ResolvedDateTimeFormatOptions
call	ests.ts	/^    call(this: Function, thisArg: any, ...argArray: any[]): any;$/;"	m	interface:Function
call	ests.ts	/^    call<T, A extends any[], R>(this: (this: T, ...args: A) => R, thisArg: T, ...args: A): R;$/;"	m	interface:CallableFunction
call	ests.ts	/^    call<T, A extends any[]>(this: new (...args: A) => T, thisArg: T, ...args: A): void;$/;"	m	interface:NewableFunction
callee	ests.ts	/^    callee: Function;$/;"	p	interface:IArguments
caller	ests.ts	/^    caller: Function;$/;"	p	interface:Function
canInsertDTMF	tsvscode.ts	/^    readonly canInsertDTMF: boolean;$/;"	p	interface:RTCDTMFSender
canMakePayment	tsvscode.ts	/^    canMakePayment(): Promise<boolean>;$/;"	m	interface:PaymentRequest
canParse	tsvscode.ts	/^    canParse(url: string | URL, base?: string): boolean;$/;"	v
canPlayType	tsvscode.ts	/^    canPlayType(type: string): CanPlayTypeResult;$/;"	m	interface:HTMLMediaElement
canShare	tsvscode.ts	/^    canShare(data?: ShareData): boolean;$/;"	m	interface:Navigator
canTrickleIceCandidates	tsvscode.ts	/^    readonly canTrickleIceCandidates: boolean | null;$/;"	p	interface:RTCPeerConnection
cancel	tsvscode.ts	/^    cancel(): void;$/;"	m	interface:Animation
cancel	tsvscode.ts	/^    cancel(): void;$/;"	m	interface:SpeechSynthesis
cancel	tsvscode.ts	/^    cancel(reason?: any): Promise<void>;$/;"	m	interface:ReadableStream
cancel	tsvscode.ts	/^    cancel(reason?: any): Promise<void>;$/;"	m	interface:ReadableStreamGenericReader
cancel	tsvscode.ts	/^    cancel?: UnderlyingSourceCancelCallback;$/;"	p	interface:UnderlyingByteSource
cancel	tsvscode.ts	/^    cancel?: UnderlyingSourceCancelCallback;$/;"	p	interface:UnderlyingDefaultSource
cancel	tsvscode.ts	/^    cancel?: UnderlyingSourceCancelCallback;$/;"	p	interface:UnderlyingSource
cancelAndHoldAtTime	tsvscode.ts	/^    cancelAndHoldAtTime(cancelTime: number): AudioParam;$/;"	m	interface:AudioParam
cancelAnimationFrame	tsvscode.ts	/^    cancelAnimationFrame(handle: number): void;$/;"	m	interface:AnimationFrameProvider
cancelBubble	tsvscode.ts	/^    cancelBubble: boolean;$/;"	p	interface:Event
cancelIdleCallback	tsvscode.ts	/^    cancelIdleCallback(handle: number): void;$/;"	m	interface:Window
cancelScheduledValues	tsvscode.ts	/^    cancelScheduledValues(cancelTime: number): AudioParam;$/;"	m	interface:AudioParam
cancelVideoFrameCallback	tsvscode.ts	/^    cancelVideoFrameCallback(handle: number): void;$/;"	m	interface:HTMLVideoElement
cancelWatchAvailability	tsvscode.ts	/^    cancelWatchAvailability(id?: number): Promise<void>;$/;"	m	interface:RemotePlayback
cancelable	tsvscode.ts	/^    cancelable?: boolean;$/;"	p	interface:EventInit
cancelable	tsvscode.ts	/^    readonly cancelable: boolean;$/;"	p	interface:Event
cancelable	tsvscode.ts	/^    readonly cancelable: boolean;$/;"	p	interface:PerformanceEventTiming
candidate	tsvscode.ts	/^    candidate?: RTCIceCandidate | null;$/;"	p	interface:RTCPeerConnectionIceEventInit
candidate	tsvscode.ts	/^    candidate?: string;$/;"	p	interface:RTCIceCandidateInit
candidate	tsvscode.ts	/^    readonly candidate: RTCIceCandidate | null;$/;"	p	interface:RTCPeerConnectionIceEvent
candidate	tsvscode.ts	/^    readonly candidate: string;$/;"	p	interface:RTCIceCandidate
canvas	tsvscode.ts	/^    readonly canvas: HTMLCanvasElement | OffscreenCanvas;$/;"	p	interface:ImageBitmapRenderingContext
canvas	tsvscode.ts	/^    readonly canvas: HTMLCanvasElement | OffscreenCanvas;$/;"	p	interface:WebGLRenderingContextBase
canvas	tsvscode.ts	/^    readonly canvas: HTMLCanvasElement;$/;"	p	interface:CanvasCaptureMediaStreamTrack
canvas	tsvscode.ts	/^    readonly canvas: HTMLCanvasElement;$/;"	p	interface:CanvasRenderingContext2D
canvas	tsvscode.ts	/^    readonly canvas: OffscreenCanvas;$/;"	p	interface:OffscreenCanvasRenderingContext2D
caption	tsvscode.ts	/^    caption: HTMLTableCaptionElement | null;$/;"	p	interface:HTMLTableElement
captionSide	tsvscode.ts	/^    captionSide: string;$/;"	p	interface:CSSStyleDeclaration
capture	tsvscode.ts	/^    capture: string;$/;"	p	interface:HTMLInputElement
capture	tsvscode.ts	/^    capture?: boolean;$/;"	p	interface:EventListenerOptions
captureEvents	tsvscode.ts	/^    captureEvents(): void;$/;"	m	interface:Document
captureEvents	tsvscode.ts	/^    captureEvents(): void;$/;"	m	interface:Window
captureStream	tsvscode.ts	/^    captureStream(frameRequestRate?: number): MediaStream;$/;"	m	interface:HTMLCanvasElement
captureTime	tsvscode.ts	/^    captureTime?: DOMHighResTimeStamp;$/;"	p	interface:VideoFrameCallbackMetadata
caretColor	tsvscode.ts	/^    caretColor: string;$/;"	p	interface:CSSStyleDeclaration
caretRangeFromPoint	tsvscode.ts	/^    caretRangeFromPoint(x: number, y: number): Range | null;$/;"	m	interface:Document
caseFirst	ests.ts	/^        caseFirst: string;$/;"	p	interface:Intl.ResolvedCollatorOptions
caseFirst	ests.ts	/^        caseFirst?: "upper" | "lower" | "false" | undefined;$/;"	p	interface:Intl.CollatorOptions
catch	ests.ts	/^    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | unde/;"	m	interface:Promise
ceil	ests.ts	/^    ceil(x: number): number;$/;"	m	interface:Math
cellIndex	tsvscode.ts	/^    readonly cellIndex: number;$/;"	p	interface:HTMLTableCellElement
cellPadding	tsvscode.ts	/^    cellPadding: string;$/;"	p	interface:HTMLTableElement
cellSpacing	tsvscode.ts	/^    cellSpacing: string;$/;"	p	interface:HTMLTableElement
cells	tsvscode.ts	/^    readonly cells: HTMLCollectionOf<HTMLTableCellElement>;$/;"	p	interface:HTMLTableRowElement
certificates	tsvscode.ts	/^    certificates?: RTCCertificate[];$/;"	p	interface:RTCConfiguration
ch	tsvscode.ts	/^    ch: string;$/;"	p	interface:HTMLTableCellElement
ch	tsvscode.ts	/^    ch: string;$/;"	p	interface:HTMLTableColElement
ch	tsvscode.ts	/^    ch: string;$/;"	p	interface:HTMLTableRowElement
ch	tsvscode.ts	/^    ch: string;$/;"	p	interface:HTMLTableSectionElement
chOff	tsvscode.ts	/^    chOff: string;$/;"	p	interface:HTMLTableCellElement
chOff	tsvscode.ts	/^    chOff: string;$/;"	p	interface:HTMLTableColElement
chOff	tsvscode.ts	/^    chOff: string;$/;"	p	interface:HTMLTableRowElement
chOff	tsvscode.ts	/^    chOff: string;$/;"	p	interface:HTMLTableSectionElement
challenge	tsvscode.ts	/^    challenge: BufferSource;$/;"	p	interface:PublicKeyCredentialCreationOptions
challenge	tsvscode.ts	/^    challenge: BufferSource;$/;"	p	interface:PublicKeyCredentialRequestOptions
changeType	tsvscode.ts	/^    changeType(type: string): void;$/;"	m	interface:SourceBuffer
changedTouches	tsvscode.ts	/^    changedTouches?: Touch[];$/;"	p	interface:TouchEventInit
changedTouches	tsvscode.ts	/^    readonly changedTouches: TouchList;$/;"	p	interface:TouchEvent
channel	tsvscode.ts	/^    channel: RTCDataChannel;$/;"	p	interface:RTCDataChannelEventInit
channel	tsvscode.ts	/^    readonly channel: RTCDataChannel;$/;"	p	interface:RTCDataChannelEvent
channelCount	tsvscode.ts	/^    channelCount: number;$/;"	p	interface:AudioNode
channelCount	tsvscode.ts	/^    channelCount?: ConstrainULong;$/;"	p	interface:MediaTrackConstraintSet
channelCount	tsvscode.ts	/^    channelCount?: ULongRange;$/;"	p	interface:MediaTrackCapabilities
channelCount	tsvscode.ts	/^    channelCount?: boolean;$/;"	p	interface:MediaTrackSupportedConstraints
channelCount	tsvscode.ts	/^    channelCount?: number;$/;"	p	interface:AudioNodeOptions
channelCount	tsvscode.ts	/^    channelCount?: number;$/;"	p	interface:MediaTrackSettings
channelCountMode	tsvscode.ts	/^    channelCountMode: ChannelCountMode;$/;"	p	interface:AudioNode
channelCountMode	tsvscode.ts	/^    channelCountMode?: ChannelCountMode;$/;"	p	interface:AudioNodeOptions
channelInterpretation	tsvscode.ts	/^    channelInterpretation: ChannelInterpretation;$/;"	p	interface:AudioNode
channelInterpretation	tsvscode.ts	/^    channelInterpretation?: ChannelInterpretation;$/;"	p	interface:AudioNodeOptions
channels	tsvscode.ts	/^    channels?: number;$/;"	p	interface:RTCRtpCodec
channels	tsvscode.ts	/^    channels?: string;$/;"	p	interface:AudioConfiguration
charAt	ests.ts	/^    charAt(pos: number): string;$/;"	m	interface:String
charCode	tsvscode.ts	/^    charCode?: number;$/;"	p	interface:KeyboardEventInit
charCode	tsvscode.ts	/^    readonly charCode: number;$/;"	p	interface:KeyboardEvent
charCodeAt	ests.ts	/^    charCodeAt(index: number): number;$/;"	m	interface:String
charIndex	tsvscode.ts	/^    charIndex?: number;$/;"	p	interface:SpeechSynthesisEventInit
charIndex	tsvscode.ts	/^    readonly charIndex: number;$/;"	p	interface:SpeechSynthesisEvent
charLength	tsvscode.ts	/^    charLength?: number;$/;"	p	interface:SpeechSynthesisEventInit
charLength	tsvscode.ts	/^    readonly charLength: number;$/;"	p	interface:SpeechSynthesisEvent
characterData	tsvscode.ts	/^    characterData?: boolean;$/;"	p	interface:MutationObserverInit
characterDataOldValue	tsvscode.ts	/^    characterDataOldValue?: boolean;$/;"	p	interface:MutationObserverInit
characterSet	tsvscode.ts	/^    readonly characterSet: string;$/;"	p	interface:Document
charset	tsvscode.ts	/^    charset: string;$/;"	p	interface:HTMLAnchorElement
charset	tsvscode.ts	/^    charset: string;$/;"	p	interface:HTMLLinkElement
charset	tsvscode.ts	/^    charset: string;$/;"	p	interface:HTMLScriptElement
charset	tsvscode.ts	/^    readonly charset: string;$/;"	p	interface:Document
check	tsvscode.ts	/^    check(font: string, text?: string): boolean;$/;"	m	interface:FontFaceSet
checkEnclosure	tsvscode.ts	/^    checkEnclosure(element: SVGElement, rect: DOMRectReadOnly): boolean;$/;"	m	interface:SVGSVGElement
checkFramebufferStatus	tsvscode.ts	/^    checkFramebufferStatus(target: GLenum): GLenum;$/;"	m	interface:WebGLRenderingContextBase
checkIntersection	tsvscode.ts	/^    checkIntersection(element: SVGElement, rect: DOMRectReadOnly): boolean;$/;"	m	interface:SVGSVGElement
checkOpacity	tsvscode.ts	/^    checkOpacity?: boolean;$/;"	p	interface:CheckVisibilityOptions
checkValidity	tsvscode.ts	/^    checkValidity(): boolean;$/;"	m	interface:ElementInternals
checkValidity	tsvscode.ts	/^    checkValidity(): boolean;$/;"	m	interface:HTMLButtonElement
checkValidity	tsvscode.ts	/^    checkValidity(): boolean;$/;"	m	interface:HTMLFieldSetElement
checkValidity	tsvscode.ts	/^    checkValidity(): boolean;$/;"	m	interface:HTMLFormElement
checkValidity	tsvscode.ts	/^    checkValidity(): boolean;$/;"	m	interface:HTMLInputElement
checkValidity	tsvscode.ts	/^    checkValidity(): boolean;$/;"	m	interface:HTMLObjectElement
checkValidity	tsvscode.ts	/^    checkValidity(): boolean;$/;"	m	interface:HTMLOutputElement
checkValidity	tsvscode.ts	/^    checkValidity(): boolean;$/;"	m	interface:HTMLSelectElement
checkValidity	tsvscode.ts	/^    checkValidity(): boolean;$/;"	m	interface:HTMLTextAreaElement
checkVisibility	tsvscode.ts	/^    checkVisibility(options?: CheckVisibilityOptions): boolean;$/;"	m	interface:Element
checkVisibilityCSS	tsvscode.ts	/^    checkVisibilityCSS?: boolean;$/;"	p	interface:CheckVisibilityOptions
checked	tsvscode.ts	/^    checked: boolean;$/;"	p	interface:HTMLInputElement
childElementCount	tsvscode.ts	/^    readonly childElementCount: number;$/;"	p	interface:ParentNode
childList	tsvscode.ts	/^    childList?: boolean;$/;"	p	interface:MutationObserverInit
childNodes	tsvscode.ts	/^    readonly childNodes: NodeListOf<ChildNode>;$/;"	p	interface:Node
children	tsvscode.ts	/^    readonly children: HTMLCollection;$/;"	p	interface:ParentNode
cite	tsvscode.ts	/^    cite: string;$/;"	p	interface:HTMLModElement
cite	tsvscode.ts	/^    cite: string;$/;"	p	interface:HTMLQuoteElement
classList	tsvscode.ts	/^    readonly classList: DOMTokenList;$/;"	p	interface:Element
className	tsvscode.ts	/^    className: string;$/;"	p	interface:Element
className	tsvscode.ts	/^    readonly className: any;$/;"	p	interface:SVGElement
clear	tsvscode.ts	/^    clear(): IDBRequest<undefined>;$/;"	m	interface:IDBObjectStore
clear	tsvscode.ts	/^    clear(): void;$/;"	m	interface:Console
clear	tsvscode.ts	/^    clear(): void;$/;"	m	interface:DataTransferItemList
clear	tsvscode.ts	/^    clear(): void;$/;"	m	interface:Document
clear	tsvscode.ts	/^    clear(): void;$/;"	m	interface:SVGLengthList
clear	tsvscode.ts	/^    clear(): void;$/;"	m	interface:SVGNumberList
clear	tsvscode.ts	/^    clear(): void;$/;"	m	interface:SVGPointList
clear	tsvscode.ts	/^    clear(): void;$/;"	m	interface:SVGStringList
clear	tsvscode.ts	/^    clear(): void;$/;"	m	interface:SVGTransformList
clear	tsvscode.ts	/^    clear(): void;$/;"	m	interface:Storage
clear	tsvscode.ts	/^    clear(): void;$/;"	m	interface:StylePropertyMap
clear	tsvscode.ts	/^    clear(mask: GLbitfield): void;$/;"	m	interface:WebGLRenderingContextBase
clear	tsvscode.ts	/^    clear: string;$/;"	p	interface:CSSStyleDeclaration
clear	tsvscode.ts	/^    clear: string;$/;"	p	interface:HTMLBRElement
clearAppBadge	tsvscode.ts	/^    clearAppBadge(): Promise<void>;$/;"	m	interface:NavigatorBadge
clearBufferfi	tsvscode.ts	/^    clearBufferfi(buffer: GLenum, drawbuffer: GLint, depth: GLfloat, stencil: GLint): void;$/;"	m	interface:WebGL2RenderingContextBase
clearBufferfv	tsvscode.ts	/^    clearBufferfv(buffer: GLenum, drawbuffer: GLint, values: Float32List, srcOffset?: number): v/;"	m	interface:WebGL2RenderingContextBase
clearBufferiv	tsvscode.ts	/^    clearBufferiv(buffer: GLenum, drawbuffer: GLint, values: Int32List, srcOffset?: number): voi/;"	m	interface:WebGL2RenderingContextBase
clearBufferuiv	tsvscode.ts	/^    clearBufferuiv(buffer: GLenum, drawbuffer: GLint, values: Uint32List, srcOffset?: number): v/;"	m	interface:WebGL2RenderingContextBase
clearColor	tsvscode.ts	/^    clearColor(red: GLclampf, green: GLclampf, blue: GLclampf, alpha: GLclampf): void;$/;"	m	interface:WebGLRenderingContextBase
clearData	tsvscode.ts	/^    clearData(format?: string): void;$/;"	m	interface:DataTransfer
clearDepth	tsvscode.ts	/^    clearDepth(depth: GLclampf): void;$/;"	m	interface:WebGLRenderingContextBase
clearInterval	tsvscode.ts	/^    clearInterval(id: number | undefined): void;$/;"	m	interface:WindowOrWorkerGlobalScope
clearLiveSeekableRange	tsvscode.ts	/^    clearLiveSeekableRange(): void;$/;"	m	interface:MediaSource
clearMarks	tsvscode.ts	/^    clearMarks(markName?: string): void;$/;"	m	interface:Performance
clearMeasures	tsvscode.ts	/^    clearMeasures(measureName?: string): void;$/;"	m	interface:Performance
clearParameters	tsvscode.ts	/^    clearParameters(): void;$/;"	m	interface:XSLTProcessor
clearRect	tsvscode.ts	/^    clearRect(x: number, y: number, w: number, h: number): void;$/;"	m	interface:CanvasRect
clearResourceTimings	tsvscode.ts	/^    clearResourceTimings(): void;$/;"	m	interface:Performance
clearStencil	tsvscode.ts	/^    clearStencil(s: GLint): void;$/;"	m	interface:WebGLRenderingContextBase
clearTimeout	tsvscode.ts	/^    clearTimeout(id: number | undefined): void;$/;"	m	interface:WindowOrWorkerGlobalScope
clearWatch	tsvscode.ts	/^    clearWatch(watchId: number): void;$/;"	m	interface:Geolocation
click	tsvscode.ts	/^    click(): void;$/;"	m	interface:HTMLElement
clientDataJSON	tsvscode.ts	/^    readonly clientDataJSON: ArrayBuffer;$/;"	p	interface:AuthenticatorResponse
clientHeight	tsvscode.ts	/^    readonly clientHeight: number;$/;"	p	interface:Element
clientId	tsvscode.ts	/^    clientId?: string;$/;"	p	interface:LockInfo
clientInformation	tsvscode.ts	/^    readonly clientInformation: Navigator;$/;"	p	interface:Window
clientInformation	tsvscode.ts	/^declare var clientInformation: Navigator;$/;"	v	namespace:CSS
clientLeft	tsvscode.ts	/^    readonly clientLeft: number;$/;"	p	interface:Element
clientTop	tsvscode.ts	/^    readonly clientTop: number;$/;"	p	interface:Element
clientWaitSync	tsvscode.ts	/^    clientWaitSync(sync: WebGLSync, flags: GLbitfield, timeout: GLuint64): GLenum;$/;"	m	interface:WebGL2RenderingContextBase
clientWidth	tsvscode.ts	/^    readonly clientWidth: number;$/;"	p	interface:Element
clientX	tsvscode.ts	/^    clientX?: number;$/;"	p	interface:MouseEventInit
clientX	tsvscode.ts	/^    clientX?: number;$/;"	p	interface:TouchInit
clientX	tsvscode.ts	/^    readonly clientX: number;$/;"	p	interface:MouseEvent
clientX	tsvscode.ts	/^    readonly clientX: number;$/;"	p	interface:Touch
clientY	tsvscode.ts	/^    clientY?: number;$/;"	p	interface:MouseEventInit
clientY	tsvscode.ts	/^    clientY?: number;$/;"	p	interface:TouchInit
clientY	tsvscode.ts	/^    readonly clientY: number;$/;"	p	interface:MouseEvent
clientY	tsvscode.ts	/^    readonly clientY: number;$/;"	p	interface:Touch
clip	tsvscode.ts	/^    clip(fillRule?: CanvasFillRule): void;$/;"	m	interface:CanvasDrawPath
clip	tsvscode.ts	/^    clip(path: Path2D, fillRule?: CanvasFillRule): void;$/;"	m	interface:CanvasDrawPath
clip	tsvscode.ts	/^    clip: string;$/;"	p	interface:CSSStyleDeclaration
clipPath	tsvscode.ts	/^    clipPath: string;$/;"	p	interface:CSSStyleDeclaration
clipPathUnits	tsvscode.ts	/^    readonly clipPathUnits: SVGAnimatedEnumeration;$/;"	p	interface:SVGClipPathElement
clipRule	tsvscode.ts	/^    clipRule: string;$/;"	p	interface:CSSStyleDeclaration
clipboard	tsvscode.ts	/^    readonly clipboard: Clipboard;$/;"	p	interface:Navigator
clipboardData	tsvscode.ts	/^    clipboardData?: DataTransfer | null;$/;"	p	interface:ClipboardEventInit
clipboardData	tsvscode.ts	/^    readonly clipboardData: DataTransfer | null;$/;"	p	interface:ClipboardEvent
clipped	tsvscode.ts	/^    clipped?: boolean;$/;"	p	interface:SVGBoundingBoxOptions
clockRate	tsvscode.ts	/^    clockRate: number;$/;"	p	interface:RTCRtpCodec
clone	tsvscode.ts	/^    clone(): MediaStream;$/;"	m	interface:MediaStream
clone	tsvscode.ts	/^    clone(): MediaStreamTrack;$/;"	m	interface:MediaStreamTrack
clone	tsvscode.ts	/^    clone(): Request;$/;"	m	interface:Request
clone	tsvscode.ts	/^    clone(): Response;$/;"	m	interface:Response
clone	tsvscode.ts	/^    clone(): VideoFrame;$/;"	m	interface:VideoFrame
cloneContents	tsvscode.ts	/^    cloneContents(): DocumentFragment;$/;"	m	interface:Range
cloneNode	tsvscode.ts	/^    cloneNode(deep?: boolean): Node;$/;"	m	interface:Node
cloneRange	tsvscode.ts	/^    cloneRange(): Range;$/;"	m	interface:Range
close	tsvscode.ts	/^    close(): Promise<MIDIPort>;$/;"	m	interface:MIDIPort
close	tsvscode.ts	/^    close(): Promise<void>;$/;"	m	interface:AudioContext
close	tsvscode.ts	/^    close(): Promise<void>;$/;"	m	interface:MediaKeySession
close	tsvscode.ts	/^    close(): Promise<void>;$/;"	m	interface:WritableStream
close	tsvscode.ts	/^    close(): Promise<void>;$/;"	m	interface:WritableStreamDefaultWriter
close	tsvscode.ts	/^    close(): void;$/;"	m	interface:BroadcastChannel
close	tsvscode.ts	/^    close(): void;$/;"	m	interface:Document
close	tsvscode.ts	/^    close(): void;$/;"	m	interface:EventSource
close	tsvscode.ts	/^    close(): void;$/;"	m	interface:IDBDatabase
close	tsvscode.ts	/^    close(): void;$/;"	m	interface:ImageBitmap
close	tsvscode.ts	/^    close(): void;$/;"	m	interface:MessagePort
close	tsvscode.ts	/^    close(): void;$/;"	m	interface:Notification
close	tsvscode.ts	/^    close(): void;$/;"	m	interface:RTCDataChannel
close	tsvscode.ts	/^    close(): void;$/;"	m	interface:RTCPeerConnection
close	tsvscode.ts	/^    close(): void;$/;"	m	interface:ReadableByteStreamController
close	tsvscode.ts	/^    close(): void;$/;"	m	interface:ReadableStreamDefaultController
close	tsvscode.ts	/^    close(): void;$/;"	m	interface:VideoDecoder
close	tsvscode.ts	/^    close(): void;$/;"	m	interface:VideoEncoder
close	tsvscode.ts	/^    close(): void;$/;"	m	interface:VideoFrame
close	tsvscode.ts	/^    close(): void;$/;"	m	interface:Window
close	tsvscode.ts	/^    close(closeInfo?: WebTransportCloseInfo): void;$/;"	m	interface:WebTransport
close	tsvscode.ts	/^    close(code?: number, reason?: string): void;$/;"	m	interface:WebSocket
close	tsvscode.ts	/^    close(returnValue?: string): void;$/;"	m	interface:HTMLDialogElement
close	tsvscode.ts	/^    close?: UnderlyingSinkCloseCallback;$/;"	p	interface:UnderlyingSink
closeCode	tsvscode.ts	/^    closeCode?: number;$/;"	p	interface:WebTransportCloseInfo
closePath	tsvscode.ts	/^    closePath(): void;$/;"	m	interface:CanvasPath
closed	tsvscode.ts	/^    readonly closed: Promise<MediaKeySessionClosedReason>;$/;"	p	interface:MediaKeySession
closed	tsvscode.ts	/^    readonly closed: Promise<WebTransportCloseInfo>;$/;"	p	interface:WebTransport
closed	tsvscode.ts	/^    readonly closed: Promise<undefined>;$/;"	p	interface:ReadableStreamGenericReader
closed	tsvscode.ts	/^    readonly closed: Promise<undefined>;$/;"	p	interface:WritableStreamDefaultWriter
closed	tsvscode.ts	/^    readonly closed: boolean;$/;"	p	interface:Window
closed	tsvscode.ts	/^declare var closed: boolean;$/;"	v	namespace:CSS
closest	tsvscode.ts	/^    closest<E extends Element = Element>(selectors: string): E | null;$/;"	m	interface:Element
closest	tsvscode.ts	/^    closest<K extends keyof HTMLElementTagNameMap>(selector: K): HTMLElementTagNameMap[K] | null/;"	m	interface:Element
closest	tsvscode.ts	/^    closest<K extends keyof MathMLElementTagNameMap>(selector: K): MathMLElementTagNameMap[K] | /;"	m	interface:Element
closest	tsvscode.ts	/^    closest<K extends keyof SVGElementTagNameMap>(selector: K): SVGElementTagNameMap[K] | null;$/;"	m	interface:Element
cmp	tsvscode.ts	/^    cmp(first: any, second: any): number;$/;"	m	interface:IDBFactory
cname	tsvscode.ts	/^    cname?: string;$/;"	p	interface:RTCRtcpParameters
coalescedEvents	tsvscode.ts	/^    coalescedEvents?: PointerEvent[];$/;"	p	interface:PointerEventInit
code	ests.ts	/^        code: never;$/;"	p	interface:Intl.NumberFormatOptionsCurrencyDisplayRegistry
code	tsvscode.ts	/^    code: string;$/;"	p	interface:HTMLObjectElement
code	tsvscode.ts	/^    code?: number;$/;"	p	interface:CloseEventInit
code	tsvscode.ts	/^    code?: string;$/;"	p	interface:KeyboardEventInit
code	tsvscode.ts	/^    readonly code: number;$/;"	p	interface:CloseEvent
code	tsvscode.ts	/^    readonly code: number;$/;"	p	interface:DOMException
code	tsvscode.ts	/^    readonly code: number;$/;"	p	interface:GeolocationPositionError
code	tsvscode.ts	/^    readonly code: number;$/;"	p	interface:MediaError
code	tsvscode.ts	/^    readonly code: string;$/;"	p	interface:KeyboardEvent
codeBase	tsvscode.ts	/^    codeBase: string;$/;"	p	interface:HTMLObjectElement
codeType	tsvscode.ts	/^    codeType: string;$/;"	p	interface:HTMLObjectElement
codec	tsvscode.ts	/^    codec: string;$/;"	p	interface:VideoDecoderConfig
codec	tsvscode.ts	/^    codec: string;$/;"	p	interface:VideoEncoderConfig
codecId	tsvscode.ts	/^    codecId?: string;$/;"	p	interface:RTCRtpStreamStats
codecs	tsvscode.ts	/^    codecs: RTCRtpCodecCapability[];$/;"	p	interface:RTCRtpCapabilities
codecs	tsvscode.ts	/^    codecs: RTCRtpCodecParameters[];$/;"	p	interface:RTCRtpParameters
codedHeight	tsvscode.ts	/^    codedHeight: number;$/;"	p	interface:VideoFrameBufferInit
codedHeight	tsvscode.ts	/^    codedHeight?: number;$/;"	p	interface:VideoDecoderConfig
codedHeight	tsvscode.ts	/^    readonly codedHeight: number;$/;"	p	interface:VideoFrame
codedRect	tsvscode.ts	/^    readonly codedRect: DOMRectReadOnly | null;$/;"	p	interface:VideoFrame
codedWidth	tsvscode.ts	/^    codedWidth: number;$/;"	p	interface:VideoFrameBufferInit
codedWidth	tsvscode.ts	/^    codedWidth?: number;$/;"	p	interface:VideoDecoderConfig
codedWidth	tsvscode.ts	/^    readonly codedWidth: number;$/;"	p	interface:VideoFrame
colSpan	tsvscode.ts	/^    colSpan: number;$/;"	p	interface:HTMLTableCellElement
collapse	tsvscode.ts	/^    collapse(node: Node | null, offset?: number): void;$/;"	m	interface:Selection
collapse	tsvscode.ts	/^    collapse(toStart?: boolean): void;$/;"	m	interface:Range
collapseToEnd	tsvscode.ts	/^    collapseToEnd(): void;$/;"	m	interface:Selection
collapseToStart	tsvscode.ts	/^    collapseToStart(): void;$/;"	m	interface:Selection
collapsed	tsvscode.ts	/^    readonly collapsed: boolean;$/;"	p	interface:AbstractRange
collation	ests.ts	/^        collation: string;$/;"	p	interface:Intl.ResolvedCollatorOptions
collation	ests.ts	/^        collation?: "big5han" | "compat" | "dict" | "direct" | "ducet" | "emoji" | "eor" | "gb23/;"	p	interface:Intl.CollatorOptions
colno	tsvscode.ts	/^    colno?: number;$/;"	p	interface:ErrorEventInit
colno	tsvscode.ts	/^    readonly colno: number;$/;"	p	interface:ErrorEvent
color	tsvscode.ts	/^    color: string;$/;"	p	interface:CSSStyleDeclaration
color	tsvscode.ts	/^    color: string;$/;"	p	interface:HTMLFontElement
color	tsvscode.ts	/^    color: string;$/;"	p	interface:HTMLHRElement
colorDepth	tsvscode.ts	/^    readonly colorDepth: number;$/;"	p	interface:Screen
colorGamut	tsvscode.ts	/^    colorGamut?: ColorGamut;$/;"	p	interface:VideoConfiguration
colorInterpolation	tsvscode.ts	/^    colorInterpolation: string;$/;"	p	interface:CSSStyleDeclaration
colorInterpolationFilters	tsvscode.ts	/^    colorInterpolationFilters: string;$/;"	p	interface:CSSStyleDeclaration
colorMask	tsvscode.ts	/^    colorMask(red: GLboolean, green: GLboolean, blue: GLboolean, alpha: GLboolean): void;$/;"	m	interface:WebGLRenderingContextBase
colorMaskiOES	tsvscode.ts	/^    colorMaskiOES(buf: GLuint, r: GLboolean, g: GLboolean, b: GLboolean, a: GLboolean): void;$/;"	m	interface:OES_draw_buffers_indexed
colorScheme	tsvscode.ts	/^    colorScheme: string;$/;"	p	interface:CSSStyleDeclaration
colorSpace	tsvscode.ts	/^    colorSpace?: PredefinedColorSpace;$/;"	p	interface:CanvasRenderingContext2DSettings
colorSpace	tsvscode.ts	/^    colorSpace?: PredefinedColorSpace;$/;"	p	interface:ImageDataSettings
colorSpace	tsvscode.ts	/^    colorSpace?: VideoColorSpaceInit;$/;"	p	interface:VideoDecoderConfig
colorSpace	tsvscode.ts	/^    colorSpace?: VideoColorSpaceInit;$/;"	p	interface:VideoFrameBufferInit
colorSpace	tsvscode.ts	/^    readonly colorSpace: PredefinedColorSpace;$/;"	p	interface:ImageData
colorSpace	tsvscode.ts	/^    readonly colorSpace: VideoColorSpace;$/;"	p	interface:VideoFrame
colorSpaceConversion	tsvscode.ts	/^    colorSpaceConversion?: ColorSpaceConversion;$/;"	p	interface:ImageBitmapOptions
cols	tsvscode.ts	/^    cols: number;$/;"	p	interface:HTMLTextAreaElement
cols	tsvscode.ts	/^    cols: string;$/;"	p	interface:HTMLFrameSetElement
columnCount	tsvscode.ts	/^    columnCount: string;$/;"	p	interface:CSSStyleDeclaration
columnFill	tsvscode.ts	/^    columnFill: string;$/;"	p	interface:CSSStyleDeclaration
columnGap	tsvscode.ts	/^    columnGap: string;$/;"	p	interface:CSSStyleDeclaration
columnNumber	tsvscode.ts	/^    columnNumber?: number;$/;"	p	interface:SecurityPolicyViolationEventInit
columnNumber	tsvscode.ts	/^    readonly columnNumber: number;$/;"	p	interface:SecurityPolicyViolationEvent
columnRule	tsvscode.ts	/^    columnRule: string;$/;"	p	interface:CSSStyleDeclaration
columnRuleColor	tsvscode.ts	/^    columnRuleColor: string;$/;"	p	interface:CSSStyleDeclaration
columnRuleStyle	tsvscode.ts	/^    columnRuleStyle: string;$/;"	p	interface:CSSStyleDeclaration
columnRuleWidth	tsvscode.ts	/^    columnRuleWidth: string;$/;"	p	interface:CSSStyleDeclaration
columnSpan	tsvscode.ts	/^    columnSpan: string;$/;"	p	interface:CSSStyleDeclaration
columnWidth	tsvscode.ts	/^    columnWidth: string;$/;"	p	interface:CSSStyleDeclaration
columns	tsvscode.ts	/^    columns: string;$/;"	p	interface:CSSStyleDeclaration
commit	tsvscode.ts	/^    commit(): void;$/;"	m	interface:IDBTransaction
commit	tsvscode.ts	/^    commit(): void;$/;"	m	interface:OffscreenCanvasRenderingContext2D
commitStyles	tsvscode.ts	/^    commitStyles(): void;$/;"	m	interface:Animation
commonAncestorContainer	tsvscode.ts	/^    readonly commonAncestorContainer: Node;$/;"	p	interface:Range
compact	tsvscode.ts	/^    compact: boolean;$/;"	p	interface:HTMLDListElement
compact	tsvscode.ts	/^    compact: boolean;$/;"	p	interface:HTMLDirectoryElement
compact	tsvscode.ts	/^    compact: boolean;$/;"	p	interface:HTMLMenuElement
compact	tsvscode.ts	/^    compact: boolean;$/;"	p	interface:HTMLOListElement
compact	tsvscode.ts	/^    compact: boolean;$/;"	p	interface:HTMLUListElement
compare	ests.ts	/^        compare(x: string, y: string): number;$/;"	m	interface:Intl.Collator
compareBoundaryPoints	tsvscode.ts	/^    compareBoundaryPoints(how: number, sourceRange: Range): number;$/;"	m	interface:Range
compareDocumentPosition	tsvscode.ts	/^    compareDocumentPosition(other: Node): number;$/;"	m	interface:Node
comparePoint	tsvscode.ts	/^    comparePoint(node: Node, offset: number): number;$/;"	m	interface:Range
compatMode	tsvscode.ts	/^    readonly compatMode: string;$/;"	p	interface:Document
compile	ests.ts	/^    compile(pattern: string, flags?: string): this;$/;"	m	interface:RegExp
compileShader	tsvscode.ts	/^    compileShader(shader: WebGLShader): void;$/;"	m	interface:WebGLRenderingContextBase
complete	tsvscode.ts	/^    complete(result?: PaymentComplete): Promise<void>;$/;"	m	interface:PaymentResponse
complete	tsvscode.ts	/^    readonly complete: boolean;$/;"	p	interface:HTMLImageElement
component	tsvscode.ts	/^    readonly component: RTCIceComponent | null;$/;"	p	interface:RTCIceCandidate
composed	tsvscode.ts	/^    composed?: boolean;$/;"	p	interface:EventInit
composed	tsvscode.ts	/^    composed?: boolean;$/;"	p	interface:GetRootNodeOptions
composed	tsvscode.ts	/^    readonly composed: boolean;$/;"	p	interface:Event
composedPath	tsvscode.ts	/^    composedPath(): EventTarget[];$/;"	m	interface:Event
composite	tsvscode.ts	/^    composite: CompositeOperation;$/;"	p	interface:KeyframeEffect
composite	tsvscode.ts	/^    composite: CompositeOperationOrAuto;$/;"	p	interface:ComputedKeyframe
composite	tsvscode.ts	/^    composite?: CompositeOperation;$/;"	p	interface:KeyframeEffectOptions
composite	tsvscode.ts	/^    composite?: CompositeOperationOrAuto | CompositeOperationOrAuto[];$/;"	p	interface:PropertyIndexedKeyframes
composite	tsvscode.ts	/^    composite?: CompositeOperationOrAuto;$/;"	p	interface:Keyframe
compressedTexImage2D	tsvscode.ts	/^    compressedTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, h/;"	m	interface:WebGL2RenderingContextOverloads
compressedTexImage2D	tsvscode.ts	/^    compressedTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, h/;"	m	interface:WebGLRenderingContextOverloads
compressedTexImage3D	tsvscode.ts	/^    compressedTexImage3D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, h/;"	m	interface:WebGL2RenderingContextBase
compressedTexSubImage2D	tsvscode.ts	/^    compressedTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width:/;"	m	interface:WebGL2RenderingContextOverloads
compressedTexSubImage2D	tsvscode.ts	/^    compressedTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width:/;"	m	interface:WebGLRenderingContextOverloads
compressedTexSubImage3D	tsvscode.ts	/^    compressedTexSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffse/;"	m	interface:WebGL2RenderingContextBase
computedOffset	tsvscode.ts	/^    computedOffset: number;$/;"	p	interface:ComputedKeyframe
computedStyleMap	tsvscode.ts	/^    computedStyleMap(): StylePropertyMapReadOnly;$/;"	m	interface:Element
concat	ests.ts	/^    concat(...items: (T | ConcatArray<T>)[]): T[];$/;"	m	interface:Array
concat	ests.ts	/^    concat(...items: (T | ConcatArray<T>)[]): T[];$/;"	m	interface:ReadonlyArray
concat	ests.ts	/^    concat(...items: ConcatArray<T>[]): T[];$/;"	m	interface:Array
concat	ests.ts	/^    concat(...items: ConcatArray<T>[]): T[];$/;"	m	interface:ReadonlyArray
concat	ests.ts	/^    concat(...strings: string[]): string;$/;"	m	interface:String
concealedSamples	tsvscode.ts	/^    concealedSamples?: number;$/;"	p	interface:RTCInboundRtpStreamStats
concealmentEvents	tsvscode.ts	/^    concealmentEvents?: number;$/;"	p	interface:RTCInboundRtpStreamStats
conditionText	tsvscode.ts	/^    readonly conditionText: string;$/;"	p	interface:CSSConditionRule
coneInnerAngle	tsvscode.ts	/^    coneInnerAngle: number;$/;"	p	interface:PannerNode
coneInnerAngle	tsvscode.ts	/^    coneInnerAngle?: number;$/;"	p	interface:PannerOptions
coneOuterAngle	tsvscode.ts	/^    coneOuterAngle: number;$/;"	p	interface:PannerNode
coneOuterAngle	tsvscode.ts	/^    coneOuterAngle?: number;$/;"	p	interface:PannerOptions
coneOuterGain	tsvscode.ts	/^    coneOuterGain: number;$/;"	p	interface:PannerNode
coneOuterGain	tsvscode.ts	/^    coneOuterGain?: number;$/;"	p	interface:PannerOptions
confidence	tsvscode.ts	/^    readonly confidence: number;$/;"	p	interface:SpeechRecognitionAlternative
config	tsvscode.ts	/^    config?: VideoDecoderConfig;$/;"	p	interface:VideoDecoderSupport
config	tsvscode.ts	/^    config?: VideoEncoderConfig;$/;"	p	interface:VideoEncoderSupport
configurable	ests.ts	/^    configurable?: boolean;$/;"	p	interface:PropertyDescriptor
configurable	ests.ts	/^    configurable?: boolean;$/;"	p	interface:TypedPropertyDescriptor
configuration	tsvscode.ts	/^    configuration?: MediaDecodingConfiguration;$/;"	p	interface:MediaCapabilitiesDecodingInfo
configuration	tsvscode.ts	/^    configuration?: MediaEncodingConfiguration;$/;"	p	interface:MediaCapabilitiesEncodingInfo
configure	tsvscode.ts	/^    configure(config: VideoDecoderConfig): void;$/;"	m	interface:VideoDecoder
configure	tsvscode.ts	/^    configure(config: VideoEncoderConfig): void;$/;"	m	interface:VideoEncoder
confirm	tsvscode.ts	/^    confirm(message?: string): boolean;$/;"	m	interface:Window
congestionControl	tsvscode.ts	/^    congestionControl?: WebTransportCongestionControl;$/;"	p	interface:WebTransportOptions
connect	tsvscode.ts	/^    connect(destinationNode: AudioNode, output?: number, input?: number): AudioNode;$/;"	m	interface:AudioNode
connect	tsvscode.ts	/^    connect(destinationParam: AudioParam, output?: number): void;$/;"	m	interface:AudioNode
connectEnd	tsvscode.ts	/^    readonly connectEnd: DOMHighResTimeStamp;$/;"	p	interface:PerformanceResourceTiming
connectEnd	tsvscode.ts	/^    readonly connectEnd: number;$/;"	p	interface:PerformanceTiming
connectStart	tsvscode.ts	/^    readonly connectStart: DOMHighResTimeStamp;$/;"	p	interface:PerformanceResourceTiming
connectStart	tsvscode.ts	/^    readonly connectStart: number;$/;"	p	interface:PerformanceTiming
connected	tsvscode.ts	/^    readonly connected: boolean;$/;"	p	interface:Gamepad
connection	tsvscode.ts	/^    readonly connection: MIDIPortConnectionState;$/;"	p	interface:MIDIPort
connectionState	tsvscode.ts	/^    readonly connectionState: RTCPeerConnectionState;$/;"	p	interface:RTCPeerConnection
console	tsvscode.ts	/^declare var console: Console;$/;"	v
consolidate	tsvscode.ts	/^    consolidate(): SVGTransform | null;$/;"	m	interface:SVGTransformList
constraint	tsvscode.ts	/^    readonly constraint: string;$/;"	p	interface:OverconstrainedError
constructor	ests.ts	/^    constructor: Function;$/;"	p	interface:Object
contain	tsvscode.ts	/^    contain: string;$/;"	p	interface:CSSStyleDeclaration
containIntrinsicBlockSize	tsvscode.ts	/^    containIntrinsicBlockSize: string;$/;"	p	interface:CSSStyleDeclaration
containIntrinsicHeight	tsvscode.ts	/^    containIntrinsicHeight: string;$/;"	p	interface:CSSStyleDeclaration
containIntrinsicInlineSize	tsvscode.ts	/^    containIntrinsicInlineSize: string;$/;"	p	interface:CSSStyleDeclaration
containIntrinsicSize	tsvscode.ts	/^    containIntrinsicSize: string;$/;"	p	interface:CSSStyleDeclaration
containIntrinsicWidth	tsvscode.ts	/^    containIntrinsicWidth: string;$/;"	p	interface:CSSStyleDeclaration
container	tsvscode.ts	/^    container: string;$/;"	p	interface:CSSStyleDeclaration
containerName	tsvscode.ts	/^    containerName: string;$/;"	p	interface:CSSStyleDeclaration
containerName	tsvscode.ts	/^    readonly containerName: string;$/;"	p	interface:CSSContainerRule
containerQuery	tsvscode.ts	/^    readonly containerQuery: string;$/;"	p	interface:CSSContainerRule
containerType	tsvscode.ts	/^    containerType: string;$/;"	p	interface:CSSStyleDeclaration
contains	tsvscode.ts	/^    contains(other: Node | null): boolean;$/;"	m	interface:Node
contains	tsvscode.ts	/^    contains(string: string): boolean;$/;"	m	interface:DOMStringList
contains	tsvscode.ts	/^    contains(token: string): boolean;$/;"	m	interface:DOMTokenList
containsNode	tsvscode.ts	/^    containsNode(node: Node, allowPartialContainment?: boolean): boolean;$/;"	m	interface:Selection
content	tsvscode.ts	/^    content: string;$/;"	p	interface:CSSStyleDeclaration
content	tsvscode.ts	/^    content: string;$/;"	p	interface:HTMLMetaElement
content	tsvscode.ts	/^    readonly content: DocumentFragment;$/;"	p	interface:HTMLTemplateElement
contentBoxSize	tsvscode.ts	/^    readonly contentBoxSize: ReadonlyArray<ResizeObserverSize>;$/;"	p	interface:ResizeObserverEntry
contentDocument	tsvscode.ts	/^    readonly contentDocument: Document | null;$/;"	p	interface:HTMLFrameElement
contentDocument	tsvscode.ts	/^    readonly contentDocument: Document | null;$/;"	p	interface:HTMLIFrameElement
contentDocument	tsvscode.ts	/^    readonly contentDocument: Document | null;$/;"	p	interface:HTMLObjectElement
contentEditable	tsvscode.ts	/^    contentEditable: string;$/;"	p	interface:ElementContentEditable
contentHint	tsvscode.ts	/^    contentHint: string;$/;"	p	interface:MediaStreamTrack
contentRect	tsvscode.ts	/^    readonly contentRect: DOMRectReadOnly;$/;"	p	interface:ResizeObserverEntry
contentType	tsvscode.ts	/^    contentType: string;$/;"	p	interface:AudioConfiguration
contentType	tsvscode.ts	/^    contentType: string;$/;"	p	interface:VideoConfiguration
contentType	tsvscode.ts	/^    contentType?: string;$/;"	p	interface:MediaKeySystemMediaCapability
contentType	tsvscode.ts	/^    readonly contentType: string;$/;"	p	interface:Document
contentWindow	tsvscode.ts	/^    readonly contentWindow: WindowProxy | null;$/;"	p	interface:HTMLFrameElement
contentWindow	tsvscode.ts	/^    readonly contentWindow: WindowProxy | null;$/;"	p	interface:HTMLIFrameElement
contentWindow	tsvscode.ts	/^    readonly contentWindow: WindowProxy | null;$/;"	p	interface:HTMLObjectElement
context	tsvscode.ts	/^    readonly context: BaseAudioContext;$/;"	p	interface:AudioNode
contextTime	tsvscode.ts	/^    contextTime?: number;$/;"	p	interface:AudioTimestamp
continue	tsvscode.ts	/^    continue(key?: IDBValidKey): void;$/;"	m	interface:IDBCursor
continuePrimaryKey	tsvscode.ts	/^    continuePrimaryKey(key: IDBValidKey, primaryKey: IDBValidKey): void;$/;"	m	interface:IDBCursor
contributingSources	tsvscode.ts	/^    contributingSources?: number[];$/;"	p	interface:RTCEncodedAudioFrameMetadata
contributingSources	tsvscode.ts	/^    contributingSources?: number[];$/;"	p	interface:RTCEncodedVideoFrameMetadata
control	tsvscode.ts	/^    readonly control: HTMLElement | null;$/;"	p	interface:HTMLLabelElement
controller	tsvscode.ts	/^    readonly controller: ServiceWorker | null;$/;"	p	interface:ServiceWorkerContainer
controls	tsvscode.ts	/^    controls: boolean;$/;"	p	interface:HTMLMediaElement
convertToBlob	tsvscode.ts	/^    convertToBlob(options?: ImageEncodeOptions): Promise<Blob>;$/;"	m	interface:OffscreenCanvas
convertToSpecifiedUnits	tsvscode.ts	/^    convertToSpecifiedUnits(unitType: number): void;$/;"	m	interface:SVGAngle
convertToSpecifiedUnits	tsvscode.ts	/^    convertToSpecifiedUnits(unitType: number): void;$/;"	m	interface:SVGLength
cookie	tsvscode.ts	/^    cookie: string;$/;"	p	interface:Document
cookieEnabled	tsvscode.ts	/^    readonly cookieEnabled: boolean;$/;"	p	interface:NavigatorCookies
coords	tsvscode.ts	/^    coords: string;$/;"	p	interface:HTMLAnchorElement
coords	tsvscode.ts	/^    coords: string;$/;"	p	interface:HTMLAreaElement
coords	tsvscode.ts	/^    readonly coords: GeolocationCoordinates;$/;"	p	interface:GeolocationPosition
copyBufferSubData	tsvscode.ts	/^    copyBufferSubData(readTarget: GLenum, writeTarget: GLenum, readOffset: GLintptr, writeOffset/;"	m	interface:WebGL2RenderingContextBase
copyFromChannel	tsvscode.ts	/^    copyFromChannel(destination: Float32Array, channelNumber: number, bufferOffset?: number): vo/;"	m	interface:AudioBuffer
copyTexImage2D	tsvscode.ts	/^    copyTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, wid/;"	m	interface:WebGLRenderingContextBase
copyTexSubImage2D	tsvscode.ts	/^    copyTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y:/;"	m	interface:WebGLRenderingContextBase
copyTexSubImage3D	tsvscode.ts	/^    copyTexSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLi/;"	m	interface:WebGL2RenderingContextBase
copyTo	tsvscode.ts	/^    copyTo(destination: AllowSharedBufferSource): void;$/;"	m	interface:EncodedVideoChunk
copyTo	tsvscode.ts	/^    copyTo(destination: AllowSharedBufferSource, options?: VideoFrameCopyToOptions): Promise<Pla/;"	m	interface:VideoFrame
copyToChannel	tsvscode.ts	/^    copyToChannel(source: Float32Array, channelNumber: number, bufferOffset?: number): void;$/;"	m	interface:AudioBuffer
copyWithin	ests.ts	/^    copyWithin(target: number, start: number, end?: number): this;$/;"	m	interface:Float32Array
copyWithin	ests.ts	/^    copyWithin(target: number, start: number, end?: number): this;$/;"	m	interface:Float64Array
copyWithin	ests.ts	/^    copyWithin(target: number, start: number, end?: number): this;$/;"	m	interface:Int16Array
copyWithin	ests.ts	/^    copyWithin(target: number, start: number, end?: number): this;$/;"	m	interface:Int32Array
copyWithin	ests.ts	/^    copyWithin(target: number, start: number, end?: number): this;$/;"	m	interface:Int8Array
copyWithin	ests.ts	/^    copyWithin(target: number, start: number, end?: number): this;$/;"	m	interface:Uint16Array
copyWithin	ests.ts	/^    copyWithin(target: number, start: number, end?: number): this;$/;"	m	interface:Uint32Array
copyWithin	ests.ts	/^    copyWithin(target: number, start: number, end?: number): this;$/;"	m	interface:Uint8Array
copyWithin	ests.ts	/^    copyWithin(target: number, start: number, end?: number): this;$/;"	m	interface:Uint8ClampedArray
corruptedVideoFrames	tsvscode.ts	/^    readonly corruptedVideoFrames: number;$/;"	p	interface:VideoPlaybackQuality
cos	ests.ts	/^    cos(x: number): number;$/;"	m	interface:Math
count	tsvscode.ts	/^    count(label?: string): void;$/;"	m	interface:Console
count	tsvscode.ts	/^    count(query?: IDBValidKey | IDBKeyRange): IDBRequest<number>;$/;"	m	interface:IDBIndex
count	tsvscode.ts	/^    count(query?: IDBValidKey | IDBKeyRange): IDBRequest<number>;$/;"	m	interface:IDBObjectStore
countReset	tsvscode.ts	/^    countReset(label?: string): void;$/;"	m	interface:Console
counter	tsvscode.ts	/^    counter: BufferSource;$/;"	p	interface:AesCtrParams
counterIncrement	tsvscode.ts	/^    counterIncrement: string;$/;"	p	interface:CSSStyleDeclaration
counterReset	tsvscode.ts	/^    counterReset: string;$/;"	p	interface:CSSStyleDeclaration
counterSet	tsvscode.ts	/^    counterSet: string;$/;"	p	interface:CSSStyleDeclaration
create	ests.ts	/^    create(o: object | null): any;$/;"	m	interface:ObjectConstructor
create	ests.ts	/^    create(o: object | null, properties: PropertyDescriptorMap & ThisType<any>): any;$/;"	m	interface:ObjectConstructor
create	tsvscode.ts	/^    create(options?: CredentialCreationOptions): Promise<Credential | null>;$/;"	m	interface:CredentialsContainer
create	tsvscode.ts	/^    create?: boolean;$/;"	p	interface:FileSystemFlags
create	tsvscode.ts	/^    create?: boolean;$/;"	p	interface:FileSystemGetDirectoryOptions
create	tsvscode.ts	/^    create?: boolean;$/;"	p	interface:FileSystemGetFileOptions
createAnalyser	tsvscode.ts	/^    createAnalyser(): AnalyserNode;$/;"	m	interface:BaseAudioContext
createAnswer	tsvscode.ts	/^    createAnswer(options?: RTCAnswerOptions): Promise<RTCSessionDescriptionInit>;$/;"	m	interface:RTCPeerConnection
createAnswer	tsvscode.ts	/^    createAnswer(successCallback: RTCSessionDescriptionCallback, failureCallback: RTCPeerConnect/;"	m	interface:RTCPeerConnection
createAttribute	tsvscode.ts	/^    createAttribute(localName: string): Attr;$/;"	m	interface:Document
createAttributeNS	tsvscode.ts	/^    createAttributeNS(namespace: string | null, qualifiedName: string): Attr;$/;"	m	interface:Document
createBidirectionalStream	tsvscode.ts	/^    createBidirectionalStream(options?: WebTransportSendStreamOptions): Promise<WebTransportBidi/;"	m	interface:WebTransport
createBiquadFilter	tsvscode.ts	/^    createBiquadFilter(): BiquadFilterNode;$/;"	m	interface:BaseAudioContext
createBuffer	tsvscode.ts	/^    createBuffer(): WebGLBuffer | null;$/;"	m	interface:WebGLRenderingContextBase
createBuffer	tsvscode.ts	/^    createBuffer(numberOfChannels: number, length: number, sampleRate: number): AudioBuffer;$/;"	m	interface:BaseAudioContext
createBufferSource	tsvscode.ts	/^    createBufferSource(): AudioBufferSourceNode;$/;"	m	interface:BaseAudioContext
createCDATASection	tsvscode.ts	/^    createCDATASection(data: string): CDATASection;$/;"	m	interface:Document
createCaption	tsvscode.ts	/^    createCaption(): HTMLTableCaptionElement;$/;"	m	interface:HTMLTableElement
createChannelMerger	tsvscode.ts	/^    createChannelMerger(numberOfInputs?: number): ChannelMergerNode;$/;"	m	interface:BaseAudioContext
createChannelSplitter	tsvscode.ts	/^    createChannelSplitter(numberOfOutputs?: number): ChannelSplitterNode;$/;"	m	interface:BaseAudioContext
createComment	tsvscode.ts	/^    createComment(data: string): Comment;$/;"	m	interface:Document
createConicGradient	tsvscode.ts	/^    createConicGradient(startAngle: number, x: number, y: number): CanvasGradient;$/;"	m	interface:CanvasFillStrokeStyles
createConstantSource	tsvscode.ts	/^    createConstantSource(): ConstantSourceNode;$/;"	m	interface:BaseAudioContext
createContextualFragment	tsvscode.ts	/^    createContextualFragment(fragment: string): DocumentFragment;$/;"	m	interface:Range
createConvolver	tsvscode.ts	/^    createConvolver(): ConvolverNode;$/;"	m	interface:BaseAudioContext
createDataChannel	tsvscode.ts	/^    createDataChannel(label: string, dataChannelDict?: RTCDataChannelInit): RTCDataChannel;$/;"	m	interface:RTCPeerConnection
createDelay	tsvscode.ts	/^    createDelay(maxDelayTime?: number): DelayNode;$/;"	m	interface:BaseAudioContext
createDocument	tsvscode.ts	/^    createDocument(namespace: string | null, qualifiedName: string | null, doctype?: DocumentTyp/;"	m	interface:DOMImplementation
createDocumentFragment	tsvscode.ts	/^    createDocumentFragment(): DocumentFragment;$/;"	m	interface:Document
createDocumentType	tsvscode.ts	/^    createDocumentType(qualifiedName: string, publicId: string, systemId: string): DocumentType;$/;"	m	interface:DOMImplementation
createDynamicsCompressor	tsvscode.ts	/^    createDynamicsCompressor(): DynamicsCompressorNode;$/;"	m	interface:BaseAudioContext
createElement	tsvscode.ts	/^    createElement(tagName: string, options?: ElementCreationOptions): HTMLElement;$/;"	m	interface:Document
createElement	tsvscode.ts	/^    createElement<K extends keyof HTMLElementDeprecatedTagNameMap>(tagName: K, options?: Element/;"	m	interface:Document
createElement	tsvscode.ts	/^    createElement<K extends keyof HTMLElementTagNameMap>(tagName: K, options?: ElementCreationOp/;"	m	interface:Document
createElementNS	tsvscode.ts	/^    createElementNS(namespace: string | null, qualifiedName: string, options?: string | ElementC/;"	m	interface:Document
createElementNS	tsvscode.ts	/^    createElementNS(namespaceURI: "http:\/\/www.w3.org\/1998\/Math\/MathML", qualifiedName: stri/;"	m	interface:Document
createElementNS	tsvscode.ts	/^    createElementNS(namespaceURI: "http:\/\/www.w3.org\/1999\/xhtml", qualifiedName: string): HT/;"	m	interface:Document
createElementNS	tsvscode.ts	/^    createElementNS(namespaceURI: "http:\/\/www.w3.org\/2000\/svg", qualifiedName: string): SVGE/;"	m	interface:Document
createElementNS	tsvscode.ts	/^    createElementNS(namespaceURI: string | null, qualifiedName: string, options?: ElementCreatio/;"	m	interface:Document
createElementNS	tsvscode.ts	/^    createElementNS<K extends keyof MathMLElementTagNameMap>(namespaceURI: "http:\/\/www.w3.org\//;"	m	interface:Document
createElementNS	tsvscode.ts	/^    createElementNS<K extends keyof SVGElementTagNameMap>(namespaceURI: "http:\/\/www.w3.org\/20/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "AnimationEvent"): AnimationEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "AnimationPlaybackEvent"): AnimationPlaybackEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "AudioProcessingEvent"): AudioProcessingEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "BeforeUnloadEvent"): BeforeUnloadEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "BlobEvent"): BlobEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "ClipboardEvent"): ClipboardEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "CloseEvent"): CloseEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "CompositionEvent"): CompositionEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "CustomEvent"): CustomEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "DeviceMotionEvent"): DeviceMotionEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "DeviceOrientationEvent"): DeviceOrientationEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "DragEvent"): DragEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "ErrorEvent"): ErrorEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "Event"): Event;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "Events"): Event;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "FocusEvent"): FocusEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "FontFaceSetLoadEvent"): FontFaceSetLoadEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "FormDataEvent"): FormDataEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "GamepadEvent"): GamepadEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "HashChangeEvent"): HashChangeEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "IDBVersionChangeEvent"): IDBVersionChangeEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "InputEvent"): InputEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "KeyboardEvent"): KeyboardEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "MIDIConnectionEvent"): MIDIConnectionEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "MIDIMessageEvent"): MIDIMessageEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "MediaEncryptedEvent"): MediaEncryptedEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "MediaKeyMessageEvent"): MediaKeyMessageEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "MediaQueryListEvent"): MediaQueryListEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "MediaStreamTrackEvent"): MediaStreamTrackEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "MessageEvent"): MessageEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "MouseEvent"): MouseEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "MouseEvents"): MouseEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "MutationEvent"): MutationEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "MutationEvents"): MutationEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "OfflineAudioCompletionEvent"): OfflineAudioCompletionEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "PageTransitionEvent"): PageTransitionEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "PaymentMethodChangeEvent"): PaymentMethodChangeEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "PaymentRequestUpdateEvent"): PaymentRequestUpdateEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "PictureInPictureEvent"): PictureInPictureEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "PointerEvent"): PointerEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "PopStateEvent"): PopStateEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "ProgressEvent"): ProgressEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "PromiseRejectionEvent"): PromiseRejectionEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "RTCDTMFToneChangeEvent"): RTCDTMFToneChangeEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "RTCDataChannelEvent"): RTCDataChannelEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "RTCErrorEvent"): RTCErrorEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "RTCPeerConnectionIceErrorEvent"): RTCPeerConnectionIceErrorEven/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "RTCPeerConnectionIceEvent"): RTCPeerConnectionIceEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "RTCTrackEvent"): RTCTrackEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "SecurityPolicyViolationEvent"): SecurityPolicyViolationEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "SpeechSynthesisErrorEvent"): SpeechSynthesisErrorEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "SpeechSynthesisEvent"): SpeechSynthesisEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "StorageEvent"): StorageEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "SubmitEvent"): SubmitEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "ToggleEvent"): ToggleEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "TouchEvent"): TouchEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "TrackEvent"): TrackEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "TransitionEvent"): TransitionEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "UIEvent"): UIEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "UIEvents"): UIEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "WebGLContextEvent"): WebGLContextEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: "WheelEvent"): WheelEvent;$/;"	m	interface:Document
createEvent	tsvscode.ts	/^    createEvent(eventInterface: string): Event;$/;"	m	interface:Document
createExpression	tsvscode.ts	/^    createExpression(expression: string, resolver?: XPathNSResolver | null): XPathExpression;$/;"	m	interface:XPathEvaluatorBase
createFramebuffer	tsvscode.ts	/^    createFramebuffer(): WebGLFramebuffer | null;$/;"	m	interface:WebGLRenderingContextBase
createGain	tsvscode.ts	/^    createGain(): GainNode;$/;"	m	interface:BaseAudioContext
createHTMLDocument	tsvscode.ts	/^    createHTMLDocument(title?: string): Document;$/;"	m	interface:DOMImplementation
createIIRFilter	tsvscode.ts	/^    createIIRFilter(feedforward: number[], feedback: number[]): IIRFilterNode;$/;"	m	interface:BaseAudioContext
createImageBitmap	tsvscode.ts	/^    createImageBitmap(image: ImageBitmapSource, options?: ImageBitmapOptions): Promise<ImageBitm/;"	m	interface:WindowOrWorkerGlobalScope
createImageBitmap	tsvscode.ts	/^    createImageBitmap(image: ImageBitmapSource, sx: number, sy: number, sw: number, sh: number, /;"	m	interface:WindowOrWorkerGlobalScope
createImageData	tsvscode.ts	/^    createImageData(imagedata: ImageData): ImageData;$/;"	m	interface:CanvasImageData
createImageData	tsvscode.ts	/^    createImageData(sw: number, sh: number, settings?: ImageDataSettings): ImageData;$/;"	m	interface:CanvasImageData
createIndex	tsvscode.ts	/^    createIndex(name: string, keyPath: string | string[], options?: IDBIndexParameters): IDBInde/;"	m	interface:IDBObjectStore
createLinearGradient	tsvscode.ts	/^    createLinearGradient(x0: number, y0: number, x1: number, y1: number): CanvasGradient;$/;"	m	interface:CanvasFillStrokeStyles
createMediaElementSource	tsvscode.ts	/^    createMediaElementSource(mediaElement: HTMLMediaElement): MediaElementAudioSourceNode;$/;"	m	interface:AudioContext
createMediaKeys	tsvscode.ts	/^    createMediaKeys(): Promise<MediaKeys>;$/;"	m	interface:MediaKeySystemAccess
createMediaStreamDestination	tsvscode.ts	/^    createMediaStreamDestination(): MediaStreamAudioDestinationNode;$/;"	m	interface:AudioContext
createMediaStreamSource	tsvscode.ts	/^    createMediaStreamSource(mediaStream: MediaStream): MediaStreamAudioSourceNode;$/;"	m	interface:AudioContext
createNSResolver	tsvscode.ts	/^    createNSResolver(nodeResolver: Node): Node;$/;"	m	interface:XPathEvaluatorBase
createNodeIterator	tsvscode.ts	/^    createNodeIterator(root: Node, whatToShow?: number, filter?: NodeFilter | null): NodeIterato/;"	m	interface:Document
createObjectStore	tsvscode.ts	/^    createObjectStore(name: string, options?: IDBObjectStoreParameters): IDBObjectStore;$/;"	m	interface:IDBDatabase
createObjectURL	tsvscode.ts	/^    createObjectURL(obj: Blob | MediaSource): string;$/;"	v
createOffer	tsvscode.ts	/^    createOffer(options?: RTCOfferOptions): Promise<RTCSessionDescriptionInit>;$/;"	m	interface:RTCPeerConnection
createOffer	tsvscode.ts	/^    createOffer(successCallback: RTCSessionDescriptionCallback, failureCallback: RTCPeerConnecti/;"	m	interface:RTCPeerConnection
createOscillator	tsvscode.ts	/^    createOscillator(): OscillatorNode;$/;"	m	interface:BaseAudioContext
createPanner	tsvscode.ts	/^    createPanner(): PannerNode;$/;"	m	interface:BaseAudioContext
createPattern	tsvscode.ts	/^    createPattern(image: CanvasImageSource, repetition: string | null): CanvasPattern | null;$/;"	m	interface:CanvasFillStrokeStyles
createPeriodicWave	tsvscode.ts	/^    createPeriodicWave(real: number[] | Float32Array, imag: number[] | Float32Array, constraints/;"	m	interface:BaseAudioContext
createProcessingInstruction	tsvscode.ts	/^    createProcessingInstruction(target: string, data: string): ProcessingInstruction;$/;"	m	interface:Document
createProgram	tsvscode.ts	/^    createProgram(): WebGLProgram | null;$/;"	m	interface:WebGLRenderingContextBase
createQuery	tsvscode.ts	/^    createQuery(): WebGLQuery | null;$/;"	m	interface:WebGL2RenderingContextBase
createRadialGradient	tsvscode.ts	/^    createRadialGradient(x0: number, y0: number, r0: number, x1: number, y1: number, r1: number)/;"	m	interface:CanvasFillStrokeStyles
createRange	tsvscode.ts	/^    createRange(): Range;$/;"	m	interface:Document
createReader	tsvscode.ts	/^    createReader(): FileSystemDirectoryReader;$/;"	m	interface:FileSystemDirectoryEntry
createRenderbuffer	tsvscode.ts	/^    createRenderbuffer(): WebGLRenderbuffer | null;$/;"	m	interface:WebGLRenderingContextBase
createSVGAngle	tsvscode.ts	/^    createSVGAngle(): SVGAngle;$/;"	m	interface:SVGSVGElement
createSVGLength	tsvscode.ts	/^    createSVGLength(): SVGLength;$/;"	m	interface:SVGSVGElement
createSVGMatrix	tsvscode.ts	/^    createSVGMatrix(): DOMMatrix;$/;"	m	interface:SVGSVGElement
createSVGNumber	tsvscode.ts	/^    createSVGNumber(): SVGNumber;$/;"	m	interface:SVGSVGElement
createSVGPoint	tsvscode.ts	/^    createSVGPoint(): DOMPoint;$/;"	m	interface:SVGSVGElement
createSVGRect	tsvscode.ts	/^    createSVGRect(): DOMRect;$/;"	m	interface:SVGSVGElement
createSVGTransform	tsvscode.ts	/^    createSVGTransform(): SVGTransform;$/;"	m	interface:SVGSVGElement
createSVGTransformFromMatrix	tsvscode.ts	/^    createSVGTransformFromMatrix(matrix?: DOMMatrix2DInit): SVGTransform;$/;"	m	interface:SVGSVGElement
createSVGTransformFromMatrix	tsvscode.ts	/^    createSVGTransformFromMatrix(matrix?: DOMMatrix2DInit): SVGTransform;$/;"	m	interface:SVGTransformList
createSampler	tsvscode.ts	/^    createSampler(): WebGLSampler | null;$/;"	m	interface:WebGL2RenderingContextBase
createScriptProcessor	tsvscode.ts	/^    createScriptProcessor(bufferSize?: number, numberOfInputChannels?: number, numberOfOutputCha/;"	m	interface:BaseAudioContext
createSession	tsvscode.ts	/^    createSession(sessionType?: MediaKeySessionType): MediaKeySession;$/;"	m	interface:MediaKeys
createShader	tsvscode.ts	/^    createShader(type: GLenum): WebGLShader | null;$/;"	m	interface:WebGLRenderingContextBase
createStereoPanner	tsvscode.ts	/^    createStereoPanner(): StereoPannerNode;$/;"	m	interface:BaseAudioContext
createTBody	tsvscode.ts	/^    createTBody(): HTMLTableSectionElement;$/;"	m	interface:HTMLTableElement
createTFoot	tsvscode.ts	/^    createTFoot(): HTMLTableSectionElement;$/;"	m	interface:HTMLTableElement
createTHead	tsvscode.ts	/^    createTHead(): HTMLTableSectionElement;$/;"	m	interface:HTMLTableElement
createTextNode	tsvscode.ts	/^    createTextNode(data: string): Text;$/;"	m	interface:Document
createTexture	tsvscode.ts	/^    createTexture(): WebGLTexture | null;$/;"	m	interface:WebGLRenderingContextBase
createTransformFeedback	tsvscode.ts	/^    createTransformFeedback(): WebGLTransformFeedback | null;$/;"	m	interface:WebGL2RenderingContextBase
createTreeWalker	tsvscode.ts	/^    createTreeWalker(root: Node, whatToShow?: number, filter?: NodeFilter | null): TreeWalker;$/;"	m	interface:Document
createUnidirectionalStream	tsvscode.ts	/^    createUnidirectionalStream(options?: WebTransportSendStreamOptions): Promise<WritableStream>/;"	m	interface:WebTransport
createVertexArray	tsvscode.ts	/^    createVertexArray(): WebGLVertexArrayObject | null;$/;"	m	interface:WebGL2RenderingContextBase
createVertexArrayOES	tsvscode.ts	/^    createVertexArrayOES(): WebGLVertexArrayObjectOES | null;$/;"	m	interface:OES_vertex_array_object
createWaveShaper	tsvscode.ts	/^    createWaveShaper(): WaveShaperNode;$/;"	m	interface:BaseAudioContext
createWritable	tsvscode.ts	/^    createWritable(options?: FileSystemCreateWritableOptions): Promise<FileSystemWritableFileStr/;"	m	interface:FileSystemFileHandle
creationTime	tsvscode.ts	/^    readonly creationTime: DOMHighResTimeStamp;$/;"	p	interface:VideoPlaybackQuality
credProps	tsvscode.ts	/^    credProps?: CredentialPropertiesOutput;$/;"	p	interface:AuthenticationExtensionsClientOutputs
credProps	tsvscode.ts	/^    credProps?: boolean;$/;"	p	interface:AuthenticationExtensionsClientInputs
credential	tsvscode.ts	/^    credential?: string;$/;"	p	interface:RTCIceServer
credentials	tsvscode.ts	/^    credentials?: RequestCredentials;$/;"	p	interface:RequestInit
credentials	tsvscode.ts	/^    credentials?: RequestCredentials;$/;"	p	interface:WorkerOptions
credentials	tsvscode.ts	/^    credentials?: RequestCredentials;$/;"	p	interface:WorkletOptions
credentials	tsvscode.ts	/^    readonly credentials: CredentialsContainer;$/;"	p	interface:Navigator
credentials	tsvscode.ts	/^    readonly credentials: RequestCredentials;$/;"	p	interface:Request
crossOrigin	tsvscode.ts	/^    crossOrigin: string | null;$/;"	p	interface:HTMLImageElement
crossOrigin	tsvscode.ts	/^    crossOrigin: string | null;$/;"	p	interface:HTMLLinkElement
crossOrigin	tsvscode.ts	/^    crossOrigin: string | null;$/;"	p	interface:HTMLMediaElement
crossOrigin	tsvscode.ts	/^    crossOrigin: string | null;$/;"	p	interface:HTMLScriptElement
crossOrigin	tsvscode.ts	/^    crossOrigin: string | null;$/;"	p	interface:SVGImageElement
crossOriginIsolated	tsvscode.ts	/^    readonly crossOriginIsolated: boolean;$/;"	p	interface:WindowOrWorkerGlobalScope
crv	tsvscode.ts	/^    crv?: string;$/;"	p	interface:JsonWebKey
crypto	tsvscode.ts	/^    readonly crypto: Crypto;$/;"	p	interface:WindowOrWorkerGlobalScope
cssFloat	tsvscode.ts	/^    cssFloat: string;$/;"	p	interface:CSSStyleDeclaration
cssRules	tsvscode.ts	/^    readonly cssRules: CSSRuleList;$/;"	p	interface:CSSGroupingRule
cssRules	tsvscode.ts	/^    readonly cssRules: CSSRuleList;$/;"	p	interface:CSSKeyframesRule
cssRules	tsvscode.ts	/^    readonly cssRules: CSSRuleList;$/;"	p	interface:CSSStyleSheet
cssText	tsvscode.ts	/^    cssText: string;$/;"	p	interface:CSSRule
cssText	tsvscode.ts	/^    cssText: string;$/;"	p	interface:CSSStyleDeclaration
ctrlKey	tsvscode.ts	/^    ctrlKey?: boolean;$/;"	p	interface:EventModifierInit
ctrlKey	tsvscode.ts	/^    readonly ctrlKey: boolean;$/;"	p	interface:KeyboardEvent
ctrlKey	tsvscode.ts	/^    readonly ctrlKey: boolean;$/;"	p	interface:MouseEvent
ctrlKey	tsvscode.ts	/^    readonly ctrlKey: boolean;$/;"	p	interface:TouchEvent
cues	tsvscode.ts	/^    readonly cues: TextTrackCueList | null;$/;"	p	interface:TextTrack
cullFace	tsvscode.ts	/^    cullFace(mode: GLenum): void;$/;"	m	interface:WebGLRenderingContextBase
currency	ests.ts	/^        currency: never;$/;"	p	interface:Intl.NumberFormatOptionsStyleRegistry
currency	ests.ts	/^        currency?: string | undefined;$/;"	p	interface:Intl.NumberFormatOptions
currency	ests.ts	/^        currency?: string;$/;"	p	interface:Intl.ResolvedNumberFormatOptions
currency	tsvscode.ts	/^    currency: string;$/;"	p	interface:PaymentCurrencyAmount
currencyDisplay	ests.ts	/^        currencyDisplay?: NumberFormatOptionsCurrencyDisplay | undefined;$/;"	p	interface:Intl.NumberFormatOptions
currencyDisplay	ests.ts	/^        currencyDisplay?: NumberFormatOptionsCurrencyDisplay;$/;"	p	interface:Intl.ResolvedNumberFormatOptions
currentDirection	tsvscode.ts	/^    readonly currentDirection: RTCRtpTransceiverDirection | null;$/;"	p	interface:RTCRtpTransceiver
currentIteration	tsvscode.ts	/^    currentIteration?: number | null;$/;"	p	interface:ComputedEffectTiming
currentLocalDescription	tsvscode.ts	/^    readonly currentLocalDescription: RTCSessionDescription | null;$/;"	p	interface:RTCPeerConnection
currentNode	tsvscode.ts	/^    currentNode: Node;$/;"	p	interface:TreeWalker
currentRemoteDescription	tsvscode.ts	/^    readonly currentRemoteDescription: RTCSessionDescription | null;$/;"	p	interface:RTCPeerConnection
currentRoundTripTime	tsvscode.ts	/^    currentRoundTripTime?: number;$/;"	p	interface:RTCIceCandidatePairStats
currentScale	tsvscode.ts	/^    currentScale: number;$/;"	p	interface:SVGSVGElement
currentScript	tsvscode.ts	/^    readonly currentScript: HTMLOrSVGScriptElement | null;$/;"	p	interface:Document
currentSrc	tsvscode.ts	/^    readonly currentSrc: string;$/;"	p	interface:HTMLImageElement
currentSrc	tsvscode.ts	/^    readonly currentSrc: string;$/;"	p	interface:HTMLMediaElement
currentTarget	tsvscode.ts	/^    readonly currentTarget: EventTarget | null;$/;"	p	interface:Event
currentTime	tsvscode.ts	/^    currentTime: CSSNumberish | null;$/;"	p	interface:Animation
currentTime	tsvscode.ts	/^    currentTime: number;$/;"	p	interface:HTMLMediaElement
currentTime	tsvscode.ts	/^    currentTime?: CSSNumberish | null;$/;"	p	interface:AnimationPlaybackEventInit
currentTime	tsvscode.ts	/^    readonly currentTime: CSSNumberish | null;$/;"	p	interface:AnimationPlaybackEvent
currentTime	tsvscode.ts	/^    readonly currentTime: CSSNumberish | null;$/;"	p	interface:AnimationTimeline
currentTime	tsvscode.ts	/^    readonly currentTime: number;$/;"	p	interface:BaseAudioContext
currentTranslate	tsvscode.ts	/^    readonly currentTranslate: DOMPointReadOnly;$/;"	p	interface:SVGSVGElement
cursor	tsvscode.ts	/^    cursor: string;$/;"	p	interface:CSSStyleDeclaration
curve	tsvscode.ts	/^    curve: Float32Array | null;$/;"	p	interface:WaveShaperNode
curve	tsvscode.ts	/^    curve?: number[] | Float32Array;$/;"	p	interface:WaveShaperOptions
customElements	tsvscode.ts	/^    readonly customElements: CustomElementRegistry;$/;"	p	interface:Window
customElements	tsvscode.ts	/^declare var customElements: CustomElementRegistry;$/;"	v	namespace:CSS
customError	tsvscode.ts	/^    customError?: boolean;$/;"	p	interface:ValidityStateFlags
customError	tsvscode.ts	/^    readonly customError: boolean;$/;"	p	interface:ValidityState
cx	tsvscode.ts	/^    cx: string;$/;"	p	interface:CSSStyleDeclaration
cx	tsvscode.ts	/^    readonly cx: SVGAnimatedLength;$/;"	p	interface:SVGCircleElement
cx	tsvscode.ts	/^    readonly cx: SVGAnimatedLength;$/;"	p	interface:SVGEllipseElement
cx	tsvscode.ts	/^    readonly cx: SVGAnimatedLength;$/;"	p	interface:SVGRadialGradientElement
cy	tsvscode.ts	/^    cy: string;$/;"	p	interface:CSSStyleDeclaration
cy	tsvscode.ts	/^    readonly cy: SVGAnimatedLength;$/;"	p	interface:SVGCircleElement
cy	tsvscode.ts	/^    readonly cy: SVGAnimatedLength;$/;"	p	interface:SVGEllipseElement
cy	tsvscode.ts	/^    readonly cy: SVGAnimatedLength;$/;"	p	interface:SVGRadialGradientElement
d	tsvscode.ts	/^    d: number;$/;"	p	interface:DOMMatrix
d	tsvscode.ts	/^    d: string;$/;"	p	interface:CSSStyleDeclaration
d	tsvscode.ts	/^    d?: number;$/;"	p	interface:DOMMatrix2DInit
d	tsvscode.ts	/^    d?: string;$/;"	p	interface:JsonWebKey
d	tsvscode.ts	/^    d?: string;$/;"	p	interface:RsaOtherPrimesInfo
d	tsvscode.ts	/^    readonly d: number;$/;"	p	interface:DOMMatrixReadOnly
data	tsvscode.ts	/^    data: AllowSharedBufferSource;$/;"	p	interface:EncodedVideoChunkInit
data	tsvscode.ts	/^    data: ArrayBuffer;$/;"	p	interface:RTCEncodedAudioFrame
data	tsvscode.ts	/^    data: ArrayBuffer;$/;"	p	interface:RTCEncodedVideoFrame
data	tsvscode.ts	/^    data: Blob;$/;"	p	interface:BlobEventInit
data	tsvscode.ts	/^    data: string;$/;"	p	interface:CharacterData
data	tsvscode.ts	/^    data: string;$/;"	p	interface:HTMLObjectElement
data	tsvscode.ts	/^    data?: BufferSource | Blob | string | null;$/;"	p	interface:WriteParams
data	tsvscode.ts	/^    data?: T;$/;"	p	interface:MessageEventInit
data	tsvscode.ts	/^    data?: Uint8Array;$/;"	p	interface:MIDIMessageEventInit
data	tsvscode.ts	/^    data?: any;$/;"	p	interface:NotificationOptions
data	tsvscode.ts	/^    data?: any;$/;"	p	interface:PaymentDetailsModifier
data	tsvscode.ts	/^    data?: any;$/;"	p	interface:PaymentMethodData
data	tsvscode.ts	/^    data?: string | null;$/;"	p	interface:InputEventInit
data	tsvscode.ts	/^    data?: string;$/;"	p	interface:CompositionEventInit
data	tsvscode.ts	/^    readonly data: Blob;$/;"	p	interface:BlobEvent
data	tsvscode.ts	/^    readonly data: T;$/;"	p	interface:MessageEvent
data	tsvscode.ts	/^    readonly data: Uint8Array | null;$/;"	p	interface:MIDIMessageEvent
data	tsvscode.ts	/^    readonly data: Uint8ClampedArray;$/;"	p	interface:ImageData
data	tsvscode.ts	/^    readonly data: any;$/;"	p	interface:Notification
data	tsvscode.ts	/^    readonly data: string | null;$/;"	p	interface:InputEvent
data	tsvscode.ts	/^    readonly data: string;$/;"	p	interface:CompositionEvent
dataTransfer	tsvscode.ts	/^    dataTransfer?: DataTransfer | null;$/;"	p	interface:DragEventInit
dataTransfer	tsvscode.ts	/^    dataTransfer?: DataTransfer | null;$/;"	p	interface:InputEventInit
dataTransfer	tsvscode.ts	/^    readonly dataTransfer: DataTransfer | null;$/;"	p	interface:DragEvent
dataTransfer	tsvscode.ts	/^    readonly dataTransfer: DataTransfer | null;$/;"	p	interface:InputEvent
databases	tsvscode.ts	/^    databases(): Promise<IDBDatabaseInfo[]>;$/;"	m	interface:IDBFactory
datagrams	tsvscode.ts	/^    readonly datagrams: WebTransportDatagramDuplexStream;$/;"	p	interface:WebTransport
dataset	tsvscode.ts	/^    readonly dataset: DOMStringMap;$/;"	p	interface:HTMLOrSVGElement
dateTime	tsvscode.ts	/^    dateTime: string;$/;"	p	interface:HTMLModElement
dateTime	tsvscode.ts	/^    dateTime: string;$/;"	p	interface:HTMLTimeElement
day	ests.ts	/^        day?: "numeric" | "2-digit" | undefined;$/;"	p	interface:Intl.DateTimeFormatOptions
day	ests.ts	/^        day?: string;$/;"	p	interface:Intl.ResolvedDateTimeFormatOptions
db	tsvscode.ts	/^    readonly db: IDBDatabase;$/;"	p	interface:IDBTransaction
debug	tsvscode.ts	/^    debug(...data: any[]): void;$/;"	m	interface:Console
decimal	ests.ts	/^        decimal: never;$/;"	p	interface:Intl.NumberFormatOptionsStyleRegistry
declare	tsvscode.ts	/^    declare: boolean;$/;"	p	interface:HTMLObjectElement
decode	tsvscode.ts	/^    decode(): Promise<void>;$/;"	m	interface:HTMLImageElement
decode	tsvscode.ts	/^    decode(chunk: EncodedVideoChunk): void;$/;"	m	interface:VideoDecoder
decode	tsvscode.ts	/^    decode(input?: AllowSharedBufferSource, options?: TextDecodeOptions): string;$/;"	m	interface:TextDecoder
decodeAudioData	tsvscode.ts	/^    decodeAudioData(audioData: ArrayBuffer, successCallback?: DecodeSuccessCallback | null, erro/;"	m	interface:BaseAudioContext
decodeQueueSize	tsvscode.ts	/^    readonly decodeQueueSize: number;$/;"	p	interface:VideoDecoder
decodedBodySize	tsvscode.ts	/^    readonly decodedBodySize: number;$/;"	p	interface:PerformanceResourceTiming
decoderConfig	tsvscode.ts	/^    decoderConfig?: VideoDecoderConfig;$/;"	p	interface:EncodedVideoChunkMetadata
decoderImplementation	tsvscode.ts	/^    decoderImplementation?: string;$/;"	p	interface:RTCInboundRtpStreamStats
decoding	tsvscode.ts	/^    decoding: "async" | "sync" | "auto";$/;"	p	interface:HTMLImageElement
decodingInfo	tsvscode.ts	/^    decodingInfo(configuration: MediaDecodingConfiguration): Promise<MediaCapabilitiesDecodingIn/;"	m	interface:MediaCapabilities
decrypt	tsvscode.ts	/^    decrypt(algorithm: AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGc/;"	m	interface:SubtleCrypto
default	tsvscode.ts	/^    default: boolean;$/;"	p	interface:HTMLTrackElement
default	tsvscode.ts	/^    readonly default: boolean;$/;"	p	interface:SpeechSynthesisVoice
defaultChecked	tsvscode.ts	/^    defaultChecked: boolean;$/;"	p	interface:HTMLInputElement
defaultMuted	tsvscode.ts	/^    defaultMuted: boolean;$/;"	p	interface:HTMLMediaElement
defaultPlaybackRate	tsvscode.ts	/^    defaultPlaybackRate: number;$/;"	p	interface:HTMLMediaElement
defaultPrevented	tsvscode.ts	/^    readonly defaultPrevented: boolean;$/;"	p	interface:Event
defaultSelected	tsvscode.ts	/^    defaultSelected: boolean;$/;"	p	interface:HTMLOptionElement
defaultValue	tsvscode.ts	/^    defaultValue: string;$/;"	p	interface:HTMLInputElement
defaultValue	tsvscode.ts	/^    defaultValue: string;$/;"	p	interface:HTMLOutputElement
defaultValue	tsvscode.ts	/^    defaultValue: string;$/;"	p	interface:HTMLTextAreaElement
defaultValue	tsvscode.ts	/^    readonly defaultValue: number;$/;"	p	interface:AudioParam
defaultView	tsvscode.ts	/^    readonly defaultView: (WindowProxy & typeof globalThis) | null;$/;"	p	interface:Document
defer	tsvscode.ts	/^    defer: boolean;$/;"	p	interface:HTMLScriptElement
define	tsvscode.ts	/^    define(name: string, constructor: CustomElementConstructor, options?: ElementDefinitionOptio/;"	m	interface:CustomElementRegistry
defineProperties	ests.ts	/^    defineProperties<T>(o: T, properties: PropertyDescriptorMap & ThisType<any>): T;$/;"	m	interface:ObjectConstructor
defineProperty	ests.ts	/^    defineProperty<T>(o: T, p: PropertyKey, attributes: PropertyDescriptor & ThisType<any>): T;$/;"	m	interface:ObjectConstructor
degradationPreference	tsvscode.ts	/^    degradationPreference?: RTCDegradationPreference;$/;"	p	interface:RTCRtpSendParameters
delay	tsvscode.ts	/^    delay?: number;$/;"	p	interface:EffectTiming
delay	tsvscode.ts	/^    delay?: number;$/;"	p	interface:OptionalEffectTiming
delayTime	tsvscode.ts	/^    delayTime?: number;$/;"	p	interface:DelayOptions
delayTime	tsvscode.ts	/^    readonly delayTime: AudioParam;$/;"	p	interface:DelayNode
delegatesFocus	tsvscode.ts	/^    delegatesFocus?: boolean;$/;"	p	interface:ShadowRootInit
delegatesFocus	tsvscode.ts	/^    readonly delegatesFocus: boolean;$/;"	p	interface:ShadowRoot
delete	tsvscode.ts	/^    delete(): IDBRequest<undefined>;$/;"	m	interface:IDBCursor
delete	tsvscode.ts	/^    delete(cacheName: string): Promise<boolean>;$/;"	m	interface:CacheStorage
delete	tsvscode.ts	/^    delete(name: string): void;$/;"	m	interface:FormData
delete	tsvscode.ts	/^    delete(name: string): void;$/;"	m	interface:Headers
delete	tsvscode.ts	/^    delete(name: string, value?: string): void;$/;"	m	interface:URLSearchParams
delete	tsvscode.ts	/^    delete(property: string): void;$/;"	m	interface:StylePropertyMap
delete	tsvscode.ts	/^    delete(query: IDBValidKey | IDBKeyRange): IDBRequest<undefined>;$/;"	m	interface:IDBObjectStore
delete	tsvscode.ts	/^    delete(request: RequestInfo | URL, options?: CacheQueryOptions): Promise<boolean>;$/;"	m	interface:Cache
deleteBuffer	tsvscode.ts	/^    deleteBuffer(buffer: WebGLBuffer | null): void;$/;"	m	interface:WebGLRenderingContextBase
deleteCaption	tsvscode.ts	/^    deleteCaption(): void;$/;"	m	interface:HTMLTableElement
deleteCell	tsvscode.ts	/^    deleteCell(index: number): void;$/;"	m	interface:HTMLTableRowElement
deleteContents	tsvscode.ts	/^    deleteContents(): void;$/;"	m	interface:Range
deleteData	tsvscode.ts	/^    deleteData(offset: number, count: number): void;$/;"	m	interface:CharacterData
deleteDatabase	tsvscode.ts	/^    deleteDatabase(name: string): IDBOpenDBRequest;$/;"	m	interface:IDBFactory
deleteFramebuffer	tsvscode.ts	/^    deleteFramebuffer(framebuffer: WebGLFramebuffer | null): void;$/;"	m	interface:WebGLRenderingContextBase
deleteFromDocument	tsvscode.ts	/^    deleteFromDocument(): void;$/;"	m	interface:Selection
deleteIndex	tsvscode.ts	/^    deleteIndex(name: string): void;$/;"	m	interface:IDBObjectStore
deleteMedium	tsvscode.ts	/^    deleteMedium(medium: string): void;$/;"	m	interface:MediaList
deleteObjectStore	tsvscode.ts	/^    deleteObjectStore(name: string): void;$/;"	m	interface:IDBDatabase
deleteProgram	tsvscode.ts	/^    deleteProgram(program: WebGLProgram | null): void;$/;"	m	interface:WebGLRenderingContextBase
deleteQuery	tsvscode.ts	/^    deleteQuery(query: WebGLQuery | null): void;$/;"	m	interface:WebGL2RenderingContextBase
deleteRenderbuffer	tsvscode.ts	/^    deleteRenderbuffer(renderbuffer: WebGLRenderbuffer | null): void;$/;"	m	interface:WebGLRenderingContextBase
deleteRow	tsvscode.ts	/^    deleteRow(index: number): void;$/;"	m	interface:HTMLTableElement
deleteRow	tsvscode.ts	/^    deleteRow(index: number): void;$/;"	m	interface:HTMLTableSectionElement
deleteRule	tsvscode.ts	/^    deleteRule(index: number): void;$/;"	m	interface:CSSGroupingRule
deleteRule	tsvscode.ts	/^    deleteRule(index: number): void;$/;"	m	interface:CSSStyleSheet
deleteRule	tsvscode.ts	/^    deleteRule(select: string): void;$/;"	m	interface:CSSKeyframesRule
deleteSampler	tsvscode.ts	/^    deleteSampler(sampler: WebGLSampler | null): void;$/;"	m	interface:WebGL2RenderingContextBase
deleteShader	tsvscode.ts	/^    deleteShader(shader: WebGLShader | null): void;$/;"	m	interface:WebGLRenderingContextBase
deleteSync	tsvscode.ts	/^    deleteSync(sync: WebGLSync | null): void;$/;"	m	interface:WebGL2RenderingContextBase
deleteTFoot	tsvscode.ts	/^    deleteTFoot(): void;$/;"	m	interface:HTMLTableElement
deleteTHead	tsvscode.ts	/^    deleteTHead(): void;$/;"	m	interface:HTMLTableElement
deleteTexture	tsvscode.ts	/^    deleteTexture(texture: WebGLTexture | null): void;$/;"	m	interface:WebGLRenderingContextBase
deleteTransformFeedback	tsvscode.ts	/^    deleteTransformFeedback(tf: WebGLTransformFeedback | null): void;$/;"	m	interface:WebGL2RenderingContextBase
deleteVertexArray	tsvscode.ts	/^    deleteVertexArray(vertexArray: WebGLVertexArrayObject | null): void;$/;"	m	interface:WebGL2RenderingContextBase
deleteVertexArrayOES	tsvscode.ts	/^    deleteVertexArrayOES(arrayObject: WebGLVertexArrayObjectOES | null): void;$/;"	m	interface:OES_vertex_array_object
deltaMode	tsvscode.ts	/^    deltaMode?: number;$/;"	p	interface:WheelEventInit
deltaMode	tsvscode.ts	/^    readonly deltaMode: number;$/;"	p	interface:WheelEvent
deltaX	tsvscode.ts	/^    deltaX?: number;$/;"	p	interface:WheelEventInit
deltaX	tsvscode.ts	/^    readonly deltaX: number;$/;"	p	interface:WheelEvent
deltaY	tsvscode.ts	/^    deltaY?: number;$/;"	p	interface:WheelEventInit
deltaY	tsvscode.ts	/^    readonly deltaY: number;$/;"	p	interface:WheelEvent
deltaZ	tsvscode.ts	/^    deltaZ?: number;$/;"	p	interface:WheelEventInit
deltaZ	tsvscode.ts	/^    readonly deltaZ: number;$/;"	p	interface:WheelEvent
dependencies	tsvscode.ts	/^    dependencies?: number[];$/;"	p	interface:RTCEncodedVideoFrameMetadata
depth	tsvscode.ts	/^    depth?: boolean;$/;"	p	interface:WebGLContextAttributes
depthFunc	tsvscode.ts	/^    depthFunc(func: GLenum): void;$/;"	m	interface:WebGLRenderingContextBase
depthMask	tsvscode.ts	/^    depthMask(flag: GLboolean): void;$/;"	m	interface:WebGLRenderingContextBase
depthRange	tsvscode.ts	/^    depthRange(zNear: GLclampf, zFar: GLclampf): void;$/;"	m	interface:WebGLRenderingContextBase
deriveBits	tsvscode.ts	/^    deriveBits(algorithm: AlgorithmIdentifier | EcdhKeyDeriveParams | HkdfParams | Pbkdf2Params,/;"	m	interface:SubtleCrypto
deriveKey	tsvscode.ts	/^    deriveKey(algorithm: AlgorithmIdentifier | EcdhKeyDeriveParams | HkdfParams | Pbkdf2Params, /;"	m	interface:SubtleCrypto
descentOverride	tsvscode.ts	/^    descentOverride: string;$/;"	p	interface:FontFace
descentOverride	tsvscode.ts	/^    descentOverride?: string;$/;"	p	interface:FontFaceDescriptors
description	tsvscode.ts	/^    description?: AllowSharedBufferSource;$/;"	p	interface:VideoDecoderConfig
description	tsvscode.ts	/^    readonly description: string;$/;"	p	interface:MimeType
description	tsvscode.ts	/^    readonly description: string;$/;"	p	interface:PerformanceServerTiming
description	tsvscode.ts	/^    readonly description: string;$/;"	p	interface:Plugin
deselectAll	tsvscode.ts	/^    deselectAll(): void;$/;"	m	interface:SVGSVGElement
designMode	tsvscode.ts	/^    designMode: string;$/;"	p	interface:Document
desiredSize	tsvscode.ts	/^    readonly desiredSize: number | null;$/;"	p	interface:ReadableByteStreamController
desiredSize	tsvscode.ts	/^    readonly desiredSize: number | null;$/;"	p	interface:ReadableStreamDefaultController
desiredSize	tsvscode.ts	/^    readonly desiredSize: number | null;$/;"	p	interface:TransformStreamDefaultController
desiredSize	tsvscode.ts	/^    readonly desiredSize: number | null;$/;"	p	interface:WritableStreamDefaultWriter
destination	tsvscode.ts	/^    readonly destination: AudioDestinationNode;$/;"	p	interface:BaseAudioContext
destination	tsvscode.ts	/^    readonly destination: RequestDestination;$/;"	p	interface:Request
desynchronized	tsvscode.ts	/^    desynchronized?: boolean;$/;"	p	interface:CanvasRenderingContext2DSettings
desynchronized	tsvscode.ts	/^    desynchronized?: boolean;$/;"	p	interface:WebGLContextAttributes
detach	tsvscode.ts	/^    detach(): void;$/;"	m	interface:NodeIterator
detach	tsvscode.ts	/^    detach(): void;$/;"	m	interface:Range
detachShader	tsvscode.ts	/^    detachShader(program: WebGLProgram, shader: WebGLShader): void;$/;"	m	interface:WebGLRenderingContextBase
detail	tsvscode.ts	/^    detail?: T;$/;"	p	interface:CustomEventInit
detail	tsvscode.ts	/^    detail?: any;$/;"	p	interface:PerformanceMarkOptions
detail	tsvscode.ts	/^    detail?: any;$/;"	p	interface:PerformanceMeasureOptions
detail	tsvscode.ts	/^    detail?: number;$/;"	p	interface:UIEventInit
detail	tsvscode.ts	/^    readonly detail: T;$/;"	p	interface:CustomEvent
detail	tsvscode.ts	/^    readonly detail: any;$/;"	p	interface:PerformanceMark
detail	tsvscode.ts	/^    readonly detail: any;$/;"	p	interface:PerformanceMeasure
detail	tsvscode.ts	/^    readonly detail: number;$/;"	p	interface:UIEvent
details	tsvscode.ts	/^    readonly details: any;$/;"	p	interface:PaymentResponse
detune	tsvscode.ts	/^    detune?: number;$/;"	p	interface:AudioBufferSourceOptions
detune	tsvscode.ts	/^    detune?: number;$/;"	p	interface:BiquadFilterOptions
detune	tsvscode.ts	/^    detune?: number;$/;"	p	interface:OscillatorOptions
detune	tsvscode.ts	/^    readonly detune: AudioParam;$/;"	p	interface:AudioBufferSourceNode
detune	tsvscode.ts	/^    readonly detune: AudioParam;$/;"	p	interface:BiquadFilterNode
detune	tsvscode.ts	/^    readonly detune: AudioParam;$/;"	p	interface:OscillatorNode
deviceId	tsvscode.ts	/^    deviceId?: ConstrainDOMString;$/;"	p	interface:MediaTrackConstraintSet
deviceId	tsvscode.ts	/^    deviceId?: boolean;$/;"	p	interface:MediaTrackSupportedConstraints
deviceId	tsvscode.ts	/^    deviceId?: string;$/;"	p	interface:MediaTrackCapabilities
deviceId	tsvscode.ts	/^    deviceId?: string;$/;"	p	interface:MediaTrackSettings
deviceId	tsvscode.ts	/^    readonly deviceId: string;$/;"	p	interface:MediaDeviceInfo
devicePixelContentBoxSize	tsvscode.ts	/^    readonly devicePixelContentBoxSize: ReadonlyArray<ResizeObserverSize>;$/;"	p	interface:ResizeObserverEntry
devicePixelRatio	tsvscode.ts	/^    readonly devicePixelRatio: number;$/;"	p	interface:Window
devicePixelRatio	tsvscode.ts	/^declare var devicePixelRatio: number;$/;"	v	namespace:CSS
didTimeout	tsvscode.ts	/^    readonly didTimeout: boolean;$/;"	p	interface:IdleDeadline
diffuseConstant	tsvscode.ts	/^    readonly diffuseConstant: SVGAnimatedNumber;$/;"	p	interface:SVGFEDiffuseLightingElement
digest	tsvscode.ts	/^    digest(algorithm: AlgorithmIdentifier, data: BufferSource): Promise<ArrayBuffer>;$/;"	m	interface:SubtleCrypto
dir	tsvscode.ts	/^    dir(item?: any, options?: any): void;$/;"	m	interface:Console
dir	tsvscode.ts	/^    dir: string;$/;"	p	interface:Document
dir	tsvscode.ts	/^    dir: string;$/;"	p	interface:HTMLElement
dir	tsvscode.ts	/^    dir?: NotificationDirection;$/;"	p	interface:NotificationOptions
dir	tsvscode.ts	/^    readonly dir: NotificationDirection;$/;"	p	interface:Notification
dirName	tsvscode.ts	/^    dirName: string;$/;"	p	interface:HTMLInputElement
dirName	tsvscode.ts	/^    dirName: string;$/;"	p	interface:HTMLTextAreaElement
direction	tsvscode.ts	/^    direction: CanvasDirection;$/;"	p	interface:CanvasTextDrawingStyles
direction	tsvscode.ts	/^    direction: RTCRtpTransceiverDirection;$/;"	p	interface:RTCRtpTransceiver
direction	tsvscode.ts	/^    direction: string;$/;"	p	interface:CSSStyleDeclaration
direction	tsvscode.ts	/^    direction: string;$/;"	p	interface:HTMLMarqueeElement
direction	tsvscode.ts	/^    direction?: PlaybackDirection;$/;"	p	interface:EffectTiming
direction	tsvscode.ts	/^    direction?: PlaybackDirection;$/;"	p	interface:OptionalEffectTiming
direction	tsvscode.ts	/^    direction?: RTCRtpTransceiverDirection;$/;"	p	interface:RTCRtpTransceiverInit
direction	tsvscode.ts	/^    readonly direction: IDBCursorDirection;$/;"	p	interface:IDBCursor
dirxml	tsvscode.ts	/^    dirxml(...data: any[]): void;$/;"	m	interface:Console
disable	tsvscode.ts	/^    disable(): Promise<void>;$/;"	m	interface:NavigationPreloadManager
disable	tsvscode.ts	/^    disable(cap: GLenum): void;$/;"	m	interface:WebGLRenderingContextBase
disableNormalization	tsvscode.ts	/^    disableNormalization?: boolean;$/;"	p	interface:ConvolverOptions
disableNormalization	tsvscode.ts	/^    disableNormalization?: boolean;$/;"	p	interface:PeriodicWaveConstraints
disablePictureInPicture	tsvscode.ts	/^    disablePictureInPicture: boolean;$/;"	p	interface:HTMLVideoElement
disableRemotePlayback	tsvscode.ts	/^    disableRemotePlayback: boolean;$/;"	p	interface:HTMLMediaElement
disableVertexAttribArray	tsvscode.ts	/^    disableVertexAttribArray(index: GLuint): void;$/;"	m	interface:WebGLRenderingContextBase
disabled	tsvscode.ts	/^    disabled: boolean;$/;"	p	interface:HTMLButtonElement
disabled	tsvscode.ts	/^    disabled: boolean;$/;"	p	interface:HTMLFieldSetElement
disabled	tsvscode.ts	/^    disabled: boolean;$/;"	p	interface:HTMLInputElement
disabled	tsvscode.ts	/^    disabled: boolean;$/;"	p	interface:HTMLLinkElement
disabled	tsvscode.ts	/^    disabled: boolean;$/;"	p	interface:HTMLOptGroupElement
disabled	tsvscode.ts	/^    disabled: boolean;$/;"	p	interface:HTMLOptionElement
disabled	tsvscode.ts	/^    disabled: boolean;$/;"	p	interface:HTMLSelectElement
disabled	tsvscode.ts	/^    disabled: boolean;$/;"	p	interface:HTMLStyleElement
disabled	tsvscode.ts	/^    disabled: boolean;$/;"	p	interface:HTMLTextAreaElement
disabled	tsvscode.ts	/^    disabled: boolean;$/;"	p	interface:SVGStyleElement
disabled	tsvscode.ts	/^    disabled: boolean;$/;"	p	interface:StyleSheet
disabled	tsvscode.ts	/^    disabled?: boolean;$/;"	p	interface:CSSStyleSheetInit
disableiOES	tsvscode.ts	/^    disableiOES(target: GLenum, index: GLuint): void;$/;"	m	interface:OES_draw_buffers_indexed
disconnect	tsvscode.ts	/^    disconnect(): void;$/;"	m	interface:AudioNode
disconnect	tsvscode.ts	/^    disconnect(): void;$/;"	m	interface:IntersectionObserver
disconnect	tsvscode.ts	/^    disconnect(): void;$/;"	m	interface:MutationObserver
disconnect	tsvscode.ts	/^    disconnect(): void;$/;"	m	interface:PerformanceObserver
disconnect	tsvscode.ts	/^    disconnect(): void;$/;"	m	interface:ReportingObserver
disconnect	tsvscode.ts	/^    disconnect(): void;$/;"	m	interface:ResizeObserver
disconnect	tsvscode.ts	/^    disconnect(destinationNode: AudioNode): void;$/;"	m	interface:AudioNode
disconnect	tsvscode.ts	/^    disconnect(destinationNode: AudioNode, output: number): void;$/;"	m	interface:AudioNode
disconnect	tsvscode.ts	/^    disconnect(destinationNode: AudioNode, output: number, input: number): void;$/;"	m	interface:AudioNode
disconnect	tsvscode.ts	/^    disconnect(destinationParam: AudioParam): void;$/;"	m	interface:AudioNode
disconnect	tsvscode.ts	/^    disconnect(destinationParam: AudioParam, output: number): void;$/;"	m	interface:AudioNode
disconnect	tsvscode.ts	/^    disconnect(output: number): void;$/;"	m	interface:AudioNode
dispatchEvent	tsvscode.ts	/^    dispatchEvent(event: Event): boolean;$/;"	m	interface:EventTarget
display	tsvscode.ts	/^    display: FontDisplay;$/;"	p	interface:FontFace
display	tsvscode.ts	/^    display: string;$/;"	p	interface:CSSStyleDeclaration
display	tsvscode.ts	/^    display?: FontDisplay;$/;"	p	interface:FontFaceDescriptors
displayAspectHeight	tsvscode.ts	/^    displayAspectHeight?: number;$/;"	p	interface:VideoDecoderConfig
displayAspectWidth	tsvscode.ts	/^    displayAspectWidth?: number;$/;"	p	interface:VideoDecoderConfig
displayHeight	tsvscode.ts	/^    displayHeight?: number;$/;"	p	interface:VideoEncoderConfig
displayHeight	tsvscode.ts	/^    displayHeight?: number;$/;"	p	interface:VideoFrameBufferInit
displayHeight	tsvscode.ts	/^    displayHeight?: number;$/;"	p	interface:VideoFrameInit
displayHeight	tsvscode.ts	/^    readonly displayHeight: number;$/;"	p	interface:VideoFrame
displayItems	tsvscode.ts	/^    displayItems?: PaymentItem[];$/;"	p	interface:PaymentDetailsBase
displayName	tsvscode.ts	/^    displayName: string;$/;"	p	interface:PublicKeyCredentialUserEntity
displaySurface	tsvscode.ts	/^    displaySurface?: ConstrainDOMString;$/;"	p	interface:MediaTrackConstraintSet
displaySurface	tsvscode.ts	/^    displaySurface?: boolean;$/;"	p	interface:MediaTrackSupportedConstraints
displaySurface	tsvscode.ts	/^    displaySurface?: string;$/;"	p	interface:MediaTrackCapabilities
displaySurface	tsvscode.ts	/^    displaySurface?: string;$/;"	p	interface:MediaTrackSettings
displayWidth	tsvscode.ts	/^    displayWidth?: number;$/;"	p	interface:VideoEncoderConfig
displayWidth	tsvscode.ts	/^    displayWidth?: number;$/;"	p	interface:VideoFrameBufferInit
displayWidth	tsvscode.ts	/^    displayWidth?: number;$/;"	p	interface:VideoFrameInit
displayWidth	tsvscode.ts	/^    readonly displayWidth: number;$/;"	p	interface:VideoFrame
disposition	tsvscode.ts	/^    disposition: SecurityPolicyViolationEventDisposition;$/;"	p	interface:SecurityPolicyViolationEventInit
disposition	tsvscode.ts	/^    readonly disposition: SecurityPolicyViolationEventDisposition;$/;"	p	interface:SecurityPolicyViolationEvent
distanceModel	tsvscode.ts	/^    distanceModel: DistanceModelType;$/;"	p	interface:PannerNode
distanceModel	tsvscode.ts	/^    distanceModel?: DistanceModelType;$/;"	p	interface:PannerOptions
distinctiveIdentifier	tsvscode.ts	/^    distinctiveIdentifier?: MediaKeysRequirement;$/;"	p	interface:MediaKeySystemConfiguration
div	tsvscode.ts	/^    div(...values: CSSNumberish[]): CSSNumericValue;$/;"	m	interface:CSSNumericValue
divisor	tsvscode.ts	/^    readonly divisor: SVGAnimatedNumber;$/;"	p	interface:SVGFEConvolveMatrixElement
doNotTrack	tsvscode.ts	/^    readonly doNotTrack: string | null;$/;"	p	interface:Navigator
doctype	tsvscode.ts	/^    readonly doctype: DocumentType | null;$/;"	p	interface:Document
document	tsvscode.ts	/^    readonly document: Document;$/;"	p	interface:Window
document	tsvscode.ts	/^declare var document: Document;$/;"	v	namespace:CSS
documentElement	tsvscode.ts	/^    readonly documentElement: HTMLElement;$/;"	p	interface:Document
documentURI	tsvscode.ts	/^    documentURI: string;$/;"	p	interface:SecurityPolicyViolationEventInit
documentURI	tsvscode.ts	/^    readonly documentURI: string;$/;"	p	interface:Document
documentURI	tsvscode.ts	/^    readonly documentURI: string;$/;"	p	interface:SecurityPolicyViolationEvent
domComplete	tsvscode.ts	/^    readonly domComplete: DOMHighResTimeStamp;$/;"	p	interface:PerformanceNavigationTiming
domComplete	tsvscode.ts	/^    readonly domComplete: number;$/;"	p	interface:PerformanceTiming
domContentLoadedEventEnd	tsvscode.ts	/^    readonly domContentLoadedEventEnd: DOMHighResTimeStamp;$/;"	p	interface:PerformanceNavigationTiming
domContentLoadedEventEnd	tsvscode.ts	/^    readonly domContentLoadedEventEnd: number;$/;"	p	interface:PerformanceTiming
domContentLoadedEventStart	tsvscode.ts	/^    readonly domContentLoadedEventStart: DOMHighResTimeStamp;$/;"	p	interface:PerformanceNavigationTiming
domContentLoadedEventStart	tsvscode.ts	/^    readonly domContentLoadedEventStart: number;$/;"	p	interface:PerformanceTiming
domInteractive	tsvscode.ts	/^    readonly domInteractive: DOMHighResTimeStamp;$/;"	p	interface:PerformanceNavigationTiming
domInteractive	tsvscode.ts	/^    readonly domInteractive: number;$/;"	p	interface:PerformanceTiming
domLoading	tsvscode.ts	/^    readonly domLoading: number;$/;"	p	interface:PerformanceTiming
domain	tsvscode.ts	/^    domain: string;$/;"	p	interface:Document
domainLookupEnd	tsvscode.ts	/^    readonly domainLookupEnd: DOMHighResTimeStamp;$/;"	p	interface:PerformanceResourceTiming
domainLookupEnd	tsvscode.ts	/^    readonly domainLookupEnd: number;$/;"	p	interface:PerformanceTiming
domainLookupStart	tsvscode.ts	/^    readonly domainLookupStart: DOMHighResTimeStamp;$/;"	p	interface:PerformanceResourceTiming
domainLookupStart	tsvscode.ts	/^    readonly domainLookupStart: number;$/;"	p	interface:PerformanceTiming
dominantBaseline	tsvscode.ts	/^    dominantBaseline: string;$/;"	p	interface:CSSStyleDeclaration
done	tsvscode.ts	/^    done: false;$/;"	p	interface:ReadableStreamReadValueResult
done	tsvscode.ts	/^    done: true;$/;"	p	interface:ReadableStreamReadDoneResult
download	tsvscode.ts	/^    download: string;$/;"	p	interface:HTMLAnchorElement
download	tsvscode.ts	/^    download: string;$/;"	p	interface:HTMLAreaElement
dp	tsvscode.ts	/^    dp?: string;$/;"	p	interface:JsonWebKey
dq	tsvscode.ts	/^    dq?: string;$/;"	p	interface:JsonWebKey
draggable	tsvscode.ts	/^    draggable: boolean;$/;"	p	interface:HTMLElement
drawArrays	tsvscode.ts	/^    drawArrays(mode: GLenum, first: GLint, count: GLsizei): void;$/;"	m	interface:WebGLRenderingContextBase
drawArraysInstanced	tsvscode.ts	/^    drawArraysInstanced(mode: GLenum, first: GLint, count: GLsizei, instanceCount: GLsizei): voi/;"	m	interface:WebGL2RenderingContextBase
drawArraysInstancedANGLE	tsvscode.ts	/^    drawArraysInstancedANGLE(mode: GLenum, first: GLint, count: GLsizei, primcount: GLsizei): vo/;"	m	interface:ANGLE_instanced_arrays
drawBuffers	tsvscode.ts	/^    drawBuffers(buffers: GLenum[]): void;$/;"	m	interface:WebGL2RenderingContextBase
drawBuffersWEBGL	tsvscode.ts	/^    drawBuffersWEBGL(buffers: GLenum[]): void;$/;"	m	interface:WEBGL_draw_buffers
drawElements	tsvscode.ts	/^    drawElements(mode: GLenum, count: GLsizei, type: GLenum, offset: GLintptr): void;$/;"	m	interface:WebGLRenderingContextBase
drawElementsInstanced	tsvscode.ts	/^    drawElementsInstanced(mode: GLenum, count: GLsizei, type: GLenum, offset: GLintptr, instance/;"	m	interface:WebGL2RenderingContextBase
drawElementsInstancedANGLE	tsvscode.ts	/^    drawElementsInstancedANGLE(mode: GLenum, count: GLsizei, type: GLenum, offset: GLintptr, pri/;"	m	interface:ANGLE_instanced_arrays
drawFocusIfNeeded	tsvscode.ts	/^    drawFocusIfNeeded(element: Element): void;$/;"	m	interface:CanvasUserInterface
drawFocusIfNeeded	tsvscode.ts	/^    drawFocusIfNeeded(path: Path2D, element: Element): void;$/;"	m	interface:CanvasUserInterface
drawImage	tsvscode.ts	/^    drawImage(image: CanvasImageSource, dx: number, dy: number): void;$/;"	m	interface:CanvasDrawImage
drawImage	tsvscode.ts	/^    drawImage(image: CanvasImageSource, dx: number, dy: number, dw: number, dh: number): void;$/;"	m	interface:CanvasDrawImage
drawImage	tsvscode.ts	/^    drawImage(image: CanvasImageSource, sx: number, sy: number, sw: number, sh: number, dx: numb/;"	m	interface:CanvasDrawImage
drawRangeElements	tsvscode.ts	/^    drawRangeElements(mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, type: GLenum, of/;"	m	interface:WebGL2RenderingContextBase
drawingBufferColorSpace	tsvscode.ts	/^    drawingBufferColorSpace: PredefinedColorSpace;$/;"	p	interface:WebGLRenderingContextBase
drawingBufferHeight	tsvscode.ts	/^    readonly drawingBufferHeight: GLsizei;$/;"	p	interface:WebGLRenderingContextBase
drawingBufferWidth	tsvscode.ts	/^    readonly drawingBufferWidth: GLsizei;$/;"	p	interface:WebGLRenderingContextBase
dropEffect	tsvscode.ts	/^    dropEffect: "none" | "copy" | "link" | "move";$/;"	p	interface:DataTransfer
droppedVideoFrames	tsvscode.ts	/^    readonly droppedVideoFrames: number;$/;"	p	interface:VideoPlaybackQuality
dtlsCipher	tsvscode.ts	/^    dtlsCipher?: string;$/;"	p	interface:RTCTransportStats
dtlsState	tsvscode.ts	/^    dtlsState: RTCDtlsTransportState;$/;"	p	interface:RTCTransportStats
dtmf	tsvscode.ts	/^    readonly dtmf: RTCDTMFSender | null;$/;"	p	interface:RTCRtpSender
durability	tsvscode.ts	/^    durability?: IDBTransactionDurability;$/;"	p	interface:IDBTransactionOptions
durability	tsvscode.ts	/^    readonly durability: IDBTransactionDurability;$/;"	p	interface:IDBTransaction
duration	tsvscode.ts	/^    duration: number;$/;"	p	interface:MediaSource
duration	tsvscode.ts	/^    duration?: DOMHighResTimeStamp;$/;"	p	interface:PerformanceMeasureOptions
duration	tsvscode.ts	/^    duration?: number | CSSNumericValue | string;$/;"	p	interface:EffectTiming
duration	tsvscode.ts	/^    duration?: number | string;$/;"	p	interface:OptionalEffectTiming
duration	tsvscode.ts	/^    duration?: number;$/;"	p	interface:EncodedVideoChunkInit
duration	tsvscode.ts	/^    duration?: number;$/;"	p	interface:GamepadEffectParameters
duration	tsvscode.ts	/^    duration?: number;$/;"	p	interface:MediaPositionState
duration	tsvscode.ts	/^    duration?: number;$/;"	p	interface:VideoFrameBufferInit
duration	tsvscode.ts	/^    duration?: number;$/;"	p	interface:VideoFrameInit
duration	tsvscode.ts	/^    readonly duration: DOMHighResTimeStamp;$/;"	p	interface:PerformanceEntry
duration	tsvscode.ts	/^    readonly duration: DOMHighResTimeStamp;$/;"	p	interface:PerformanceServerTiming
duration	tsvscode.ts	/^    readonly duration: number | null;$/;"	p	interface:EncodedVideoChunk
duration	tsvscode.ts	/^    readonly duration: number | null;$/;"	p	interface:VideoFrame
duration	tsvscode.ts	/^    readonly duration: number;$/;"	p	interface:AudioBuffer
duration	tsvscode.ts	/^    readonly duration: number;$/;"	p	interface:HTMLMediaElement
dx	tsvscode.ts	/^    readonly dx: SVGAnimatedLengthList;$/;"	p	interface:SVGTextPositioningElement
dx	tsvscode.ts	/^    readonly dx: SVGAnimatedNumber;$/;"	p	interface:SVGFEDropShadowElement
dx	tsvscode.ts	/^    readonly dx: SVGAnimatedNumber;$/;"	p	interface:SVGFEOffsetElement
dy	tsvscode.ts	/^    readonly dy: SVGAnimatedLengthList;$/;"	p	interface:SVGTextPositioningElement
dy	tsvscode.ts	/^    readonly dy: SVGAnimatedNumber;$/;"	p	interface:SVGFEDropShadowElement
dy	tsvscode.ts	/^    readonly dy: SVGAnimatedNumber;$/;"	p	interface:SVGFEOffsetElement
e	tsvscode.ts	/^    e: number;$/;"	p	interface:DOMMatrix
e	tsvscode.ts	/^    e?: number;$/;"	p	interface:DOMMatrix2DInit
e	tsvscode.ts	/^    e?: string;$/;"	p	interface:JsonWebKey
e	tsvscode.ts	/^    readonly e: number;$/;"	p	interface:DOMMatrixReadOnly
easing	tsvscode.ts	/^    easing: string;$/;"	p	interface:ComputedKeyframe
easing	tsvscode.ts	/^    easing?: string | string[];$/;"	p	interface:PropertyIndexedKeyframes
easing	tsvscode.ts	/^    easing?: string;$/;"	p	interface:EffectTiming
easing	tsvscode.ts	/^    easing?: string;$/;"	p	interface:Keyframe
easing	tsvscode.ts	/^    easing?: string;$/;"	p	interface:OptionalEffectTiming
echoCancellation	tsvscode.ts	/^    echoCancellation?: ConstrainBoolean;$/;"	p	interface:MediaTrackConstraintSet
echoCancellation	tsvscode.ts	/^    echoCancellation?: boolean;$/;"	p	interface:MediaTrackSettings
echoCancellation	tsvscode.ts	/^    echoCancellation?: boolean;$/;"	p	interface:MediaTrackSupportedConstraints
echoCancellation	tsvscode.ts	/^    echoCancellation?: boolean[];$/;"	p	interface:MediaTrackCapabilities
edgeMode	tsvscode.ts	/^    readonly edgeMode: SVGAnimatedEnumeration;$/;"	p	interface:SVGFEConvolveMatrixElement
effect	tsvscode.ts	/^    effect: AnimationEffect | null;$/;"	p	interface:Animation
effectAllowed	tsvscode.ts	/^    effectAllowed: "none" | "copy" | "copyLink" | "copyMove" | "link" | "linkMove" | "move" | "a/;"	p	interface:DataTransfer
effectiveDirective	tsvscode.ts	/^    effectiveDirective: string;$/;"	p	interface:SecurityPolicyViolationEventInit
effectiveDirective	tsvscode.ts	/^    readonly effectiveDirective: string;$/;"	p	interface:SecurityPolicyViolationEvent
elapsedTime	tsvscode.ts	/^    elapsedTime?: number;$/;"	p	interface:AnimationEventInit
elapsedTime	tsvscode.ts	/^    elapsedTime?: number;$/;"	p	interface:SpeechSynthesisEventInit
elapsedTime	tsvscode.ts	/^    elapsedTime?: number;$/;"	p	interface:TransitionEventInit
elapsedTime	tsvscode.ts	/^    readonly elapsedTime: number;$/;"	p	interface:AnimationEvent
elapsedTime	tsvscode.ts	/^    readonly elapsedTime: number;$/;"	p	interface:SpeechSynthesisEvent
elapsedTime	tsvscode.ts	/^    readonly elapsedTime: number;$/;"	p	interface:TransitionEvent
elementFromPoint	tsvscode.ts	/^    elementFromPoint(x: number, y: number): Element | null;$/;"	m	interface:DocumentOrShadowRoot
elements	tsvscode.ts	/^    readonly elements: HTMLCollection;$/;"	p	interface:HTMLFieldSetElement
elements	tsvscode.ts	/^    readonly elements: HTMLFormControlsCollection;$/;"	p	interface:HTMLFormElement
elementsFromPoint	tsvscode.ts	/^    elementsFromPoint(x: number, y: number): Element[];$/;"	m	interface:DocumentOrShadowRoot
elevation	tsvscode.ts	/^    readonly elevation: SVGAnimatedNumber;$/;"	p	interface:SVGFEDistantLightElement
ellipse	tsvscode.ts	/^    ellipse(x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle/;"	m	interface:CanvasPath
emHeightAscent	tsvscode.ts	/^    readonly emHeightAscent: number;$/;"	p	interface:TextMetrics
emHeightDescent	tsvscode.ts	/^    readonly emHeightDescent: number;$/;"	p	interface:TextMetrics
embeds	tsvscode.ts	/^    readonly embeds: HTMLCollectionOf<HTMLEmbedElement>;$/;"	p	interface:Document
empty	tsvscode.ts	/^    empty(): void;$/;"	m	interface:Selection
emptyCells	tsvscode.ts	/^    emptyCells: string;$/;"	p	interface:CSSStyleDeclaration
enable	tsvscode.ts	/^    enable(): Promise<void>;$/;"	m	interface:NavigationPreloadManager
enable	tsvscode.ts	/^    enable(cap: GLenum): void;$/;"	m	interface:WebGLRenderingContextBase
enableHighAccuracy	tsvscode.ts	/^    enableHighAccuracy?: boolean;$/;"	p	interface:PositionOptions
enableVertexAttribArray	tsvscode.ts	/^    enableVertexAttribArray(index: GLuint): void;$/;"	m	interface:WebGLRenderingContextBase
enabled	tsvscode.ts	/^    enabled: boolean;$/;"	p	interface:MediaStreamTrack
enabled	tsvscode.ts	/^    enabled?: boolean;$/;"	p	interface:NavigationPreloadState
enabledPlugin	tsvscode.ts	/^    readonly enabledPlugin: Plugin;$/;"	p	interface:MimeType
enableiOES	tsvscode.ts	/^    enableiOES(target: GLenum, index: GLuint): void;$/;"	m	interface:OES_draw_buffers_indexed
encode	tsvscode.ts	/^    encode(frame: VideoFrame, options?: VideoEncoderEncodeOptions): void;$/;"	m	interface:VideoEncoder
encode	tsvscode.ts	/^    encode(input?: string): Uint8Array;$/;"	m	interface:TextEncoder
encodeInto	tsvscode.ts	/^    encodeInto(source: string, destination: Uint8Array): TextEncoderEncodeIntoResult;$/;"	m	interface:TextEncoder
encodeQueueSize	tsvscode.ts	/^    readonly encodeQueueSize: number;$/;"	p	interface:VideoEncoder
encodedBodySize	tsvscode.ts	/^    readonly encodedBodySize: number;$/;"	p	interface:PerformanceResourceTiming
encoding	tsvscode.ts	/^    encoding: string;$/;"	p	interface:HTMLFormElement
encoding	tsvscode.ts	/^    readonly encoding: string;$/;"	p	interface:TextDecoderCommon
encoding	tsvscode.ts	/^    readonly encoding: string;$/;"	p	interface:TextEncoderCommon
encodingInfo	tsvscode.ts	/^    encodingInfo(configuration: MediaEncodingConfiguration): Promise<MediaCapabilitiesEncodingIn/;"	m	interface:MediaCapabilities
encodings	tsvscode.ts	/^    encodings: RTCRtpEncodingParameters[];$/;"	p	interface:RTCRtpSendParameters
encrypt	tsvscode.ts	/^    encrypt(algorithm: AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGc/;"	m	interface:SubtleCrypto
encrypted	tsvscode.ts	/^    encrypted?: boolean;$/;"	p	interface:RTCRtpHeaderExtensionParameters
encryptionScheme	tsvscode.ts	/^    encryptionScheme?: string | null;$/;"	p	interface:MediaKeySystemMediaCapability
enctype	tsvscode.ts	/^    enctype: string;$/;"	p	interface:HTMLFormElement
end	tsvscode.ts	/^    end(index: number): number;$/;"	m	interface:TimeRanges
end	tsvscode.ts	/^    end?: string | DOMHighResTimeStamp;$/;"	p	interface:PerformanceMeasureOptions
endContainer	tsvscode.ts	/^    endContainer: Node;$/;"	p	interface:StaticRangeInit
endContainer	tsvscode.ts	/^    readonly endContainer: Node;$/;"	p	interface:AbstractRange
endDelay	tsvscode.ts	/^    endDelay?: number;$/;"	p	interface:EffectTiming
endDelay	tsvscode.ts	/^    endDelay?: number;$/;"	p	interface:OptionalEffectTiming
endElement	tsvscode.ts	/^    endElement(): void;$/;"	m	interface:SVGAnimationElement
endElementAt	tsvscode.ts	/^    endElementAt(offset: number): void;$/;"	m	interface:SVGAnimationElement
endOfStream	tsvscode.ts	/^    endOfStream(error?: EndOfStreamError): void;$/;"	m	interface:MediaSource
endOffset	tsvscode.ts	/^    endOffset: number;$/;"	p	interface:StaticRangeInit
endOffset	tsvscode.ts	/^    readonly endOffset: number;$/;"	p	interface:AbstractRange
endQuery	tsvscode.ts	/^    endQuery(target: GLenum): void;$/;"	m	interface:WebGL2RenderingContextBase
endTime	tsvscode.ts	/^    endTime: number;$/;"	p	interface:TextTrackCue
endTime	tsvscode.ts	/^    endTime?: CSSNumberish;$/;"	p	interface:ComputedEffectTiming
endTransformFeedback	tsvscode.ts	/^    endTransformFeedback(): void;$/;"	m	interface:WebGL2RenderingContextBase
ended	tsvscode.ts	/^    readonly ended: boolean;$/;"	p	interface:HTMLMediaElement
endings	tsvscode.ts	/^    endings?: EndingType;$/;"	p	interface:BlobPropertyBag
endpoint	tsvscode.ts	/^    endpoint?: string;$/;"	p	interface:PushSubscriptionJSON
endpoint	tsvscode.ts	/^    readonly endpoint: string;$/;"	p	interface:PushSubscription
enqueue	tsvscode.ts	/^    enqueue(chunk: ArrayBufferView): void;$/;"	m	interface:ReadableByteStreamController
enqueue	tsvscode.ts	/^    enqueue(chunk?: O): void;$/;"	m	interface:TransformStreamDefaultController
enqueue	tsvscode.ts	/^    enqueue(chunk?: R): void;$/;"	m	interface:ReadableStreamDefaultController
enterKeyHint	tsvscode.ts	/^    enterKeyHint: string;$/;"	p	interface:ElementContentEditable
entryType	tsvscode.ts	/^    readonly entryType: string;$/;"	p	interface:PerformanceEntry
entryTypes	tsvscode.ts	/^    entryTypes?: string[];$/;"	p	interface:PerformanceObserverInit
enumerable	ests.ts	/^    enumerable?: boolean;$/;"	p	interface:PropertyDescriptor
enumerable	ests.ts	/^    enumerable?: boolean;$/;"	p	interface:TypedPropertyDescriptor
enumerateDevices	tsvscode.ts	/^    enumerateDevices(): Promise<MediaDeviceInfo[]>;$/;"	m	interface:MediaDevices
equals	tsvscode.ts	/^    equals(...value: CSSNumberish[]): boolean;$/;"	m	interface:CSSNumericValue
era	ests.ts	/^        era?: "long" | "short" | "narrow" | undefined;$/;"	p	interface:Intl.DateTimeFormatOptions
era	ests.ts	/^        era?: string;$/;"	p	interface:Intl.ResolvedDateTimeFormatOptions
error	tsvscode.ts	/^    error(): Response;$/;"	v
error	tsvscode.ts	/^    error(...data: any[]): void;$/;"	m	interface:Console
error	tsvscode.ts	/^    error(e?: any): void;$/;"	m	interface:ReadableByteStreamController
error	tsvscode.ts	/^    error(e?: any): void;$/;"	m	interface:ReadableStreamDefaultController
error	tsvscode.ts	/^    error(e?: any): void;$/;"	m	interface:WritableStreamDefaultController
error	tsvscode.ts	/^    error(reason?: any): void;$/;"	m	interface:TransformStreamDefaultController
error	tsvscode.ts	/^    error: RTCError;$/;"	p	interface:RTCErrorEventInit
error	tsvscode.ts	/^    error: SpeechSynthesisErrorCode;$/;"	p	interface:SpeechSynthesisErrorEventInit
error	tsvscode.ts	/^    error: WebCodecsErrorCallback;$/;"	p	interface:VideoDecoderInit
error	tsvscode.ts	/^    error: WebCodecsErrorCallback;$/;"	p	interface:VideoEncoderInit
error	tsvscode.ts	/^    error?: any;$/;"	p	interface:ErrorEventInit
error	tsvscode.ts	/^    error?: string;$/;"	p	interface:PaymentValidationErrors
error	tsvscode.ts	/^    readonly error: DOMException | null;$/;"	p	interface:FileReader
error	tsvscode.ts	/^    readonly error: DOMException | null;$/;"	p	interface:IDBRequest
error	tsvscode.ts	/^    readonly error: DOMException | null;$/;"	p	interface:IDBTransaction
error	tsvscode.ts	/^    readonly error: MediaError | null;$/;"	p	interface:HTMLMediaElement
error	tsvscode.ts	/^    readonly error: RTCError;$/;"	p	interface:RTCErrorEvent
error	tsvscode.ts	/^    readonly error: SpeechSynthesisErrorCode;$/;"	p	interface:SpeechSynthesisErrorEvent
error	tsvscode.ts	/^    readonly error: any;$/;"	p	interface:ErrorEvent
errorCode	tsvscode.ts	/^    errorCode: number;$/;"	p	interface:RTCPeerConnectionIceErrorEventInit
errorCode	tsvscode.ts	/^    readonly errorCode: number;$/;"	p	interface:RTCPeerConnectionIceErrorEvent
errorDetail	tsvscode.ts	/^    errorDetail: RTCErrorDetailType;$/;"	p	interface:RTCErrorInit
errorDetail	tsvscode.ts	/^    readonly errorDetail: RTCErrorDetailType;$/;"	p	interface:RTCError
errorText	tsvscode.ts	/^    errorText?: string;$/;"	p	interface:RTCPeerConnectionIceErrorEventInit
errorText	tsvscode.ts	/^    readonly errorText: string;$/;"	p	interface:RTCPeerConnectionIceErrorEvent
estimate	tsvscode.ts	/^    estimate(): Promise<StorageEstimate>;$/;"	m	interface:StorageManager
estimatedPlayoutTimestamp	tsvscode.ts	/^    estimatedPlayoutTimestamp?: DOMHighResTimeStamp;$/;"	p	interface:RTCInboundRtpStreamStats
eval	ests.ts	/^declare function eval(x: string): any;$/;"	f
evaluate	tsvscode.ts	/^    evaluate(contextNode: Node, type?: number, result?: XPathResult | null): XPathResult;$/;"	m	interface:XPathExpression
evaluate	tsvscode.ts	/^    evaluate(expression: string, contextNode: Node, resolver?: XPathNSResolver | null, type?: nu/;"	m	interface:XPathEvaluatorBase
event	tsvscode.ts	/^    event: string;$/;"	p	interface:HTMLScriptElement
event	tsvscode.ts	/^    readonly event: Event | undefined;$/;"	p	interface:Window
event	tsvscode.ts	/^declare var event: Event | undefined;$/;"	v	namespace:CSS
eventCounts	tsvscode.ts	/^    readonly eventCounts: EventCounts;$/;"	p	interface:Performance
eventPhase	tsvscode.ts	/^    readonly eventPhase: number;$/;"	p	interface:Event
every	ests.ts	/^    every(predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): boolean;$/;"	m	interface:Array
every	ests.ts	/^    every(predicate: (value: T, index: number, array: readonly T[]) => unknown, thisArg?: any): /;"	m	interface:ReadonlyArray
every	ests.ts	/^    every(predicate: (value: number, index: number, array: Float32Array) => unknown, thisArg?: a/;"	m	interface:Float32Array
every	ests.ts	/^    every(predicate: (value: number, index: number, array: Float64Array) => unknown, thisArg?: a/;"	m	interface:Float64Array
every	ests.ts	/^    every(predicate: (value: number, index: number, array: Int16Array) => unknown, thisArg?: any/;"	m	interface:Int16Array
every	ests.ts	/^    every(predicate: (value: number, index: number, array: Int32Array) => unknown, thisArg?: any/;"	m	interface:Int32Array
every	ests.ts	/^    every(predicate: (value: number, index: number, array: Int8Array) => unknown, thisArg?: any)/;"	m	interface:Int8Array
every	ests.ts	/^    every(predicate: (value: number, index: number, array: Uint16Array) => unknown, thisArg?: an/;"	m	interface:Uint16Array
every	ests.ts	/^    every(predicate: (value: number, index: number, array: Uint32Array) => unknown, thisArg?: an/;"	m	interface:Uint32Array
every	ests.ts	/^    every(predicate: (value: number, index: number, array: Uint8Array) => unknown, thisArg?: any/;"	m	interface:Uint8Array
every	ests.ts	/^    every(predicate: (value: number, index: number, array: Uint8ClampedArray) => unknown, thisAr/;"	m	interface:Uint8ClampedArray
every	ests.ts	/^    every<S extends T>(predicate: (value: T, index: number, array: T[]) => value is S, thisArg?:/;"	m	interface:Array
every	ests.ts	/^    every<S extends T>(predicate: (value: T, index: number, array: readonly T[]) => value is S, /;"	m	interface:ReadonlyArray
exact	tsvscode.ts	/^    exact?: boolean;$/;"	p	interface:ConstrainBooleanParameters
exact	tsvscode.ts	/^    exact?: number;$/;"	p	interface:ConstrainDoubleRange
exact	tsvscode.ts	/^    exact?: number;$/;"	p	interface:ConstrainULongRange
exact	tsvscode.ts	/^    exact?: string | string[];$/;"	p	interface:ConstrainDOMStringParameters
excludeCredentials	tsvscode.ts	/^    excludeCredentials?: PublicKeyCredentialDescriptor[];$/;"	p	interface:PublicKeyCredentialCreationOptions
exclusive	tsvscode.ts	/^    exclusive?: boolean;$/;"	p	interface:FileSystemFlags
exec	ests.ts	/^    exec(string: string): RegExpExecArray | null;$/;"	m	interface:RegExp
execCommand	tsvscode.ts	/^    execCommand(commandId: string, showUI?: boolean, value?: string): boolean;$/;"	m	interface:Document
exitFullscreen	tsvscode.ts	/^    exitFullscreen(): Promise<void>;$/;"	m	interface:Document
exitPictureInPicture	tsvscode.ts	/^    exitPictureInPicture(): Promise<void>;$/;"	m	interface:Document
exitPointerLock	tsvscode.ts	/^    exitPointerLock(): void;$/;"	m	interface:Document
exp	ests.ts	/^    exp(x: number): number;$/;"	m	interface:Math
expectedDisplayTime	tsvscode.ts	/^    expectedDisplayTime: DOMHighResTimeStamp;$/;"	p	interface:VideoFrameCallbackMetadata
expiration	tsvscode.ts	/^    readonly expiration: number;$/;"	p	interface:MediaKeySession
expirationTime	tsvscode.ts	/^    expirationTime?: EpochTimeStamp | null;$/;"	p	interface:PushSubscriptionJSON
expirationTime	tsvscode.ts	/^    readonly expirationTime: EpochTimeStamp | null;$/;"	p	interface:PushSubscription
expires	tsvscode.ts	/^    expires?: number;$/;"	p	interface:RTCCertificateExpiration
expires	tsvscode.ts	/^    readonly expires: EpochTimeStamp;$/;"	p	interface:RTCCertificate
exponent	tsvscode.ts	/^    readonly exponent: SVGAnimatedNumber;$/;"	p	interface:SVGComponentTransferFunctionElement
exponentialRampToValueAtTime	tsvscode.ts	/^    exponentialRampToValueAtTime(value: number, endTime: number): AudioParam;$/;"	m	interface:AudioParam
exportKey	tsvscode.ts	/^    exportKey(format: "jwk", key: CryptoKey): Promise<JsonWebKey>;$/;"	m	interface:SubtleCrypto
exportKey	tsvscode.ts	/^    exportKey(format: Exclude<KeyFormat, "jwk">, key: CryptoKey): Promise<ArrayBuffer>;$/;"	m	interface:SubtleCrypto
exportKey	tsvscode.ts	/^    exportKey(format: KeyFormat, key: CryptoKey): Promise<ArrayBuffer | JsonWebKey>;$/;"	m	interface:SubtleCrypto
ext	tsvscode.ts	/^    ext?: boolean;$/;"	p	interface:JsonWebKey
extend	tsvscode.ts	/^    extend(node: Node, offset?: number): void;$/;"	m	interface:Selection
extends	tsvscode.ts	/^    extends?: string;$/;"	p	interface:ElementDefinitionOptions
extensions	tsvscode.ts	/^    extensions?: AuthenticationExtensionsClientInputs;$/;"	p	interface:PublicKeyCredentialCreationOptions
extensions	tsvscode.ts	/^    extensions?: AuthenticationExtensionsClientInputs;$/;"	p	interface:PublicKeyCredentialRequestOptions
extensions	tsvscode.ts	/^    readonly extensions: string;$/;"	p	interface:WebSocket
external	tsvscode.ts	/^    readonly external: External;$/;"	p	interface:Window
external	tsvscode.ts	/^declare var external: External;$/;"	v	namespace:CSS
extractContents	tsvscode.ts	/^    extractContents(): DocumentFragment;$/;"	m	interface:Range
extractable	tsvscode.ts	/^    readonly extractable: boolean;$/;"	p	interface:CryptoKey
f	tsvscode.ts	/^    f: number;$/;"	p	interface:DOMMatrix
f	tsvscode.ts	/^    f?: number;$/;"	p	interface:DOMMatrix2DInit
f	tsvscode.ts	/^    readonly f: number;$/;"	p	interface:DOMMatrixReadOnly
face	tsvscode.ts	/^    face: string;$/;"	p	interface:HTMLFontElement
facingMode	tsvscode.ts	/^    facingMode?: ConstrainDOMString;$/;"	p	interface:MediaTrackConstraintSet
facingMode	tsvscode.ts	/^    facingMode?: boolean;$/;"	p	interface:MediaTrackSupportedConstraints
facingMode	tsvscode.ts	/^    facingMode?: string;$/;"	p	interface:MediaTrackSettings
facingMode	tsvscode.ts	/^    facingMode?: string[];$/;"	p	interface:MediaTrackCapabilities
failIfMajorPerformanceCaveat	tsvscode.ts	/^    failIfMajorPerformanceCaveat?: boolean;$/;"	p	interface:WebGLContextAttributes
fallback	tsvscode.ts	/^    fallback: string;$/;"	p	interface:CSSCounterStyleRule
fallback	tsvscode.ts	/^    readonly fallback: CSSUnparsedValue | null;$/;"	p	interface:CSSVariableReferenceValue
family	tsvscode.ts	/^    family: string;$/;"	p	interface:FontFace
fastSeek	tsvscode.ts	/^    fastSeek(time: number): void;$/;"	m	interface:HTMLMediaElement
fastSeek	tsvscode.ts	/^    fastSeek?: boolean;$/;"	p	interface:MediaSessionActionDetails
fatal	tsvscode.ts	/^    fatal?: boolean;$/;"	p	interface:TextDecoderOptions
fatal	tsvscode.ts	/^    readonly fatal: boolean;$/;"	p	interface:TextDecoderCommon
featureSettings	tsvscode.ts	/^    featureSettings: string;$/;"	p	interface:FontFace
featureSettings	tsvscode.ts	/^    featureSettings?: string;$/;"	p	interface:FontFaceDescriptors
fecPacketsDiscarded	tsvscode.ts	/^    fecPacketsDiscarded?: number;$/;"	p	interface:RTCInboundRtpStreamStats
fecPacketsReceived	tsvscode.ts	/^    fecPacketsReceived?: number;$/;"	p	interface:RTCInboundRtpStreamStats
feedback	tsvscode.ts	/^    feedback: number[];$/;"	p	interface:IIRFilterOptions
feedforward	tsvscode.ts	/^    feedforward: number[];$/;"	p	interface:IIRFilterOptions
fenceSync	tsvscode.ts	/^    fenceSync(condition: GLenum, flags: GLbitfield): WebGLSync | null;$/;"	m	interface:WebGL2RenderingContextBase
fetch	tsvscode.ts	/^    fetch(input: RequestInfo | URL, init?: RequestInit): Promise<Response>;$/;"	m	interface:WindowOrWorkerGlobalScope
fetchPriority	tsvscode.ts	/^    fetchPriority: string;$/;"	p	interface:HTMLImageElement
fetchPriority	tsvscode.ts	/^    fetchPriority: string;$/;"	p	interface:HTMLLinkElement
fetchPriority	tsvscode.ts	/^    fetchPriority: string;$/;"	p	interface:HTMLScriptElement
fetchStart	tsvscode.ts	/^    readonly fetchStart: DOMHighResTimeStamp;$/;"	p	interface:PerformanceResourceTiming
fetchStart	tsvscode.ts	/^    readonly fetchStart: number;$/;"	p	interface:PerformanceTiming
fftSize	tsvscode.ts	/^    fftSize: number;$/;"	p	interface:AnalyserNode
fftSize	tsvscode.ts	/^    fftSize?: number;$/;"	p	interface:AnalyserOptions
fgColor	tsvscode.ts	/^    fgColor: string;$/;"	p	interface:Document
file	tsvscode.ts	/^    file(successCallback: FileCallback, errorCallback?: ErrorCallback): void;$/;"	m	interface:FileSystemFileEntry
filename	tsvscode.ts	/^    filename?: string;$/;"	p	interface:ErrorEventInit
filename	tsvscode.ts	/^    readonly filename: string;$/;"	p	interface:ErrorEvent
filename	tsvscode.ts	/^    readonly filename: string;$/;"	p	interface:Plugin
files	tsvscode.ts	/^    files: FileList | null;$/;"	p	interface:HTMLInputElement
files	tsvscode.ts	/^    files?: File[];$/;"	p	interface:ShareData
files	tsvscode.ts	/^    readonly files: FileList;$/;"	p	interface:DataTransfer
filesystem	tsvscode.ts	/^    readonly filesystem: FileSystem;$/;"	p	interface:FileSystemEntry
fill	ests.ts	/^    fill(value: number, start?: number, end?: number): this;$/;"	m	interface:Float32Array
fill	ests.ts	/^    fill(value: number, start?: number, end?: number): this;$/;"	m	interface:Float64Array
fill	ests.ts	/^    fill(value: number, start?: number, end?: number): this;$/;"	m	interface:Int16Array
fill	ests.ts	/^    fill(value: number, start?: number, end?: number): this;$/;"	m	interface:Int32Array
fill	ests.ts	/^    fill(value: number, start?: number, end?: number): this;$/;"	m	interface:Int8Array
fill	ests.ts	/^    fill(value: number, start?: number, end?: number): this;$/;"	m	interface:Uint16Array
fill	ests.ts	/^    fill(value: number, start?: number, end?: number): this;$/;"	m	interface:Uint32Array
fill	ests.ts	/^    fill(value: number, start?: number, end?: number): this;$/;"	m	interface:Uint8Array
fill	ests.ts	/^    fill(value: number, start?: number, end?: number): this;$/;"	m	interface:Uint8ClampedArray
fill	tsvscode.ts	/^    fill(fillRule?: CanvasFillRule): void;$/;"	m	interface:CanvasDrawPath
fill	tsvscode.ts	/^    fill(path: Path2D, fillRule?: CanvasFillRule): void;$/;"	m	interface:CanvasDrawPath
fill	tsvscode.ts	/^    fill: string;$/;"	p	interface:CSSStyleDeclaration
fill	tsvscode.ts	/^    fill?: FillMode;$/;"	p	interface:EffectTiming
fill	tsvscode.ts	/^    fill?: FillMode;$/;"	p	interface:OptionalEffectTiming
fill	tsvscode.ts	/^    fill?: boolean;$/;"	p	interface:SVGBoundingBoxOptions
fillOpacity	tsvscode.ts	/^    fillOpacity: string;$/;"	p	interface:CSSStyleDeclaration
fillRect	tsvscode.ts	/^    fillRect(x: number, y: number, w: number, h: number): void;$/;"	m	interface:CanvasRect
fillRule	tsvscode.ts	/^    fillRule: string;$/;"	p	interface:CSSStyleDeclaration
fillStyle	tsvscode.ts	/^    fillStyle: string | CanvasGradient | CanvasPattern;$/;"	p	interface:CanvasFillStrokeStyles
fillText	tsvscode.ts	/^    fillText(text: string, x: number, y: number, maxWidth?: number): void;$/;"	m	interface:CanvasText
filter	ests.ts	/^    filter(predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): T[];$/;"	m	interface:Array
filter	ests.ts	/^    filter(predicate: (value: T, index: number, array: readonly T[]) => unknown, thisArg?: any):/;"	m	interface:ReadonlyArray
filter	ests.ts	/^    filter(predicate: (value: number, index: number, array: Float32Array) => any, thisArg?: any)/;"	m	interface:Float32Array
filter	ests.ts	/^    filter(predicate: (value: number, index: number, array: Float64Array) => any, thisArg?: any)/;"	m	interface:Float64Array
filter	ests.ts	/^    filter(predicate: (value: number, index: number, array: Int16Array) => any, thisArg?: any): /;"	m	interface:Int16Array
filter	ests.ts	/^    filter(predicate: (value: number, index: number, array: Int32Array) => any, thisArg?: any): /;"	m	interface:Int32Array
filter	ests.ts	/^    filter(predicate: (value: number, index: number, array: Int8Array) => any, thisArg?: any): I/;"	m	interface:Int8Array
filter	ests.ts	/^    filter(predicate: (value: number, index: number, array: Uint16Array) => any, thisArg?: any):/;"	m	interface:Uint16Array
filter	ests.ts	/^    filter(predicate: (value: number, index: number, array: Uint32Array) => any, thisArg?: any):/;"	m	interface:Uint32Array
filter	ests.ts	/^    filter(predicate: (value: number, index: number, array: Uint8Array) => any, thisArg?: any): /;"	m	interface:Uint8Array
filter	ests.ts	/^    filter(predicate: (value: number, index: number, array: Uint8ClampedArray) => any, thisArg?:/;"	m	interface:Uint8ClampedArray
filter	ests.ts	/^    filter<S extends T>(predicate: (value: T, index: number, array: T[]) => value is S, thisArg?/;"	m	interface:Array
filter	ests.ts	/^    filter<S extends T>(predicate: (value: T, index: number, array: readonly T[]) => value is S,/;"	m	interface:ReadonlyArray
filter	tsvscode.ts	/^    filter: string;$/;"	p	interface:CSSStyleDeclaration
filter	tsvscode.ts	/^    filter: string;$/;"	p	interface:CanvasFilters
filter	tsvscode.ts	/^    readonly filter: NodeFilter | null;$/;"	p	interface:NodeIterator
filter	tsvscode.ts	/^    readonly filter: NodeFilter | null;$/;"	p	interface:TreeWalker
filterUnits	tsvscode.ts	/^    readonly filterUnits: SVGAnimatedEnumeration;$/;"	p	interface:SVGFilterElement
find	ests.ts	/^    find(predicate: (value: number, index: number, obj: Float32Array) => boolean, thisArg?: any)/;"	m	interface:Float32Array
find	ests.ts	/^    find(predicate: (value: number, index: number, obj: Float64Array) => boolean, thisArg?: any)/;"	m	interface:Float64Array
find	ests.ts	/^    find(predicate: (value: number, index: number, obj: Int16Array) => boolean, thisArg?: any): /;"	m	interface:Int16Array
find	ests.ts	/^    find(predicate: (value: number, index: number, obj: Int32Array) => boolean, thisArg?: any): /;"	m	interface:Int32Array
find	ests.ts	/^    find(predicate: (value: number, index: number, obj: Int8Array) => boolean, thisArg?: any): n/;"	m	interface:Int8Array
find	ests.ts	/^    find(predicate: (value: number, index: number, obj: Uint16Array) => boolean, thisArg?: any):/;"	m	interface:Uint16Array
find	ests.ts	/^    find(predicate: (value: number, index: number, obj: Uint32Array) => boolean, thisArg?: any):/;"	m	interface:Uint32Array
find	ests.ts	/^    find(predicate: (value: number, index: number, obj: Uint8Array) => boolean, thisArg?: any): /;"	m	interface:Uint8Array
find	ests.ts	/^    find(predicate: (value: number, index: number, obj: Uint8ClampedArray) => boolean, thisArg?:/;"	m	interface:Uint8ClampedArray
findIndex	ests.ts	/^    findIndex(predicate: (value: number, index: number, obj: Float32Array) => boolean, thisArg?:/;"	m	interface:Float32Array
findIndex	ests.ts	/^    findIndex(predicate: (value: number, index: number, obj: Float64Array) => boolean, thisArg?:/;"	m	interface:Float64Array
findIndex	ests.ts	/^    findIndex(predicate: (value: number, index: number, obj: Int16Array) => boolean, thisArg?: a/;"	m	interface:Int16Array
findIndex	ests.ts	/^    findIndex(predicate: (value: number, index: number, obj: Int32Array) => boolean, thisArg?: a/;"	m	interface:Int32Array
findIndex	ests.ts	/^    findIndex(predicate: (value: number, index: number, obj: Int8Array) => boolean, thisArg?: an/;"	m	interface:Int8Array
findIndex	ests.ts	/^    findIndex(predicate: (value: number, index: number, obj: Uint16Array) => boolean, thisArg?: /;"	m	interface:Uint16Array
findIndex	ests.ts	/^    findIndex(predicate: (value: number, index: number, obj: Uint32Array) => boolean, thisArg?: /;"	m	interface:Uint32Array
findIndex	ests.ts	/^    findIndex(predicate: (value: number, index: number, obj: Uint8Array) => boolean, thisArg?: a/;"	m	interface:Uint8Array
findIndex	ests.ts	/^    findIndex(predicate: (value: number, index: number, obj: Uint8ClampedArray) => boolean, this/;"	m	interface:Uint8ClampedArray
findRule	tsvscode.ts	/^    findRule(select: string): CSSKeyframeRule | null;$/;"	m	interface:CSSKeyframesRule
finish	tsvscode.ts	/^    finish(): void;$/;"	m	interface:Animation
finish	tsvscode.ts	/^    finish(): void;$/;"	m	interface:WebGLRenderingContextBase
finished	tsvscode.ts	/^    readonly finished: Promise<Animation>;$/;"	p	interface:Animation
firCount	tsvscode.ts	/^    firCount?: number;$/;"	p	interface:RTCInboundRtpStreamStats
firCount	tsvscode.ts	/^    firCount?: number;$/;"	p	interface:RTCOutboundRtpStreamStats
firstChild	tsvscode.ts	/^    firstChild(): Node | null;$/;"	m	interface:TreeWalker
firstChild	tsvscode.ts	/^    readonly firstChild: ChildNode | null;$/;"	p	interface:Node
firstElementChild	tsvscode.ts	/^    readonly firstElementChild: Element | null;$/;"	p	interface:ParentNode
flatten	tsvscode.ts	/^    flatten?: boolean;$/;"	p	interface:AssignedNodesOptions
flex	tsvscode.ts	/^    flex: string;$/;"	p	interface:CSSStyleDeclaration
flex	tsvscode.ts	/^    flex?: number;$/;"	p	interface:CSSNumericType
flexBasis	tsvscode.ts	/^    flexBasis: string;$/;"	p	interface:CSSStyleDeclaration
flexDirection	tsvscode.ts	/^    flexDirection: string;$/;"	p	interface:CSSStyleDeclaration
flexFlow	tsvscode.ts	/^    flexFlow: string;$/;"	p	interface:CSSStyleDeclaration
flexGrow	tsvscode.ts	/^    flexGrow: string;$/;"	p	interface:CSSStyleDeclaration
flexShrink	tsvscode.ts	/^    flexShrink: string;$/;"	p	interface:CSSStyleDeclaration
flexWrap	tsvscode.ts	/^    flexWrap: string;$/;"	p	interface:CSSStyleDeclaration
flipX	tsvscode.ts	/^    flipX(): DOMMatrix;$/;"	m	interface:DOMMatrixReadOnly
flipY	tsvscode.ts	/^    flipY(): DOMMatrix;$/;"	m	interface:DOMMatrixReadOnly
float	tsvscode.ts	/^    float: string;$/;"	p	interface:CSSStyleDeclaration
floodColor	tsvscode.ts	/^    floodColor: string;$/;"	p	interface:CSSStyleDeclaration
floodOpacity	tsvscode.ts	/^    floodOpacity: string;$/;"	p	interface:CSSStyleDeclaration
floor	ests.ts	/^    floor(x: number): number;$/;"	m	interface:Math
flush	tsvscode.ts	/^    flush(): Promise<void>;$/;"	m	interface:VideoDecoder
flush	tsvscode.ts	/^    flush(): Promise<void>;$/;"	m	interface:VideoEncoder
flush	tsvscode.ts	/^    flush(): void;$/;"	m	interface:WebGLRenderingContextBase
flush	tsvscode.ts	/^    flush?: TransformerFlushCallback<O>;$/;"	p	interface:Transformer
focus	tsvscode.ts	/^    focus(): void;$/;"	m	interface:Window
focus	tsvscode.ts	/^    focus(options?: FocusOptions): void;$/;"	m	interface:HTMLOrSVGElement
focusNode	tsvscode.ts	/^    readonly focusNode: Node | null;$/;"	p	interface:Selection
focusOffset	tsvscode.ts	/^    readonly focusOffset: number;$/;"	p	interface:Selection
font	tsvscode.ts	/^    font: string;$/;"	p	interface:CSSStyleDeclaration
font	tsvscode.ts	/^    font: string;$/;"	p	interface:CanvasTextDrawingStyles
fontBoundingBoxAscent	tsvscode.ts	/^    readonly fontBoundingBoxAscent: number;$/;"	p	interface:TextMetrics
fontBoundingBoxDescent	tsvscode.ts	/^    readonly fontBoundingBoxDescent: number;$/;"	p	interface:TextMetrics
fontFamily	tsvscode.ts	/^    fontFamily: string;$/;"	p	interface:CSSFontFeatureValuesRule
fontFamily	tsvscode.ts	/^    fontFamily: string;$/;"	p	interface:CSSStyleDeclaration
fontFamily	tsvscode.ts	/^    readonly fontFamily: string;$/;"	p	interface:CSSFontPaletteValuesRule
fontFeatureSettings	tsvscode.ts	/^    fontFeatureSettings: string;$/;"	p	interface:CSSStyleDeclaration
fontKerning	tsvscode.ts	/^    fontKerning: CanvasFontKerning;$/;"	p	interface:CanvasTextDrawingStyles
fontKerning	tsvscode.ts	/^    fontKerning: string;$/;"	p	interface:CSSStyleDeclaration
fontOpticalSizing	tsvscode.ts	/^    fontOpticalSizing: string;$/;"	p	interface:CSSStyleDeclaration
fontPalette	tsvscode.ts	/^    fontPalette: string;$/;"	p	interface:CSSStyleDeclaration
fontSize	tsvscode.ts	/^    fontSize: string;$/;"	p	interface:CSSStyleDeclaration
fontSizeAdjust	tsvscode.ts	/^    fontSizeAdjust: string;$/;"	p	interface:CSSStyleDeclaration
fontStretch	tsvscode.ts	/^    fontStretch: CanvasFontStretch;$/;"	p	interface:CanvasTextDrawingStyles
fontStretch	tsvscode.ts	/^    fontStretch: string;$/;"	p	interface:CSSStyleDeclaration
fontStyle	tsvscode.ts	/^    fontStyle: string;$/;"	p	interface:CSSStyleDeclaration
fontSynthesis	tsvscode.ts	/^    fontSynthesis: string;$/;"	p	interface:CSSStyleDeclaration
fontSynthesisSmallCaps	tsvscode.ts	/^    fontSynthesisSmallCaps: string;$/;"	p	interface:CSSStyleDeclaration
fontSynthesisStyle	tsvscode.ts	/^    fontSynthesisStyle: string;$/;"	p	interface:CSSStyleDeclaration
fontSynthesisWeight	tsvscode.ts	/^    fontSynthesisWeight: string;$/;"	p	interface:CSSStyleDeclaration
fontVariant	tsvscode.ts	/^    fontVariant: string;$/;"	p	interface:CSSStyleDeclaration
fontVariantAlternates	tsvscode.ts	/^    fontVariantAlternates: string;$/;"	p	interface:CSSStyleDeclaration
fontVariantCaps	tsvscode.ts	/^    fontVariantCaps: CanvasFontVariantCaps;$/;"	p	interface:CanvasTextDrawingStyles
fontVariantCaps	tsvscode.ts	/^    fontVariantCaps: string;$/;"	p	interface:CSSStyleDeclaration
fontVariantEastAsian	tsvscode.ts	/^    fontVariantEastAsian: string;$/;"	p	interface:CSSStyleDeclaration
fontVariantLigatures	tsvscode.ts	/^    fontVariantLigatures: string;$/;"	p	interface:CSSStyleDeclaration
fontVariantNumeric	tsvscode.ts	/^    fontVariantNumeric: string;$/;"	p	interface:CSSStyleDeclaration
fontVariantPosition	tsvscode.ts	/^    fontVariantPosition: string;$/;"	p	interface:CSSStyleDeclaration
fontVariationSettings	tsvscode.ts	/^    fontVariationSettings: string;$/;"	p	interface:CSSStyleDeclaration
fontWeight	tsvscode.ts	/^    fontWeight: string;$/;"	p	interface:CSSStyleDeclaration
fontfaces	tsvscode.ts	/^    fontfaces?: FontFace[];$/;"	p	interface:FontFaceSetLoadEventInit
fontfaces	tsvscode.ts	/^    readonly fontfaces: ReadonlyArray<FontFace>;$/;"	p	interface:FontFaceSetLoadEvent
fonts	tsvscode.ts	/^    readonly fonts: FontFaceSet;$/;"	p	interface:FontFaceSource
forEach	ests.ts	/^    forEach(callbackfn: (value: T, index: number, array: T[]) => void, thisArg?: any): void;$/;"	m	interface:Array
forEach	ests.ts	/^    forEach(callbackfn: (value: T, index: number, array: readonly T[]) => void, thisArg?: any): /;"	m	interface:ReadonlyArray
forEach	ests.ts	/^    forEach(callbackfn: (value: number, index: number, array: Float32Array) => void, thisArg?: a/;"	m	interface:Float32Array
forEach	ests.ts	/^    forEach(callbackfn: (value: number, index: number, array: Float64Array) => void, thisArg?: a/;"	m	interface:Float64Array
forEach	ests.ts	/^    forEach(callbackfn: (value: number, index: number, array: Int16Array) => void, thisArg?: any/;"	m	interface:Int16Array
forEach	ests.ts	/^    forEach(callbackfn: (value: number, index: number, array: Int32Array) => void, thisArg?: any/;"	m	interface:Int32Array
forEach	ests.ts	/^    forEach(callbackfn: (value: number, index: number, array: Int8Array) => void, thisArg?: any)/;"	m	interface:Int8Array
forEach	ests.ts	/^    forEach(callbackfn: (value: number, index: number, array: Uint16Array) => void, thisArg?: an/;"	m	interface:Uint16Array
forEach	ests.ts	/^    forEach(callbackfn: (value: number, index: number, array: Uint32Array) => void, thisArg?: an/;"	m	interface:Uint32Array
forEach	ests.ts	/^    forEach(callbackfn: (value: number, index: number, array: Uint8Array) => void, thisArg?: any/;"	m	interface:Uint8Array
forEach	ests.ts	/^    forEach(callbackfn: (value: number, index: number, array: Uint8ClampedArray) => void, thisAr/;"	m	interface:Uint8ClampedArray
forEach	tsvscode.ts	/^    forEach(callbackfn: (value: AbstractRange, key: AbstractRange, parent: Highlight) => void, t/;"	m	interface:Highlight
forEach	tsvscode.ts	/^    forEach(callbackfn: (value: AudioParam, key: string, parent: AudioParamMap) => void, thisArg/;"	m	interface:AudioParamMap
forEach	tsvscode.ts	/^    forEach(callbackfn: (value: CSSNumericValue, key: number, parent: CSSNumericArray) => void, /;"	m	interface:CSSNumericArray
forEach	tsvscode.ts	/^    forEach(callbackfn: (value: CSSStyleValue[], key: string, parent: StylePropertyMapReadOnly) /;"	m	interface:StylePropertyMapReadOnly
forEach	tsvscode.ts	/^    forEach(callbackfn: (value: CSSTransformComponent, key: number, parent: CSSTransformValue) =/;"	m	interface:CSSTransformValue
forEach	tsvscode.ts	/^    forEach(callbackfn: (value: CSSUnparsedSegment, key: number, parent: CSSUnparsedValue) => vo/;"	m	interface:CSSUnparsedValue
forEach	tsvscode.ts	/^    forEach(callbackfn: (value: FontFace, key: FontFace, parent: FontFaceSet) => void, thisArg?:/;"	m	interface:FontFaceSet
forEach	tsvscode.ts	/^    forEach(callbackfn: (value: FormDataEntryValue, key: string, parent: FormData) => void, this/;"	m	interface:FormData
forEach	tsvscode.ts	/^    forEach(callbackfn: (value: Highlight, key: string, parent: HighlightRegistry) => void, this/;"	m	interface:HighlightRegistry
forEach	tsvscode.ts	/^    forEach(callbackfn: (value: MIDIInput, key: string, parent: MIDIInputMap) => void, thisArg?:/;"	m	interface:MIDIInputMap
forEach	tsvscode.ts	/^    forEach(callbackfn: (value: MIDIOutput, key: string, parent: MIDIOutputMap) => void, thisArg/;"	m	interface:MIDIOutputMap
forEach	tsvscode.ts	/^    forEach(callbackfn: (value: MediaKeyStatus, key: BufferSource, parent: MediaKeyStatusMap) =>/;"	m	interface:MediaKeyStatusMap
forEach	tsvscode.ts	/^    forEach(callbackfn: (value: Node, key: number, parent: NodeList) => void, thisArg?: any): vo/;"	m	interface:NodeList
forEach	tsvscode.ts	/^    forEach(callbackfn: (value: TNode, key: number, parent: NodeListOf<TNode>) => void, thisArg?/;"	m	interface:NodeListOf
forEach	tsvscode.ts	/^    forEach(callbackfn: (value: any, key: string, parent: RTCStatsReport) => void, thisArg?: any/;"	m	interface:RTCStatsReport
forEach	tsvscode.ts	/^    forEach(callbackfn: (value: number, key: string, parent: EventCounts) => void, thisArg?: any/;"	m	interface:EventCounts
forEach	tsvscode.ts	/^    forEach(callbackfn: (value: string, key: number, parent: DOMTokenList) => void, thisArg?: an/;"	m	interface:DOMTokenList
forEach	tsvscode.ts	/^    forEach(callbackfn: (value: string, key: string, parent: Headers) => void, thisArg?: any): v/;"	m	interface:Headers
forEach	tsvscode.ts	/^    forEach(callbackfn: (value: string, key: string, parent: URLSearchParams) => void, thisArg?:/;"	m	interface:URLSearchParams
force	tsvscode.ts	/^    force?: number;$/;"	p	interface:TouchInit
force	tsvscode.ts	/^    readonly force: number;$/;"	p	interface:Touch
forceRedraw	tsvscode.ts	/^    forceRedraw(): void;$/;"	m	interface:SVGSVGElement
forcedColorAdjust	tsvscode.ts	/^    forcedColorAdjust: string;$/;"	p	interface:CSSStyleDeclaration
form	tsvscode.ts	/^    readonly form: HTMLFormElement | null;$/;"	p	interface:ElementInternals
form	tsvscode.ts	/^    readonly form: HTMLFormElement | null;$/;"	p	interface:HTMLButtonElement
form	tsvscode.ts	/^    readonly form: HTMLFormElement | null;$/;"	p	interface:HTMLFieldSetElement
form	tsvscode.ts	/^    readonly form: HTMLFormElement | null;$/;"	p	interface:HTMLInputElement
form	tsvscode.ts	/^    readonly form: HTMLFormElement | null;$/;"	p	interface:HTMLLabelElement
form	tsvscode.ts	/^    readonly form: HTMLFormElement | null;$/;"	p	interface:HTMLLegendElement
form	tsvscode.ts	/^    readonly form: HTMLFormElement | null;$/;"	p	interface:HTMLObjectElement
form	tsvscode.ts	/^    readonly form: HTMLFormElement | null;$/;"	p	interface:HTMLOptionElement
form	tsvscode.ts	/^    readonly form: HTMLFormElement | null;$/;"	p	interface:HTMLOutputElement
form	tsvscode.ts	/^    readonly form: HTMLFormElement | null;$/;"	p	interface:HTMLSelectElement
form	tsvscode.ts	/^    readonly form: HTMLFormElement | null;$/;"	p	interface:HTMLTextAreaElement
formAction	tsvscode.ts	/^    formAction: string;$/;"	p	interface:HTMLButtonElement
formAction	tsvscode.ts	/^    formAction: string;$/;"	p	interface:HTMLInputElement
formData	tsvscode.ts	/^    formData(): Promise<FormData>;$/;"	m	interface:Body
formData	tsvscode.ts	/^    formData: FormData;$/;"	p	interface:FormDataEventInit
formData	tsvscode.ts	/^    readonly formData: FormData;$/;"	p	interface:FormDataEvent
formEnctype	tsvscode.ts	/^    formEnctype: string;$/;"	p	interface:HTMLButtonElement
formEnctype	tsvscode.ts	/^    formEnctype: string;$/;"	p	interface:HTMLInputElement
formMethod	tsvscode.ts	/^    formMethod: string;$/;"	p	interface:HTMLButtonElement
formMethod	tsvscode.ts	/^    formMethod: string;$/;"	p	interface:HTMLInputElement
formNoValidate	tsvscode.ts	/^    formNoValidate: boolean;$/;"	p	interface:HTMLButtonElement
formNoValidate	tsvscode.ts	/^    formNoValidate: boolean;$/;"	p	interface:HTMLInputElement
formTarget	tsvscode.ts	/^    formTarget: string;$/;"	p	interface:HTMLButtonElement
formTarget	tsvscode.ts	/^    formTarget: string;$/;"	p	interface:HTMLInputElement
format	ests.ts	/^        format(date?: Date | number): string;$/;"	m	interface:Intl.DateTimeFormat
format	ests.ts	/^        format(value: number): string;$/;"	m	interface:Intl.NumberFormat
format	tsvscode.ts	/^    format: VideoPixelFormat;$/;"	p	interface:VideoFrameBufferInit
format	tsvscode.ts	/^    format?: AvcBitstreamFormat;$/;"	p	interface:AvcEncoderConfig
format	tsvscode.ts	/^    readonly format: VideoPixelFormat | null;$/;"	p	interface:VideoFrame
formatMatcher	ests.ts	/^        formatMatcher?: "best fit" | "basic" | undefined;$/;"	p	interface:Intl.DateTimeFormatOptions
forms	tsvscode.ts	/^    readonly forms: HTMLCollectionOf<HTMLFormElement>;$/;"	p	interface:Document
forward	tsvscode.ts	/^    forward(): void;$/;"	m	interface:History
forwardX	tsvscode.ts	/^    readonly forwardX: AudioParam;$/;"	p	interface:AudioListener
forwardY	tsvscode.ts	/^    readonly forwardY: AudioParam;$/;"	p	interface:AudioListener
forwardZ	tsvscode.ts	/^    readonly forwardZ: AudioParam;$/;"	p	interface:AudioListener
foundation	tsvscode.ts	/^    readonly foundation: string | null;$/;"	p	interface:RTCIceCandidate
fr	tsvscode.ts	/^    readonly fr: SVGAnimatedLength;$/;"	p	interface:SVGRadialGradientElement
frame	tsvscode.ts	/^    frame: string;$/;"	p	interface:HTMLTableElement
frameBorder	tsvscode.ts	/^    frameBorder: string;$/;"	p	interface:HTMLFrameElement
frameBorder	tsvscode.ts	/^    frameBorder: string;$/;"	p	interface:HTMLIFrameElement
frameElement	tsvscode.ts	/^    readonly frameElement: Element | null;$/;"	p	interface:Window
frameElement	tsvscode.ts	/^declare var frameElement: Element | null;$/;"	v	namespace:CSS
frameHeight	tsvscode.ts	/^    frameHeight?: number;$/;"	p	interface:RTCInboundRtpStreamStats
frameHeight	tsvscode.ts	/^    frameHeight?: number;$/;"	p	interface:RTCOutboundRtpStreamStats
frameId	tsvscode.ts	/^    frameId?: number;$/;"	p	interface:RTCEncodedVideoFrameMetadata
frameRate	tsvscode.ts	/^    frameRate?: ConstrainDouble;$/;"	p	interface:MediaTrackConstraintSet
frameRate	tsvscode.ts	/^    frameRate?: DoubleRange;$/;"	p	interface:MediaTrackCapabilities
frameRate	tsvscode.ts	/^    frameRate?: boolean;$/;"	p	interface:MediaTrackSupportedConstraints
frameRate	tsvscode.ts	/^    frameRate?: number;$/;"	p	interface:MediaTrackSettings
frameWidth	tsvscode.ts	/^    frameWidth?: number;$/;"	p	interface:RTCInboundRtpStreamStats
frameWidth	tsvscode.ts	/^    frameWidth?: number;$/;"	p	interface:RTCOutboundRtpStreamStats
framebufferRenderbuffer	tsvscode.ts	/^    framebufferRenderbuffer(target: GLenum, attachment: GLenum, renderbuffertarget: GLenum, rend/;"	m	interface:WebGLRenderingContextBase
framebufferTexture2D	tsvscode.ts	/^    framebufferTexture2D(target: GLenum, attachment: GLenum, textarget: GLenum, texture: WebGLTe/;"	m	interface:WebGLRenderingContextBase
framebufferTextureLayer	tsvscode.ts	/^    framebufferTextureLayer(target: GLenum, attachment: GLenum, texture: WebGLTexture | null, le/;"	m	interface:WebGL2RenderingContextBase
framebufferTextureMultiviewOVR	tsvscode.ts	/^    framebufferTextureMultiviewOVR(target: GLenum, attachment: GLenum, texture: WebGLTexture | n/;"	m	interface:OVR_multiview2
framerate	tsvscode.ts	/^    framerate: number;$/;"	p	interface:VideoConfiguration
framerate	tsvscode.ts	/^    framerate?: number;$/;"	p	interface:VideoEncoderConfig
frames	tsvscode.ts	/^    readonly frames: WindowProxy;$/;"	p	interface:Window
frames	tsvscode.ts	/^declare var frames: WindowProxy;$/;"	v	namespace:CSS
framesDecoded	tsvscode.ts	/^    framesDecoded?: number;$/;"	p	interface:RTCInboundRtpStreamStats
framesDropped	tsvscode.ts	/^    framesDropped?: number;$/;"	p	interface:RTCInboundRtpStreamStats
framesEncoded	tsvscode.ts	/^    framesEncoded?: number;$/;"	p	interface:RTCOutboundRtpStreamStats
framesPerSecond	tsvscode.ts	/^    framesPerSecond?: number;$/;"	p	interface:RTCInboundRtpStreamStats
framesPerSecond	tsvscode.ts	/^    framesPerSecond?: number;$/;"	p	interface:RTCOutboundRtpStreamStats
framesReceived	tsvscode.ts	/^    framesReceived?: number;$/;"	p	interface:RTCInboundRtpStreamStats
framesSent	tsvscode.ts	/^    framesSent?: number;$/;"	p	interface:RTCOutboundRtpStreamStats
freeze	ests.ts	/^    freeze<T extends Function>(f: T): T;$/;"	m	interface:ObjectConstructor
freeze	ests.ts	/^    freeze<T extends { [idx: string]: U | null | undefined | object; }, U extends string | bigin/;"	m	interface:ObjectConstructor
freeze	ests.ts	/^    freeze<T>(o: T): Readonly<T>;$/;"	m	interface:ObjectConstructor
frequency	tsvscode.ts	/^    frequency?: number;$/;"	p	interface:BiquadFilterOptions
frequency	tsvscode.ts	/^    frequency?: number;$/;"	p	interface:CSSNumericType
frequency	tsvscode.ts	/^    frequency?: number;$/;"	p	interface:OscillatorOptions
frequency	tsvscode.ts	/^    readonly frequency: AudioParam;$/;"	p	interface:BiquadFilterNode
frequency	tsvscode.ts	/^    readonly frequency: AudioParam;$/;"	p	interface:OscillatorNode
frequencyBinCount	tsvscode.ts	/^    readonly frequencyBinCount: number;$/;"	p	interface:AnalyserNode
from	ests.ts	/^    from(arrayLike: ArrayLike<number>): Float32Array;$/;"	m	interface:Float32ArrayConstructor
from	ests.ts	/^    from(arrayLike: ArrayLike<number>): Float64Array;$/;"	m	interface:Float64ArrayConstructor
from	ests.ts	/^    from(arrayLike: ArrayLike<number>): Int16Array;$/;"	m	interface:Int16ArrayConstructor
from	ests.ts	/^    from(arrayLike: ArrayLike<number>): Int32Array;$/;"	m	interface:Int32ArrayConstructor
from	ests.ts	/^    from(arrayLike: ArrayLike<number>): Int8Array;$/;"	m	interface:Int8ArrayConstructor
from	ests.ts	/^    from(arrayLike: ArrayLike<number>): Uint16Array;$/;"	m	interface:Uint16ArrayConstructor
from	ests.ts	/^    from(arrayLike: ArrayLike<number>): Uint32Array;$/;"	m	interface:Uint32ArrayConstructor
from	ests.ts	/^    from(arrayLike: ArrayLike<number>): Uint8Array;$/;"	m	interface:Uint8ArrayConstructor
from	ests.ts	/^    from(arrayLike: ArrayLike<number>): Uint8ClampedArray;$/;"	m	interface:Uint8ClampedArrayConstructor
from	ests.ts	/^    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Float32/;"	m	interface:Float32ArrayConstructor
from	ests.ts	/^    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Float64/;"	m	interface:Float64ArrayConstructor
from	ests.ts	/^    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Int16Ar/;"	m	interface:Int16ArrayConstructor
from	ests.ts	/^    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Int32Ar/;"	m	interface:Int32ArrayConstructor
from	ests.ts	/^    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Int8Arr/;"	m	interface:Int8ArrayConstructor
from	ests.ts	/^    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Uint16A/;"	m	interface:Uint16ArrayConstructor
from	ests.ts	/^    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Uint32A/;"	m	interface:Uint32ArrayConstructor
from	ests.ts	/^    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Uint8Ar/;"	m	interface:Uint8ArrayConstructor
from	ests.ts	/^    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Uint8Cl/;"	m	interface:Uint8ClampedArrayConstructor
fromCharCode	ests.ts	/^    fromCharCode(...codes: number[]): string;$/;"	m	interface:StringConstructor
fromFloat32Array	tsvscode.ts	/^    fromFloat32Array(array32: Float32Array): DOMMatrix;$/;"	v
fromFloat32Array	tsvscode.ts	/^    fromFloat32Array(array32: Float32Array): DOMMatrixReadOnly;$/;"	v
fromFloat64Array	tsvscode.ts	/^    fromFloat64Array(array64: Float64Array): DOMMatrix;$/;"	v
fromFloat64Array	tsvscode.ts	/^    fromFloat64Array(array64: Float64Array): DOMMatrixReadOnly;$/;"	v
fromMatrix	tsvscode.ts	/^    fromMatrix(other?: DOMMatrixInit): DOMMatrix;$/;"	v
fromMatrix	tsvscode.ts	/^    fromMatrix(other?: DOMMatrixInit): DOMMatrixReadOnly;$/;"	v
fromPoint	tsvscode.ts	/^    fromPoint(other?: DOMPointInit): DOMPoint;$/;"	v
fromPoint	tsvscode.ts	/^    fromPoint(other?: DOMPointInit): DOMPointReadOnly;$/;"	v
fromQuad	tsvscode.ts	/^    fromQuad(other?: DOMQuadInit): DOMQuad;$/;"	v
fromRect	tsvscode.ts	/^    fromRect(other?: DOMRectInit): DOMQuad;$/;"	v
fromRect	tsvscode.ts	/^    fromRect(other?: DOMRectInit): DOMRect;$/;"	v
fromRect	tsvscode.ts	/^    fromRect(other?: DOMRectInit): DOMRectReadOnly;$/;"	v
frontFace	tsvscode.ts	/^    frontFace(mode: GLenum): void;$/;"	m	interface:WebGLRenderingContextBase
fullPath	tsvscode.ts	/^    readonly fullPath: string;$/;"	p	interface:FileSystemEntry
fullRange	tsvscode.ts	/^    fullRange?: boolean | null;$/;"	p	interface:VideoColorSpaceInit
fullRange	tsvscode.ts	/^    readonly fullRange: boolean | null;$/;"	p	interface:VideoColorSpace
fullscreen	tsvscode.ts	/^    readonly fullscreen: boolean;$/;"	p	interface:Document
fullscreenElement	tsvscode.ts	/^    readonly fullscreenElement: Element | null;$/;"	p	interface:DocumentOrShadowRoot
fullscreenEnabled	tsvscode.ts	/^    readonly fullscreenEnabled: boolean;$/;"	p	interface:Document
fx	tsvscode.ts	/^    readonly fx: SVGAnimatedLength;$/;"	p	interface:SVGRadialGradientElement
fy	tsvscode.ts	/^    readonly fy: SVGAnimatedLength;$/;"	p	interface:SVGRadialGradientElement
gain	tsvscode.ts	/^    gain?: number;$/;"	p	interface:BiquadFilterOptions
gain	tsvscode.ts	/^    gain?: number;$/;"	p	interface:GainOptions
gain	tsvscode.ts	/^    readonly gain: AudioParam;$/;"	p	interface:BiquadFilterNode
gain	tsvscode.ts	/^    readonly gain: AudioParam;$/;"	p	interface:GainNode
gamepad	tsvscode.ts	/^    gamepad: Gamepad;$/;"	p	interface:GamepadEventInit
gamepad	tsvscode.ts	/^    readonly gamepad: Gamepad;$/;"	p	interface:GamepadEvent
gamma	tsvscode.ts	/^    gamma?: number | null;$/;"	p	interface:DeviceMotionEventRotationRateInit
gamma	tsvscode.ts	/^    gamma?: number | null;$/;"	p	interface:DeviceOrientationEventInit
gamma	tsvscode.ts	/^    readonly gamma: number | null;$/;"	p	interface:DeviceMotionEventRotationRate
gamma	tsvscode.ts	/^    readonly gamma: number | null;$/;"	p	interface:DeviceOrientationEvent
gap	tsvscode.ts	/^    gap: string;$/;"	p	interface:CSSStyleDeclaration
gatheringState	tsvscode.ts	/^    readonly gatheringState: RTCIceGathererState;$/;"	p	interface:RTCIceTransport
generateCertificate	tsvscode.ts	/^    generateCertificate(keygenAlgorithm: AlgorithmIdentifier): Promise<RTCCertificate>;$/;"	v
generateKey	tsvscode.ts	/^    generateKey(algorithm: "Ed25519", extractable: boolean, keyUsages: ReadonlyArray<"sign" | "v/;"	m	interface:SubtleCrypto
generateKey	tsvscode.ts	/^    generateKey(algorithm: AesKeyGenParams | HmacKeyGenParams | Pbkdf2Params, extractable: boole/;"	m	interface:SubtleCrypto
generateKey	tsvscode.ts	/^    generateKey(algorithm: AlgorithmIdentifier, extractable: boolean, keyUsages: KeyUsage[]): Pr/;"	m	interface:SubtleCrypto
generateKey	tsvscode.ts	/^    generateKey(algorithm: RsaHashedKeyGenParams | EcKeyGenParams, extractable: boolean, keyUsag/;"	m	interface:SubtleCrypto
generateMipmap	tsvscode.ts	/^    generateMipmap(target: GLenum): void;$/;"	m	interface:WebGLRenderingContextBase
generateRequest	tsvscode.ts	/^    generateRequest(initDataType: string, initData: BufferSource): Promise<void>;$/;"	m	interface:MediaKeySession
geolocation	tsvscode.ts	/^    readonly geolocation: Geolocation;$/;"	p	interface:Navigator
get	ests.ts	/^    get?(): any;$/;"	m	interface:PropertyDescriptor
get	ests.ts	/^    get?: () => T;$/;"	p	interface:TypedPropertyDescriptor
get	tsvscode.ts	/^    get location(): Location;$/;"	p	interface:Document
get	tsvscode.ts	/^    get location(): Location;$/;"	p	interface:Window
get	tsvscode.ts	/^    get(keyId: BufferSource): MediaKeyStatus | undefined;$/;"	m	interface:MediaKeyStatusMap
get	tsvscode.ts	/^    get(name: string): CustomElementConstructor | undefined;$/;"	m	interface:CustomElementRegistry
get	tsvscode.ts	/^    get(name: string): FormDataEntryValue | null;$/;"	m	interface:FormData
get	tsvscode.ts	/^    get(name: string): string | null;$/;"	m	interface:Headers
get	tsvscode.ts	/^    get(name: string): string | null;$/;"	m	interface:URLSearchParams
get	tsvscode.ts	/^    get(options?: CredentialRequestOptions): Promise<Credential | null>;$/;"	m	interface:CredentialsContainer
get	tsvscode.ts	/^    get(property: string): undefined | CSSStyleValue;$/;"	m	interface:StylePropertyMapReadOnly
get	tsvscode.ts	/^    get(query: IDBValidKey | IDBKeyRange): IDBRequest<any>;$/;"	m	interface:IDBIndex
get	tsvscode.ts	/^    get(query: IDBValidKey | IDBKeyRange): IDBRequest<any>;$/;"	m	interface:IDBObjectStore
getActiveAttrib	tsvscode.ts	/^    getActiveAttrib(program: WebGLProgram, index: GLuint): WebGLActiveInfo | null;$/;"	m	interface:WebGLRenderingContextBase
getActiveUniform	tsvscode.ts	/^    getActiveUniform(program: WebGLProgram, index: GLuint): WebGLActiveInfo | null;$/;"	m	interface:WebGLRenderingContextBase
getActiveUniformBlockName	tsvscode.ts	/^    getActiveUniformBlockName(program: WebGLProgram, uniformBlockIndex: GLuint): string | null;$/;"	m	interface:WebGL2RenderingContextBase
getActiveUniformBlockParameter	tsvscode.ts	/^    getActiveUniformBlockParameter(program: WebGLProgram, uniformBlockIndex: GLuint, pname: GLen/;"	m	interface:WebGL2RenderingContextBase
getActiveUniforms	tsvscode.ts	/^    getActiveUniforms(program: WebGLProgram, uniformIndices: GLuint[], pname: GLenum): any;$/;"	m	interface:WebGL2RenderingContextBase
getAll	tsvscode.ts	/^    getAll(name: string): FormDataEntryValue[];$/;"	m	interface:FormData
getAll	tsvscode.ts	/^    getAll(name: string): string[];$/;"	m	interface:URLSearchParams
getAll	tsvscode.ts	/^    getAll(property: string): CSSStyleValue[];$/;"	m	interface:StylePropertyMapReadOnly
getAll	tsvscode.ts	/^    getAll(query?: IDBValidKey | IDBKeyRange | null, count?: number): IDBRequest<any[]>;$/;"	m	interface:IDBIndex
getAll	tsvscode.ts	/^    getAll(query?: IDBValidKey | IDBKeyRange | null, count?: number): IDBRequest<any[]>;$/;"	m	interface:IDBObjectStore
getAllKeys	tsvscode.ts	/^    getAllKeys(query?: IDBValidKey | IDBKeyRange | null, count?: number): IDBRequest<IDBValidKey/;"	m	interface:IDBIndex
getAllKeys	tsvscode.ts	/^    getAllKeys(query?: IDBValidKey | IDBKeyRange | null, count?: number): IDBRequest<IDBValidKey/;"	m	interface:IDBObjectStore
getAllResponseHeaders	tsvscode.ts	/^    getAllResponseHeaders(): string;$/;"	m	interface:XMLHttpRequest
getAnimations	tsvscode.ts	/^    getAnimations(): Animation[];$/;"	m	interface:DocumentOrShadowRoot
getAnimations	tsvscode.ts	/^    getAnimations(options?: GetAnimationsOptions): Animation[];$/;"	m	interface:Animatable
getAsFile	tsvscode.ts	/^    getAsFile(): File | null;$/;"	m	interface:DataTransferItem
getAsString	tsvscode.ts	/^    getAsString(callback: FunctionStringCallback | null): void;$/;"	m	interface:DataTransferItem
getAttachedShaders	tsvscode.ts	/^    getAttachedShaders(program: WebGLProgram): WebGLShader[] | null;$/;"	m	interface:WebGLRenderingContextBase
getAttribLocation	tsvscode.ts	/^    getAttribLocation(program: WebGLProgram, name: string): GLint;$/;"	m	interface:WebGLRenderingContextBase
getAttribute	tsvscode.ts	/^    getAttribute(qualifiedName: string): string | null;$/;"	m	interface:Element
getAttributeNS	tsvscode.ts	/^    getAttributeNS(namespace: string | null, localName: string): string | null;$/;"	m	interface:Element
getAttributeNames	tsvscode.ts	/^    getAttributeNames(): string[];$/;"	m	interface:Element
getAttributeNode	tsvscode.ts	/^    getAttributeNode(qualifiedName: string): Attr | null;$/;"	m	interface:Element
getAttributeNodeNS	tsvscode.ts	/^    getAttributeNodeNS(namespace: string | null, localName: string): Attr | null;$/;"	m	interface:Element
getAudioTracks	tsvscode.ts	/^    getAudioTracks(): MediaStreamTrack[];$/;"	m	interface:MediaStream
getAuthenticatorData	tsvscode.ts	/^    getAuthenticatorData(): ArrayBuffer;$/;"	m	interface:AuthenticatorAttestationResponse
getBBox	tsvscode.ts	/^    getBBox(options?: SVGBoundingBoxOptions): DOMRect;$/;"	m	interface:SVGGraphicsElement
getBoundingClientRect	tsvscode.ts	/^    getBoundingClientRect(): DOMRect;$/;"	m	interface:Element
getBoundingClientRect	tsvscode.ts	/^    getBoundingClientRect(): DOMRect;$/;"	m	interface:Range
getBounds	tsvscode.ts	/^    getBounds(): DOMRect;$/;"	m	interface:DOMQuad
getBufferParameter	tsvscode.ts	/^    getBufferParameter(target: GLenum, pname: GLenum): any;$/;"	m	interface:WebGLRenderingContextBase
getBufferSubData	tsvscode.ts	/^    getBufferSubData(target: GLenum, srcByteOffset: GLintptr, dstBuffer: ArrayBufferView, dstOff/;"	m	interface:WebGL2RenderingContextBase
getByteFrequencyData	tsvscode.ts	/^    getByteFrequencyData(array: Uint8Array): void;$/;"	m	interface:AnalyserNode
getByteTimeDomainData	tsvscode.ts	/^    getByteTimeDomainData(array: Uint8Array): void;$/;"	m	interface:AnalyserNode
getCTM	tsvscode.ts	/^    getCTM(): DOMMatrix | null;$/;"	m	interface:SVGGraphicsElement
getCapabilities	tsvscode.ts	/^    getCapabilities(): MediaTrackCapabilities;$/;"	m	interface:InputDeviceInfo
getCapabilities	tsvscode.ts	/^    getCapabilities(): MediaTrackCapabilities;$/;"	m	interface:MediaStreamTrack
getCapabilities	tsvscode.ts	/^    getCapabilities(kind: string): RTCRtpCapabilities | null;$/;"	v
getChannelData	tsvscode.ts	/^    getChannelData(channel: number): Float32Array;$/;"	m	interface:AudioBuffer
getCharNumAtPosition	tsvscode.ts	/^    getCharNumAtPosition(point?: DOMPointInit): number;$/;"	m	interface:SVGTextContentElement
getClientExtensionResults	tsvscode.ts	/^    getClientExtensionResults(): AuthenticationExtensionsClientOutputs;$/;"	m	interface:PublicKeyCredential
getClientRects	tsvscode.ts	/^    getClientRects(): DOMRectList;$/;"	m	interface:Element
getClientRects	tsvscode.ts	/^    getClientRects(): DOMRectList;$/;"	m	interface:Range
getCoalescedEvents	tsvscode.ts	/^    getCoalescedEvents(): PointerEvent[];$/;"	m	interface:PointerEvent
getComputedStyle	tsvscode.ts	/^    getComputedStyle(elt: Element, pseudoElt?: string | null): CSSStyleDeclaration;$/;"	m	interface:Window
getComputedTextLength	tsvscode.ts	/^    getComputedTextLength(): number;$/;"	m	interface:SVGTextContentElement
getComputedTiming	tsvscode.ts	/^    getComputedTiming(): ComputedEffectTiming;$/;"	m	interface:AnimationEffect
getConfiguration	tsvscode.ts	/^    getConfiguration(): MediaKeySystemConfiguration;$/;"	m	interface:MediaKeySystemAccess
getConfiguration	tsvscode.ts	/^    getConfiguration(): RTCConfiguration;$/;"	m	interface:RTCPeerConnection
getConstraints	tsvscode.ts	/^    getConstraints(): MediaTrackConstraints;$/;"	m	interface:MediaStreamTrack
getContext	tsvscode.ts	/^    getContext(contextId: "2d", options?: CanvasRenderingContext2DSettings): CanvasRenderingCont/;"	m	interface:HTMLCanvasElement
getContext	tsvscode.ts	/^    getContext(contextId: "2d", options?: any): OffscreenCanvasRenderingContext2D | null;$/;"	m	interface:OffscreenCanvas
getContext	tsvscode.ts	/^    getContext(contextId: "bitmaprenderer", options?: ImageBitmapRenderingContextSettings): Imag/;"	m	interface:HTMLCanvasElement
getContext	tsvscode.ts	/^    getContext(contextId: "bitmaprenderer", options?: any): ImageBitmapRenderingContext | null;$/;"	m	interface:OffscreenCanvas
getContext	tsvscode.ts	/^    getContext(contextId: "webgl", options?: WebGLContextAttributes): WebGLRenderingContext | nu/;"	m	interface:HTMLCanvasElement
getContext	tsvscode.ts	/^    getContext(contextId: "webgl", options?: any): WebGLRenderingContext | null;$/;"	m	interface:OffscreenCanvas
getContext	tsvscode.ts	/^    getContext(contextId: "webgl2", options?: WebGLContextAttributes): WebGL2RenderingContext | /;"	m	interface:HTMLCanvasElement
getContext	tsvscode.ts	/^    getContext(contextId: "webgl2", options?: any): WebGL2RenderingContext | null;$/;"	m	interface:OffscreenCanvas
getContext	tsvscode.ts	/^    getContext(contextId: OffscreenRenderingContextId, options?: any): OffscreenRenderingContext/;"	m	interface:OffscreenCanvas
getContext	tsvscode.ts	/^    getContext(contextId: string, options?: any): RenderingContext | null;$/;"	m	interface:HTMLCanvasElement
getContextAttributes	tsvscode.ts	/^    getContextAttributes(): CanvasRenderingContext2DSettings;$/;"	m	interface:CanvasRenderingContext2D
getContextAttributes	tsvscode.ts	/^    getContextAttributes(): WebGLContextAttributes | null;$/;"	m	interface:WebGLRenderingContextBase
getContributingSources	tsvscode.ts	/^    getContributingSources(): RTCRtpContributingSource[];$/;"	m	interface:RTCRtpReceiver
getCueAsHTML	tsvscode.ts	/^    getCueAsHTML(): DocumentFragment;$/;"	m	interface:VTTCue
getCueById	tsvscode.ts	/^    getCueById(id: string): TextTrackCue | null;$/;"	m	interface:TextTrackCueList
getCurrentPosition	tsvscode.ts	/^    getCurrentPosition(successCallback: PositionCallback, errorCallback?: PositionErrorCallback /;"	m	interface:Geolocation
getCurrentTime	tsvscode.ts	/^    getCurrentTime(): number;$/;"	m	interface:SVGAnimationElement
getCurrentTime	tsvscode.ts	/^    getCurrentTime(): number;$/;"	m	interface:SVGSVGElement
getData	tsvscode.ts	/^    getData(format: string): string;$/;"	m	interface:DataTransfer
getDate	ests.ts	/^    getDate(): number;$/;"	m	interface:Date
getDay	ests.ts	/^    getDay(): number;$/;"	m	interface:Date
getDirectory	tsvscode.ts	/^    getDirectory(): Promise<FileSystemDirectoryHandle>;$/;"	m	interface:StorageManager
getDirectory	tsvscode.ts	/^    getDirectory(path?: string | null, options?: FileSystemFlags, successCallback?: FileSystemEn/;"	m	interface:FileSystemDirectoryEntry
getDirectoryHandle	tsvscode.ts	/^    getDirectoryHandle(name: string, options?: FileSystemGetDirectoryOptions): Promise<FileSyste/;"	m	interface:FileSystemDirectoryHandle
getDisplayMedia	tsvscode.ts	/^    getDisplayMedia(options?: DisplayMediaStreamOptions): Promise<MediaStream>;$/;"	m	interface:MediaDevices
getElementById	tsvscode.ts	/^    getElementById(elementId: string): Element | null;$/;"	m	interface:NonElementParentNode
getElementById	tsvscode.ts	/^    getElementById(elementId: string): Element;$/;"	m	interface:SVGSVGElement
getElementById	tsvscode.ts	/^    getElementById(elementId: string): HTMLElement | null;$/;"	m	interface:Document
getElementById	tsvscode.ts	/^    getElementById(elementId: string): HTMLElement | null;$/;"	m	interface:DocumentFragment
getElementsByClassName	tsvscode.ts	/^    getElementsByClassName(classNames: string): HTMLCollectionOf<Element>;$/;"	m	interface:Document
getElementsByClassName	tsvscode.ts	/^    getElementsByClassName(classNames: string): HTMLCollectionOf<Element>;$/;"	m	interface:Element
getElementsByName	tsvscode.ts	/^    getElementsByName(elementName: string): NodeListOf<HTMLElement>;$/;"	m	interface:Document
getElementsByTagName	tsvscode.ts	/^    getElementsByTagName(qualifiedName: string): HTMLCollectionOf<Element>;$/;"	m	interface:Document
getElementsByTagName	tsvscode.ts	/^    getElementsByTagName(qualifiedName: string): HTMLCollectionOf<Element>;$/;"	m	interface:Element
getElementsByTagName	tsvscode.ts	/^    getElementsByTagName<K extends keyof HTMLElementDeprecatedTagNameMap>(qualifiedName: K): HTM/;"	m	interface:Document
getElementsByTagName	tsvscode.ts	/^    getElementsByTagName<K extends keyof HTMLElementDeprecatedTagNameMap>(qualifiedName: K): HTM/;"	m	interface:Element
getElementsByTagName	tsvscode.ts	/^    getElementsByTagName<K extends keyof HTMLElementTagNameMap>(qualifiedName: K): HTMLCollectio/;"	m	interface:Document
getElementsByTagName	tsvscode.ts	/^    getElementsByTagName<K extends keyof HTMLElementTagNameMap>(qualifiedName: K): HTMLCollectio/;"	m	interface:Element
getElementsByTagName	tsvscode.ts	/^    getElementsByTagName<K extends keyof MathMLElementTagNameMap>(qualifiedName: K): HTMLCollect/;"	m	interface:Document
getElementsByTagName	tsvscode.ts	/^    getElementsByTagName<K extends keyof MathMLElementTagNameMap>(qualifiedName: K): HTMLCollect/;"	m	interface:Element
getElementsByTagName	tsvscode.ts	/^    getElementsByTagName<K extends keyof SVGElementTagNameMap>(qualifiedName: K): HTMLCollection/;"	m	interface:Document
getElementsByTagName	tsvscode.ts	/^    getElementsByTagName<K extends keyof SVGElementTagNameMap>(qualifiedName: K): HTMLCollection/;"	m	interface:Element
getElementsByTagNameNS	tsvscode.ts	/^    getElementsByTagNameNS(namespace: string | null, localName: string): HTMLCollectionOf<Elemen/;"	m	interface:Document
getElementsByTagNameNS	tsvscode.ts	/^    getElementsByTagNameNS(namespace: string | null, localName: string): HTMLCollectionOf<Elemen/;"	m	interface:Element
getElementsByTagNameNS	tsvscode.ts	/^    getElementsByTagNameNS(namespaceURI: "http:\/\/www.w3.org\/1998\/Math\/MathML", localName: s/;"	m	interface:Document
getElementsByTagNameNS	tsvscode.ts	/^    getElementsByTagNameNS(namespaceURI: "http:\/\/www.w3.org\/1998\/Math\/MathML", localName: s/;"	m	interface:Element
getElementsByTagNameNS	tsvscode.ts	/^    getElementsByTagNameNS(namespaceURI: "http:\/\/www.w3.org\/1999\/xhtml", localName: string):/;"	m	interface:Document
getElementsByTagNameNS	tsvscode.ts	/^    getElementsByTagNameNS(namespaceURI: "http:\/\/www.w3.org\/1999\/xhtml", localName: string):/;"	m	interface:Element
getElementsByTagNameNS	tsvscode.ts	/^    getElementsByTagNameNS(namespaceURI: "http:\/\/www.w3.org\/2000\/svg", localName: string): H/;"	m	interface:Document
getElementsByTagNameNS	tsvscode.ts	/^    getElementsByTagNameNS(namespaceURI: "http:\/\/www.w3.org\/2000\/svg", localName: string): H/;"	m	interface:Element
getEnclosureList	tsvscode.ts	/^    getEnclosureList(rect: DOMRectReadOnly, referenceElement: SVGElement | null): NodeListOf<SVG/;"	m	interface:SVGSVGElement
getEndPositionOfChar	tsvscode.ts	/^    getEndPositionOfChar(charnum: number): DOMPoint;$/;"	m	interface:SVGTextContentElement
getEntries	tsvscode.ts	/^    getEntries(): PerformanceEntryList;$/;"	m	interface:Performance
getEntries	tsvscode.ts	/^    getEntries(): PerformanceEntryList;$/;"	m	interface:PerformanceObserverEntryList
getEntriesByName	tsvscode.ts	/^    getEntriesByName(name: string, type?: string): PerformanceEntryList;$/;"	m	interface:Performance
getEntriesByName	tsvscode.ts	/^    getEntriesByName(name: string, type?: string): PerformanceEntryList;$/;"	m	interface:PerformanceObserverEntryList
getEntriesByType	tsvscode.ts	/^    getEntriesByType(type: string): PerformanceEntryList;$/;"	m	interface:Performance
getEntriesByType	tsvscode.ts	/^    getEntriesByType(type: string): PerformanceEntryList;$/;"	m	interface:PerformanceObserverEntryList
getError	tsvscode.ts	/^    getError(): GLenum;$/;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "ANGLE_instanced_arrays"): ANGLE_instanced_arrays | null;$/;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "EXT_blend_minmax"): EXT_blend_minmax | null;$/;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "EXT_color_buffer_float"): EXT_color_buffer_float | null;$/;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "EXT_color_buffer_half_float"): EXT_color_buffer_half_float | nu/;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "EXT_float_blend"): EXT_float_blend | null;$/;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "EXT_frag_depth"): EXT_frag_depth | null;$/;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "EXT_sRGB"): EXT_sRGB | null;$/;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "EXT_shader_texture_lod"): EXT_shader_texture_lod | null;$/;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "EXT_texture_compression_bptc"): EXT_texture_compression_bptc | /;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "EXT_texture_compression_rgtc"): EXT_texture_compression_rgtc | /;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "EXT_texture_filter_anisotropic"): EXT_texture_filter_anisotropi/;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "KHR_parallel_shader_compile"): KHR_parallel_shader_compile | nu/;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "OES_element_index_uint"): OES_element_index_uint | null;$/;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "OES_fbo_render_mipmap"): OES_fbo_render_mipmap | null;$/;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "OES_standard_derivatives"): OES_standard_derivatives | null;$/;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "OES_texture_float"): OES_texture_float | null;$/;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "OES_texture_float_linear"): OES_texture_float_linear | null;$/;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "OES_texture_half_float"): OES_texture_half_float | null;$/;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "OES_texture_half_float_linear"): OES_texture_half_float_linear /;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "OES_vertex_array_object"): OES_vertex_array_object | null;$/;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "OVR_multiview2"): OVR_multiview2 | null;$/;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "WEBGL_color_buffer_float"): WEBGL_color_buffer_float | null;$/;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "WEBGL_compressed_texture_astc"): WEBGL_compressed_texture_astc /;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "WEBGL_compressed_texture_etc"): WEBGL_compressed_texture_etc | /;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "WEBGL_compressed_texture_etc1"): WEBGL_compressed_texture_etc1 /;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "WEBGL_compressed_texture_pvrtc"): WEBGL_compressed_texture_pvrt/;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "WEBGL_compressed_texture_s3tc"): WEBGL_compressed_texture_s3tc /;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "WEBGL_compressed_texture_s3tc_srgb"): WEBGL_compressed_texture_/;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "WEBGL_debug_renderer_info"): WEBGL_debug_renderer_info | null;$/;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "WEBGL_debug_shaders"): WEBGL_debug_shaders | null;$/;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "WEBGL_depth_texture"): WEBGL_depth_texture | null;$/;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "WEBGL_draw_buffers"): WEBGL_draw_buffers | null;$/;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "WEBGL_lose_context"): WEBGL_lose_context | null;$/;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(extensionName: "WEBGL_multi_draw"): WEBGL_multi_draw | null;$/;"	m	interface:WebGLRenderingContextBase
getExtension	tsvscode.ts	/^    getExtension(name: string): any;$/;"	m	interface:WebGLRenderingContextBase
getExtentOfChar	tsvscode.ts	/^    getExtentOfChar(charnum: number): DOMRect;$/;"	m	interface:SVGTextContentElement
getFile	tsvscode.ts	/^    getFile(): Promise<File>;$/;"	m	interface:FileSystemFileHandle
getFile	tsvscode.ts	/^    getFile(path?: string | null, options?: FileSystemFlags, successCallback?: FileSystemEntryCa/;"	m	interface:FileSystemDirectoryEntry
getFileHandle	tsvscode.ts	/^    getFileHandle(name: string, options?: FileSystemGetFileOptions): Promise<FileSystemFileHandl/;"	m	interface:FileSystemDirectoryHandle
getFingerprints	tsvscode.ts	/^    getFingerprints(): RTCDtlsFingerprint[];$/;"	m	interface:RTCCertificate
getFloat32	ests.ts	/^    getFloat32(byteOffset: number, littleEndian?: boolean): number;$/;"	m	interface:DataView
getFloat64	ests.ts	/^    getFloat64(byteOffset: number, littleEndian?: boolean): number;$/;"	m	interface:DataView
getFloatFrequencyData	tsvscode.ts	/^    getFloatFrequencyData(array: Float32Array): void;$/;"	m	interface:AnalyserNode
getFloatTimeDomainData	tsvscode.ts	/^    getFloatTimeDomainData(array: Float32Array): void;$/;"	m	interface:AnalyserNode
getFragDataLocation	tsvscode.ts	/^    getFragDataLocation(program: WebGLProgram, name: string): GLint;$/;"	m	interface:WebGL2RenderingContextBase
getFramebufferAttachmentParameter	tsvscode.ts	/^    getFramebufferAttachmentParameter(target: GLenum, attachment: GLenum, pname: GLenum): any;$/;"	m	interface:WebGLRenderingContextBase
getFrequencyResponse	tsvscode.ts	/^    getFrequencyResponse(frequencyHz: Float32Array, magResponse: Float32Array, phaseResponse: Fl/;"	m	interface:BiquadFilterNode
getFrequencyResponse	tsvscode.ts	/^    getFrequencyResponse(frequencyHz: Float32Array, magResponse: Float32Array, phaseResponse: Fl/;"	m	interface:IIRFilterNode
getFullYear	ests.ts	/^    getFullYear(): number;$/;"	m	interface:Date
getGamepads	tsvscode.ts	/^    getGamepads(): (Gamepad | null)[];$/;"	m	interface:Navigator
getHours	ests.ts	/^    getHours(): number;$/;"	m	interface:Date
getImageData	tsvscode.ts	/^    getImageData(sx: number, sy: number, sw: number, sh: number, settings?: ImageDataSettings): /;"	m	interface:CanvasImageData
getIndexedParameter	tsvscode.ts	/^    getIndexedParameter(target: GLenum, index: GLuint): any;$/;"	m	interface:WebGL2RenderingContextBase
getInt16	ests.ts	/^    getInt16(byteOffset: number, littleEndian?: boolean): number;$/;"	m	interface:DataView
getInt32	ests.ts	/^    getInt32(byteOffset: number, littleEndian?: boolean): number;$/;"	m	interface:DataView
getInt8	ests.ts	/^    getInt8(byteOffset: number): number;$/;"	m	interface:DataView
getInternalformatParameter	tsvscode.ts	/^    getInternalformatParameter(target: GLenum, internalformat: GLenum, pname: GLenum): any;$/;"	m	interface:WebGL2RenderingContextBase
getIntersectionList	tsvscode.ts	/^    getIntersectionList(rect: DOMRectReadOnly, referenceElement: SVGElement | null): NodeListOf</;"	m	interface:SVGSVGElement
getItem	tsvscode.ts	/^    getItem(index: number): DOMPoint;$/;"	m	interface:SVGPointList
getItem	tsvscode.ts	/^    getItem(index: number): SVGLength;$/;"	m	interface:SVGLengthList
getItem	tsvscode.ts	/^    getItem(index: number): SVGNumber;$/;"	m	interface:SVGNumberList
getItem	tsvscode.ts	/^    getItem(index: number): SVGTransform;$/;"	m	interface:SVGTransformList
getItem	tsvscode.ts	/^    getItem(index: number): string;$/;"	m	interface:SVGStringList
getItem	tsvscode.ts	/^    getItem(key: string): string | null;$/;"	m	interface:Storage
getKey	tsvscode.ts	/^    getKey(name: PushEncryptionKeyName): ArrayBuffer | null;$/;"	m	interface:PushSubscription
getKey	tsvscode.ts	/^    getKey(query: IDBValidKey | IDBKeyRange): IDBRequest<IDBValidKey | undefined>;$/;"	m	interface:IDBIndex
getKey	tsvscode.ts	/^    getKey(query: IDBValidKey | IDBKeyRange): IDBRequest<IDBValidKey | undefined>;$/;"	m	interface:IDBObjectStore
getKeyframes	tsvscode.ts	/^    getKeyframes(): ComputedKeyframe[];$/;"	m	interface:KeyframeEffect
getLineDash	tsvscode.ts	/^    getLineDash(): number[];$/;"	m	interface:CanvasPathDrawingStyles
getMetadata	tsvscode.ts	/^    getMetadata(): RTCEncodedAudioFrameMetadata;$/;"	m	interface:RTCEncodedAudioFrame
getMetadata	tsvscode.ts	/^    getMetadata(): RTCEncodedVideoFrameMetadata;$/;"	m	interface:RTCEncodedVideoFrame
getMilliseconds	ests.ts	/^    getMilliseconds(): number;$/;"	m	interface:Date
getMinutes	ests.ts	/^    getMinutes(): number;$/;"	m	interface:Date
getModifierState	tsvscode.ts	/^    getModifierState(keyArg: string): boolean;$/;"	m	interface:KeyboardEvent
getModifierState	tsvscode.ts	/^    getModifierState(keyArg: string): boolean;$/;"	m	interface:MouseEvent
getMonth	ests.ts	/^    getMonth(): number;$/;"	m	interface:Date
getName	tsvscode.ts	/^    getName(constructor: CustomElementConstructor): string | null;$/;"	m	interface:CustomElementRegistry
getNamedItem	tsvscode.ts	/^    getNamedItem(qualifiedName: string): Attr | null;$/;"	m	interface:NamedNodeMap
getNamedItemNS	tsvscode.ts	/^    getNamedItemNS(namespace: string | null, localName: string): Attr | null;$/;"	m	interface:NamedNodeMap
getNotifications	tsvscode.ts	/^    getNotifications(filter?: GetNotificationOptions): Promise<Notification[]>;$/;"	m	interface:ServiceWorkerRegistration
getNumberOfChars	tsvscode.ts	/^    getNumberOfChars(): number;$/;"	m	interface:SVGTextContentElement
getOutputTimestamp	tsvscode.ts	/^    getOutputTimestamp(): AudioTimestamp;$/;"	m	interface:AudioContext
getOwnPropertyDescriptor	ests.ts	/^    getOwnPropertyDescriptor(o: any, p: PropertyKey): PropertyDescriptor | undefined;$/;"	m	interface:ObjectConstructor
getOwnPropertyNames	ests.ts	/^    getOwnPropertyNames(o: any): string[];$/;"	m	interface:ObjectConstructor
getParameter	tsvscode.ts	/^    getParameter(namespaceURI: string | null, localName: string): any;$/;"	m	interface:XSLTProcessor
getParameter	tsvscode.ts	/^    getParameter(pname: GLenum): any;$/;"	m	interface:WebGLRenderingContextBase
getParameters	tsvscode.ts	/^    getParameters(): RTCRtpReceiveParameters;$/;"	m	interface:RTCRtpReceiver
getParameters	tsvscode.ts	/^    getParameters(): RTCRtpSendParameters;$/;"	m	interface:RTCRtpSender
getParent	tsvscode.ts	/^    getParent(successCallback?: FileSystemEntryCallback, errorCallback?: ErrorCallback): void;$/;"	m	interface:FileSystemEntry
getPointAtLength	tsvscode.ts	/^    getPointAtLength(distance: number): DOMPoint;$/;"	m	interface:SVGGeometryElement
getPredictedEvents	tsvscode.ts	/^    getPredictedEvents(): PointerEvent[];$/;"	m	interface:PointerEvent
getProgramInfoLog	tsvscode.ts	/^    getProgramInfoLog(program: WebGLProgram): string | null;$/;"	m	interface:WebGLRenderingContextBase
getProgramParameter	tsvscode.ts	/^    getProgramParameter(program: WebGLProgram, pname: GLenum): any;$/;"	m	interface:WebGLRenderingContextBase
getPropertyPriority	tsvscode.ts	/^    getPropertyPriority(property: string): string;$/;"	m	interface:CSSStyleDeclaration
getPropertyValue	tsvscode.ts	/^    getPropertyValue(property: string): string;$/;"	m	interface:CSSStyleDeclaration
getPrototypeOf	ests.ts	/^    getPrototypeOf(o: any): any;$/;"	m	interface:ObjectConstructor
getPublicKey	tsvscode.ts	/^    getPublicKey(): ArrayBuffer | null;$/;"	m	interface:AuthenticatorAttestationResponse
getPublicKeyAlgorithm	tsvscode.ts	/^    getPublicKeyAlgorithm(): COSEAlgorithmIdentifier;$/;"	m	interface:AuthenticatorAttestationResponse
getQuery	tsvscode.ts	/^    getQuery(target: GLenum, pname: GLenum): WebGLQuery | null;$/;"	m	interface:WebGL2RenderingContextBase
getQueryParameter	tsvscode.ts	/^    getQueryParameter(query: WebGLQuery, pname: GLenum): any;$/;"	m	interface:WebGL2RenderingContextBase
getRandomValues	tsvscode.ts	/^    getRandomValues<T extends ArrayBufferView | null>(array: T): T;$/;"	m	interface:Crypto
getRangeAt	tsvscode.ts	/^    getRangeAt(index: number): Range;$/;"	m	interface:Selection
getReader	tsvscode.ts	/^    getReader(): ReadableStreamDefaultReader<R>;$/;"	m	interface:ReadableStream
getReader	tsvscode.ts	/^    getReader(options: { mode: "byob" }): ReadableStreamBYOBReader;$/;"	m	interface:ReadableStream
getReader	tsvscode.ts	/^    getReader(options?: ReadableStreamGetReaderOptions): ReadableStreamReader<R>;$/;"	m	interface:ReadableStream
getReceivers	tsvscode.ts	/^    getReceivers(): RTCRtpReceiver[];$/;"	m	interface:RTCPeerConnection
getRegistration	tsvscode.ts	/^    getRegistration(clientURL?: string | URL): Promise<ServiceWorkerRegistration | undefined>;$/;"	m	interface:ServiceWorkerContainer
getRegistrations	tsvscode.ts	/^    getRegistrations(): Promise<ReadonlyArray<ServiceWorkerRegistration>>;$/;"	m	interface:ServiceWorkerContainer
getRemoteCertificates	tsvscode.ts	/^    getRemoteCertificates(): ArrayBuffer[];$/;"	m	interface:RTCDtlsTransport
getRenderbufferParameter	tsvscode.ts	/^    getRenderbufferParameter(target: GLenum, pname: GLenum): any;$/;"	m	interface:WebGLRenderingContextBase
getResponseHeader	tsvscode.ts	/^    getResponseHeader(name: string): string | null;$/;"	m	interface:XMLHttpRequest
getRootNode	tsvscode.ts	/^    getRootNode(options?: GetRootNodeOptions): Node;$/;"	m	interface:Node
getRotationOfChar	tsvscode.ts	/^    getRotationOfChar(charnum: number): number;$/;"	m	interface:SVGTextContentElement
getSVGDocument	tsvscode.ts	/^    getSVGDocument(): Document | null;$/;"	m	interface:HTMLEmbedElement
getSVGDocument	tsvscode.ts	/^    getSVGDocument(): Document | null;$/;"	m	interface:HTMLIFrameElement
getSVGDocument	tsvscode.ts	/^    getSVGDocument(): Document | null;$/;"	m	interface:HTMLObjectElement
getSamplerParameter	tsvscode.ts	/^    getSamplerParameter(sampler: WebGLSampler, pname: GLenum): any;$/;"	m	interface:WebGL2RenderingContextBase
getScreenCTM	tsvscode.ts	/^    getScreenCTM(): DOMMatrix | null;$/;"	m	interface:SVGGraphicsElement
getSeconds	ests.ts	/^    getSeconds(): number;$/;"	m	interface:Date
getSelectedCandidatePair	tsvscode.ts	/^    getSelectedCandidatePair(): RTCIceCandidatePair | null;$/;"	m	interface:RTCIceTransport
getSelection	tsvscode.ts	/^    getSelection(): Selection | null;$/;"	m	interface:Document
getSelection	tsvscode.ts	/^    getSelection(): Selection | null;$/;"	m	interface:Window
getSenders	tsvscode.ts	/^    getSenders(): RTCRtpSender[];$/;"	m	interface:RTCPeerConnection
getSetCookie	tsvscode.ts	/^    getSetCookie(): string[];$/;"	m	interface:Headers
getSettings	tsvscode.ts	/^    getSettings(): MediaTrackSettings;$/;"	m	interface:MediaStreamTrack
getShaderInfoLog	tsvscode.ts	/^    getShaderInfoLog(shader: WebGLShader): string | null;$/;"	m	interface:WebGLRenderingContextBase
getShaderParameter	tsvscode.ts	/^    getShaderParameter(shader: WebGLShader, pname: GLenum): any;$/;"	m	interface:WebGLRenderingContextBase
getShaderPrecisionFormat	tsvscode.ts	/^    getShaderPrecisionFormat(shadertype: GLenum, precisiontype: GLenum): WebGLShaderPrecisionFor/;"	m	interface:WebGLRenderingContextBase
getShaderSource	tsvscode.ts	/^    getShaderSource(shader: WebGLShader): string | null;$/;"	m	interface:WebGLRenderingContextBase
getSimpleDuration	tsvscode.ts	/^    getSimpleDuration(): number;$/;"	m	interface:SVGAnimationElement
getStartPositionOfChar	tsvscode.ts	/^    getStartPositionOfChar(charnum: number): DOMPoint;$/;"	m	interface:SVGTextContentElement
getStartTime	tsvscode.ts	/^    getStartTime(): number;$/;"	m	interface:SVGAnimationElement
getState	tsvscode.ts	/^    getState(): Promise<NavigationPreloadState>;$/;"	m	interface:NavigationPreloadManager
getStats	tsvscode.ts	/^    getStats(): Promise<RTCStatsReport>;$/;"	m	interface:RTCRtpReceiver
getStats	tsvscode.ts	/^    getStats(): Promise<RTCStatsReport>;$/;"	m	interface:RTCRtpSender
getStats	tsvscode.ts	/^    getStats(selector?: MediaStreamTrack | null): Promise<RTCStatsReport>;$/;"	m	interface:RTCPeerConnection
getSubStringLength	tsvscode.ts	/^    getSubStringLength(charnum: number, nchars: number): number;$/;"	m	interface:SVGTextContentElement
getSubscription	tsvscode.ts	/^    getSubscription(): Promise<PushSubscription | null>;$/;"	m	interface:PushManager
getSupportedConstraints	tsvscode.ts	/^    getSupportedConstraints(): MediaTrackSupportedConstraints;$/;"	m	interface:MediaDevices
getSupportedExtensions	tsvscode.ts	/^    getSupportedExtensions(): string[] | null;$/;"	m	interface:WebGLRenderingContextBase
getSupportedProfiles	tsvscode.ts	/^    getSupportedProfiles(): string[];$/;"	m	interface:WEBGL_compressed_texture_astc
getSyncParameter	tsvscode.ts	/^    getSyncParameter(sync: WebGLSync, pname: GLenum): any;$/;"	m	interface:WebGL2RenderingContextBase
getSynchronizationSources	tsvscode.ts	/^    getSynchronizationSources(): RTCRtpSynchronizationSource[];$/;"	m	interface:RTCRtpReceiver
getTargetRanges	tsvscode.ts	/^    getTargetRanges(): StaticRange[];$/;"	m	interface:InputEvent
getTexParameter	tsvscode.ts	/^    getTexParameter(target: GLenum, pname: GLenum): any;$/;"	m	interface:WebGLRenderingContextBase
getTime	ests.ts	/^    getTime(): number;$/;"	m	interface:Date
getTimezoneOffset	ests.ts	/^    getTimezoneOffset(): number;$/;"	m	interface:Date
getTiming	tsvscode.ts	/^    getTiming(): EffectTiming;$/;"	m	interface:AnimationEffect
getTotalLength	tsvscode.ts	/^    getTotalLength(): number;$/;"	m	interface:SVGGeometryElement
getTrackById	tsvscode.ts	/^    getTrackById(id: string): TextTrack | null;$/;"	m	interface:TextTrackList
getTrackById	tsvscode.ts	/^    getTrackById(trackId: string): MediaStreamTrack | null;$/;"	m	interface:MediaStream
getTracks	tsvscode.ts	/^    getTracks(): MediaStreamTrack[];$/;"	m	interface:MediaStream
getTransceivers	tsvscode.ts	/^    getTransceivers(): RTCRtpTransceiver[];$/;"	m	interface:RTCPeerConnection
getTransform	tsvscode.ts	/^    getTransform(): DOMMatrix;$/;"	m	interface:CanvasTransform
getTransformFeedbackVarying	tsvscode.ts	/^    getTransformFeedbackVarying(program: WebGLProgram, index: GLuint): WebGLActiveInfo | null;$/;"	m	interface:WebGL2RenderingContextBase
getTranslatedShaderSource	tsvscode.ts	/^    getTranslatedShaderSource(shader: WebGLShader): string;$/;"	m	interface:WEBGL_debug_shaders
getTransports	tsvscode.ts	/^    getTransports(): string[];$/;"	m	interface:AuthenticatorAttestationResponse
getType	tsvscode.ts	/^    getType(type: string): Promise<Blob>;$/;"	m	interface:ClipboardItem
getUTCDate	ests.ts	/^    getUTCDate(): number;$/;"	m	interface:Date
getUTCDay	ests.ts	/^    getUTCDay(): number;$/;"	m	interface:Date
getUTCFullYear	ests.ts	/^    getUTCFullYear(): number;$/;"	m	interface:Date
getUTCHours	ests.ts	/^    getUTCHours(): number;$/;"	m	interface:Date
getUTCMilliseconds	ests.ts	/^    getUTCMilliseconds(): number;$/;"	m	interface:Date
getUTCMinutes	ests.ts	/^    getUTCMinutes(): number;$/;"	m	interface:Date
getUTCMonth	ests.ts	/^    getUTCMonth(): number;$/;"	m	interface:Date
getUTCSeconds	ests.ts	/^    getUTCSeconds(): number;$/;"	m	interface:Date
getUint16	ests.ts	/^    getUint16(byteOffset: number, littleEndian?: boolean): number;$/;"	m	interface:DataView
getUint32	ests.ts	/^    getUint32(byteOffset: number, littleEndian?: boolean): number;$/;"	m	interface:DataView
getUint8	ests.ts	/^    getUint8(byteOffset: number): number;$/;"	m	interface:DataView
getUniform	tsvscode.ts	/^    getUniform(program: WebGLProgram, location: WebGLUniformLocation): any;$/;"	m	interface:WebGLRenderingContextBase
getUniformBlockIndex	tsvscode.ts	/^    getUniformBlockIndex(program: WebGLProgram, uniformBlockName: string): GLuint;$/;"	m	interface:WebGL2RenderingContextBase
getUniformIndices	tsvscode.ts	/^    getUniformIndices(program: WebGLProgram, uniformNames: string[]): GLuint[] | null;$/;"	m	interface:WebGL2RenderingContextBase
getUniformLocation	tsvscode.ts	/^    getUniformLocation(program: WebGLProgram, name: string): WebGLUniformLocation | null;$/;"	m	interface:WebGLRenderingContextBase
getUserMedia	tsvscode.ts	/^    getUserMedia(constraints?: MediaStreamConstraints): Promise<MediaStream>;$/;"	m	interface:MediaDevices
getVertexAttrib	tsvscode.ts	/^    getVertexAttrib(index: GLuint, pname: GLenum): any;$/;"	m	interface:WebGLRenderingContextBase
getVertexAttribOffset	tsvscode.ts	/^    getVertexAttribOffset(index: GLuint, pname: GLenum): GLintptr;$/;"	m	interface:WebGLRenderingContextBase
getVideoPlaybackQuality	tsvscode.ts	/^    getVideoPlaybackQuality(): VideoPlaybackQuality;$/;"	m	interface:HTMLVideoElement
getVideoTracks	tsvscode.ts	/^    getVideoTracks(): MediaStreamTrack[];$/;"	m	interface:MediaStream
getVoices	tsvscode.ts	/^    getVoices(): SpeechSynthesisVoice[];$/;"	m	interface:SpeechSynthesis
getWriter	tsvscode.ts	/^    getWriter(): WritableStreamDefaultWriter<W>;$/;"	m	interface:WritableStream
global	ests.ts	/^    readonly global: boolean;$/;"	p	interface:RegExp
globalAlpha	tsvscode.ts	/^    globalAlpha: number;$/;"	p	interface:CanvasCompositing
globalCompositeOperation	tsvscode.ts	/^    globalCompositeOperation: GlobalCompositeOperation;$/;"	p	interface:CanvasCompositing
go	tsvscode.ts	/^    go(delta?: number): void;$/;"	m	interface:History
gradientTransform	tsvscode.ts	/^    readonly gradientTransform: SVGAnimatedTransformList;$/;"	p	interface:SVGGradientElement
gradientUnits	tsvscode.ts	/^    readonly gradientUnits: SVGAnimatedEnumeration;$/;"	p	interface:SVGGradientElement
grid	tsvscode.ts	/^    grid: string;$/;"	p	interface:CSSStyleDeclaration
gridArea	tsvscode.ts	/^    gridArea: string;$/;"	p	interface:CSSStyleDeclaration
gridAutoColumns	tsvscode.ts	/^    gridAutoColumns: string;$/;"	p	interface:CSSStyleDeclaration
gridAutoFlow	tsvscode.ts	/^    gridAutoFlow: string;$/;"	p	interface:CSSStyleDeclaration
gridAutoRows	tsvscode.ts	/^    gridAutoRows: string;$/;"	p	interface:CSSStyleDeclaration
gridColumn	tsvscode.ts	/^    gridColumn: string;$/;"	p	interface:CSSStyleDeclaration
gridColumnEnd	tsvscode.ts	/^    gridColumnEnd: string;$/;"	p	interface:CSSStyleDeclaration
gridColumnGap	tsvscode.ts	/^    gridColumnGap: string;$/;"	p	interface:CSSStyleDeclaration
gridColumnStart	tsvscode.ts	/^    gridColumnStart: string;$/;"	p	interface:CSSStyleDeclaration
gridGap	tsvscode.ts	/^    gridGap: string;$/;"	p	interface:CSSStyleDeclaration
gridRow	tsvscode.ts	/^    gridRow: string;$/;"	p	interface:CSSStyleDeclaration
gridRowEnd	tsvscode.ts	/^    gridRowEnd: string;$/;"	p	interface:CSSStyleDeclaration
gridRowGap	tsvscode.ts	/^    gridRowGap: string;$/;"	p	interface:CSSStyleDeclaration
gridRowStart	tsvscode.ts	/^    gridRowStart: string;$/;"	p	interface:CSSStyleDeclaration
gridTemplate	tsvscode.ts	/^    gridTemplate: string;$/;"	p	interface:CSSStyleDeclaration
gridTemplateAreas	tsvscode.ts	/^    gridTemplateAreas: string;$/;"	p	interface:CSSStyleDeclaration
gridTemplateColumns	tsvscode.ts	/^    gridTemplateColumns: string;$/;"	p	interface:CSSStyleDeclaration
gridTemplateRows	tsvscode.ts	/^    gridTemplateRows: string;$/;"	p	interface:CSSStyleDeclaration
group	tsvscode.ts	/^    group(...data: any[]): void;$/;"	m	interface:Console
groupCollapsed	tsvscode.ts	/^    groupCollapsed(...data: any[]): void;$/;"	m	interface:Console
groupEnd	tsvscode.ts	/^    groupEnd(): void;$/;"	m	interface:Console
groupId	tsvscode.ts	/^    groupId?: ConstrainDOMString;$/;"	p	interface:MediaTrackConstraintSet
groupId	tsvscode.ts	/^    groupId?: boolean;$/;"	p	interface:MediaTrackSupportedConstraints
groupId	tsvscode.ts	/^    groupId?: string;$/;"	p	interface:MediaTrackCapabilities
groupId	tsvscode.ts	/^    groupId?: string;$/;"	p	interface:MediaTrackSettings
groupId	tsvscode.ts	/^    readonly groupId: string;$/;"	p	interface:MediaDeviceInfo
handleEvent	tsvscode.ts	/^    handleEvent(object: Event): void;$/;"	m	interface:EventListenerObject
hangingBaseline	tsvscode.ts	/^    readonly hangingBaseline: number;$/;"	p	interface:TextMetrics
hardwareAcceleration	tsvscode.ts	/^    hardwareAcceleration?: HardwareAcceleration;$/;"	p	interface:VideoDecoderConfig
hardwareAcceleration	tsvscode.ts	/^    hardwareAcceleration?: HardwareAcceleration;$/;"	p	interface:VideoEncoderConfig
hardwareConcurrency	tsvscode.ts	/^    readonly hardwareConcurrency: number;$/;"	p	interface:NavigatorConcurrentHardware
has	tsvscode.ts	/^    has(cacheName: string): Promise<boolean>;$/;"	m	interface:CacheStorage
has	tsvscode.ts	/^    has(keyId: BufferSource): boolean;$/;"	m	interface:MediaKeyStatusMap
has	tsvscode.ts	/^    has(name: string): boolean;$/;"	m	interface:FormData
has	tsvscode.ts	/^    has(name: string): boolean;$/;"	m	interface:Headers
has	tsvscode.ts	/^    has(name: string, value?: string): boolean;$/;"	m	interface:URLSearchParams
has	tsvscode.ts	/^    has(property: string): boolean;$/;"	m	interface:StylePropertyMapReadOnly
hasAttribute	tsvscode.ts	/^    hasAttribute(qualifiedName: string): boolean;$/;"	m	interface:Element
hasAttributeNS	tsvscode.ts	/^    hasAttributeNS(namespace: string | null, localName: string): boolean;$/;"	m	interface:Element
hasAttributes	tsvscode.ts	/^    hasAttributes(): boolean;$/;"	m	interface:Element
hasBeenActive	tsvscode.ts	/^    readonly hasBeenActive: boolean;$/;"	p	interface:UserActivation
hasChildNodes	tsvscode.ts	/^    hasChildNodes(): boolean;$/;"	m	interface:Node
hasFeature	tsvscode.ts	/^    hasFeature(...args: any[]): true;$/;"	m	interface:DOMImplementation
hasFocus	tsvscode.ts	/^    hasFocus(): boolean;$/;"	m	interface:Document
hasOwnProperty	ests.ts	/^    hasOwnProperty(v: PropertyKey): boolean;$/;"	m	interface:Object
hasPointerCapture	tsvscode.ts	/^    hasPointerCapture(pointerId: number): boolean;$/;"	m	interface:Element
hasStorageAccess	tsvscode.ts	/^    hasStorageAccess(): Promise<boolean>;$/;"	m	interface:Document
hash	tsvscode.ts	/^    hash: HashAlgorithmIdentifier;$/;"	p	interface:EcdsaParams
hash	tsvscode.ts	/^    hash: HashAlgorithmIdentifier;$/;"	p	interface:HkdfParams
hash	tsvscode.ts	/^    hash: HashAlgorithmIdentifier;$/;"	p	interface:HmacImportParams
hash	tsvscode.ts	/^    hash: HashAlgorithmIdentifier;$/;"	p	interface:HmacKeyGenParams
hash	tsvscode.ts	/^    hash: HashAlgorithmIdentifier;$/;"	p	interface:Pbkdf2Params
hash	tsvscode.ts	/^    hash: HashAlgorithmIdentifier;$/;"	p	interface:RsaHashedImportParams
hash	tsvscode.ts	/^    hash: HashAlgorithmIdentifier;$/;"	p	interface:RsaHashedKeyGenParams
hash	tsvscode.ts	/^    hash: KeyAlgorithm;$/;"	p	interface:HmacKeyAlgorithm
hash	tsvscode.ts	/^    hash: KeyAlgorithm;$/;"	p	interface:RsaHashedKeyAlgorithm
hash	tsvscode.ts	/^    hash: string;$/;"	p	interface:HTMLHyperlinkElementUtils
hash	tsvscode.ts	/^    hash: string;$/;"	p	interface:Location
hash	tsvscode.ts	/^    hash: string;$/;"	p	interface:URL
hdrMetadataType	tsvscode.ts	/^    hdrMetadataType?: HdrMetadataType;$/;"	p	interface:VideoConfiguration
head	tsvscode.ts	/^    readonly head: HTMLHeadElement;$/;"	p	interface:Document
headerBytesReceived	tsvscode.ts	/^    headerBytesReceived?: number;$/;"	p	interface:RTCInboundRtpStreamStats
headerBytesSent	tsvscode.ts	/^    headerBytesSent?: number;$/;"	p	interface:RTCOutboundRtpStreamStats
headerExtensions	tsvscode.ts	/^    headerExtensions: RTCRtpHeaderExtensionCapability[];$/;"	p	interface:RTCRtpCapabilities
headerExtensions	tsvscode.ts	/^    headerExtensions: RTCRtpHeaderExtensionParameters[];$/;"	p	interface:RTCRtpParameters
headerValue	tsvscode.ts	/^    headerValue?: string;$/;"	p	interface:NavigationPreloadState
headers	tsvscode.ts	/^    headers: string;$/;"	p	interface:HTMLTableCellElement
headers	tsvscode.ts	/^    headers?: HeadersInit;$/;"	p	interface:RequestInit
headers	tsvscode.ts	/^    headers?: HeadersInit;$/;"	p	interface:ResponseInit
headers	tsvscode.ts	/^    readonly headers: Headers;$/;"	p	interface:Request
headers	tsvscode.ts	/^    readonly headers: Headers;$/;"	p	interface:Response
heading	tsvscode.ts	/^    readonly heading: number | null;$/;"	p	interface:GeolocationCoordinates
height	tsvscode.ts	/^    height: number;$/;"	p	interface:DOMRect
height	tsvscode.ts	/^    height: number;$/;"	p	interface:HTMLCanvasElement
height	tsvscode.ts	/^    height: number;$/;"	p	interface:HTMLImageElement
height	tsvscode.ts	/^    height: number;$/;"	p	interface:HTMLInputElement
height	tsvscode.ts	/^    height: number;$/;"	p	interface:HTMLSourceElement
height	tsvscode.ts	/^    height: number;$/;"	p	interface:HTMLVideoElement
height	tsvscode.ts	/^    height: number;$/;"	p	interface:OffscreenCanvas
height	tsvscode.ts	/^    height: number;$/;"	p	interface:VideoConfiguration
height	tsvscode.ts	/^    height: number;$/;"	p	interface:VideoEncoderConfig
height	tsvscode.ts	/^    height: number;$/;"	p	interface:VideoFrameCallbackMetadata
height	tsvscode.ts	/^    height: string;$/;"	p	interface:CSSStyleDeclaration
height	tsvscode.ts	/^    height: string;$/;"	p	interface:HTMLEmbedElement
height	tsvscode.ts	/^    height: string;$/;"	p	interface:HTMLIFrameElement
height	tsvscode.ts	/^    height: string;$/;"	p	interface:HTMLMarqueeElement
height	tsvscode.ts	/^    height: string;$/;"	p	interface:HTMLObjectElement
height	tsvscode.ts	/^    height: string;$/;"	p	interface:HTMLTableCellElement
height	tsvscode.ts	/^    height?: ConstrainULong;$/;"	p	interface:MediaTrackConstraintSet
height	tsvscode.ts	/^    height?: ULongRange;$/;"	p	interface:MediaTrackCapabilities
height	tsvscode.ts	/^    height?: boolean;$/;"	p	interface:MediaTrackSupportedConstraints
height	tsvscode.ts	/^    height?: number;$/;"	p	interface:DOMRectInit
height	tsvscode.ts	/^    height?: number;$/;"	p	interface:MediaTrackSettings
height	tsvscode.ts	/^    height?: number;$/;"	p	interface:PointerEventInit
height	tsvscode.ts	/^    height?: number;$/;"	p	interface:RTCEncodedVideoFrameMetadata
height	tsvscode.ts	/^    readonly height: SVGAnimatedLength;$/;"	p	interface:SVGFilterElement
height	tsvscode.ts	/^    readonly height: SVGAnimatedLength;$/;"	p	interface:SVGFilterPrimitiveStandardAttributes
height	tsvscode.ts	/^    readonly height: SVGAnimatedLength;$/;"	p	interface:SVGForeignObjectElement
height	tsvscode.ts	/^    readonly height: SVGAnimatedLength;$/;"	p	interface:SVGImageElement
height	tsvscode.ts	/^    readonly height: SVGAnimatedLength;$/;"	p	interface:SVGMaskElement
height	tsvscode.ts	/^    readonly height: SVGAnimatedLength;$/;"	p	interface:SVGPatternElement
height	tsvscode.ts	/^    readonly height: SVGAnimatedLength;$/;"	p	interface:SVGRectElement
height	tsvscode.ts	/^    readonly height: SVGAnimatedLength;$/;"	p	interface:SVGSVGElement
height	tsvscode.ts	/^    readonly height: SVGAnimatedLength;$/;"	p	interface:SVGUseElement
height	tsvscode.ts	/^    readonly height: number;$/;"	p	interface:DOMRectReadOnly
height	tsvscode.ts	/^    readonly height: number;$/;"	p	interface:ImageBitmap
height	tsvscode.ts	/^    readonly height: number;$/;"	p	interface:ImageData
height	tsvscode.ts	/^    readonly height: number;$/;"	p	interface:PictureInPictureWindow
height	tsvscode.ts	/^    readonly height: number;$/;"	p	interface:PointerEvent
height	tsvscode.ts	/^    readonly height: number;$/;"	p	interface:Screen
height	tsvscode.ts	/^    readonly height: number;$/;"	p	interface:VisualViewport
held	tsvscode.ts	/^    held?: LockInfo[];$/;"	p	interface:LockManagerSnapshot
hidden	tsvscode.ts	/^    hidden: boolean;$/;"	p	interface:HTMLElement
hidden	tsvscode.ts	/^    readonly hidden: boolean;$/;"	p	interface:Document
hidePopover	tsvscode.ts	/^    hidePopover(): void;$/;"	m	interface:HTMLElement
high	tsvscode.ts	/^    high: number;$/;"	p	interface:HTMLMeterElement
highWaterMark	tsvscode.ts	/^    highWaterMark: number;$/;"	p	interface:QueuingStrategyInit
highWaterMark	tsvscode.ts	/^    highWaterMark?: number;$/;"	p	interface:QueuingStrategy
highWaterMark	tsvscode.ts	/^    readonly highWaterMark: number;$/;"	p	interface:ByteLengthQueuingStrategy
highWaterMark	tsvscode.ts	/^    readonly highWaterMark: number;$/;"	p	interface:CountQueuingStrategy
highlights	tsvscode.ts	/^    var highlights: HighlightRegistry;$/;"	v	namespace:CSS
hint	tsvscode.ts	/^    hint(target: GLenum, mode: GLenum): void;$/;"	m	interface:WebGLRenderingContextBase
history	tsvscode.ts	/^    readonly history: History;$/;"	p	interface:Window
history	tsvscode.ts	/^declare var history: History;$/;"	v	namespace:CSS
hmacCreateSecret	tsvscode.ts	/^    hmacCreateSecret?: boolean;$/;"	p	interface:AuthenticationExtensionsClientInputs
hmacCreateSecret	tsvscode.ts	/^    hmacCreateSecret?: boolean;$/;"	p	interface:AuthenticationExtensionsClientOutputs
host	tsvscode.ts	/^    host: string;$/;"	p	interface:HTMLHyperlinkElementUtils
host	tsvscode.ts	/^    host: string;$/;"	p	interface:Location
host	tsvscode.ts	/^    host: string;$/;"	p	interface:URL
host	tsvscode.ts	/^    readonly host: Element;$/;"	p	interface:ShadowRoot
hostname	tsvscode.ts	/^    hostname: string;$/;"	p	interface:HTMLHyperlinkElementUtils
hostname	tsvscode.ts	/^    hostname: string;$/;"	p	interface:Location
hostname	tsvscode.ts	/^    hostname: string;$/;"	p	interface:URL
hour	ests.ts	/^        hour?: "numeric" | "2-digit" | undefined;$/;"	p	interface:Intl.DateTimeFormatOptions
hour	ests.ts	/^        hour?: string;$/;"	p	interface:Intl.ResolvedDateTimeFormatOptions
hour12	ests.ts	/^        hour12?: boolean | undefined;$/;"	p	interface:Intl.DateTimeFormatOptions
hour12	ests.ts	/^        hour12?: boolean;$/;"	p	interface:Intl.ResolvedDateTimeFormatOptions
href	tsvscode.ts	/^    href: string;$/;"	p	interface:HTMLBaseElement
href	tsvscode.ts	/^    href: string;$/;"	p	interface:HTMLHyperlinkElementUtils
href	tsvscode.ts	/^    href: string;$/;"	p	interface:HTMLLinkElement
href	tsvscode.ts	/^    href: string;$/;"	p	interface:Location
href	tsvscode.ts	/^    href: string;$/;"	p	interface:URL
href	tsvscode.ts	/^    readonly href: SVGAnimatedString;$/;"	p	interface:SVGURIReference
href	tsvscode.ts	/^    readonly href: string | null;$/;"	p	interface:StyleSheet
href	tsvscode.ts	/^    readonly href: string;$/;"	p	interface:CSSImportRule
hreflang	tsvscode.ts	/^    hreflang: string;$/;"	p	interface:HTMLAnchorElement
hreflang	tsvscode.ts	/^    hreflang: string;$/;"	p	interface:HTMLLinkElement
hspace	tsvscode.ts	/^    hspace: number;$/;"	p	interface:HTMLImageElement
hspace	tsvscode.ts	/^    hspace: number;$/;"	p	interface:HTMLMarqueeElement
hspace	tsvscode.ts	/^    hspace: number;$/;"	p	interface:HTMLObjectElement
htmlFor	tsvscode.ts	/^    htmlFor: string;$/;"	p	interface:HTMLLabelElement
htmlFor	tsvscode.ts	/^    htmlFor: string;$/;"	p	interface:HTMLScriptElement
htmlFor	tsvscode.ts	/^    readonly htmlFor: DOMTokenList;$/;"	p	interface:HTMLOutputElement
httpEquiv	tsvscode.ts	/^    httpEquiv: string;$/;"	p	interface:HTMLMetaElement
httpRequestStatusCode	tsvscode.ts	/^    httpRequestStatusCode?: number;$/;"	p	interface:RTCErrorInit
hugeFramesSent	tsvscode.ts	/^    hugeFramesSent?: number;$/;"	p	interface:RTCOutboundRtpStreamStats
hyphenateCharacter	tsvscode.ts	/^    hyphenateCharacter: string;$/;"	p	interface:CSSStyleDeclaration
hyphens	tsvscode.ts	/^    hyphens: string;$/;"	p	interface:CSSStyleDeclaration
iceCandidatePoolSize	tsvscode.ts	/^    iceCandidatePoolSize?: number;$/;"	p	interface:RTCConfiguration
iceConnectionState	tsvscode.ts	/^    readonly iceConnectionState: RTCIceConnectionState;$/;"	p	interface:RTCPeerConnection
iceGatheringState	tsvscode.ts	/^    readonly iceGatheringState: RTCIceGatheringState;$/;"	p	interface:RTCPeerConnection
iceRestart	tsvscode.ts	/^    iceRestart?: boolean;$/;"	p	interface:RTCOfferOptions
iceServers	tsvscode.ts	/^    iceServers?: RTCIceServer[];$/;"	p	interface:RTCConfiguration
iceTransport	tsvscode.ts	/^    readonly iceTransport: RTCIceTransport;$/;"	p	interface:RTCDtlsTransport
iceTransportPolicy	tsvscode.ts	/^    iceTransportPolicy?: RTCIceTransportPolicy;$/;"	p	interface:RTCConfiguration
icon	tsvscode.ts	/^    icon?: string;$/;"	p	interface:NotificationOptions
icon	tsvscode.ts	/^    readonly icon: string;$/;"	p	interface:Notification
id	tsvscode.ts	/^    id: BufferSource;$/;"	p	interface:PublicKeyCredentialDescriptor
id	tsvscode.ts	/^    id: BufferSource;$/;"	p	interface:PublicKeyCredentialUserEntity
id	tsvscode.ts	/^    id: number;$/;"	p	interface:RTCRtpHeaderExtensionParameters
id	tsvscode.ts	/^    id: string;$/;"	p	interface:Animation
id	tsvscode.ts	/^    id: string;$/;"	p	interface:Element
id	tsvscode.ts	/^    id: string;$/;"	p	interface:RTCStats
id	tsvscode.ts	/^    id: string;$/;"	p	interface:TextTrackCue
id	tsvscode.ts	/^    id: string;$/;"	p	interface:VTTRegion
id	tsvscode.ts	/^    id?: number;$/;"	p	interface:RTCDataChannelInit
id	tsvscode.ts	/^    id?: string;$/;"	p	interface:KeyframeAnimationOptions
id	tsvscode.ts	/^    id?: string;$/;"	p	interface:PaymentDetailsInit
id	tsvscode.ts	/^    id?: string;$/;"	p	interface:PublicKeyCredentialRpEntity
id	tsvscode.ts	/^    readonly id: number | null;$/;"	p	interface:RTCDataChannel
id	tsvscode.ts	/^    readonly id: string;$/;"	p	interface:Credential
id	tsvscode.ts	/^    readonly id: string;$/;"	p	interface:Gamepad
id	tsvscode.ts	/^    readonly id: string;$/;"	p	interface:MIDIPort
id	tsvscode.ts	/^    readonly id: string;$/;"	p	interface:MediaStream
id	tsvscode.ts	/^    readonly id: string;$/;"	p	interface:MediaStreamTrack
id	tsvscode.ts	/^    readonly id: string;$/;"	p	interface:PaymentRequest
id	tsvscode.ts	/^    readonly id: string;$/;"	p	interface:TextTrack
ideal	tsvscode.ts	/^    ideal?: boolean;$/;"	p	interface:ConstrainBooleanParameters
ideal	tsvscode.ts	/^    ideal?: number;$/;"	p	interface:ConstrainDoubleRange
ideal	tsvscode.ts	/^    ideal?: number;$/;"	p	interface:ConstrainULongRange
ideal	tsvscode.ts	/^    ideal?: string | string[];$/;"	p	interface:ConstrainDOMStringParameters
identifier	tsvscode.ts	/^    identifier: number;$/;"	p	interface:TouchInit
identifier	tsvscode.ts	/^    readonly identifier: number;$/;"	p	interface:Touch
ideographicBaseline	tsvscode.ts	/^    readonly ideographicBaseline: number;$/;"	p	interface:TextMetrics
ifAvailable	tsvscode.ts	/^    ifAvailable?: boolean;$/;"	p	interface:LockOptions
ignoreBOM	tsvscode.ts	/^    ignoreBOM?: boolean;$/;"	p	interface:TextDecoderOptions
ignoreBOM	tsvscode.ts	/^    readonly ignoreBOM: boolean;$/;"	p	interface:TextDecoderCommon
ignoreCase	ests.ts	/^    readonly ignoreCase: boolean;$/;"	p	interface:RegExp
ignoreMethod	tsvscode.ts	/^    ignoreMethod?: boolean;$/;"	p	interface:CacheQueryOptions
ignorePunctuation	ests.ts	/^        ignorePunctuation: boolean;$/;"	p	interface:Intl.ResolvedCollatorOptions
ignorePunctuation	ests.ts	/^        ignorePunctuation?: boolean | undefined;$/;"	p	interface:Intl.CollatorOptions
ignoreSearch	tsvscode.ts	/^    ignoreSearch?: boolean;$/;"	p	interface:CacheQueryOptions
ignoreVary	tsvscode.ts	/^    ignoreVary?: boolean;$/;"	p	interface:CacheQueryOptions
imag	tsvscode.ts	/^    imag?: number[] | Float32Array;$/;"	p	interface:PeriodicWaveOptions
imageOrientation	tsvscode.ts	/^    imageOrientation: string;$/;"	p	interface:CSSStyleDeclaration
imageOrientation	tsvscode.ts	/^    imageOrientation?: ImageOrientation;$/;"	p	interface:ImageBitmapOptions
imageRendering	tsvscode.ts	/^    imageRendering: string;$/;"	p	interface:CSSStyleDeclaration
imageSizes	tsvscode.ts	/^    imageSizes: string;$/;"	p	interface:HTMLLinkElement
imageSmoothingEnabled	tsvscode.ts	/^    imageSmoothingEnabled: boolean;$/;"	p	interface:CanvasImageSmoothing
imageSmoothingQuality	tsvscode.ts	/^    imageSmoothingQuality: ImageSmoothingQuality;$/;"	p	interface:CanvasImageSmoothing
imageSrcset	tsvscode.ts	/^    imageSrcset: string;$/;"	p	interface:HTMLLinkElement
images	tsvscode.ts	/^    readonly images: HTMLCollectionOf<HTMLImageElement>;$/;"	p	interface:Document
implementation	tsvscode.ts	/^    readonly implementation: DOMImplementation;$/;"	p	interface:Document
importKey	tsvscode.ts	/^    importKey(format: "jwk", keyData: JsonWebKey, algorithm: AlgorithmIdentifier | RsaHashedImpo/;"	m	interface:SubtleCrypto
importKey	tsvscode.ts	/^    importKey(format: Exclude<KeyFormat, "jwk">, keyData: BufferSource, algorithm: AlgorithmIden/;"	m	interface:SubtleCrypto
importNode	tsvscode.ts	/^    importNode<T extends Node>(node: T, deep?: boolean): T;$/;"	m	interface:Document
importStylesheet	tsvscode.ts	/^    importStylesheet(style: Node): void;$/;"	m	interface:XSLTProcessor
in1	tsvscode.ts	/^    readonly in1: SVGAnimatedString;$/;"	p	interface:SVGFEBlendElement
in1	tsvscode.ts	/^    readonly in1: SVGAnimatedString;$/;"	p	interface:SVGFEColorMatrixElement
in1	tsvscode.ts	/^    readonly in1: SVGAnimatedString;$/;"	p	interface:SVGFEComponentTransferElement
in1	tsvscode.ts	/^    readonly in1: SVGAnimatedString;$/;"	p	interface:SVGFECompositeElement
in1	tsvscode.ts	/^    readonly in1: SVGAnimatedString;$/;"	p	interface:SVGFEConvolveMatrixElement
in1	tsvscode.ts	/^    readonly in1: SVGAnimatedString;$/;"	p	interface:SVGFEDiffuseLightingElement
in1	tsvscode.ts	/^    readonly in1: SVGAnimatedString;$/;"	p	interface:SVGFEDisplacementMapElement
in1	tsvscode.ts	/^    readonly in1: SVGAnimatedString;$/;"	p	interface:SVGFEDropShadowElement
in1	tsvscode.ts	/^    readonly in1: SVGAnimatedString;$/;"	p	interface:SVGFEGaussianBlurElement
in1	tsvscode.ts	/^    readonly in1: SVGAnimatedString;$/;"	p	interface:SVGFEMergeNodeElement
in1	tsvscode.ts	/^    readonly in1: SVGAnimatedString;$/;"	p	interface:SVGFEMorphologyElement
in1	tsvscode.ts	/^    readonly in1: SVGAnimatedString;$/;"	p	interface:SVGFEOffsetElement
in1	tsvscode.ts	/^    readonly in1: SVGAnimatedString;$/;"	p	interface:SVGFESpecularLightingElement
in1	tsvscode.ts	/^    readonly in1: SVGAnimatedString;$/;"	p	interface:SVGFETileElement
in2	tsvscode.ts	/^    readonly in2: SVGAnimatedString;$/;"	p	interface:SVGFEBlendElement
in2	tsvscode.ts	/^    readonly in2: SVGAnimatedString;$/;"	p	interface:SVGFECompositeElement
in2	tsvscode.ts	/^    readonly in2: SVGAnimatedString;$/;"	p	interface:SVGFEDisplacementMapElement
inBandMetadataTrackDispatchType	tsvscode.ts	/^    readonly inBandMetadataTrackDispatchType: string;$/;"	p	interface:TextTrack
includeUncontrolled	tsvscode.ts	/^    includeUncontrolled?: boolean;$/;"	p	interface:ClientQueryOptions
includes	tsvscode.ts	/^    includes(key: any): boolean;$/;"	m	interface:IDBKeyRange
incomingBidirectionalStreams	tsvscode.ts	/^    readonly incomingBidirectionalStreams: ReadableStream;$/;"	p	interface:WebTransport
incomingHighWaterMark	tsvscode.ts	/^    incomingHighWaterMark: number;$/;"	p	interface:WebTransportDatagramDuplexStream
incomingMaxAge	tsvscode.ts	/^    incomingMaxAge: number | null;$/;"	p	interface:WebTransportDatagramDuplexStream
incomingUnidirectionalStreams	tsvscode.ts	/^    readonly incomingUnidirectionalStreams: ReadableStream;$/;"	p	interface:WebTransport
indeterminate	tsvscode.ts	/^    indeterminate: boolean;$/;"	p	interface:HTMLInputElement
index	ests.ts	/^    index: number;$/;"	p	interface:RegExpExecArray
index	ests.ts	/^    index?: number;$/;"	p	interface:RegExpMatchArray
index	tsvscode.ts	/^    index(name: string): IDBIndex;$/;"	m	interface:IDBObjectStore
index	tsvscode.ts	/^    readonly index: number;$/;"	p	interface:Gamepad
index	tsvscode.ts	/^    readonly index: number;$/;"	p	interface:HTMLOptionElement
indexNames	tsvscode.ts	/^    readonly indexNames: DOMStringList;$/;"	p	interface:IDBObjectStore
indexOf	ests.ts	/^    indexOf(searchElement: T, fromIndex?: number): number;$/;"	m	interface:Array
indexOf	ests.ts	/^    indexOf(searchElement: T, fromIndex?: number): number;$/;"	m	interface:ReadonlyArray
indexOf	ests.ts	/^    indexOf(searchElement: number, fromIndex?: number): number;$/;"	m	interface:Float32Array
indexOf	ests.ts	/^    indexOf(searchElement: number, fromIndex?: number): number;$/;"	m	interface:Float64Array
indexOf	ests.ts	/^    indexOf(searchElement: number, fromIndex?: number): number;$/;"	m	interface:Int16Array
indexOf	ests.ts	/^    indexOf(searchElement: number, fromIndex?: number): number;$/;"	m	interface:Int32Array
indexOf	ests.ts	/^    indexOf(searchElement: number, fromIndex?: number): number;$/;"	m	interface:Int8Array
indexOf	ests.ts	/^    indexOf(searchElement: number, fromIndex?: number): number;$/;"	m	interface:Uint16Array
indexOf	ests.ts	/^    indexOf(searchElement: number, fromIndex?: number): number;$/;"	m	interface:Uint32Array
indexOf	ests.ts	/^    indexOf(searchElement: number, fromIndex?: number): number;$/;"	m	interface:Uint8Array
indexOf	ests.ts	/^    indexOf(searchElement: number, fromIndex?: number): number;$/;"	m	interface:Uint8ClampedArray
indexOf	ests.ts	/^    indexOf(searchString: string, position?: number): number;$/;"	m	interface:String
indexedDB	tsvscode.ts	/^    readonly indexedDB: IDBFactory;$/;"	p	interface:WindowOrWorkerGlobalScope
inert	tsvscode.ts	/^    inert: boolean;$/;"	p	interface:HTMLElement
info	tsvscode.ts	/^    info(...data: any[]): void;$/;"	m	interface:Console
info	tsvscode.ts	/^    info: BufferSource;$/;"	p	interface:HkdfParams
inherits	tsvscode.ts	/^    inherits: boolean;$/;"	p	interface:PropertyDefinition
inherits	tsvscode.ts	/^    readonly inherits: boolean;$/;"	p	interface:CSSPropertyRule
initCompositionEvent	tsvscode.ts	/^    initCompositionEvent(typeArg: string, bubblesArg?: boolean, cancelableArg?: boolean, viewArg/;"	m	interface:CompositionEvent
initCustomEvent	tsvscode.ts	/^    initCustomEvent(type: string, bubbles?: boolean, cancelable?: boolean, detail?: T): void;$/;"	m	interface:CustomEvent
initData	tsvscode.ts	/^    initData?: ArrayBuffer | null;$/;"	p	interface:MediaEncryptedEventInit
initData	tsvscode.ts	/^    readonly initData: ArrayBuffer | null;$/;"	p	interface:MediaEncryptedEvent
initDataType	tsvscode.ts	/^    initDataType?: string;$/;"	p	interface:MediaEncryptedEventInit
initDataType	tsvscode.ts	/^    readonly initDataType: string;$/;"	p	interface:MediaEncryptedEvent
initDataTypes	tsvscode.ts	/^    initDataTypes?: string[];$/;"	p	interface:MediaKeySystemConfiguration
initEvent	tsvscode.ts	/^    initEvent(type: string, bubbles?: boolean, cancelable?: boolean): void;$/;"	m	interface:Event
initKeyboardEvent	tsvscode.ts	/^    initKeyboardEvent(typeArg: string, bubblesArg?: boolean, cancelableArg?: boolean, viewArg?: /;"	m	interface:KeyboardEvent
initMessageEvent	tsvscode.ts	/^    initMessageEvent(type: string, bubbles?: boolean, cancelable?: boolean, data?: any, origin?:/;"	m	interface:MessageEvent
initMouseEvent	tsvscode.ts	/^    initMouseEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Wind/;"	m	interface:MouseEvent
initMutationEvent	tsvscode.ts	/^    initMutationEvent(typeArg: string, bubblesArg?: boolean, cancelableArg?: boolean, relatedNod/;"	m	interface:MutationEvent
initStorageEvent	tsvscode.ts	/^    initStorageEvent(type: string, bubbles?: boolean, cancelable?: boolean, key?: string | null,/;"	m	interface:StorageEvent
initUIEvent	tsvscode.ts	/^    initUIEvent(typeArg: string, bubblesArg?: boolean, cancelableArg?: boolean, viewArg?: Window/;"	m	interface:UIEvent
initialValue	tsvscode.ts	/^    initialValue?: string;$/;"	p	interface:PropertyDefinition
initialValue	tsvscode.ts	/^    readonly initialValue: string | null;$/;"	p	interface:CSSPropertyRule
initialize	tsvscode.ts	/^    initialize(newItem: DOMPoint): DOMPoint;$/;"	m	interface:SVGPointList
initialize	tsvscode.ts	/^    initialize(newItem: SVGLength): SVGLength;$/;"	m	interface:SVGLengthList
initialize	tsvscode.ts	/^    initialize(newItem: SVGNumber): SVGNumber;$/;"	m	interface:SVGNumberList
initialize	tsvscode.ts	/^    initialize(newItem: SVGTransform): SVGTransform;$/;"	m	interface:SVGTransformList
initialize	tsvscode.ts	/^    initialize(newItem: string): string;$/;"	m	interface:SVGStringList
initiatorType	tsvscode.ts	/^    readonly initiatorType: string;$/;"	p	interface:PerformanceResourceTiming
inline	tsvscode.ts	/^    inline?: ScrollLogicalPosition;$/;"	p	interface:ScrollIntoViewOptions
inlineSize	tsvscode.ts	/^    inlineSize: string;$/;"	p	interface:CSSStyleDeclaration
inlineSize	tsvscode.ts	/^    readonly inlineSize: number;$/;"	p	interface:ResizeObserverSize
innerHTML	tsvscode.ts	/^    innerHTML: string;$/;"	p	interface:InnerHTML
innerHeight	tsvscode.ts	/^    readonly innerHeight: number;$/;"	p	interface:Window
innerHeight	tsvscode.ts	/^declare var innerHeight: number;$/;"	v	namespace:CSS
innerText	tsvscode.ts	/^    innerText: string;$/;"	p	interface:HTMLElement
innerWidth	tsvscode.ts	/^    readonly innerWidth: number;$/;"	p	interface:Window
innerWidth	tsvscode.ts	/^declare var innerWidth: number;$/;"	v	namespace:CSS
input	ests.ts	/^    input: string;$/;"	p	interface:RegExpExecArray
input	ests.ts	/^    input?: string;$/;"	p	interface:RegExpMatchArray
inputBuffer	tsvscode.ts	/^    inputBuffer: AudioBuffer;$/;"	p	interface:AudioProcessingEventInit
inputBuffer	tsvscode.ts	/^    readonly inputBuffer: AudioBuffer;$/;"	p	interface:AudioProcessingEvent
inputEncoding	tsvscode.ts	/^    readonly inputEncoding: string;$/;"	p	interface:Document
inputMode	tsvscode.ts	/^    inputMode: string;$/;"	p	interface:ElementContentEditable
inputType	tsvscode.ts	/^    inputType?: string;$/;"	p	interface:InputEventInit
inputType	tsvscode.ts	/^    readonly inputType: string;$/;"	p	interface:InputEvent
inputs	tsvscode.ts	/^    readonly inputs: MIDIInputMap;$/;"	p	interface:MIDIAccess
insertAdjacentElement	tsvscode.ts	/^    insertAdjacentElement(where: InsertPosition, element: Element): Element | null;$/;"	m	interface:Element
insertAdjacentHTML	tsvscode.ts	/^    insertAdjacentHTML(position: InsertPosition, text: string): void;$/;"	m	interface:Element
insertAdjacentText	tsvscode.ts	/^    insertAdjacentText(where: InsertPosition, data: string): void;$/;"	m	interface:Element
insertBefore	tsvscode.ts	/^    insertBefore<T extends Node>(node: T, child: Node | null): T;$/;"	m	interface:Node
insertCell	tsvscode.ts	/^    insertCell(index?: number): HTMLTableCellElement;$/;"	m	interface:HTMLTableRowElement
insertDTMF	tsvscode.ts	/^    insertDTMF(tones: string, duration?: number, interToneGap?: number): void;$/;"	m	interface:RTCDTMFSender
insertData	tsvscode.ts	/^    insertData(offset: number, data: string): void;$/;"	m	interface:CharacterData
insertItemBefore	tsvscode.ts	/^    insertItemBefore(newItem: DOMPoint, index: number): DOMPoint;$/;"	m	interface:SVGPointList
insertItemBefore	tsvscode.ts	/^    insertItemBefore(newItem: SVGLength, index: number): SVGLength;$/;"	m	interface:SVGLengthList
insertItemBefore	tsvscode.ts	/^    insertItemBefore(newItem: SVGNumber, index: number): SVGNumber;$/;"	m	interface:SVGNumberList
insertItemBefore	tsvscode.ts	/^    insertItemBefore(newItem: SVGTransform, index: number): SVGTransform;$/;"	m	interface:SVGTransformList
insertItemBefore	tsvscode.ts	/^    insertItemBefore(newItem: string, index: number): string;$/;"	m	interface:SVGStringList
insertNode	tsvscode.ts	/^    insertNode(node: Node): void;$/;"	m	interface:Range
insertRow	tsvscode.ts	/^    insertRow(index?: number): HTMLTableRowElement;$/;"	m	interface:HTMLTableElement
insertRow	tsvscode.ts	/^    insertRow(index?: number): HTMLTableRowElement;$/;"	m	interface:HTMLTableSectionElement
insertRule	tsvscode.ts	/^    insertRule(rule: string, index?: number): number;$/;"	m	interface:CSSGroupingRule
insertRule	tsvscode.ts	/^    insertRule(rule: string, index?: number): number;$/;"	m	interface:CSSStyleSheet
insertedSamplesForDeceleration	tsvscode.ts	/^    insertedSamplesForDeceleration?: number;$/;"	p	interface:RTCInboundRtpStreamStats
inset	tsvscode.ts	/^    inset: string;$/;"	p	interface:CSSStyleDeclaration
insetBlock	tsvscode.ts	/^    insetBlock: string;$/;"	p	interface:CSSStyleDeclaration
insetBlockEnd	tsvscode.ts	/^    insetBlockEnd: string;$/;"	p	interface:CSSStyleDeclaration
insetBlockStart	tsvscode.ts	/^    insetBlockStart: string;$/;"	p	interface:CSSStyleDeclaration
insetInline	tsvscode.ts	/^    insetInline: string;$/;"	p	interface:CSSStyleDeclaration
insetInlineEnd	tsvscode.ts	/^    insetInlineEnd: string;$/;"	p	interface:CSSStyleDeclaration
insetInlineStart	tsvscode.ts	/^    insetInlineStart: string;$/;"	p	interface:CSSStyleDeclaration
installing	tsvscode.ts	/^    readonly installing: ServiceWorker | null;$/;"	p	interface:ServiceWorkerRegistration
integrity	tsvscode.ts	/^    integrity: string;$/;"	p	interface:HTMLLinkElement
integrity	tsvscode.ts	/^    integrity: string;$/;"	p	interface:HTMLScriptElement
integrity	tsvscode.ts	/^    integrity?: string;$/;"	p	interface:RequestInit
integrity	tsvscode.ts	/^    readonly integrity: string;$/;"	p	interface:Request
intercept	tsvscode.ts	/^    readonly intercept: SVGAnimatedNumber;$/;"	p	interface:SVGComponentTransferFunctionElement
intersectionRatio	tsvscode.ts	/^    intersectionRatio: number;$/;"	p	interface:IntersectionObserverEntryInit
intersectionRatio	tsvscode.ts	/^    readonly intersectionRatio: number;$/;"	p	interface:IntersectionObserverEntry
intersectionRect	tsvscode.ts	/^    intersectionRect: DOMRectInit;$/;"	p	interface:IntersectionObserverEntryInit
intersectionRect	tsvscode.ts	/^    readonly intersectionRect: DOMRectReadOnly;$/;"	p	interface:IntersectionObserverEntry
intersectsNode	tsvscode.ts	/^    intersectsNode(node: Node): boolean;$/;"	m	interface:Range
interval	tsvscode.ts	/^    interval?: number;$/;"	p	interface:DeviceMotionEventInit
interval	tsvscode.ts	/^    readonly interval: number;$/;"	p	interface:DeviceMotionEvent
invalidIteratorState	tsvscode.ts	/^    readonly invalidIteratorState: boolean;$/;"	p	interface:XPathResult
invalidateFramebuffer	tsvscode.ts	/^    invalidateFramebuffer(target: GLenum, attachments: GLenum[]): void;$/;"	m	interface:WebGL2RenderingContextBase
invalidateSubFramebuffer	tsvscode.ts	/^    invalidateSubFramebuffer(target: GLenum, attachments: GLenum[], x: GLint, y: GLint, width: G/;"	m	interface:WebGL2RenderingContextBase
inverse	tsvscode.ts	/^    inverse(): DOMMatrix;$/;"	m	interface:DOMMatrixReadOnly
invertSelf	tsvscode.ts	/^    invertSelf(): DOMMatrix;$/;"	m	interface:DOMMatrix
is	ests.ts	/^    every<S extends T>(predicate: (value: T, index: number, array: T[]) => value is S, thisArg?:/;"	p	interface:Array
is	ests.ts	/^    every<S extends T>(predicate: (value: T, index: number, array: readonly T[]) => value is S, /;"	p	interface:ReadonlyArray
is	ests.ts	/^    isArray(arg: any): arg is any[];$/;"	p	interface:ArrayConstructor
is	ests.ts	/^    isView(arg: any): arg is ArrayBufferView;$/;"	p	interface:ArrayBufferConstructor
is	tsvscode.ts	/^    is?: string;$/;"	p	interface:ElementCreationOptions
is2D	tsvscode.ts	/^    is2D: boolean;$/;"	p	interface:CSSTransformComponent
is2D	tsvscode.ts	/^    is2D?: boolean;$/;"	p	interface:CSSMatrixComponentOptions
is2D	tsvscode.ts	/^    is2D?: boolean;$/;"	p	interface:DOMMatrixInit
is2D	tsvscode.ts	/^    readonly is2D: boolean;$/;"	p	interface:CSSTransformValue
is2D	tsvscode.ts	/^    readonly is2D: boolean;$/;"	p	interface:DOMMatrixReadOnly
isActive	tsvscode.ts	/^    readonly isActive: boolean;$/;"	p	interface:UserActivation
isArray	ests.ts	/^    isArray(arg: any): arg is any[];$/;"	m	interface:ArrayConstructor
isBuffer	tsvscode.ts	/^    isBuffer(buffer: WebGLBuffer | null): GLboolean;$/;"	m	interface:WebGLRenderingContextBase
isCollapsed	tsvscode.ts	/^    readonly isCollapsed: boolean;$/;"	p	interface:Selection
isComposing	tsvscode.ts	/^    isComposing?: boolean;$/;"	p	interface:InputEventInit
isComposing	tsvscode.ts	/^    isComposing?: boolean;$/;"	p	interface:KeyboardEventInit
isComposing	tsvscode.ts	/^    readonly isComposing: boolean;$/;"	p	interface:InputEvent
isComposing	tsvscode.ts	/^    readonly isComposing: boolean;$/;"	p	interface:KeyboardEvent
isConditionalMediationAvailable	tsvscode.ts	/^    isConditionalMediationAvailable(): Promise<boolean>;$/;"	v
isConfigSupported	tsvscode.ts	/^    isConfigSupported(config: VideoDecoderConfig): Promise<VideoDecoderSupport>;$/;"	v
isConfigSupported	tsvscode.ts	/^    isConfigSupported(config: VideoEncoderConfig): Promise<VideoEncoderSupport>;$/;"	v
isConnected	tsvscode.ts	/^    readonly isConnected: boolean;$/;"	p	interface:Node
isContentEditable	tsvscode.ts	/^    readonly isContentEditable: boolean;$/;"	p	interface:ElementContentEditable
isContextLost	tsvscode.ts	/^    isContextLost(): boolean;$/;"	m	interface:WebGLRenderingContextBase
isDefaultNamespace	tsvscode.ts	/^    isDefaultNamespace(namespace: string | null): boolean;$/;"	m	interface:Node
isDirectory	tsvscode.ts	/^    readonly isDirectory: boolean;$/;"	p	interface:FileSystemEntry
isEnabled	tsvscode.ts	/^    isEnabled(cap: GLenum): GLboolean;$/;"	m	interface:WebGLRenderingContextBase
isEqualNode	tsvscode.ts	/^    isEqualNode(otherNode: Node | null): boolean;$/;"	m	interface:Node
isExtensible	ests.ts	/^    isExtensible(o: any): boolean;$/;"	m	interface:ObjectConstructor
isFile	tsvscode.ts	/^    readonly isFile: boolean;$/;"	p	interface:FileSystemEntry
isFinal	tsvscode.ts	/^    readonly isFinal: boolean;$/;"	p	interface:SpeechRecognitionResult
isFramebuffer	tsvscode.ts	/^    isFramebuffer(framebuffer: WebGLFramebuffer | null): GLboolean;$/;"	m	interface:WebGLRenderingContextBase
isFrozen	ests.ts	/^    isFrozen(o: any): boolean;$/;"	m	interface:ObjectConstructor
isIdentity	tsvscode.ts	/^    readonly isIdentity: boolean;$/;"	p	interface:DOMMatrixReadOnly
isIntersecting	tsvscode.ts	/^    isIntersecting: boolean;$/;"	p	interface:IntersectionObserverEntryInit
isIntersecting	tsvscode.ts	/^    readonly isIntersecting: boolean;$/;"	p	interface:IntersectionObserverEntry
isMap	tsvscode.ts	/^    isMap: boolean;$/;"	p	interface:HTMLImageElement
isPointInFill	tsvscode.ts	/^    isPointInFill(point?: DOMPointInit): boolean;$/;"	m	interface:SVGGeometryElement
isPointInPath	tsvscode.ts	/^    isPointInPath(path: Path2D, x: number, y: number, fillRule?: CanvasFillRule): boolean;$/;"	m	interface:CanvasDrawPath
isPointInPath	tsvscode.ts	/^    isPointInPath(x: number, y: number, fillRule?: CanvasFillRule): boolean;$/;"	m	interface:CanvasDrawPath
isPointInRange	tsvscode.ts	/^    isPointInRange(node: Node, offset: number): boolean;$/;"	m	interface:Range
isPointInStroke	tsvscode.ts	/^    isPointInStroke(path: Path2D, x: number, y: number): boolean;$/;"	m	interface:CanvasDrawPath
isPointInStroke	tsvscode.ts	/^    isPointInStroke(point?: DOMPointInit): boolean;$/;"	m	interface:SVGGeometryElement
isPointInStroke	tsvscode.ts	/^    isPointInStroke(x: number, y: number): boolean;$/;"	m	interface:CanvasDrawPath
isPrimary	tsvscode.ts	/^    isPrimary?: boolean;$/;"	p	interface:PointerEventInit
isPrimary	tsvscode.ts	/^    readonly isPrimary: boolean;$/;"	p	interface:PointerEvent
isProgram	tsvscode.ts	/^    isProgram(program: WebGLProgram | null): GLboolean;$/;"	m	interface:WebGLRenderingContextBase
isPrototypeOf	ests.ts	/^    isPrototypeOf(v: Object): boolean;$/;"	m	interface:Object
isQuery	tsvscode.ts	/^    isQuery(query: WebGLQuery | null): GLboolean;$/;"	m	interface:WebGL2RenderingContextBase
isRenderbuffer	tsvscode.ts	/^    isRenderbuffer(renderbuffer: WebGLRenderbuffer | null): GLboolean;$/;"	m	interface:WebGLRenderingContextBase
isSameEntry	tsvscode.ts	/^    isSameEntry(other: FileSystemHandle): Promise<boolean>;$/;"	m	interface:FileSystemHandle
isSameNode	tsvscode.ts	/^    isSameNode(otherNode: Node | null): boolean;$/;"	m	interface:Node
isSampler	tsvscode.ts	/^    isSampler(sampler: WebGLSampler | null): GLboolean;$/;"	m	interface:WebGL2RenderingContextBase
isSealed	ests.ts	/^    isSealed(o: any): boolean;$/;"	m	interface:ObjectConstructor
isSecureContext	tsvscode.ts	/^    readonly isSecureContext: boolean;$/;"	p	interface:WindowOrWorkerGlobalScope
isShader	tsvscode.ts	/^    isShader(shader: WebGLShader | null): GLboolean;$/;"	m	interface:WebGLRenderingContextBase
isSync	tsvscode.ts	/^    isSync(sync: WebGLSync | null): GLboolean;$/;"	m	interface:WebGL2RenderingContextBase
isTexture	tsvscode.ts	/^    isTexture(texture: WebGLTexture | null): GLboolean;$/;"	m	interface:WebGLRenderingContextBase
isTransformFeedback	tsvscode.ts	/^    isTransformFeedback(tf: WebGLTransformFeedback | null): GLboolean;$/;"	m	interface:WebGL2RenderingContextBase
isTrusted	tsvscode.ts	/^    readonly isTrusted: boolean;$/;"	p	interface:Event
isTypeSupported	tsvscode.ts	/^    isTypeSupported(type: string): boolean;$/;"	v
isUserVerifyingPlatformAuthenticatorAvailable	tsvscode.ts	/^    isUserVerifyingPlatformAuthenticatorAvailable(): Promise<boolean>;$/;"	v
isVertexArray	tsvscode.ts	/^    isVertexArray(vertexArray: WebGLVertexArrayObject | null): GLboolean;$/;"	m	interface:WebGL2RenderingContextBase
isVertexArrayOES	tsvscode.ts	/^    isVertexArrayOES(arrayObject: WebGLVertexArrayObjectOES | null): GLboolean;$/;"	m	interface:OES_vertex_array_object
isView	ests.ts	/^    isView(arg: any): arg is ArrayBufferView;$/;"	m	interface:ArrayBufferConstructor
isolation	tsvscode.ts	/^    isolation: string;$/;"	p	interface:CSSStyleDeclaration
item	tsvscode.ts	/^    item(index: number): Attr | null;$/;"	m	interface:NamedNodeMap
item	tsvscode.ts	/^    item(index: number): CSSRule | null;$/;"	m	interface:CSSRuleList
item	tsvscode.ts	/^    item(index: number): CSSStyleSheet | null;$/;"	m	interface:StyleSheetList
item	tsvscode.ts	/^    item(index: number): DOMRect | null;$/;"	m	interface:DOMRectList
item	tsvscode.ts	/^    item(index: number): Element | null;$/;"	m	interface:HTMLCollectionBase
item	tsvscode.ts	/^    item(index: number): File | null;$/;"	m	interface:FileList
item	tsvscode.ts	/^    item(index: number): HTMLOptionElement | null;$/;"	m	interface:HTMLSelectElement
item	tsvscode.ts	/^    item(index: number): MimeType | null;$/;"	m	interface:MimeTypeArray
item	tsvscode.ts	/^    item(index: number): MimeType | null;$/;"	m	interface:Plugin
item	tsvscode.ts	/^    item(index: number): Node | null;$/;"	m	interface:NodeList
item	tsvscode.ts	/^    item(index: number): Plugin | null;$/;"	m	interface:PluginArray
item	tsvscode.ts	/^    item(index: number): SpeechRecognitionAlternative;$/;"	m	interface:SpeechRecognitionResult
item	tsvscode.ts	/^    item(index: number): SpeechRecognitionResult;$/;"	m	interface:SpeechRecognitionResultList
item	tsvscode.ts	/^    item(index: number): T | null;$/;"	m	interface:HTMLCollectionOf
item	tsvscode.ts	/^    item(index: number): TNode;$/;"	m	interface:NodeListOf
item	tsvscode.ts	/^    item(index: number): Touch | null;$/;"	m	interface:TouchList
item	tsvscode.ts	/^    item(index: number): string | null;$/;"	m	interface:DOMStringList
item	tsvscode.ts	/^    item(index: number): string | null;$/;"	m	interface:DOMTokenList
item	tsvscode.ts	/^    item(index: number): string | null;$/;"	m	interface:MediaList
item	tsvscode.ts	/^    item(index: number): string;$/;"	m	interface:CSSStyleDeclaration
item	tsvscode.ts	/^    item(nameOrIndex?: string): HTMLCollection | Element | null;$/;"	m	interface:HTMLAllCollection
items	tsvscode.ts	/^    readonly items: DataTransferItemList;$/;"	p	interface:DataTransfer
iterateNext	tsvscode.ts	/^    iterateNext(): Node | null;$/;"	m	interface:XPathResult
iterationComposite	tsvscode.ts	/^    iterationComposite: IterationCompositeOperation;$/;"	p	interface:KeyframeEffect
iterationComposite	tsvscode.ts	/^    iterationComposite?: IterationCompositeOperation;$/;"	p	interface:KeyframeEffectOptions
iterationStart	tsvscode.ts	/^    iterationStart?: number;$/;"	p	interface:EffectTiming
iterationStart	tsvscode.ts	/^    iterationStart?: number;$/;"	p	interface:OptionalEffectTiming
iterations	tsvscode.ts	/^    iterations: number;$/;"	p	interface:Pbkdf2Params
iterations	tsvscode.ts	/^    iterations?: number;$/;"	p	interface:EffectTiming
iterations	tsvscode.ts	/^    iterations?: number;$/;"	p	interface:OptionalEffectTiming
iv	tsvscode.ts	/^    iv: BufferSource;$/;"	p	interface:AesCbcParams
iv	tsvscode.ts	/^    iv: BufferSource;$/;"	p	interface:AesGcmParams
javaEnabled	tsvscode.ts	/^    javaEnabled(): boolean;$/;"	m	interface:NavigatorPlugins
jitter	tsvscode.ts	/^    jitter?: number;$/;"	p	interface:RTCReceivedRtpStreamStats
jitterBufferDelay	tsvscode.ts	/^    jitterBufferDelay?: number;$/;"	p	interface:RTCInboundRtpStreamStats
jitterBufferEmittedCount	tsvscode.ts	/^    jitterBufferEmittedCount?: number;$/;"	p	interface:RTCInboundRtpStreamStats
join	ests.ts	/^    join(separator?: string): string;$/;"	m	interface:Array
join	ests.ts	/^    join(separator?: string): string;$/;"	m	interface:ConcatArray
join	ests.ts	/^    join(separator?: string): string;$/;"	m	interface:Float32Array
join	ests.ts	/^    join(separator?: string): string;$/;"	m	interface:Float64Array
join	ests.ts	/^    join(separator?: string): string;$/;"	m	interface:Int16Array
join	ests.ts	/^    join(separator?: string): string;$/;"	m	interface:Int32Array
join	ests.ts	/^    join(separator?: string): string;$/;"	m	interface:Int8Array
join	ests.ts	/^    join(separator?: string): string;$/;"	m	interface:ReadonlyArray
join	ests.ts	/^    join(separator?: string): string;$/;"	m	interface:Uint16Array
join	ests.ts	/^    join(separator?: string): string;$/;"	m	interface:Uint32Array
join	ests.ts	/^    join(separator?: string): string;$/;"	m	interface:Uint8Array
join	ests.ts	/^    join(separator?: string): string;$/;"	m	interface:Uint8ClampedArray
json	tsvscode.ts	/^    json(): Promise<any>;$/;"	m	interface:Body
json	tsvscode.ts	/^    json(data: any, init?: ResponseInit): Response;$/;"	v
justifyContent	tsvscode.ts	/^    justifyContent: string;$/;"	p	interface:CSSStyleDeclaration
justifyItems	tsvscode.ts	/^    justifyItems: string;$/;"	p	interface:CSSStyleDeclaration
justifySelf	tsvscode.ts	/^    justifySelf: string;$/;"	p	interface:CSSStyleDeclaration
k	tsvscode.ts	/^    k?: string;$/;"	p	interface:JsonWebKey
k1	tsvscode.ts	/^    readonly k1: SVGAnimatedNumber;$/;"	p	interface:SVGFECompositeElement
k2	tsvscode.ts	/^    readonly k2: SVGAnimatedNumber;$/;"	p	interface:SVGFECompositeElement
k3	tsvscode.ts	/^    readonly k3: SVGAnimatedNumber;$/;"	p	interface:SVGFECompositeElement
k4	tsvscode.ts	/^    readonly k4: SVGAnimatedNumber;$/;"	p	interface:SVGFECompositeElement
keepExistingData	tsvscode.ts	/^    keepExistingData?: boolean;$/;"	p	interface:FileSystemCreateWritableOptions
keepalive	tsvscode.ts	/^    keepalive?: boolean;$/;"	p	interface:RequestInit
keepalive	tsvscode.ts	/^    readonly keepalive: boolean;$/;"	p	interface:Request
kernelMatrix	tsvscode.ts	/^    readonly kernelMatrix: SVGAnimatedNumberList;$/;"	p	interface:SVGFEConvolveMatrixElement
kernelUnitLengthX	tsvscode.ts	/^    readonly kernelUnitLengthX: SVGAnimatedNumber;$/;"	p	interface:SVGFEConvolveMatrixElement
kernelUnitLengthX	tsvscode.ts	/^    readonly kernelUnitLengthX: SVGAnimatedNumber;$/;"	p	interface:SVGFEDiffuseLightingElement
kernelUnitLengthX	tsvscode.ts	/^    readonly kernelUnitLengthX: SVGAnimatedNumber;$/;"	p	interface:SVGFESpecularLightingElement
kernelUnitLengthY	tsvscode.ts	/^    readonly kernelUnitLengthY: SVGAnimatedNumber;$/;"	p	interface:SVGFEConvolveMatrixElement
kernelUnitLengthY	tsvscode.ts	/^    readonly kernelUnitLengthY: SVGAnimatedNumber;$/;"	p	interface:SVGFEDiffuseLightingElement
kernelUnitLengthY	tsvscode.ts	/^    readonly kernelUnitLengthY: SVGAnimatedNumber;$/;"	p	interface:SVGFESpecularLightingElement
key	tsvscode.ts	/^    key(index: number): string | null;$/;"	m	interface:Storage
key	tsvscode.ts	/^    key?: string | null;$/;"	p	interface:StorageEventInit
key	tsvscode.ts	/^    key?: string;$/;"	p	interface:KeyboardEventInit
key	tsvscode.ts	/^    readonly key: IDBValidKey;$/;"	p	interface:IDBCursor
key	tsvscode.ts	/^    readonly key: string | null;$/;"	p	interface:StorageEvent
key	tsvscode.ts	/^    readonly key: string;$/;"	p	interface:KeyboardEvent
keyCode	tsvscode.ts	/^    keyCode?: number;$/;"	p	interface:KeyboardEventInit
keyCode	tsvscode.ts	/^    readonly keyCode: number;$/;"	p	interface:KeyboardEvent
keyFrame	tsvscode.ts	/^    keyFrame?: boolean;$/;"	p	interface:VideoEncoderEncodeOptions
keyFramesDecoded	tsvscode.ts	/^    keyFramesDecoded?: number;$/;"	p	interface:RTCInboundRtpStreamStats
keyFramesEncoded	tsvscode.ts	/^    keyFramesEncoded?: number;$/;"	p	interface:RTCOutboundRtpStreamStats
keyPath	tsvscode.ts	/^    keyPath?: string | string[] | null;$/;"	p	interface:IDBObjectStoreParameters
keyPath	tsvscode.ts	/^    readonly keyPath: string | string[];$/;"	p	interface:IDBIndex
keyPath	tsvscode.ts	/^    readonly keyPath: string | string[];$/;"	p	interface:IDBObjectStore
keyStatuses	tsvscode.ts	/^    readonly keyStatuses: MediaKeyStatusMap;$/;"	p	interface:MediaKeySession
keySystem	tsvscode.ts	/^    readonly keySystem: string;$/;"	p	interface:MediaKeySystemAccess
keyText	tsvscode.ts	/^    keyText: string;$/;"	p	interface:CSSKeyframeRule
key_ops	tsvscode.ts	/^    key_ops?: string[];$/;"	p	interface:JsonWebKey
keys	ests.ts	/^    keys(o: object): string[];$/;"	m	interface:ObjectConstructor
keys	tsvscode.ts	/^    keys(): Promise<string[]>;$/;"	m	interface:CacheStorage
keys	tsvscode.ts	/^    keys(request?: RequestInfo | URL, options?: CacheQueryOptions): Promise<ReadonlyArray<Reques/;"	m	interface:Cache
keys	tsvscode.ts	/^    keys?: Record<string, string>;$/;"	p	interface:PushSubscriptionJSON
kind	tsvscode.ts	/^    kind: string;$/;"	p	interface:HTMLTrackElement
kind	tsvscode.ts	/^    kind: string;$/;"	p	interface:RTCRtpStreamStats
kind	tsvscode.ts	/^    readonly kind: "directory";$/;"	p	interface:FileSystemDirectoryHandle
kind	tsvscode.ts	/^    readonly kind: "file";$/;"	p	interface:FileSystemFileHandle
kind	tsvscode.ts	/^    readonly kind: FileSystemHandleKind;$/;"	p	interface:FileSystemHandle
kind	tsvscode.ts	/^    readonly kind: MediaDeviceKind;$/;"	p	interface:MediaDeviceInfo
kind	tsvscode.ts	/^    readonly kind: TextTrackKind;$/;"	p	interface:TextTrack
kind	tsvscode.ts	/^    readonly kind: string;$/;"	p	interface:DataTransferItem
kind	tsvscode.ts	/^    readonly kind: string;$/;"	p	interface:MediaStreamTrack
knee	tsvscode.ts	/^    knee?: number;$/;"	p	interface:DynamicsCompressorOptions
knee	tsvscode.ts	/^    readonly knee: AudioParam;$/;"	p	interface:DynamicsCompressorNode
kty	tsvscode.ts	/^    kty?: string;$/;"	p	interface:JsonWebKey
label	tsvscode.ts	/^    label: string;$/;"	p	interface:HTMLOptGroupElement
label	tsvscode.ts	/^    label: string;$/;"	p	interface:HTMLOptionElement
label	tsvscode.ts	/^    label: string;$/;"	p	interface:HTMLTrackElement
label	tsvscode.ts	/^    label: string;$/;"	p	interface:PaymentItem
label	tsvscode.ts	/^    label?: BufferSource;$/;"	p	interface:RsaOaepParams
label	tsvscode.ts	/^    label?: string;$/;"	p	interface:MediaKeySystemConfiguration
label	tsvscode.ts	/^    readonly label: string;$/;"	p	interface:MediaDeviceInfo
label	tsvscode.ts	/^    readonly label: string;$/;"	p	interface:MediaStreamTrack
label	tsvscode.ts	/^    readonly label: string;$/;"	p	interface:RTCDataChannel
label	tsvscode.ts	/^    readonly label: string;$/;"	p	interface:TextTrack
labels	tsvscode.ts	/^    readonly labels: NodeList;$/;"	p	interface:ElementInternals
labels	tsvscode.ts	/^    readonly labels: NodeListOf<HTMLLabelElement> | null;$/;"	p	interface:HTMLInputElement
labels	tsvscode.ts	/^    readonly labels: NodeListOf<HTMLLabelElement>;$/;"	p	interface:HTMLButtonElement
labels	tsvscode.ts	/^    readonly labels: NodeListOf<HTMLLabelElement>;$/;"	p	interface:HTMLMeterElement
labels	tsvscode.ts	/^    readonly labels: NodeListOf<HTMLLabelElement>;$/;"	p	interface:HTMLOutputElement
labels	tsvscode.ts	/^    readonly labels: NodeListOf<HTMLLabelElement>;$/;"	p	interface:HTMLProgressElement
labels	tsvscode.ts	/^    readonly labels: NodeListOf<HTMLLabelElement>;$/;"	p	interface:HTMLSelectElement
labels	tsvscode.ts	/^    readonly labels: NodeListOf<HTMLLabelElement>;$/;"	p	interface:HTMLTextAreaElement
lang	tsvscode.ts	/^    lang: string;$/;"	p	interface:HTMLElement
lang	tsvscode.ts	/^    lang: string;$/;"	p	interface:SpeechSynthesisUtterance
lang	tsvscode.ts	/^    lang?: string;$/;"	p	interface:NotificationOptions
lang	tsvscode.ts	/^    readonly lang: string;$/;"	p	interface:Notification
lang	tsvscode.ts	/^    readonly lang: string;$/;"	p	interface:SpeechSynthesisVoice
language	tsvscode.ts	/^    readonly language: string;$/;"	p	interface:NavigatorLanguage
language	tsvscode.ts	/^    readonly language: string;$/;"	p	interface:TextTrack
languages	tsvscode.ts	/^    readonly languages: ReadonlyArray<string>;$/;"	p	interface:NavigatorLanguage
lastChild	tsvscode.ts	/^    lastChild(): Node | null;$/;"	m	interface:TreeWalker
lastChild	tsvscode.ts	/^    readonly lastChild: ChildNode | null;$/;"	p	interface:Node
lastElementChild	tsvscode.ts	/^    readonly lastElementChild: Element | null;$/;"	p	interface:ParentNode
lastEventId	tsvscode.ts	/^    lastEventId?: string;$/;"	p	interface:MessageEventInit
lastEventId	tsvscode.ts	/^    readonly lastEventId: string;$/;"	p	interface:MessageEvent
lastIndex	ests.ts	/^    lastIndex: number;$/;"	p	interface:RegExp
lastIndexOf	ests.ts	/^    lastIndexOf(searchElement: T, fromIndex?: number): number;$/;"	m	interface:Array
lastIndexOf	ests.ts	/^    lastIndexOf(searchElement: T, fromIndex?: number): number;$/;"	m	interface:ReadonlyArray
lastIndexOf	ests.ts	/^    lastIndexOf(searchElement: number, fromIndex?: number): number;$/;"	m	interface:Float32Array
lastIndexOf	ests.ts	/^    lastIndexOf(searchElement: number, fromIndex?: number): number;$/;"	m	interface:Float64Array
lastIndexOf	ests.ts	/^    lastIndexOf(searchElement: number, fromIndex?: number): number;$/;"	m	interface:Int16Array
lastIndexOf	ests.ts	/^    lastIndexOf(searchElement: number, fromIndex?: number): number;$/;"	m	interface:Int32Array
lastIndexOf	ests.ts	/^    lastIndexOf(searchElement: number, fromIndex?: number): number;$/;"	m	interface:Int8Array
lastIndexOf	ests.ts	/^    lastIndexOf(searchElement: number, fromIndex?: number): number;$/;"	m	interface:Uint16Array
lastIndexOf	ests.ts	/^    lastIndexOf(searchElement: number, fromIndex?: number): number;$/;"	m	interface:Uint32Array
lastIndexOf	ests.ts	/^    lastIndexOf(searchElement: number, fromIndex?: number): number;$/;"	m	interface:Uint8Array
lastIndexOf	ests.ts	/^    lastIndexOf(searchElement: number, fromIndex?: number): number;$/;"	m	interface:Uint8ClampedArray
lastIndexOf	ests.ts	/^    lastIndexOf(searchString: string, position?: number): number;$/;"	m	interface:String
lastModified	tsvscode.ts	/^    lastModified?: number;$/;"	p	interface:FilePropertyBag
lastModified	tsvscode.ts	/^    readonly lastModified: number;$/;"	p	interface:File
lastModified	tsvscode.ts	/^    readonly lastModified: string;$/;"	p	interface:Document
lastPacketReceivedTimestamp	tsvscode.ts	/^    lastPacketReceivedTimestamp?: DOMHighResTimeStamp;$/;"	p	interface:RTCIceCandidatePairStats
lastPacketReceivedTimestamp	tsvscode.ts	/^    lastPacketReceivedTimestamp?: DOMHighResTimeStamp;$/;"	p	interface:RTCInboundRtpStreamStats
lastPacketSentTimestamp	tsvscode.ts	/^    lastPacketSentTimestamp?: DOMHighResTimeStamp;$/;"	p	interface:RTCIceCandidatePairStats
latencyHint	tsvscode.ts	/^    latencyHint?: AudioContextLatencyCategory | number;$/;"	p	interface:AudioContextOptions
latencyMode	tsvscode.ts	/^    latencyMode?: LatencyMode;$/;"	p	interface:VideoEncoderConfig
latitude	tsvscode.ts	/^    readonly latitude: number;$/;"	p	interface:GeolocationCoordinates
layerName	tsvscode.ts	/^    readonly layerName: string | null;$/;"	p	interface:CSSImportRule
layerX	tsvscode.ts	/^    readonly layerX: number;$/;"	p	interface:MouseEvent
layerY	tsvscode.ts	/^    readonly layerY: number;$/;"	p	interface:MouseEvent
layout	tsvscode.ts	/^    layout?: PlaneLayout[];$/;"	p	interface:VideoFrameBufferInit
layout	tsvscode.ts	/^    layout?: PlaneLayout[];$/;"	p	interface:VideoFrameCopyToOptions
left	tsvscode.ts	/^    left: string;$/;"	p	interface:CSSStyleDeclaration
left	tsvscode.ts	/^    left?: number;$/;"	p	interface:ScrollToOptions
left	tsvscode.ts	/^    readonly left: number;$/;"	p	interface:DOMRectReadOnly
length	ests.ts	/^    length: number;$/;"	p	interface:Array
length	ests.ts	/^    length: number;$/;"	p	interface:IArguments
length	ests.ts	/^    readonly length: number;$/;"	p	interface:ArrayLike
length	ests.ts	/^    readonly length: number;$/;"	p	interface:ConcatArray
length	ests.ts	/^    readonly length: number;$/;"	p	interface:Float32Array
length	ests.ts	/^    readonly length: number;$/;"	p	interface:Float64Array
length	ests.ts	/^    readonly length: number;$/;"	p	interface:Function
length	ests.ts	/^    readonly length: number;$/;"	p	interface:Int16Array
length	ests.ts	/^    readonly length: number;$/;"	p	interface:Int32Array
length	ests.ts	/^    readonly length: number;$/;"	p	interface:Int8Array
length	ests.ts	/^    readonly length: number;$/;"	p	interface:ReadonlyArray
length	ests.ts	/^    readonly length: number;$/;"	p	interface:String
length	ests.ts	/^    readonly length: number;$/;"	p	interface:Uint16Array
length	ests.ts	/^    readonly length: number;$/;"	p	interface:Uint32Array
length	ests.ts	/^    readonly length: number;$/;"	p	interface:Uint8Array
length	ests.ts	/^    readonly length: number;$/;"	p	interface:Uint8ClampedArray
length	tsvscode.ts	/^    length: CSSPerspectiveValue;$/;"	p	interface:CSSPerspective
length	tsvscode.ts	/^    length: number;$/;"	p	interface:AesCtrParams
length	tsvscode.ts	/^    length: number;$/;"	p	interface:AesDerivedKeyParams
length	tsvscode.ts	/^    length: number;$/;"	p	interface:AesKeyAlgorithm
length	tsvscode.ts	/^    length: number;$/;"	p	interface:AesKeyGenParams
length	tsvscode.ts	/^    length: number;$/;"	p	interface:AudioBufferOptions
length	tsvscode.ts	/^    length: number;$/;"	p	interface:HTMLOptionsCollection
length	tsvscode.ts	/^    length: number;$/;"	p	interface:HTMLSelectElement
length	tsvscode.ts	/^    length: number;$/;"	p	interface:HmacKeyAlgorithm
length	tsvscode.ts	/^    length: number;$/;"	p	interface:OfflineAudioContextOptions
length	tsvscode.ts	/^    length?: number;$/;"	p	interface:CSSNumericType
length	tsvscode.ts	/^    length?: number;$/;"	p	interface:HmacImportParams
length	tsvscode.ts	/^    length?: number;$/;"	p	interface:HmacKeyGenParams
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:AudioBuffer
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:CSSKeyframesRule
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:CSSNumericArray
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:CSSRuleList
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:CSSStyleDeclaration
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:CSSTransformValue
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:CSSUnparsedValue
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:CharacterData
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:DOMRectList
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:DOMStringList
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:DOMTokenList
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:DataTransferItemList
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:FileList
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:HTMLAllCollection
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:HTMLCollectionBase
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:HTMLFormElement
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:History
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:MediaList
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:MimeTypeArray
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:NamedNodeMap
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:NodeList
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:OfflineAudioContext
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:Plugin
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:PluginArray
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:SVGLengthList
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:SVGNumberList
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:SVGPointList
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:SVGStringList
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:SVGTransformList
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:SourceBufferList
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:SpeechRecognitionResult
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:SpeechRecognitionResultList
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:Storage
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:StyleSheetList
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:TextTrackCueList
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:TextTrackList
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:TimeRanges
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:TouchList
length	tsvscode.ts	/^    readonly length: number;$/;"	p	interface:Window
length	tsvscode.ts	/^declare var length: number;$/;"	v	namespace:CSS
lengthAdjust	tsvscode.ts	/^    readonly lengthAdjust: SVGAnimatedEnumeration;$/;"	p	interface:SVGTextContentElement
lengthComputable	tsvscode.ts	/^    lengthComputable?: boolean;$/;"	p	interface:ProgressEventInit
lengthComputable	tsvscode.ts	/^    readonly lengthComputable: boolean;$/;"	p	interface:ProgressEvent
letterSpacing	tsvscode.ts	/^    letterSpacing: string;$/;"	p	interface:CSSStyleDeclaration
letterSpacing	tsvscode.ts	/^    letterSpacing: string;$/;"	p	interface:CanvasTextDrawingStyles
lightingColor	tsvscode.ts	/^    lightingColor: string;$/;"	p	interface:CSSStyleDeclaration
limitingConeAngle	tsvscode.ts	/^    readonly limitingConeAngle: SVGAnimatedNumber;$/;"	p	interface:SVGFESpotLightElement
line	tsvscode.ts	/^    line: LineAndPositionSetting;$/;"	p	interface:VTTCue
lineAlign	tsvscode.ts	/^    lineAlign: LineAlignSetting;$/;"	p	interface:VTTCue
lineBreak	tsvscode.ts	/^    lineBreak: string;$/;"	p	interface:CSSStyleDeclaration
lineCap	tsvscode.ts	/^    lineCap: CanvasLineCap;$/;"	p	interface:CanvasPathDrawingStyles
lineDashOffset	tsvscode.ts	/^    lineDashOffset: number;$/;"	p	interface:CanvasPathDrawingStyles
lineGapOverride	tsvscode.ts	/^    lineGapOverride: string;$/;"	p	interface:FontFace
lineGapOverride	tsvscode.ts	/^    lineGapOverride?: string;$/;"	p	interface:FontFaceDescriptors
lineHeight	tsvscode.ts	/^    lineHeight: string;$/;"	p	interface:CSSStyleDeclaration
lineJoin	tsvscode.ts	/^    lineJoin: CanvasLineJoin;$/;"	p	interface:CanvasPathDrawingStyles
lineNumber	tsvscode.ts	/^    lineNumber?: number;$/;"	p	interface:SecurityPolicyViolationEventInit
lineNumber	tsvscode.ts	/^    readonly lineNumber: number;$/;"	p	interface:SecurityPolicyViolationEvent
lineTo	tsvscode.ts	/^    lineTo(x: number, y: number): void;$/;"	m	interface:CanvasPath
lineWidth	tsvscode.ts	/^    lineWidth(width: GLfloat): void;$/;"	m	interface:WebGLRenderingContextBase
lineWidth	tsvscode.ts	/^    lineWidth: number;$/;"	p	interface:CanvasPathDrawingStyles
linearRampToValueAtTime	tsvscode.ts	/^    linearRampToValueAtTime(value: number, endTime: number): AudioParam;$/;"	m	interface:AudioParam
lineno	tsvscode.ts	/^    lineno?: number;$/;"	p	interface:ErrorEventInit
lineno	tsvscode.ts	/^    readonly lineno: number;$/;"	p	interface:ErrorEvent
lines	tsvscode.ts	/^    lines: number;$/;"	p	interface:VTTRegion
link	tsvscode.ts	/^    link: string;$/;"	p	interface:HTMLBodyElement
linkColor	tsvscode.ts	/^    linkColor: string;$/;"	p	interface:Document
linkProgram	tsvscode.ts	/^    linkProgram(program: WebGLProgram): void;$/;"	m	interface:WebGLRenderingContextBase
links	tsvscode.ts	/^    readonly links: HTMLCollectionOf<HTMLAnchorElement | HTMLAreaElement>;$/;"	p	interface:Document
list	tsvscode.ts	/^    readonly list: HTMLDataListElement | null;$/;"	p	interface:HTMLInputElement
listStyle	tsvscode.ts	/^    listStyle: string;$/;"	p	interface:CSSStyleDeclaration
listStyleImage	tsvscode.ts	/^    listStyleImage: string;$/;"	p	interface:CSSStyleDeclaration
listStylePosition	tsvscode.ts	/^    listStylePosition: string;$/;"	p	interface:CSSStyleDeclaration
listStyleType	tsvscode.ts	/^    listStyleType: string;$/;"	p	interface:CSSStyleDeclaration
listener	tsvscode.ts	/^    readonly listener: AudioListener;$/;"	p	interface:BaseAudioContext
load	tsvscode.ts	/^    load(): Promise<FontFace>;$/;"	m	interface:FontFace
load	tsvscode.ts	/^    load(): void;$/;"	m	interface:HTMLMediaElement
load	tsvscode.ts	/^    load(font: string, text?: string): Promise<FontFace[]>;$/;"	m	interface:FontFaceSet
load	tsvscode.ts	/^    load(sessionId: string): Promise<boolean>;$/;"	m	interface:MediaKeySession
loadEventEnd	tsvscode.ts	/^    readonly loadEventEnd: DOMHighResTimeStamp;$/;"	p	interface:PerformanceNavigationTiming
loadEventEnd	tsvscode.ts	/^    readonly loadEventEnd: number;$/;"	p	interface:PerformanceTiming
loadEventStart	tsvscode.ts	/^    readonly loadEventStart: DOMHighResTimeStamp;$/;"	p	interface:PerformanceNavigationTiming
loadEventStart	tsvscode.ts	/^    readonly loadEventStart: number;$/;"	p	interface:PerformanceTiming
loaded	tsvscode.ts	/^    loaded?: number;$/;"	p	interface:ProgressEventInit
loaded	tsvscode.ts	/^    readonly loaded: Promise<FontFace>;$/;"	p	interface:FontFace
loaded	tsvscode.ts	/^    readonly loaded: number;$/;"	p	interface:ProgressEvent
loading	tsvscode.ts	/^    loading: "eager" | "lazy";$/;"	p	interface:HTMLImageElement
loading	tsvscode.ts	/^    loading: string;$/;"	p	interface:HTMLIFrameElement
local	tsvscode.ts	/^    local?: RTCIceCandidate;$/;"	p	interface:RTCIceCandidatePair
localCandidateId	tsvscode.ts	/^    localCandidateId: string;$/;"	p	interface:RTCIceCandidatePairStats
localCertificateId	tsvscode.ts	/^    localCertificateId?: string;$/;"	p	interface:RTCTransportStats
localDescription	tsvscode.ts	/^    readonly localDescription: RTCSessionDescription | null;$/;"	p	interface:RTCPeerConnection
localName	tsvscode.ts	/^    readonly localName: string;$/;"	p	interface:Attr
localName	tsvscode.ts	/^    readonly localName: string;$/;"	p	interface:Element
localService	tsvscode.ts	/^    readonly localService: boolean;$/;"	p	interface:SpeechSynthesisVoice
localStorage	tsvscode.ts	/^    readonly localStorage: Storage;$/;"	p	interface:WindowLocalStorage
localTime	tsvscode.ts	/^    localTime?: CSSNumberish | null;$/;"	p	interface:ComputedEffectTiming
locale	ests.ts	/^        locale: string;$/;"	p	interface:Intl.ResolvedCollatorOptions
locale	ests.ts	/^        locale: string;$/;"	p	interface:Intl.ResolvedDateTimeFormatOptions
locale	ests.ts	/^        locale: string;$/;"	p	interface:Intl.ResolvedNumberFormatOptions
localeCompare	ests.ts	/^    localeCompare(that: string): number;$/;"	m	interface:String
localeCompare	ests.ts	/^    localeCompare(that: string, locales?: string | string[], options?: Intl.CollatorOptions): nu/;"	m	interface:String
localeMatcher	ests.ts	/^        localeMatcher?: "best fit" | "lookup" | undefined;$/;"	p	interface:Intl.DateTimeFormatOptions
localeMatcher	ests.ts	/^        localeMatcher?: "lookup" | "best fit" | undefined;$/;"	p	interface:Intl.CollatorOptions
localeMatcher	ests.ts	/^        localeMatcher?: "lookup" | "best fit" | undefined;$/;"	p	interface:Intl.NumberFormatOptions
location	tsvscode.ts	/^    get location(): Location;$/;"	m	interface:Document
location	tsvscode.ts	/^    get location(): Location;$/;"	m	interface:Window
location	tsvscode.ts	/^    location?: number;$/;"	p	interface:KeyboardEventInit
location	tsvscode.ts	/^    readonly location: number;$/;"	p	interface:KeyboardEvent
location	tsvscode.ts	/^    set location(href: string | Location);$/;"	m	interface:Document
location	tsvscode.ts	/^    set location(href: string | Location);$/;"	m	interface:Window
location	tsvscode.ts	/^declare var location: Location;$/;"	v	namespace:CSS
locationbar	tsvscode.ts	/^    readonly locationbar: BarProp;$/;"	p	interface:Window
locationbar	tsvscode.ts	/^declare var locationbar: BarProp;$/;"	v	namespace:CSS
locked	tsvscode.ts	/^    readonly locked: boolean;$/;"	p	interface:ReadableStream
locked	tsvscode.ts	/^    readonly locked: boolean;$/;"	p	interface:WritableStream
locks	tsvscode.ts	/^    readonly locks: LockManager;$/;"	p	interface:NavigatorLocks
log	ests.ts	/^    log(x: number): number;$/;"	m	interface:Math
log	tsvscode.ts	/^    log(...data: any[]): void;$/;"	m	interface:Console
longDesc	tsvscode.ts	/^    longDesc: string;$/;"	p	interface:HTMLFrameElement
longDesc	tsvscode.ts	/^    longDesc: string;$/;"	p	interface:HTMLIFrameElement
longDesc	tsvscode.ts	/^    longDesc: string;$/;"	p	interface:HTMLImageElement
longitude	tsvscode.ts	/^    readonly longitude: number;$/;"	p	interface:GeolocationCoordinates
lookupNamespaceURI	tsvscode.ts	/^    lookupNamespaceURI(prefix: string | null): string | null;$/;"	m	interface:Node
lookupPrefix	tsvscode.ts	/^    lookupPrefix(namespace: string | null): string | null;$/;"	m	interface:Node
loop	tsvscode.ts	/^    loop: boolean;$/;"	p	interface:AudioBufferSourceNode
loop	tsvscode.ts	/^    loop: boolean;$/;"	p	interface:HTMLMediaElement
loop	tsvscode.ts	/^    loop: number;$/;"	p	interface:HTMLMarqueeElement
loop	tsvscode.ts	/^    loop?: boolean;$/;"	p	interface:AudioBufferSourceOptions
loopEnd	tsvscode.ts	/^    loopEnd: number;$/;"	p	interface:AudioBufferSourceNode
loopEnd	tsvscode.ts	/^    loopEnd?: number;$/;"	p	interface:AudioBufferSourceOptions
loopStart	tsvscode.ts	/^    loopStart: number;$/;"	p	interface:AudioBufferSourceNode
loopStart	tsvscode.ts	/^    loopStart?: number;$/;"	p	interface:AudioBufferSourceOptions
loseContext	tsvscode.ts	/^    loseContext(): void;$/;"	m	interface:WEBGL_lose_context
low	tsvscode.ts	/^    low: number;$/;"	p	interface:HTMLMeterElement
lower	tsvscode.ts	/^    readonly lower: CSSNumericValue;$/;"	p	interface:CSSMathClamp
lower	tsvscode.ts	/^    readonly lower: any;$/;"	p	interface:IDBKeyRange
lowerBound	tsvscode.ts	/^    lowerBound(lower: any, open?: boolean): IDBKeyRange;$/;"	v
lowerOpen	tsvscode.ts	/^    readonly lowerOpen: boolean;$/;"	p	interface:IDBKeyRange
lowsrc	tsvscode.ts	/^    lowsrc: string;$/;"	p	interface:HTMLImageElement
m11	tsvscode.ts	/^    m11: number;$/;"	p	interface:DOMMatrix
m11	tsvscode.ts	/^    m11?: number;$/;"	p	interface:DOMMatrix2DInit
m11	tsvscode.ts	/^    readonly m11: number;$/;"	p	interface:DOMMatrixReadOnly
m12	tsvscode.ts	/^    m12: number;$/;"	p	interface:DOMMatrix
m12	tsvscode.ts	/^    m12?: number;$/;"	p	interface:DOMMatrix2DInit
m12	tsvscode.ts	/^    readonly m12: number;$/;"	p	interface:DOMMatrixReadOnly
m13	tsvscode.ts	/^    m13: number;$/;"	p	interface:DOMMatrix
m13	tsvscode.ts	/^    m13?: number;$/;"	p	interface:DOMMatrixInit
m13	tsvscode.ts	/^    readonly m13: number;$/;"	p	interface:DOMMatrixReadOnly
m14	tsvscode.ts	/^    m14: number;$/;"	p	interface:DOMMatrix
m14	tsvscode.ts	/^    m14?: number;$/;"	p	interface:DOMMatrixInit
m14	tsvscode.ts	/^    readonly m14: number;$/;"	p	interface:DOMMatrixReadOnly
m21	tsvscode.ts	/^    m21: number;$/;"	p	interface:DOMMatrix
m21	tsvscode.ts	/^    m21?: number;$/;"	p	interface:DOMMatrix2DInit
m21	tsvscode.ts	/^    readonly m21: number;$/;"	p	interface:DOMMatrixReadOnly
m22	tsvscode.ts	/^    m22: number;$/;"	p	interface:DOMMatrix
m22	tsvscode.ts	/^    m22?: number;$/;"	p	interface:DOMMatrix2DInit
m22	tsvscode.ts	/^    readonly m22: number;$/;"	p	interface:DOMMatrixReadOnly
m23	tsvscode.ts	/^    m23: number;$/;"	p	interface:DOMMatrix
m23	tsvscode.ts	/^    m23?: number;$/;"	p	interface:DOMMatrixInit
m23	tsvscode.ts	/^    readonly m23: number;$/;"	p	interface:DOMMatrixReadOnly
m24	tsvscode.ts	/^    m24: number;$/;"	p	interface:DOMMatrix
m24	tsvscode.ts	/^    m24?: number;$/;"	p	interface:DOMMatrixInit
m24	tsvscode.ts	/^    readonly m24: number;$/;"	p	interface:DOMMatrixReadOnly
m31	tsvscode.ts	/^    m31: number;$/;"	p	interface:DOMMatrix
m31	tsvscode.ts	/^    m31?: number;$/;"	p	interface:DOMMatrixInit
m31	tsvscode.ts	/^    readonly m31: number;$/;"	p	interface:DOMMatrixReadOnly
m32	tsvscode.ts	/^    m32: number;$/;"	p	interface:DOMMatrix
m32	tsvscode.ts	/^    m32?: number;$/;"	p	interface:DOMMatrixInit
m32	tsvscode.ts	/^    readonly m32: number;$/;"	p	interface:DOMMatrixReadOnly
m33	tsvscode.ts	/^    m33: number;$/;"	p	interface:DOMMatrix
m33	tsvscode.ts	/^    m33?: number;$/;"	p	interface:DOMMatrixInit
m33	tsvscode.ts	/^    readonly m33: number;$/;"	p	interface:DOMMatrixReadOnly
m34	tsvscode.ts	/^    m34: number;$/;"	p	interface:DOMMatrix
m34	tsvscode.ts	/^    m34?: number;$/;"	p	interface:DOMMatrixInit
m34	tsvscode.ts	/^    readonly m34: number;$/;"	p	interface:DOMMatrixReadOnly
m41	tsvscode.ts	/^    m41: number;$/;"	p	interface:DOMMatrix
m41	tsvscode.ts	/^    m41?: number;$/;"	p	interface:DOMMatrix2DInit
m41	tsvscode.ts	/^    readonly m41: number;$/;"	p	interface:DOMMatrixReadOnly
m42	tsvscode.ts	/^    m42: number;$/;"	p	interface:DOMMatrix
m42	tsvscode.ts	/^    m42?: number;$/;"	p	interface:DOMMatrix2DInit
m42	tsvscode.ts	/^    readonly m42: number;$/;"	p	interface:DOMMatrixReadOnly
m43	tsvscode.ts	/^    m43: number;$/;"	p	interface:DOMMatrix
m43	tsvscode.ts	/^    m43?: number;$/;"	p	interface:DOMMatrixInit
m43	tsvscode.ts	/^    readonly m43: number;$/;"	p	interface:DOMMatrixReadOnly
m44	tsvscode.ts	/^    m44: number;$/;"	p	interface:DOMMatrix
m44	tsvscode.ts	/^    m44?: number;$/;"	p	interface:DOMMatrixInit
m44	tsvscode.ts	/^    readonly m44: number;$/;"	p	interface:DOMMatrixReadOnly
manufacturer	tsvscode.ts	/^    readonly manufacturer: string | null;$/;"	p	interface:MIDIPort
map	ests.ts	/^    map(callbackfn: (value: number, index: number, array: Float32Array) => number, thisArg?: any/;"	m	interface:Float32Array
map	ests.ts	/^    map(callbackfn: (value: number, index: number, array: Float64Array) => number, thisArg?: any/;"	m	interface:Float64Array
map	ests.ts	/^    map(callbackfn: (value: number, index: number, array: Int16Array) => number, thisArg?: any):/;"	m	interface:Int16Array
map	ests.ts	/^    map(callbackfn: (value: number, index: number, array: Int32Array) => number, thisArg?: any):/;"	m	interface:Int32Array
map	ests.ts	/^    map(callbackfn: (value: number, index: number, array: Int8Array) => number, thisArg?: any): /;"	m	interface:Int8Array
map	ests.ts	/^    map(callbackfn: (value: number, index: number, array: Uint16Array) => number, thisArg?: any)/;"	m	interface:Uint16Array
map	ests.ts	/^    map(callbackfn: (value: number, index: number, array: Uint32Array) => number, thisArg?: any)/;"	m	interface:Uint32Array
map	ests.ts	/^    map(callbackfn: (value: number, index: number, array: Uint8Array) => number, thisArg?: any):/;"	m	interface:Uint8Array
map	ests.ts	/^    map(callbackfn: (value: number, index: number, array: Uint8ClampedArray) => number, thisArg?/;"	m	interface:Uint8ClampedArray
map	ests.ts	/^    map<U>(callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): U[];$/;"	m	interface:Array
map	ests.ts	/^    map<U>(callbackfn: (value: T, index: number, array: readonly T[]) => U, thisArg?: any): U[];$/;"	m	interface:ReadonlyArray
mapping	tsvscode.ts	/^    readonly mapping: GamepadMappingType;$/;"	p	interface:Gamepad
margin	tsvscode.ts	/^    margin: string;$/;"	p	interface:CSSStyleDeclaration
marginBlock	tsvscode.ts	/^    marginBlock: string;$/;"	p	interface:CSSStyleDeclaration
marginBlockEnd	tsvscode.ts	/^    marginBlockEnd: string;$/;"	p	interface:CSSStyleDeclaration
marginBlockStart	tsvscode.ts	/^    marginBlockStart: string;$/;"	p	interface:CSSStyleDeclaration
marginBottom	tsvscode.ts	/^    marginBottom: string;$/;"	p	interface:CSSStyleDeclaration
marginHeight	tsvscode.ts	/^    marginHeight: string;$/;"	p	interface:HTMLFrameElement
marginHeight	tsvscode.ts	/^    marginHeight: string;$/;"	p	interface:HTMLIFrameElement
marginInline	tsvscode.ts	/^    marginInline: string;$/;"	p	interface:CSSStyleDeclaration
marginInlineEnd	tsvscode.ts	/^    marginInlineEnd: string;$/;"	p	interface:CSSStyleDeclaration
marginInlineStart	tsvscode.ts	/^    marginInlineStart: string;$/;"	p	interface:CSSStyleDeclaration
marginLeft	tsvscode.ts	/^    marginLeft: string;$/;"	p	interface:CSSStyleDeclaration
marginRight	tsvscode.ts	/^    marginRight: string;$/;"	p	interface:CSSStyleDeclaration
marginTop	tsvscode.ts	/^    marginTop: string;$/;"	p	interface:CSSStyleDeclaration
marginWidth	tsvscode.ts	/^    marginWidth: string;$/;"	p	interface:HTMLFrameElement
marginWidth	tsvscode.ts	/^    marginWidth: string;$/;"	p	interface:HTMLIFrameElement
mark	tsvscode.ts	/^    mark(markName: string, markOptions?: PerformanceMarkOptions): PerformanceMark;$/;"	m	interface:Performance
marker	tsvscode.ts	/^    marker: string;$/;"	p	interface:CSSStyleDeclaration
markerEnd	tsvscode.ts	/^    markerEnd: string;$/;"	p	interface:CSSStyleDeclaration
markerHeight	tsvscode.ts	/^    readonly markerHeight: SVGAnimatedLength;$/;"	p	interface:SVGMarkerElement
markerMid	tsvscode.ts	/^    markerMid: string;$/;"	p	interface:CSSStyleDeclaration
markerStart	tsvscode.ts	/^    markerStart: string;$/;"	p	interface:CSSStyleDeclaration
markerUnits	tsvscode.ts	/^    readonly markerUnits: SVGAnimatedEnumeration;$/;"	p	interface:SVGMarkerElement
markerWidth	tsvscode.ts	/^    readonly markerWidth: SVGAnimatedLength;$/;"	p	interface:SVGMarkerElement
markers	tsvscode.ts	/^    markers?: boolean;$/;"	p	interface:SVGBoundingBoxOptions
mask	tsvscode.ts	/^    mask: string;$/;"	p	interface:CSSStyleDeclaration
maskClip	tsvscode.ts	/^    maskClip: string;$/;"	p	interface:CSSStyleDeclaration
maskComposite	tsvscode.ts	/^    maskComposite: string;$/;"	p	interface:CSSStyleDeclaration
maskContentUnits	tsvscode.ts	/^    readonly maskContentUnits: SVGAnimatedEnumeration;$/;"	p	interface:SVGMaskElement
maskImage	tsvscode.ts	/^    maskImage: string;$/;"	p	interface:CSSStyleDeclaration
maskMode	tsvscode.ts	/^    maskMode: string;$/;"	p	interface:CSSStyleDeclaration
maskOrigin	tsvscode.ts	/^    maskOrigin: string;$/;"	p	interface:CSSStyleDeclaration
maskPosition	tsvscode.ts	/^    maskPosition: string;$/;"	p	interface:CSSStyleDeclaration
maskRepeat	tsvscode.ts	/^    maskRepeat: string;$/;"	p	interface:CSSStyleDeclaration
maskSize	tsvscode.ts	/^    maskSize: string;$/;"	p	interface:CSSStyleDeclaration
maskType	tsvscode.ts	/^    maskType: string;$/;"	p	interface:CSSStyleDeclaration
maskUnits	tsvscode.ts	/^    readonly maskUnits: SVGAnimatedEnumeration;$/;"	p	interface:SVGMaskElement
match	ests.ts	/^    match(regexp: string | RegExp): RegExpMatchArray | null;$/;"	m	interface:String
match	tsvscode.ts	/^    match(request: RequestInfo | URL, options?: CacheQueryOptions): Promise<Response | undefined/;"	m	interface:Cache
match	tsvscode.ts	/^    match(request: RequestInfo | URL, options?: MultiCacheQueryOptions): Promise<Response | unde/;"	m	interface:CacheStorage
matchAll	tsvscode.ts	/^    matchAll(request?: RequestInfo | URL, options?: CacheQueryOptions): Promise<ReadonlyArray<Re/;"	m	interface:Cache
matchMedia	tsvscode.ts	/^    matchMedia(query: string): MediaQueryList;$/;"	m	interface:Window
matchMedium	tsvscode.ts	/^    matchMedium(mediaquery: string): boolean;$/;"	m	interface:StyleMedia
matches	tsvscode.ts	/^    matches(selectors: string): boolean;$/;"	m	interface:Element
matches	tsvscode.ts	/^    matches?: boolean;$/;"	p	interface:MediaQueryListEventInit
matches	tsvscode.ts	/^    readonly matches: boolean;$/;"	p	interface:MediaQueryList
matches	tsvscode.ts	/^    readonly matches: boolean;$/;"	p	interface:MediaQueryListEvent
mathDepth	tsvscode.ts	/^    mathDepth: string;$/;"	p	interface:CSSStyleDeclaration
mathStyle	tsvscode.ts	/^    mathStyle: string;$/;"	p	interface:CSSStyleDeclaration
matrix	tsvscode.ts	/^    matrix: DOMMatrix;$/;"	p	interface:CSSMatrixComponent
matrix	tsvscode.ts	/^    matrix?: VideoMatrixCoefficients | null;$/;"	p	interface:VideoColorSpaceInit
matrix	tsvscode.ts	/^    readonly matrix: DOMMatrix;$/;"	p	interface:SVGTransform
matrix	tsvscode.ts	/^    readonly matrix: VideoMatrixCoefficients | null;$/;"	p	interface:VideoColorSpace
matrixTransform	tsvscode.ts	/^    matrixTransform(matrix?: DOMMatrixInit): DOMPoint;$/;"	m	interface:DOMPointReadOnly
max	ests.ts	/^    max(...values: number[]): number;$/;"	m	interface:Math
max	tsvscode.ts	/^    max(...values: CSSNumberish[]): CSSNumericValue;$/;"	m	interface:CSSNumericValue
max	tsvscode.ts	/^    max: number;$/;"	p	interface:HTMLMeterElement
max	tsvscode.ts	/^    max: number;$/;"	p	interface:HTMLProgressElement
max	tsvscode.ts	/^    max: string;$/;"	p	interface:HTMLInputElement
max	tsvscode.ts	/^    max?: number;$/;"	p	interface:DoubleRange
max	tsvscode.ts	/^    max?: number;$/;"	p	interface:ULongRange
maxBitrate	tsvscode.ts	/^    maxBitrate?: number;$/;"	p	interface:RTCRtpEncodingParameters
maxBlockSize	tsvscode.ts	/^    maxBlockSize: string;$/;"	p	interface:CSSStyleDeclaration
maxChannelCount	tsvscode.ts	/^    readonly maxChannelCount: number;$/;"	p	interface:AudioDestinationNode
maxChannels	tsvscode.ts	/^    readonly maxChannels: number | null;$/;"	p	interface:RTCSctpTransport
maxDatagramSize	tsvscode.ts	/^    readonly maxDatagramSize: number;$/;"	p	interface:WebTransportDatagramDuplexStream
maxDecibels	tsvscode.ts	/^    maxDecibels: number;$/;"	p	interface:AnalyserNode
maxDecibels	tsvscode.ts	/^    maxDecibels?: number;$/;"	p	interface:AnalyserOptions
maxDelayTime	tsvscode.ts	/^    maxDelayTime?: number;$/;"	p	interface:DelayOptions
maxDistance	tsvscode.ts	/^    maxDistance: number;$/;"	p	interface:PannerNode
maxDistance	tsvscode.ts	/^    maxDistance?: number;$/;"	p	interface:PannerOptions
maxFramerate	tsvscode.ts	/^    maxFramerate?: number;$/;"	p	interface:RTCRtpEncodingParameters
maxHeight	tsvscode.ts	/^    maxHeight: string;$/;"	p	interface:CSSStyleDeclaration
maxInlineSize	tsvscode.ts	/^    maxInlineSize: string;$/;"	p	interface:CSSStyleDeclaration
maxLength	tsvscode.ts	/^    maxLength: number;$/;"	p	interface:HTMLInputElement
maxLength	tsvscode.ts	/^    maxLength: number;$/;"	p	interface:HTMLTextAreaElement
maxMessageSize	tsvscode.ts	/^    readonly maxMessageSize: number;$/;"	p	interface:RTCSctpTransport
maxPacketLifeTime	tsvscode.ts	/^    maxPacketLifeTime?: number;$/;"	p	interface:RTCDataChannelInit
maxPacketLifeTime	tsvscode.ts	/^    readonly maxPacketLifeTime: number | null;$/;"	p	interface:RTCDataChannel
maxRetransmits	tsvscode.ts	/^    maxRetransmits?: number;$/;"	p	interface:RTCDataChannelInit
maxRetransmits	tsvscode.ts	/^    readonly maxRetransmits: number | null;$/;"	p	interface:RTCDataChannel
maxTouchPoints	tsvscode.ts	/^    readonly maxTouchPoints: number;$/;"	p	interface:Navigator
maxValue	tsvscode.ts	/^    readonly maxValue: number;$/;"	p	interface:AudioParam
maxWidth	tsvscode.ts	/^    maxWidth: string;$/;"	p	interface:CSSStyleDeclaration
maximumAge	tsvscode.ts	/^    maximumAge?: number;$/;"	p	interface:PositionOptions
maximumFractionDigits	ests.ts	/^        maximumFractionDigits?: number | undefined;$/;"	p	interface:Intl.NumberFormatOptions
maximumFractionDigits	ests.ts	/^        maximumFractionDigits?: number;$/;"	p	interface:Intl.ResolvedNumberFormatOptions
maximumSignificantDigits	ests.ts	/^        maximumSignificantDigits?: number | undefined;$/;"	p	interface:Intl.NumberFormatOptions
maximumSignificantDigits	ests.ts	/^        maximumSignificantDigits?: number;$/;"	p	interface:Intl.ResolvedNumberFormatOptions
measure	tsvscode.ts	/^    measure(measureName: string, startOrMeasureOptions?: string | PerformanceMeasureOptions, end/;"	m	interface:Performance
measureText	tsvscode.ts	/^    measureText(text: string): TextMetrics;$/;"	m	interface:CanvasText
media	tsvscode.ts	/^    media: string;$/;"	p	interface:HTMLLinkElement
media	tsvscode.ts	/^    media: string;$/;"	p	interface:HTMLMetaElement
media	tsvscode.ts	/^    media: string;$/;"	p	interface:HTMLSourceElement
media	tsvscode.ts	/^    media: string;$/;"	p	interface:HTMLStyleElement
media	tsvscode.ts	/^    media: string;$/;"	p	interface:SVGStyleElement
media	tsvscode.ts	/^    media?: MediaList | string;$/;"	p	interface:CSSStyleSheetInit
media	tsvscode.ts	/^    media?: string;$/;"	p	interface:MediaQueryListEventInit
media	tsvscode.ts	/^    readonly media: MediaList;$/;"	p	interface:CSSImportRule
media	tsvscode.ts	/^    readonly media: MediaList;$/;"	p	interface:CSSMediaRule
media	tsvscode.ts	/^    readonly media: MediaList;$/;"	p	interface:StyleSheet
media	tsvscode.ts	/^    readonly media: string;$/;"	p	interface:MediaQueryList
media	tsvscode.ts	/^    readonly media: string;$/;"	p	interface:MediaQueryListEvent
mediaCapabilities	tsvscode.ts	/^    readonly mediaCapabilities: MediaCapabilities;$/;"	p	interface:Navigator
mediaDevices	tsvscode.ts	/^    readonly mediaDevices: MediaDevices;$/;"	p	interface:Navigator
mediaElement	tsvscode.ts	/^    mediaElement: HTMLMediaElement;$/;"	p	interface:MediaElementAudioSourceOptions
mediaElement	tsvscode.ts	/^    readonly mediaElement: HTMLMediaElement;$/;"	p	interface:MediaElementAudioSourceNode
mediaKeys	tsvscode.ts	/^    readonly mediaKeys: MediaKeys | null;$/;"	p	interface:HTMLMediaElement
mediaSession	tsvscode.ts	/^    readonly mediaSession: MediaSession;$/;"	p	interface:Navigator
mediaSourceId	tsvscode.ts	/^    mediaSourceId?: string;$/;"	p	interface:RTCOutboundRtpStreamStats
mediaStream	tsvscode.ts	/^    mediaStream: MediaStream;$/;"	p	interface:MediaStreamAudioSourceOptions
mediaStream	tsvscode.ts	/^    readonly mediaStream: MediaStream;$/;"	p	interface:MediaStreamAudioSourceNode
mediaText	tsvscode.ts	/^    mediaText: string;$/;"	p	interface:MediaList
mediaTime	tsvscode.ts	/^    mediaTime: number;$/;"	p	interface:VideoFrameCallbackMetadata
mediation	tsvscode.ts	/^    mediation?: CredentialMediationRequirement;$/;"	p	interface:CredentialRequestOptions
meetOrSlice	tsvscode.ts	/^    meetOrSlice: number;$/;"	p	interface:SVGPreserveAspectRatio
menubar	tsvscode.ts	/^    readonly menubar: BarProp;$/;"	p	interface:Window
menubar	tsvscode.ts	/^declare var menubar: BarProp;$/;"	v	namespace:CSS
message	ests.ts	/^    message: string;$/;"	p	interface:Error
message	tsvscode.ts	/^    message: ArrayBuffer;$/;"	p	interface:MediaKeyMessageEventInit
message	tsvscode.ts	/^    message?: string;$/;"	p	interface:ErrorEventInit
message	tsvscode.ts	/^    readonly message: ArrayBuffer;$/;"	p	interface:MediaKeyMessageEvent
message	tsvscode.ts	/^    readonly message: string;$/;"	p	interface:DOMException
message	tsvscode.ts	/^    readonly message: string;$/;"	p	interface:ErrorEvent
message	tsvscode.ts	/^    readonly message: string;$/;"	p	interface:GeolocationPositionError
message	tsvscode.ts	/^    readonly message: string;$/;"	p	interface:MediaError
messageType	tsvscode.ts	/^    messageType: MediaKeyMessageType;$/;"	p	interface:MediaKeyMessageEventInit
messageType	tsvscode.ts	/^    readonly messageType: MediaKeyMessageType;$/;"	p	interface:MediaKeyMessageEvent
metaKey	tsvscode.ts	/^    metaKey?: boolean;$/;"	p	interface:EventModifierInit
metaKey	tsvscode.ts	/^    readonly metaKey: boolean;$/;"	p	interface:KeyboardEvent
metaKey	tsvscode.ts	/^    readonly metaKey: boolean;$/;"	p	interface:MouseEvent
metaKey	tsvscode.ts	/^    readonly metaKey: boolean;$/;"	p	interface:TouchEvent
metadata	tsvscode.ts	/^    metadata: MediaMetadata | null;$/;"	p	interface:MediaSession
method	tsvscode.ts	/^    method: string;$/;"	p	interface:HTMLFormElement
method	tsvscode.ts	/^    method?: string;$/;"	p	interface:RequestInit
method	tsvscode.ts	/^    readonly method: SVGAnimatedEnumeration;$/;"	p	interface:SVGTextPathElement
method	tsvscode.ts	/^    readonly method: string;$/;"	p	interface:Request
methodDetails	tsvscode.ts	/^    methodDetails?: any;$/;"	p	interface:PaymentMethodChangeEventInit
methodDetails	tsvscode.ts	/^    readonly methodDetails: any;$/;"	p	interface:PaymentMethodChangeEvent
methodName	tsvscode.ts	/^    methodName?: string;$/;"	p	interface:PaymentMethodChangeEventInit
methodName	tsvscode.ts	/^    readonly methodName: string;$/;"	p	interface:PaymentMethodChangeEvent
methodName	tsvscode.ts	/^    readonly methodName: string;$/;"	p	interface:PaymentResponse
mid	tsvscode.ts	/^    mid?: string;$/;"	p	interface:RTCInboundRtpStreamStats
mid	tsvscode.ts	/^    readonly mid: string | null;$/;"	p	interface:RTCRtpTransceiver
mimeType	tsvscode.ts	/^    mimeType: string;$/;"	p	interface:RTCRtpCodec
mimeType	tsvscode.ts	/^    mimeType?: string;$/;"	p	interface:MediaRecorderOptions
mimeType	tsvscode.ts	/^    readonly mimeType: string;$/;"	p	interface:MediaRecorder
mimeTypes	tsvscode.ts	/^    readonly mimeTypes: MimeTypeArray;$/;"	p	interface:NavigatorPlugins
min	ests.ts	/^    min(...values: number[]): number;$/;"	m	interface:Math
min	tsvscode.ts	/^    min(...values: CSSNumberish[]): CSSNumericValue;$/;"	m	interface:CSSNumericValue
min	tsvscode.ts	/^    min: number;$/;"	p	interface:HTMLMeterElement
min	tsvscode.ts	/^    min: string;$/;"	p	interface:HTMLInputElement
min	tsvscode.ts	/^    min?: number;$/;"	p	interface:DoubleRange
min	tsvscode.ts	/^    min?: number;$/;"	p	interface:ULongRange
minBlockSize	tsvscode.ts	/^    minBlockSize: string;$/;"	p	interface:CSSStyleDeclaration
minDecibels	tsvscode.ts	/^    minDecibels: number;$/;"	p	interface:AnalyserNode
minDecibels	tsvscode.ts	/^    minDecibels?: number;$/;"	p	interface:AnalyserOptions
minHeight	tsvscode.ts	/^    minHeight: string;$/;"	p	interface:CSSStyleDeclaration
minInlineSize	tsvscode.ts	/^    minInlineSize: string;$/;"	p	interface:CSSStyleDeclaration
minLength	tsvscode.ts	/^    minLength: number;$/;"	p	interface:HTMLInputElement
minLength	tsvscode.ts	/^    minLength: number;$/;"	p	interface:HTMLTextAreaElement
minPinLength	tsvscode.ts	/^    minPinLength?: boolean;$/;"	p	interface:AuthenticationExtensionsClientInputs
minValue	tsvscode.ts	/^    readonly minValue: number;$/;"	p	interface:AudioParam
minWidth	tsvscode.ts	/^    minWidth: string;$/;"	p	interface:CSSStyleDeclaration
minimumFractionDigits	ests.ts	/^        minimumFractionDigits?: number | undefined;$/;"	p	interface:Intl.NumberFormatOptions
minimumFractionDigits	ests.ts	/^        minimumFractionDigits?: number;$/;"	p	interface:Intl.ResolvedNumberFormatOptions
minimumIntegerDigits	ests.ts	/^        minimumIntegerDigits: number;$/;"	p	interface:Intl.ResolvedNumberFormatOptions
minimumIntegerDigits	ests.ts	/^        minimumIntegerDigits?: number | undefined;$/;"	p	interface:Intl.NumberFormatOptions
minimumSignificantDigits	ests.ts	/^        minimumSignificantDigits?: number | undefined;$/;"	p	interface:Intl.NumberFormatOptions
minimumSignificantDigits	ests.ts	/^        minimumSignificantDigits?: number;$/;"	p	interface:Intl.ResolvedNumberFormatOptions
minute	ests.ts	/^        minute?: "numeric" | "2-digit" | undefined;$/;"	p	interface:Intl.DateTimeFormatOptions
minute	ests.ts	/^        minute?: string;$/;"	p	interface:Intl.ResolvedDateTimeFormatOptions
miterLimit	tsvscode.ts	/^    miterLimit: number;$/;"	p	interface:CanvasPathDrawingStyles
mixBlendMode	tsvscode.ts	/^    mixBlendMode: string;$/;"	p	interface:CSSStyleDeclaration
mode	tsvscode.ts	/^    mode: AppendMode;$/;"	p	interface:SourceBuffer
mode	tsvscode.ts	/^    mode: ShadowRootMode;$/;"	p	interface:ShadowRootInit
mode	tsvscode.ts	/^    mode: TextTrackMode;$/;"	p	interface:TextTrack
mode	tsvscode.ts	/^    mode?: LockMode;$/;"	p	interface:LockInfo
mode	tsvscode.ts	/^    mode?: LockMode;$/;"	p	interface:LockOptions
mode	tsvscode.ts	/^    mode?: ReadableStreamReaderMode;$/;"	p	interface:ReadableStreamGetReaderOptions
mode	tsvscode.ts	/^    mode?: RequestMode;$/;"	p	interface:RequestInit
mode	tsvscode.ts	/^    readonly mode: IDBTransactionMode;$/;"	p	interface:IDBTransaction
mode	tsvscode.ts	/^    readonly mode: LockMode;$/;"	p	interface:Lock
mode	tsvscode.ts	/^    readonly mode: RequestMode;$/;"	p	interface:Request
mode	tsvscode.ts	/^    readonly mode: SVGAnimatedEnumeration;$/;"	p	interface:SVGFEBlendElement
mode	tsvscode.ts	/^    readonly mode: ShadowRootMode;$/;"	p	interface:ShadowRoot
modifierAltGraph	tsvscode.ts	/^    modifierAltGraph?: boolean;$/;"	p	interface:EventModifierInit
modifierCapsLock	tsvscode.ts	/^    modifierCapsLock?: boolean;$/;"	p	interface:EventModifierInit
modifierFn	tsvscode.ts	/^    modifierFn?: boolean;$/;"	p	interface:EventModifierInit
modifierFnLock	tsvscode.ts	/^    modifierFnLock?: boolean;$/;"	p	interface:EventModifierInit
modifierHyper	tsvscode.ts	/^    modifierHyper?: boolean;$/;"	p	interface:EventModifierInit
modifierNumLock	tsvscode.ts	/^    modifierNumLock?: boolean;$/;"	p	interface:EventModifierInit
modifierScrollLock	tsvscode.ts	/^    modifierScrollLock?: boolean;$/;"	p	interface:EventModifierInit
modifierSuper	tsvscode.ts	/^    modifierSuper?: boolean;$/;"	p	interface:EventModifierInit
modifierSymbol	tsvscode.ts	/^    modifierSymbol?: boolean;$/;"	p	interface:EventModifierInit
modifierSymbolLock	tsvscode.ts	/^    modifierSymbolLock?: boolean;$/;"	p	interface:EventModifierInit
modifiers	tsvscode.ts	/^    modifiers?: PaymentDetailsModifier[];$/;"	p	interface:PaymentDetailsBase
modify	tsvscode.ts	/^    modify(alter?: string, direction?: string, granularity?: string): void;$/;"	m	interface:Selection
modulusLength	tsvscode.ts	/^    modulusLength: number;$/;"	p	interface:RsaKeyAlgorithm
modulusLength	tsvscode.ts	/^    modulusLength: number;$/;"	p	interface:RsaKeyGenParams
month	ests.ts	/^        month?: "numeric" | "2-digit" | "long" | "short" | "narrow" | undefined;$/;"	p	interface:Intl.DateTimeFormatOptions
month	ests.ts	/^        month?: string;$/;"	p	interface:Intl.ResolvedDateTimeFormatOptions
moveBy	tsvscode.ts	/^    moveBy(x: number, y: number): void;$/;"	m	interface:Window
moveTo	tsvscode.ts	/^    moveTo(x: number, y: number): void;$/;"	m	interface:CanvasPath
moveTo	tsvscode.ts	/^    moveTo(x: number, y: number): void;$/;"	m	interface:Window
movementX	tsvscode.ts	/^    movementX?: number;$/;"	p	interface:MouseEventInit
movementX	tsvscode.ts	/^    readonly movementX: number;$/;"	p	interface:MouseEvent
movementY	tsvscode.ts	/^    movementY?: number;$/;"	p	interface:MouseEventInit
movementY	tsvscode.ts	/^    readonly movementY: number;$/;"	p	interface:MouseEvent
mul	tsvscode.ts	/^    mul(...values: CSSNumberish[]): CSSNumericValue;$/;"	m	interface:CSSNumericValue
multiDrawArraysInstancedWEBGL	tsvscode.ts	/^    multiDrawArraysInstancedWEBGL(mode: GLenum, firstsList: Int32Array | GLint[], firstsOffset: /;"	m	interface:WEBGL_multi_draw
multiDrawArraysWEBGL	tsvscode.ts	/^    multiDrawArraysWEBGL(mode: GLenum, firstsList: Int32Array | GLint[], firstsOffset: number, c/;"	m	interface:WEBGL_multi_draw
multiDrawElementsInstancedWEBGL	tsvscode.ts	/^    multiDrawElementsInstancedWEBGL(mode: GLenum, countsList: Int32Array | GLsizei[], countsOffs/;"	m	interface:WEBGL_multi_draw
multiDrawElementsWEBGL	tsvscode.ts	/^    multiDrawElementsWEBGL(mode: GLenum, countsList: Int32Array | GLsizei[], countsOffset: numbe/;"	m	interface:WEBGL_multi_draw
multiEntry	tsvscode.ts	/^    multiEntry?: boolean;$/;"	p	interface:IDBIndexParameters
multiEntry	tsvscode.ts	/^    readonly multiEntry: boolean;$/;"	p	interface:IDBIndex
multiline	ests.ts	/^    readonly multiline: boolean;$/;"	p	interface:RegExp
multiple	tsvscode.ts	/^    multiple: boolean;$/;"	p	interface:HTMLInputElement
multiple	tsvscode.ts	/^    multiple: boolean;$/;"	p	interface:HTMLSelectElement
multiply	tsvscode.ts	/^    multiply(other?: DOMMatrixInit): DOMMatrix;$/;"	m	interface:DOMMatrixReadOnly
multiplySelf	tsvscode.ts	/^    multiplySelf(other?: DOMMatrixInit): DOMMatrix;$/;"	m	interface:DOMMatrix
muted	tsvscode.ts	/^    muted: boolean;$/;"	p	interface:HTMLMediaElement
muted	tsvscode.ts	/^    readonly muted: boolean;$/;"	p	interface:MediaStreamTrack
n	tsvscode.ts	/^    n?: string;$/;"	p	interface:JsonWebKey
nackCount	tsvscode.ts	/^    nackCount?: number;$/;"	p	interface:RTCInboundRtpStreamStats
nackCount	tsvscode.ts	/^    nackCount?: number;$/;"	p	interface:RTCOutboundRtpStreamStats
name	ests.ts	/^        name: never;$/;"	p	interface:Intl.NumberFormatOptionsCurrencyDisplayRegistry
name	ests.ts	/^    name: string;$/;"	p	interface:Error
name	tsvscode.ts	/^    name: PermissionName;$/;"	p	interface:PermissionDescriptor
name	tsvscode.ts	/^    name: string;$/;"	p	interface:Algorithm
name	tsvscode.ts	/^    name: string;$/;"	p	interface:CSSCounterStyleRule
name	tsvscode.ts	/^    name: string;$/;"	p	interface:CSSKeyframesRule
name	tsvscode.ts	/^    name: string;$/;"	p	interface:HTMLAnchorElement
name	tsvscode.ts	/^    name: string;$/;"	p	interface:HTMLButtonElement
name	tsvscode.ts	/^    name: string;$/;"	p	interface:HTMLDetailsElement
name	tsvscode.ts	/^    name: string;$/;"	p	interface:HTMLEmbedElement
name	tsvscode.ts	/^    name: string;$/;"	p	interface:HTMLFieldSetElement
name	tsvscode.ts	/^    name: string;$/;"	p	interface:HTMLFormElement
name	tsvscode.ts	/^    name: string;$/;"	p	interface:HTMLFrameElement
name	tsvscode.ts	/^    name: string;$/;"	p	interface:HTMLIFrameElement
name	tsvscode.ts	/^    name: string;$/;"	p	interface:HTMLImageElement
name	tsvscode.ts	/^    name: string;$/;"	p	interface:HTMLInputElement
name	tsvscode.ts	/^    name: string;$/;"	p	interface:HTMLMapElement
name	tsvscode.ts	/^    name: string;$/;"	p	interface:HTMLMetaElement
name	tsvscode.ts	/^    name: string;$/;"	p	interface:HTMLObjectElement
name	tsvscode.ts	/^    name: string;$/;"	p	interface:HTMLOutputElement
name	tsvscode.ts	/^    name: string;$/;"	p	interface:HTMLParamElement
name	tsvscode.ts	/^    name: string;$/;"	p	interface:HTMLSelectElement
name	tsvscode.ts	/^    name: string;$/;"	p	interface:HTMLSlotElement
name	tsvscode.ts	/^    name: string;$/;"	p	interface:HTMLTextAreaElement
name	tsvscode.ts	/^    name: string;$/;"	p	interface:IDBIndex
name	tsvscode.ts	/^    name: string;$/;"	p	interface:IDBObjectStore
name	tsvscode.ts	/^    name: string;$/;"	p	interface:KeyAlgorithm
name	tsvscode.ts	/^    name: string;$/;"	p	interface:PropertyDefinition
name	tsvscode.ts	/^    name: string;$/;"	p	interface:PublicKeyCredentialEntity
name	tsvscode.ts	/^    name: string;$/;"	p	interface:Window
name	tsvscode.ts	/^    name?: string;$/;"	p	interface:IDBDatabaseInfo
name	tsvscode.ts	/^    name?: string;$/;"	p	interface:LockInfo
name	tsvscode.ts	/^    name?: string;$/;"	p	interface:SpeechSynthesisEventInit
name	tsvscode.ts	/^    name?: string;$/;"	p	interface:WorkerOptions
name	tsvscode.ts	/^    readonly name: string | null;$/;"	p	interface:MIDIPort
name	tsvscode.ts	/^    readonly name: string;$/;"	p	interface:Attr
name	tsvscode.ts	/^    readonly name: string;$/;"	p	interface:BroadcastChannel
name	tsvscode.ts	/^    readonly name: string;$/;"	p	interface:CSSFontPaletteValuesRule
name	tsvscode.ts	/^    readonly name: string;$/;"	p	interface:CSSLayerBlockRule
name	tsvscode.ts	/^    readonly name: string;$/;"	p	interface:CSSPropertyRule
name	tsvscode.ts	/^    readonly name: string;$/;"	p	interface:DOMException
name	tsvscode.ts	/^    readonly name: string;$/;"	p	interface:DocumentType
name	tsvscode.ts	/^    readonly name: string;$/;"	p	interface:File
name	tsvscode.ts	/^    readonly name: string;$/;"	p	interface:FileSystem
name	tsvscode.ts	/^    readonly name: string;$/;"	p	interface:FileSystemEntry
name	tsvscode.ts	/^    readonly name: string;$/;"	p	interface:FileSystemHandle
name	tsvscode.ts	/^    readonly name: string;$/;"	p	interface:IDBDatabase
name	tsvscode.ts	/^    readonly name: string;$/;"	p	interface:Lock
name	tsvscode.ts	/^    readonly name: string;$/;"	p	interface:PerformanceEntry
name	tsvscode.ts	/^    readonly name: string;$/;"	p	interface:PerformanceServerTiming
name	tsvscode.ts	/^    readonly name: string;$/;"	p	interface:PermissionStatus
name	tsvscode.ts	/^    readonly name: string;$/;"	p	interface:Plugin
name	tsvscode.ts	/^    readonly name: string;$/;"	p	interface:SpeechSynthesisEvent
name	tsvscode.ts	/^    readonly name: string;$/;"	p	interface:SpeechSynthesisVoice
name	tsvscode.ts	/^    readonly name: string;$/;"	p	interface:WebGLActiveInfo
name	tsvscode.ts	/^declare const name: void;$/;"	C	namespace:CSS
nameList	tsvscode.ts	/^    readonly nameList: ReadonlyArray<string>;$/;"	p	interface:CSSLayerStatementRule
namedCurve	tsvscode.ts	/^    namedCurve: NamedCurve;$/;"	p	interface:EcKeyAlgorithm
namedCurve	tsvscode.ts	/^    namedCurve: NamedCurve;$/;"	p	interface:EcKeyGenParams
namedCurve	tsvscode.ts	/^    namedCurve: NamedCurve;$/;"	p	interface:EcKeyImportParams
namedItem	tsvscode.ts	/^    namedItem(name: string): Element | null;$/;"	m	interface:HTMLCollection
namedItem	tsvscode.ts	/^    namedItem(name: string): HTMLCollection | Element | null;$/;"	m	interface:HTMLAllCollection
namedItem	tsvscode.ts	/^    namedItem(name: string): HTMLOptionElement | null;$/;"	m	interface:HTMLSelectElement
namedItem	tsvscode.ts	/^    namedItem(name: string): MimeType | null;$/;"	m	interface:MimeTypeArray
namedItem	tsvscode.ts	/^    namedItem(name: string): MimeType | null;$/;"	m	interface:Plugin
namedItem	tsvscode.ts	/^    namedItem(name: string): Plugin | null;$/;"	m	interface:PluginArray
namedItem	tsvscode.ts	/^    namedItem(name: string): RadioNodeList | Element | null;$/;"	m	interface:HTMLFormControlsCollection
namedItem	tsvscode.ts	/^    namedItem(name: string): T | null;$/;"	m	interface:HTMLCollectionOf
namespaceURI	tsvscode.ts	/^    readonly namespaceURI: string | null;$/;"	p	interface:Attr
namespaceURI	tsvscode.ts	/^    readonly namespaceURI: string | null;$/;"	p	interface:Element
namespaceURI	tsvscode.ts	/^    readonly namespaceURI: string;$/;"	p	interface:CSSNamespaceRule
naturalHeight	tsvscode.ts	/^    readonly naturalHeight: number;$/;"	p	interface:HTMLImageElement
naturalWidth	tsvscode.ts	/^    readonly naturalWidth: number;$/;"	p	interface:HTMLImageElement
navigation	tsvscode.ts	/^    readonly navigation: PerformanceNavigation;$/;"	p	interface:Performance
navigationPreload	tsvscode.ts	/^    readonly navigationPreload: NavigationPreloadManager;$/;"	p	interface:ServiceWorkerRegistration
navigationStart	tsvscode.ts	/^    readonly navigationStart: number;$/;"	p	interface:PerformanceTiming
navigationUI	tsvscode.ts	/^    navigationUI?: FullscreenNavigationUI;$/;"	p	interface:FullscreenOptions
navigator	tsvscode.ts	/^    readonly navigator: Navigator;$/;"	p	interface:Window
navigator	tsvscode.ts	/^declare var navigator: Navigator;$/;"	v	namespace:CSS
negative	tsvscode.ts	/^    negative: string;$/;"	p	interface:CSSCounterStyleRule
negotiated	tsvscode.ts	/^    negotiated?: boolean;$/;"	p	interface:RTCDataChannelInit
negotiated	tsvscode.ts	/^    readonly negotiated: boolean;$/;"	p	interface:RTCDataChannel
networkPriority	tsvscode.ts	/^    networkPriority?: RTCPriorityType;$/;"	p	interface:RTCRtpEncodingParameters
networkState	tsvscode.ts	/^    readonly networkState: number;$/;"	p	interface:HTMLMediaElement
new	ests.ts	/^        new (locales?: string | string[], options?: CollatorOptions): Collator;$/;"	m	interface:Intl.CollatorConstructor
new	ests.ts	/^        new (locales?: string | string[], options?: DateTimeFormatOptions): DateTimeFormat;$/;"	m	interface:Intl.DateTimeFormatConstructor
new	ests.ts	/^        new (locales?: string | string[], options?: NumberFormatOptions): NumberFormat;$/;"	m	interface:Intl.NumberFormatConstructor
new	ests.ts	/^    new (): Date;$/;"	m	interface:DateConstructor
new	ests.ts	/^    new (...args: string[]): Function;$/;"	m	interface:FunctionConstructor
new	ests.ts	/^    new (array: ArrayLike<number> | ArrayBufferLike): Float32Array;$/;"	m	interface:Float32ArrayConstructor
new	ests.ts	/^    new (array: ArrayLike<number> | ArrayBufferLike): Float64Array;$/;"	m	interface:Float64ArrayConstructor
new	ests.ts	/^    new (array: ArrayLike<number> | ArrayBufferLike): Int16Array;$/;"	m	interface:Int16ArrayConstructor
new	ests.ts	/^    new (array: ArrayLike<number> | ArrayBufferLike): Int32Array;$/;"	m	interface:Int32ArrayConstructor
new	ests.ts	/^    new (array: ArrayLike<number> | ArrayBufferLike): Int8Array;$/;"	m	interface:Int8ArrayConstructor
new	ests.ts	/^    new (array: ArrayLike<number> | ArrayBufferLike): Uint16Array;$/;"	m	interface:Uint16ArrayConstructor
new	ests.ts	/^    new (array: ArrayLike<number> | ArrayBufferLike): Uint32Array;$/;"	m	interface:Uint32ArrayConstructor
new	ests.ts	/^    new (array: ArrayLike<number> | ArrayBufferLike): Uint8Array;$/;"	m	interface:Uint8ArrayConstructor
new	ests.ts	/^    new (array: ArrayLike<number> | ArrayBufferLike): Uint8ClampedArray;$/;"	m	interface:Uint8ClampedArrayConstructor
new	ests.ts	/^    new (arrayLength?: number): any[];$/;"	m	interface:ArrayConstructor
new	ests.ts	/^    new (buffer: ArrayBufferLike & { BYTES_PER_ELEMENT?: never; }, byteOffset?: number, byteLeng/;"	m	interface:DataViewConstructor
new	ests.ts	/^    new (buffer: ArrayBufferLike, byteOffset?: number, length?: number): Float32Array;$/;"	m	interface:Float32ArrayConstructor
new	ests.ts	/^    new (buffer: ArrayBufferLike, byteOffset?: number, length?: number): Float64Array;$/;"	m	interface:Float64ArrayConstructor
new	ests.ts	/^    new (buffer: ArrayBufferLike, byteOffset?: number, length?: number): Int16Array;$/;"	m	interface:Int16ArrayConstructor
new	ests.ts	/^    new (buffer: ArrayBufferLike, byteOffset?: number, length?: number): Int32Array;$/;"	m	interface:Int32ArrayConstructor
new	ests.ts	/^    new (buffer: ArrayBufferLike, byteOffset?: number, length?: number): Int8Array;$/;"	m	interface:Int8ArrayConstructor
new	ests.ts	/^    new (buffer: ArrayBufferLike, byteOffset?: number, length?: number): Uint16Array;$/;"	m	interface:Uint16ArrayConstructor
new	ests.ts	/^    new (buffer: ArrayBufferLike, byteOffset?: number, length?: number): Uint32Array;$/;"	m	interface:Uint32ArrayConstructor
new	ests.ts	/^    new (buffer: ArrayBufferLike, byteOffset?: number, length?: number): Uint8Array;$/;"	m	interface:Uint8ArrayConstructor
new	ests.ts	/^    new (buffer: ArrayBufferLike, byteOffset?: number, length?: number): Uint8ClampedArray;$/;"	m	interface:Uint8ClampedArrayConstructor
new	ests.ts	/^    new (byteLength: number): ArrayBuffer;$/;"	m	interface:ArrayBufferConstructor
new	ests.ts	/^    new (length: number): Float32Array;$/;"	m	interface:Float32ArrayConstructor
new	ests.ts	/^    new (length: number): Float64Array;$/;"	m	interface:Float64ArrayConstructor
new	ests.ts	/^    new (length: number): Int16Array;$/;"	m	interface:Int16ArrayConstructor
new	ests.ts	/^    new (length: number): Int32Array;$/;"	m	interface:Int32ArrayConstructor
new	ests.ts	/^    new (length: number): Int8Array;$/;"	m	interface:Int8ArrayConstructor
new	ests.ts	/^    new (length: number): Uint16Array;$/;"	m	interface:Uint16ArrayConstructor
new	ests.ts	/^    new (length: number): Uint32Array;$/;"	m	interface:Uint32ArrayConstructor
new	ests.ts	/^    new (length: number): Uint8Array;$/;"	m	interface:Uint8ArrayConstructor
new	ests.ts	/^    new (length: number): Uint8ClampedArray;$/;"	m	interface:Uint8ClampedArrayConstructor
new	ests.ts	/^    new (message?: string): Error;$/;"	m	interface:ErrorConstructor
new	ests.ts	/^    new (message?: string): EvalError;$/;"	m	interface:EvalErrorConstructor
new	ests.ts	/^    new (message?: string): RangeError;$/;"	m	interface:RangeErrorConstructor
new	ests.ts	/^    new (message?: string): ReferenceError;$/;"	m	interface:ReferenceErrorConstructor
new	ests.ts	/^    new (message?: string): SyntaxError;$/;"	m	interface:SyntaxErrorConstructor
new	ests.ts	/^    new (message?: string): TypeError;$/;"	m	interface:TypeErrorConstructor
new	ests.ts	/^    new (message?: string): URIError;$/;"	m	interface:URIErrorConstructor
new	ests.ts	/^    new (pattern: RegExp | string): RegExp;$/;"	m	interface:RegExpConstructor
new	ests.ts	/^    new (pattern: string, flags?: string): RegExp;$/;"	m	interface:RegExpConstructor
new	ests.ts	/^    new (value: number | string): Date;$/;"	m	interface:DateConstructor
new	ests.ts	/^    new (value?: any): Boolean;$/;"	m	interface:BooleanConstructor
new	ests.ts	/^    new (value?: any): Number;$/;"	m	interface:NumberConstructor
new	ests.ts	/^    new (value?: any): Object;$/;"	m	interface:ObjectConstructor
new	ests.ts	/^    new (value?: any): String;$/;"	m	interface:StringConstructor
new	ests.ts	/^    new (year: number, monthIndex: number, date?: number, hours?: number, minutes?: number, seco/;"	m	interface:DateConstructor
new	ests.ts	/^    new <T>(...items: T[]): T[];$/;"	m	interface:ArrayConstructor
new	ests.ts	/^    new <T>(arrayLength: number): T[];$/;"	m	interface:ArrayConstructor
new	tsvscode.ts	/^    new (...params: any[]): HTMLElement;$/;"	m	interface:CSS.CustomElementConstructor
newState	tsvscode.ts	/^    newState?: string;$/;"	p	interface:ToggleEventInit
newState	tsvscode.ts	/^    readonly newState: string;$/;"	p	interface:ToggleEvent
newURL	tsvscode.ts	/^    newURL?: string;$/;"	p	interface:HashChangeEventInit
newURL	tsvscode.ts	/^    readonly newURL: string;$/;"	p	interface:HashChangeEvent
newValue	tsvscode.ts	/^    newValue?: string | null;$/;"	p	interface:StorageEventInit
newValue	tsvscode.ts	/^    readonly newValue: string | null;$/;"	p	interface:StorageEvent
newValue	tsvscode.ts	/^    readonly newValue: string;$/;"	p	interface:MutationEvent
newValueSpecifiedUnits	tsvscode.ts	/^    newValueSpecifiedUnits(unitType: number, valueInSpecifiedUnits: number): void;$/;"	m	interface:SVGAngle
newValueSpecifiedUnits	tsvscode.ts	/^    newValueSpecifiedUnits(unitType: number, valueInSpecifiedUnits: number): void;$/;"	m	interface:SVGLength
newVersion	tsvscode.ts	/^    newVersion?: number | null;$/;"	p	interface:IDBVersionChangeEventInit
newVersion	tsvscode.ts	/^    readonly newVersion: number | null;$/;"	p	interface:IDBVersionChangeEvent
nextElementSibling	tsvscode.ts	/^    readonly nextElementSibling: Element | null;$/;"	p	interface:NonDocumentTypeChildNode
nextHopProtocol	tsvscode.ts	/^    readonly nextHopProtocol: string;$/;"	p	interface:PerformanceResourceTiming
nextNode	tsvscode.ts	/^    nextNode(): Node | null;$/;"	m	interface:NodeIterator
nextNode	tsvscode.ts	/^    nextNode(): Node | null;$/;"	m	interface:TreeWalker
nextSibling	tsvscode.ts	/^    nextSibling(): Node | null;$/;"	m	interface:TreeWalker
nextSibling	tsvscode.ts	/^    readonly nextSibling: ChildNode | null;$/;"	p	interface:Node
nextSibling	tsvscode.ts	/^    readonly nextSibling: Node | null;$/;"	p	interface:MutationRecord
noHref	tsvscode.ts	/^    noHref: boolean;$/;"	p	interface:HTMLAreaElement
noModule	tsvscode.ts	/^    noModule: boolean;$/;"	p	interface:HTMLScriptElement
noResize	tsvscode.ts	/^    noResize: boolean;$/;"	p	interface:HTMLFrameElement
noShade	tsvscode.ts	/^    noShade: boolean;$/;"	p	interface:HTMLHRElement
noValidate	tsvscode.ts	/^    noValidate: boolean;$/;"	p	interface:HTMLFormElement
noWrap	tsvscode.ts	/^    noWrap: boolean;$/;"	p	interface:HTMLTableCellElement
nodeName	tsvscode.ts	/^    readonly nodeName: string;$/;"	p	interface:Node
nodeType	tsvscode.ts	/^    readonly nodeType: number;$/;"	p	interface:Node
nodeValue	tsvscode.ts	/^    nodeValue: string | null;$/;"	p	interface:Node
noiseSuppression	tsvscode.ts	/^    noiseSuppression?: ConstrainBoolean;$/;"	p	interface:MediaTrackConstraintSet
noiseSuppression	tsvscode.ts	/^    noiseSuppression?: boolean;$/;"	p	interface:MediaTrackSettings
noiseSuppression	tsvscode.ts	/^    noiseSuppression?: boolean;$/;"	p	interface:MediaTrackSupportedConstraints
noiseSuppression	tsvscode.ts	/^    noiseSuppression?: boolean[];$/;"	p	interface:MediaTrackCapabilities
nominated	tsvscode.ts	/^    nominated?: boolean;$/;"	p	interface:RTCIceCandidatePairStats
nonce	tsvscode.ts	/^    nonce?: string;$/;"	p	interface:HTMLOrSVGElement
normalize	tsvscode.ts	/^    normalize(): void;$/;"	m	interface:Node
normalize	tsvscode.ts	/^    normalize: boolean;$/;"	p	interface:ConvolverNode
now	ests.ts	/^    now(): number;$/;"	m	interface:DateConstructor
now	tsvscode.ts	/^    now(): DOMHighResTimeStamp;$/;"	m	interface:Performance
numOctaves	tsvscode.ts	/^    readonly numOctaves: SVGAnimatedInteger;$/;"	p	interface:SVGFETurbulenceElement
numberOfChannels	tsvscode.ts	/^    numberOfChannels?: number;$/;"	p	interface:AudioBufferOptions
numberOfChannels	tsvscode.ts	/^    numberOfChannels?: number;$/;"	p	interface:OfflineAudioContextOptions
numberOfChannels	tsvscode.ts	/^    readonly numberOfChannels: number;$/;"	p	interface:AudioBuffer
numberOfInputs	tsvscode.ts	/^    numberOfInputs?: number;$/;"	p	interface:AudioWorkletNodeOptions
numberOfInputs	tsvscode.ts	/^    numberOfInputs?: number;$/;"	p	interface:ChannelMergerOptions
numberOfInputs	tsvscode.ts	/^    readonly numberOfInputs: number;$/;"	p	interface:AudioNode
numberOfItems	tsvscode.ts	/^    readonly numberOfItems: number;$/;"	p	interface:SVGLengthList
numberOfItems	tsvscode.ts	/^    readonly numberOfItems: number;$/;"	p	interface:SVGNumberList
numberOfItems	tsvscode.ts	/^    readonly numberOfItems: number;$/;"	p	interface:SVGPointList
numberOfItems	tsvscode.ts	/^    readonly numberOfItems: number;$/;"	p	interface:SVGStringList
numberOfItems	tsvscode.ts	/^    readonly numberOfItems: number;$/;"	p	interface:SVGTransformList
numberOfOutputs	tsvscode.ts	/^    numberOfOutputs?: number;$/;"	p	interface:AudioWorkletNodeOptions
numberOfOutputs	tsvscode.ts	/^    numberOfOutputs?: number;$/;"	p	interface:ChannelSplitterOptions
numberOfOutputs	tsvscode.ts	/^    readonly numberOfOutputs: number;$/;"	p	interface:AudioNode
numberValue	tsvscode.ts	/^    readonly numberValue: number;$/;"	p	interface:XPathResult
numberingSystem	ests.ts	/^        numberingSystem: string;$/;"	p	interface:Intl.ResolvedDateTimeFormatOptions
numberingSystem	ests.ts	/^        numberingSystem: string;$/;"	p	interface:Intl.ResolvedNumberFormatOptions
numeric	ests.ts	/^        numeric: boolean;$/;"	p	interface:Intl.ResolvedCollatorOptions
numeric	ests.ts	/^        numeric?: boolean | undefined;$/;"	p	interface:Intl.CollatorOptions
object	ests.ts	/^    object: object;$/;"	p	interface:WeakKeyTypes
objectFit	tsvscode.ts	/^    objectFit: string;$/;"	p	interface:CSSStyleDeclaration
objectPosition	tsvscode.ts	/^    objectPosition: string;$/;"	p	interface:CSSStyleDeclaration
objectStore	tsvscode.ts	/^    objectStore(name: string): IDBObjectStore;$/;"	m	interface:IDBTransaction
objectStore	tsvscode.ts	/^    readonly objectStore: IDBObjectStore;$/;"	p	interface:IDBIndex
objectStoreNames	tsvscode.ts	/^    readonly objectStoreNames: DOMStringList;$/;"	p	interface:IDBDatabase
objectStoreNames	tsvscode.ts	/^    readonly objectStoreNames: DOMStringList;$/;"	p	interface:IDBTransaction
observe	tsvscode.ts	/^    observe(): void;$/;"	m	interface:ReportingObserver
observe	tsvscode.ts	/^    observe(options?: PerformanceObserverInit): void;$/;"	m	interface:PerformanceObserver
observe	tsvscode.ts	/^    observe(target: Element): void;$/;"	m	interface:IntersectionObserver
observe	tsvscode.ts	/^    observe(target: Element, options?: ResizeObserverOptions): void;$/;"	m	interface:ResizeObserver
observe	tsvscode.ts	/^    observe(target: Node, options?: MutationObserverInit): void;$/;"	m	interface:MutationObserver
of	ests.ts	/^    of(...items: number[]): Float32Array;$/;"	m	interface:Float32ArrayConstructor
of	ests.ts	/^    of(...items: number[]): Float64Array;$/;"	m	interface:Float64ArrayConstructor
of	ests.ts	/^    of(...items: number[]): Int16Array;$/;"	m	interface:Int16ArrayConstructor
of	ests.ts	/^    of(...items: number[]): Int32Array;$/;"	m	interface:Int32ArrayConstructor
of	ests.ts	/^    of(...items: number[]): Int8Array;$/;"	m	interface:Int8ArrayConstructor
of	ests.ts	/^    of(...items: number[]): Uint16Array;$/;"	m	interface:Uint16ArrayConstructor
of	ests.ts	/^    of(...items: number[]): Uint32Array;$/;"	m	interface:Uint32ArrayConstructor
of	ests.ts	/^    of(...items: number[]): Uint8Array;$/;"	m	interface:Uint8ArrayConstructor
of	ests.ts	/^    of(...items: number[]): Uint8ClampedArray;$/;"	m	interface:Uint8ClampedArrayConstructor
offerToReceiveAudio	tsvscode.ts	/^    offerToReceiveAudio?: boolean;$/;"	p	interface:RTCOfferOptions
offerToReceiveVideo	tsvscode.ts	/^    offerToReceiveVideo?: boolean;$/;"	p	interface:RTCOfferOptions
offset	tsvscode.ts	/^    offset: number | null;$/;"	p	interface:ComputedKeyframe
offset	tsvscode.ts	/^    offset: number;$/;"	p	interface:PlaneLayout
offset	tsvscode.ts	/^    offset: string;$/;"	p	interface:CSSStyleDeclaration
offset	tsvscode.ts	/^    offset?: number | (number | null)[];$/;"	p	interface:PropertyIndexedKeyframes
offset	tsvscode.ts	/^    offset?: number | null;$/;"	p	interface:Keyframe
offset	tsvscode.ts	/^    offset?: number;$/;"	p	interface:ConstantSourceOptions
offset	tsvscode.ts	/^    readonly offset: AudioParam;$/;"	p	interface:ConstantSourceNode
offset	tsvscode.ts	/^    readonly offset: SVGAnimatedNumber;$/;"	p	interface:SVGComponentTransferFunctionElement
offset	tsvscode.ts	/^    readonly offset: SVGAnimatedNumber;$/;"	p	interface:SVGStopElement
offsetAnchor	tsvscode.ts	/^    offsetAnchor: string;$/;"	p	interface:CSSStyleDeclaration
offsetDistance	tsvscode.ts	/^    offsetDistance: string;$/;"	p	interface:CSSStyleDeclaration
offsetHeight	tsvscode.ts	/^    readonly offsetHeight: number;$/;"	p	interface:HTMLElement
offsetLeft	tsvscode.ts	/^    readonly offsetLeft: number;$/;"	p	interface:HTMLElement
offsetLeft	tsvscode.ts	/^    readonly offsetLeft: number;$/;"	p	interface:VisualViewport
offsetParent	tsvscode.ts	/^    readonly offsetParent: Element | null;$/;"	p	interface:HTMLElement
offsetPath	tsvscode.ts	/^    offsetPath: string;$/;"	p	interface:CSSStyleDeclaration
offsetPosition	tsvscode.ts	/^    offsetPosition: string;$/;"	p	interface:CSSStyleDeclaration
offsetRotate	tsvscode.ts	/^    offsetRotate: string;$/;"	p	interface:CSSStyleDeclaration
offsetTop	tsvscode.ts	/^    readonly offsetTop: number;$/;"	p	interface:HTMLElement
offsetTop	tsvscode.ts	/^    readonly offsetTop: number;$/;"	p	interface:VisualViewport
offsetWidth	tsvscode.ts	/^    readonly offsetWidth: number;$/;"	p	interface:HTMLElement
offsetX	tsvscode.ts	/^    readonly offsetX: number;$/;"	p	interface:MouseEvent
offsetY	tsvscode.ts	/^    readonly offsetY: number;$/;"	p	interface:MouseEvent
ok	tsvscode.ts	/^    readonly ok: boolean;$/;"	p	interface:Response
oldState	tsvscode.ts	/^    oldState?: string;$/;"	p	interface:ToggleEventInit
oldState	tsvscode.ts	/^    readonly oldState: string;$/;"	p	interface:ToggleEvent
oldURL	tsvscode.ts	/^    oldURL?: string;$/;"	p	interface:HashChangeEventInit
oldURL	tsvscode.ts	/^    readonly oldURL: string;$/;"	p	interface:HashChangeEvent
oldValue	tsvscode.ts	/^    oldValue?: string | null;$/;"	p	interface:StorageEventInit
oldValue	tsvscode.ts	/^    readonly oldValue: string | null;$/;"	p	interface:MutationRecord
oldValue	tsvscode.ts	/^    readonly oldValue: string | null;$/;"	p	interface:StorageEvent
oldVersion	tsvscode.ts	/^    oldVersion?: number;$/;"	p	interface:IDBVersionChangeEventInit
oldVersion	tsvscode.ts	/^    readonly oldVersion: number;$/;"	p	interface:IDBVersionChangeEvent
onLine	tsvscode.ts	/^    readonly onLine: boolean;$/;"	p	interface:NavigatorOnLine
onabort	tsvscode.ts	/^    onabort: ((this: AbortSignal, ev: Event) => any) | null;$/;"	p	interface:AbortSignal
onabort	tsvscode.ts	/^    onabort: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;$/;"	p	interface:FileReader
onabort	tsvscode.ts	/^    onabort: ((this: GlobalEventHandlers, ev: UIEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onabort	tsvscode.ts	/^    onabort: ((this: IDBDatabase, ev: Event) => any) | null;$/;"	p	interface:IDBDatabase
onabort	tsvscode.ts	/^    onabort: ((this: IDBTransaction, ev: Event) => any) | null;$/;"	p	interface:IDBTransaction
onabort	tsvscode.ts	/^    onabort: ((this: SourceBuffer, ev: Event) => any) | null;$/;"	p	interface:SourceBuffer
onabort	tsvscode.ts	/^    onabort: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;$/;"	p	interface:XMLHttpRequestEventTarget
onaddsourcebuffer	tsvscode.ts	/^    onaddsourcebuffer: ((this: SourceBufferList, ev: Event) => any) | null;$/;"	p	interface:SourceBufferList
onaddtrack	tsvscode.ts	/^    onaddtrack: ((this: MediaStream, ev: MediaStreamTrackEvent) => any) | null;$/;"	p	interface:MediaStream
onaddtrack	tsvscode.ts	/^    onaddtrack: ((this: TextTrackList, ev: TrackEvent) => any) | null;$/;"	p	interface:TextTrackList
onafterprint	tsvscode.ts	/^    onafterprint: ((this: WindowEventHandlers, ev: Event) => any) | null;$/;"	p	interface:WindowEventHandlers
onanimationcancel	tsvscode.ts	/^    onanimationcancel: ((this: GlobalEventHandlers, ev: AnimationEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onanimationend	tsvscode.ts	/^    onanimationend: ((this: GlobalEventHandlers, ev: AnimationEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onanimationiteration	tsvscode.ts	/^    onanimationiteration: ((this: GlobalEventHandlers, ev: AnimationEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onanimationstart	tsvscode.ts	/^    onanimationstart: ((this: GlobalEventHandlers, ev: AnimationEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onaudioprocess	tsvscode.ts	/^    onaudioprocess: ((this: ScriptProcessorNode, ev: AudioProcessingEvent) => any) | null;$/;"	p	interface:ScriptProcessorNode
onauxclick	tsvscode.ts	/^    onauxclick: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onbeforeinput	tsvscode.ts	/^    onbeforeinput: ((this: GlobalEventHandlers, ev: InputEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onbeforeprint	tsvscode.ts	/^    onbeforeprint: ((this: WindowEventHandlers, ev: Event) => any) | null;$/;"	p	interface:WindowEventHandlers
onbeforetoggle	tsvscode.ts	/^    onbeforetoggle: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onbeforeunload	tsvscode.ts	/^    onbeforeunload: ((this: WindowEventHandlers, ev: BeforeUnloadEvent) => any) | null;$/;"	p	interface:WindowEventHandlers
onblocked	tsvscode.ts	/^    onblocked: ((this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => any) | null;$/;"	p	interface:IDBOpenDBRequest
onblur	tsvscode.ts	/^    onblur: ((this: GlobalEventHandlers, ev: FocusEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onboundary	tsvscode.ts	/^    onboundary: ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any) | null;$/;"	p	interface:SpeechSynthesisUtterance
onbufferedamountlow	tsvscode.ts	/^    onbufferedamountlow: ((this: RTCDataChannel, ev: Event) => any) | null;$/;"	p	interface:RTCDataChannel
oncancel	tsvscode.ts	/^    oncancel: ((this: Animation, ev: AnimationPlaybackEvent) => any) | null;$/;"	p	interface:Animation
oncancel	tsvscode.ts	/^    oncancel: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
oncanplay	tsvscode.ts	/^    oncanplay: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
oncanplaythrough	tsvscode.ts	/^    oncanplaythrough: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
once	tsvscode.ts	/^    once?: boolean;$/;"	p	interface:AddEventListenerOptions
onchange	tsvscode.ts	/^    onchange: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onchange	tsvscode.ts	/^    onchange: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;$/;"	p	interface:MediaQueryList
onchange	tsvscode.ts	/^    onchange: ((this: PermissionStatus, ev: Event) => any) | null;$/;"	p	interface:PermissionStatus
onchange	tsvscode.ts	/^    onchange: ((this: ScreenOrientation, ev: Event) => any) | null;$/;"	p	interface:ScreenOrientation
onchange	tsvscode.ts	/^    onchange: ((this: TextTrackList, ev: Event) => any) | null;$/;"	p	interface:TextTrackList
onclick	tsvscode.ts	/^    onclick: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onclick	tsvscode.ts	/^    onclick: ((this: Notification, ev: Event) => any) | null;$/;"	p	interface:Notification
onclose	tsvscode.ts	/^    onclose: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onclose	tsvscode.ts	/^    onclose: ((this: IDBDatabase, ev: Event) => any) | null;$/;"	p	interface:IDBDatabase
onclose	tsvscode.ts	/^    onclose: ((this: Notification, ev: Event) => any) | null;$/;"	p	interface:Notification
onclose	tsvscode.ts	/^    onclose: ((this: RTCDataChannel, ev: Event) => any) | null;$/;"	p	interface:RTCDataChannel
onclose	tsvscode.ts	/^    onclose: ((this: WebSocket, ev: CloseEvent) => any) | null;$/;"	p	interface:WebSocket
onclosing	tsvscode.ts	/^    onclosing: ((this: RTCDataChannel, ev: Event) => any) | null;$/;"	p	interface:RTCDataChannel
oncomplete	tsvscode.ts	/^    oncomplete: ((this: IDBTransaction, ev: Event) => any) | null;$/;"	p	interface:IDBTransaction
oncomplete	tsvscode.ts	/^    oncomplete: ((this: OfflineAudioContext, ev: OfflineAudioCompletionEvent) => any) | null;$/;"	p	interface:OfflineAudioContext
onconnect	tsvscode.ts	/^    onconnect: ((this: RemotePlayback, ev: Event) => any) | null;$/;"	p	interface:RemotePlayback
onconnecting	tsvscode.ts	/^    onconnecting: ((this: RemotePlayback, ev: Event) => any) | null;$/;"	p	interface:RemotePlayback
onconnectionstatechange	tsvscode.ts	/^    onconnectionstatechange: ((this: RTCPeerConnection, ev: Event) => any) | null;$/;"	p	interface:RTCPeerConnection
oncontextlost	tsvscode.ts	/^    oncontextlost: ((this: OffscreenCanvas, ev: Event) => any) | null;$/;"	p	interface:OffscreenCanvas
oncontextmenu	tsvscode.ts	/^    oncontextmenu: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
oncontextrestored	tsvscode.ts	/^    oncontextrestored: ((this: OffscreenCanvas, ev: Event) => any) | null;$/;"	p	interface:OffscreenCanvas
oncontrollerchange	tsvscode.ts	/^    oncontrollerchange: ((this: ServiceWorkerContainer, ev: Event) => any) | null;$/;"	p	interface:ServiceWorkerContainer
oncopy	tsvscode.ts	/^    oncopy: ((this: GlobalEventHandlers, ev: ClipboardEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
oncuechange	tsvscode.ts	/^    oncuechange: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
oncuechange	tsvscode.ts	/^    oncuechange: ((this: TextTrack, ev: Event) => any) | null;$/;"	p	interface:TextTrack
oncut	tsvscode.ts	/^    oncut: ((this: GlobalEventHandlers, ev: ClipboardEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
ondataavailable	tsvscode.ts	/^    ondataavailable: ((this: MediaRecorder, ev: BlobEvent) => any) | null;$/;"	p	interface:MediaRecorder
ondatachannel	tsvscode.ts	/^    ondatachannel: ((this: RTCPeerConnection, ev: RTCDataChannelEvent) => any) | null;$/;"	p	interface:RTCPeerConnection
ondblclick	tsvscode.ts	/^    ondblclick: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
ondequeue	tsvscode.ts	/^    ondequeue: ((this: VideoDecoder, ev: Event) => any) | null;$/;"	p	interface:VideoDecoder
ondequeue	tsvscode.ts	/^    ondequeue: ((this: VideoEncoder, ev: Event) => any) | null;$/;"	p	interface:VideoEncoder
ondevicechange	tsvscode.ts	/^    ondevicechange: ((this: MediaDevices, ev: Event) => any) | null;$/;"	p	interface:MediaDevices
ondevicemotion	tsvscode.ts	/^    ondevicemotion: ((this: Window, ev: DeviceMotionEvent) => any) | null;$/;"	p	interface:Window
ondevicemotion	tsvscode.ts	/^declare var ondevicemotion: ((this: Window, ev: DeviceMotionEvent) => any) | null;$/;"	v	namespace:CSS
ondeviceorientation	tsvscode.ts	/^    ondeviceorientation: ((this: Window, ev: DeviceOrientationEvent) => any) | null;$/;"	p	interface:Window
ondeviceorientation	tsvscode.ts	/^declare var ondeviceorientation: ((this: Window, ev: DeviceOrientationEvent) => any) | null;$/;"	v	namespace:CSS
ondeviceorientationabsolute	tsvscode.ts	/^    ondeviceorientationabsolute: ((this: Window, ev: DeviceOrientationEvent) => any) | null;$/;"	p	interface:Window
ondeviceorientationabsolute	tsvscode.ts	/^declare var ondeviceorientationabsolute: ((this: Window, ev: DeviceOrientationEvent) => any) | n/;"	v	namespace:CSS
ondisconnect	tsvscode.ts	/^    ondisconnect: ((this: RemotePlayback, ev: Event) => any) | null;$/;"	p	interface:RemotePlayback
ondrag	tsvscode.ts	/^    ondrag: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
ondragend	tsvscode.ts	/^    ondragend: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
ondragenter	tsvscode.ts	/^    ondragenter: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
ondragleave	tsvscode.ts	/^    ondragleave: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
ondragover	tsvscode.ts	/^    ondragover: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
ondragstart	tsvscode.ts	/^    ondragstart: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
ondrop	tsvscode.ts	/^    ondrop: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
ondurationchange	tsvscode.ts	/^    ondurationchange: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onemptied	tsvscode.ts	/^    onemptied: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onencrypted	tsvscode.ts	/^    onencrypted: ((this: HTMLMediaElement, ev: MediaEncryptedEvent) => any) | null;$/;"	p	interface:HTMLMediaElement
onend	tsvscode.ts	/^    onend: ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any) | null;$/;"	p	interface:SpeechSynthesisUtterance
onended	tsvscode.ts	/^    onended: ((this: AudioScheduledSourceNode, ev: Event) => any) | null;$/;"	p	interface:AudioScheduledSourceNode
onended	tsvscode.ts	/^    onended: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onended	tsvscode.ts	/^    onended: ((this: MediaStreamTrack, ev: Event) => any) | null;$/;"	p	interface:MediaStreamTrack
onenter	tsvscode.ts	/^    onenter: ((this: TextTrackCue, ev: Event) => any) | null;$/;"	p	interface:TextTrackCue
onenterpictureinpicture	tsvscode.ts	/^    onenterpictureinpicture: ((this: HTMLVideoElement, ev: Event) => any) | null;$/;"	p	interface:HTMLVideoElement
onerror	tsvscode.ts	/^    onerror: ((this: AbstractWorker, ev: ErrorEvent) => any) | null;$/;"	p	interface:AbstractWorker
onerror	tsvscode.ts	/^    onerror: ((this: EventSource, ev: Event) => any) | null;$/;"	p	interface:EventSource
onerror	tsvscode.ts	/^    onerror: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;$/;"	p	interface:FileReader
onerror	tsvscode.ts	/^    onerror: ((this: IDBDatabase, ev: Event) => any) | null;$/;"	p	interface:IDBDatabase
onerror	tsvscode.ts	/^    onerror: ((this: IDBRequest<T>, ev: Event) => any) | null;$/;"	p	interface:IDBRequest
onerror	tsvscode.ts	/^    onerror: ((this: IDBTransaction, ev: Event) => any) | null;$/;"	p	interface:IDBTransaction
onerror	tsvscode.ts	/^    onerror: ((this: MediaRecorder, ev: Event) => any) | null;$/;"	p	interface:MediaRecorder
onerror	tsvscode.ts	/^    onerror: ((this: Notification, ev: Event) => any) | null;$/;"	p	interface:Notification
onerror	tsvscode.ts	/^    onerror: ((this: RTCDataChannel, ev: Event) => any) | null;$/;"	p	interface:RTCDataChannel
onerror	tsvscode.ts	/^    onerror: ((this: RTCDtlsTransport, ev: Event) => any) | null;$/;"	p	interface:RTCDtlsTransport
onerror	tsvscode.ts	/^    onerror: ((this: SourceBuffer, ev: Event) => any) | null;$/;"	p	interface:SourceBuffer
onerror	tsvscode.ts	/^    onerror: ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisErrorEvent) => any) | null;$/;"	p	interface:SpeechSynthesisUtterance
onerror	tsvscode.ts	/^    onerror: ((this: WebSocket, ev: Event) => any) | null;$/;"	p	interface:WebSocket
onerror	tsvscode.ts	/^    onerror: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;$/;"	p	interface:XMLHttpRequestEventTarget
onerror	tsvscode.ts	/^    onerror: OnErrorEventHandler;$/;"	p	interface:GlobalEventHandlers
onexit	tsvscode.ts	/^    onexit: ((this: TextTrackCue, ev: Event) => any) | null;$/;"	p	interface:TextTrackCue
onfinish	tsvscode.ts	/^    onfinish: ((this: Animation, ev: AnimationPlaybackEvent) => any) | null;$/;"	p	interface:Animation
onfocus	tsvscode.ts	/^    onfocus: ((this: GlobalEventHandlers, ev: FocusEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onformdata	tsvscode.ts	/^    onformdata: ((this: GlobalEventHandlers, ev: FormDataEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onfullscreenchange	tsvscode.ts	/^    onfullscreenchange: ((this: Document, ev: Event) => any) | null;$/;"	p	interface:Document
onfullscreenchange	tsvscode.ts	/^    onfullscreenchange: ((this: Element, ev: Event) => any) | null;$/;"	p	interface:Element
onfullscreenerror	tsvscode.ts	/^    onfullscreenerror: ((this: Document, ev: Event) => any) | null;$/;"	p	interface:Document
onfullscreenerror	tsvscode.ts	/^    onfullscreenerror: ((this: Element, ev: Event) => any) | null;$/;"	p	interface:Element
ongamepadconnected	tsvscode.ts	/^    ongamepadconnected: ((this: WindowEventHandlers, ev: GamepadEvent) => any) | null;$/;"	p	interface:WindowEventHandlers
ongamepaddisconnected	tsvscode.ts	/^    ongamepaddisconnected: ((this: WindowEventHandlers, ev: GamepadEvent) => any) | null;$/;"	p	interface:WindowEventHandlers
ongatheringstatechange	tsvscode.ts	/^    ongatheringstatechange: ((this: RTCIceTransport, ev: Event) => any) | null;$/;"	p	interface:RTCIceTransport
ongotpointercapture	tsvscode.ts	/^    ongotpointercapture: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onhashchange	tsvscode.ts	/^    onhashchange: ((this: WindowEventHandlers, ev: HashChangeEvent) => any) | null;$/;"	p	interface:WindowEventHandlers
onicecandidate	tsvscode.ts	/^    onicecandidate: ((this: RTCPeerConnection, ev: RTCPeerConnectionIceEvent) => any) | null;$/;"	p	interface:RTCPeerConnection
onicecandidateerror	tsvscode.ts	/^    onicecandidateerror: ((this: RTCPeerConnection, ev: RTCPeerConnectionIceErrorEvent) => any) /;"	p	interface:RTCPeerConnection
oniceconnectionstatechange	tsvscode.ts	/^    oniceconnectionstatechange: ((this: RTCPeerConnection, ev: Event) => any) | null;$/;"	p	interface:RTCPeerConnection
onicegatheringstatechange	tsvscode.ts	/^    onicegatheringstatechange: ((this: RTCPeerConnection, ev: Event) => any) | null;$/;"	p	interface:RTCPeerConnection
oninput	tsvscode.ts	/^    oninput: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
oninvalid	tsvscode.ts	/^    oninvalid: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onkeydown	tsvscode.ts	/^    onkeydown: ((this: GlobalEventHandlers, ev: KeyboardEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onkeypress	tsvscode.ts	/^    onkeypress: ((this: GlobalEventHandlers, ev: KeyboardEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onkeystatuseschange	tsvscode.ts	/^    onkeystatuseschange: ((this: MediaKeySession, ev: Event) => any) | null;$/;"	p	interface:MediaKeySession
onkeyup	tsvscode.ts	/^    onkeyup: ((this: GlobalEventHandlers, ev: KeyboardEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onlanguagechange	tsvscode.ts	/^    onlanguagechange: ((this: WindowEventHandlers, ev: Event) => any) | null;$/;"	p	interface:WindowEventHandlers
onleavepictureinpicture	tsvscode.ts	/^    onleavepictureinpicture: ((this: HTMLVideoElement, ev: Event) => any) | null;$/;"	p	interface:HTMLVideoElement
onload	tsvscode.ts	/^    onload: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;$/;"	p	interface:FileReader
onload	tsvscode.ts	/^    onload: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onload	tsvscode.ts	/^    onload: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;$/;"	p	interface:XMLHttpRequestEventTarget
onloadeddata	tsvscode.ts	/^    onloadeddata: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onloadedmetadata	tsvscode.ts	/^    onloadedmetadata: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onloadend	tsvscode.ts	/^    onloadend: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;$/;"	p	interface:FileReader
onloadend	tsvscode.ts	/^    onloadend: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;$/;"	p	interface:XMLHttpRequestEventTarget
onloading	tsvscode.ts	/^    onloading: ((this: FontFaceSet, ev: Event) => any) | null;$/;"	p	interface:FontFaceSet
onloadingdone	tsvscode.ts	/^    onloadingdone: ((this: FontFaceSet, ev: Event) => any) | null;$/;"	p	interface:FontFaceSet
onloadingerror	tsvscode.ts	/^    onloadingerror: ((this: FontFaceSet, ev: Event) => any) | null;$/;"	p	interface:FontFaceSet
onloadstart	tsvscode.ts	/^    onloadstart: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;$/;"	p	interface:FileReader
onloadstart	tsvscode.ts	/^    onloadstart: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onloadstart	tsvscode.ts	/^    onloadstart: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;$/;"	p	interface:XMLHttpRequestEventTarget
onlostpointercapture	tsvscode.ts	/^    onlostpointercapture: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
only	tsvscode.ts	/^    only(value: any): IDBKeyRange;$/;"	v
onmark	tsvscode.ts	/^    onmark: ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any) | null;$/;"	p	interface:SpeechSynthesisUtterance
onmessage	tsvscode.ts	/^    onmessage: ((this: BroadcastChannel, ev: MessageEvent) => any) | null;$/;"	p	interface:BroadcastChannel
onmessage	tsvscode.ts	/^    onmessage: ((this: EventSource, ev: MessageEvent) => any) | null;$/;"	p	interface:EventSource
onmessage	tsvscode.ts	/^    onmessage: ((this: MediaKeySession, ev: MediaKeyMessageEvent) => any) | null;$/;"	p	interface:MediaKeySession
onmessage	tsvscode.ts	/^    onmessage: ((this: MessagePort, ev: MessageEvent) => any) | null;$/;"	p	interface:MessagePort
onmessage	tsvscode.ts	/^    onmessage: ((this: RTCDataChannel, ev: MessageEvent) => any) | null;$/;"	p	interface:RTCDataChannel
onmessage	tsvscode.ts	/^    onmessage: ((this: ServiceWorkerContainer, ev: MessageEvent) => any) | null;$/;"	p	interface:ServiceWorkerContainer
onmessage	tsvscode.ts	/^    onmessage: ((this: WebSocket, ev: MessageEvent) => any) | null;$/;"	p	interface:WebSocket
onmessage	tsvscode.ts	/^    onmessage: ((this: WindowEventHandlers, ev: MessageEvent) => any) | null;$/;"	p	interface:WindowEventHandlers
onmessage	tsvscode.ts	/^    onmessage: ((this: Worker, ev: MessageEvent) => any) | null;$/;"	p	interface:Worker
onmessageerror	tsvscode.ts	/^    onmessageerror: ((this: BroadcastChannel, ev: MessageEvent) => any) | null;$/;"	p	interface:BroadcastChannel
onmessageerror	tsvscode.ts	/^    onmessageerror: ((this: MessagePort, ev: MessageEvent) => any) | null;$/;"	p	interface:MessagePort
onmessageerror	tsvscode.ts	/^    onmessageerror: ((this: ServiceWorkerContainer, ev: MessageEvent) => any) | null;$/;"	p	interface:ServiceWorkerContainer
onmessageerror	tsvscode.ts	/^    onmessageerror: ((this: WindowEventHandlers, ev: MessageEvent) => any) | null;$/;"	p	interface:WindowEventHandlers
onmessageerror	tsvscode.ts	/^    onmessageerror: ((this: Worker, ev: MessageEvent) => any) | null;$/;"	p	interface:Worker
onmidimessage	tsvscode.ts	/^    onmidimessage: ((this: MIDIInput, ev: MIDIMessageEvent) => any) | null;$/;"	p	interface:MIDIInput
onmousedown	tsvscode.ts	/^    onmousedown: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onmouseenter	tsvscode.ts	/^    onmouseenter: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onmouseleave	tsvscode.ts	/^    onmouseleave: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onmousemove	tsvscode.ts	/^    onmousemove: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onmouseout	tsvscode.ts	/^    onmouseout: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onmouseover	tsvscode.ts	/^    onmouseover: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onmouseup	tsvscode.ts	/^    onmouseup: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onmute	tsvscode.ts	/^    onmute: ((this: MediaStreamTrack, ev: Event) => any) | null;$/;"	p	interface:MediaStreamTrack
onnegotiationneeded	tsvscode.ts	/^    onnegotiationneeded: ((this: RTCPeerConnection, ev: Event) => any) | null;$/;"	p	interface:RTCPeerConnection
onoffline	tsvscode.ts	/^    onoffline: ((this: WindowEventHandlers, ev: Event) => any) | null;$/;"	p	interface:WindowEventHandlers
ononline	tsvscode.ts	/^    ononline: ((this: WindowEventHandlers, ev: Event) => any) | null;$/;"	p	interface:WindowEventHandlers
onopen	tsvscode.ts	/^    onopen: ((this: EventSource, ev: Event) => any) | null;$/;"	p	interface:EventSource
onopen	tsvscode.ts	/^    onopen: ((this: RTCDataChannel, ev: Event) => any) | null;$/;"	p	interface:RTCDataChannel
onopen	tsvscode.ts	/^    onopen: ((this: WebSocket, ev: Event) => any) | null;$/;"	p	interface:WebSocket
onorientationchange	tsvscode.ts	/^    onorientationchange: ((this: Window, ev: Event) => any) | null;$/;"	p	interface:Window
onorientationchange	tsvscode.ts	/^declare var onorientationchange: ((this: Window, ev: Event) => any) | null;$/;"	v	namespace:CSS
onpagehide	tsvscode.ts	/^    onpagehide: ((this: WindowEventHandlers, ev: PageTransitionEvent) => any) | null;$/;"	p	interface:WindowEventHandlers
onpageshow	tsvscode.ts	/^    onpageshow: ((this: WindowEventHandlers, ev: PageTransitionEvent) => any) | null;$/;"	p	interface:WindowEventHandlers
onpaste	tsvscode.ts	/^    onpaste: ((this: GlobalEventHandlers, ev: ClipboardEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onpause	tsvscode.ts	/^    onpause: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onpause	tsvscode.ts	/^    onpause: ((this: MediaRecorder, ev: Event) => any) | null;$/;"	p	interface:MediaRecorder
onpause	tsvscode.ts	/^    onpause: ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any) | null;$/;"	p	interface:SpeechSynthesisUtterance
onpaymentmethodchange	tsvscode.ts	/^    onpaymentmethodchange: ((this: PaymentRequest, ev: Event) => any) | null;$/;"	p	interface:PaymentRequest
onplay	tsvscode.ts	/^    onplay: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onplaying	tsvscode.ts	/^    onplaying: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onpointercancel	tsvscode.ts	/^    onpointercancel: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onpointerdown	tsvscode.ts	/^    onpointerdown: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onpointerenter	tsvscode.ts	/^    onpointerenter: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onpointerleave	tsvscode.ts	/^    onpointerleave: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onpointerlockchange	tsvscode.ts	/^    onpointerlockchange: ((this: Document, ev: Event) => any) | null;$/;"	p	interface:Document
onpointerlockerror	tsvscode.ts	/^    onpointerlockerror: ((this: Document, ev: Event) => any) | null;$/;"	p	interface:Document
onpointermove	tsvscode.ts	/^    onpointermove: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onpointerout	tsvscode.ts	/^    onpointerout: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onpointerover	tsvscode.ts	/^    onpointerover: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onpointerup	tsvscode.ts	/^    onpointerup: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onpopstate	tsvscode.ts	/^    onpopstate: ((this: WindowEventHandlers, ev: PopStateEvent) => any) | null;$/;"	p	interface:WindowEventHandlers
onprocessorerror	tsvscode.ts	/^    onprocessorerror: ((this: AudioWorkletNode, ev: Event) => any) | null;$/;"	p	interface:AudioWorkletNode
onprogress	tsvscode.ts	/^    onprogress: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;$/;"	p	interface:FileReader
onprogress	tsvscode.ts	/^    onprogress: ((this: GlobalEventHandlers, ev: ProgressEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onprogress	tsvscode.ts	/^    onprogress: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;$/;"	p	interface:XMLHttpRequestEventTarget
onratechange	tsvscode.ts	/^    onratechange: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onreadystatechange	tsvscode.ts	/^    onreadystatechange: ((this: Document, ev: Event) => any) | null;$/;"	p	interface:Document
onreadystatechange	tsvscode.ts	/^    onreadystatechange: ((this: XMLHttpRequest, ev: Event) => any) | null;$/;"	p	interface:XMLHttpRequest
onrejectionhandled	tsvscode.ts	/^    onrejectionhandled: ((this: WindowEventHandlers, ev: PromiseRejectionEvent) => any) | null;$/;"	p	interface:WindowEventHandlers
onrelease	tsvscode.ts	/^    onrelease: ((this: WakeLockSentinel, ev: Event) => any) | null;$/;"	p	interface:WakeLockSentinel
onremove	tsvscode.ts	/^    onremove: ((this: Animation, ev: Event) => any) | null;$/;"	p	interface:Animation
onremovesourcebuffer	tsvscode.ts	/^    onremovesourcebuffer: ((this: SourceBufferList, ev: Event) => any) | null;$/;"	p	interface:SourceBufferList
onremovetrack	tsvscode.ts	/^    onremovetrack: ((this: MediaStream, ev: MediaStreamTrackEvent) => any) | null;$/;"	p	interface:MediaStream
onremovetrack	tsvscode.ts	/^    onremovetrack: ((this: TextTrackList, ev: TrackEvent) => any) | null;$/;"	p	interface:TextTrackList
onreset	tsvscode.ts	/^    onreset: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onresize	tsvscode.ts	/^    onresize: ((this: GlobalEventHandlers, ev: UIEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onresize	tsvscode.ts	/^    onresize: ((this: PictureInPictureWindow, ev: Event) => any) | null;$/;"	p	interface:PictureInPictureWindow
onresize	tsvscode.ts	/^    onresize: ((this: VisualViewport, ev: Event) => any) | null;$/;"	p	interface:VisualViewport
onresourcetimingbufferfull	tsvscode.ts	/^    onresourcetimingbufferfull: ((this: Performance, ev: Event) => any) | null;$/;"	p	interface:Performance
onresume	tsvscode.ts	/^    onresume: ((this: MediaRecorder, ev: Event) => any) | null;$/;"	p	interface:MediaRecorder
onresume	tsvscode.ts	/^    onresume: ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any) | null;$/;"	p	interface:SpeechSynthesisUtterance
onscroll	tsvscode.ts	/^    onscroll: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onscroll	tsvscode.ts	/^    onscroll: ((this: VisualViewport, ev: Event) => any) | null;$/;"	p	interface:VisualViewport
onscrollend	tsvscode.ts	/^    onscrollend: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onsecuritypolicyviolation	tsvscode.ts	/^    onsecuritypolicyviolation: ((this: GlobalEventHandlers, ev: SecurityPolicyViolationEvent) =>/;"	p	interface:GlobalEventHandlers
onseeked	tsvscode.ts	/^    onseeked: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onseeking	tsvscode.ts	/^    onseeking: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onselect	tsvscode.ts	/^    onselect: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onselectedcandidatepairchange	tsvscode.ts	/^    onselectedcandidatepairchange: ((this: RTCIceTransport, ev: Event) => any) | null;$/;"	p	interface:RTCIceTransport
onselectionchange	tsvscode.ts	/^    onselectionchange: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onselectstart	tsvscode.ts	/^    onselectstart: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onshow	tsvscode.ts	/^    onshow: ((this: Notification, ev: Event) => any) | null;$/;"	p	interface:Notification
onsignalingstatechange	tsvscode.ts	/^    onsignalingstatechange: ((this: RTCPeerConnection, ev: Event) => any) | null;$/;"	p	interface:RTCPeerConnection
onslotchange	tsvscode.ts	/^    onslotchange: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onslotchange	tsvscode.ts	/^    onslotchange: ((this: ShadowRoot, ev: Event) => any) | null;$/;"	p	interface:ShadowRoot
onsourceclose	tsvscode.ts	/^    onsourceclose: ((this: MediaSource, ev: Event) => any) | null;$/;"	p	interface:MediaSource
onsourceended	tsvscode.ts	/^    onsourceended: ((this: MediaSource, ev: Event) => any) | null;$/;"	p	interface:MediaSource
onsourceopen	tsvscode.ts	/^    onsourceopen: ((this: MediaSource, ev: Event) => any) | null;$/;"	p	interface:MediaSource
onstalled	tsvscode.ts	/^    onstalled: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onstart	tsvscode.ts	/^    onstart: ((this: MediaRecorder, ev: Event) => any) | null;$/;"	p	interface:MediaRecorder
onstart	tsvscode.ts	/^    onstart: ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any) | null;$/;"	p	interface:SpeechSynthesisUtterance
onstatechange	tsvscode.ts	/^    onstatechange: ((this: BaseAudioContext, ev: Event) => any) | null;$/;"	p	interface:BaseAudioContext
onstatechange	tsvscode.ts	/^    onstatechange: ((this: MIDIAccess, ev: Event) => any) | null;$/;"	p	interface:MIDIAccess
onstatechange	tsvscode.ts	/^    onstatechange: ((this: MIDIPort, ev: MIDIConnectionEvent) => any) | null;$/;"	p	interface:MIDIPort
onstatechange	tsvscode.ts	/^    onstatechange: ((this: RTCDtlsTransport, ev: Event) => any) | null;$/;"	p	interface:RTCDtlsTransport
onstatechange	tsvscode.ts	/^    onstatechange: ((this: RTCIceTransport, ev: Event) => any) | null;$/;"	p	interface:RTCIceTransport
onstatechange	tsvscode.ts	/^    onstatechange: ((this: RTCSctpTransport, ev: Event) => any) | null;$/;"	p	interface:RTCSctpTransport
onstatechange	tsvscode.ts	/^    onstatechange: ((this: ServiceWorker, ev: Event) => any) | null;$/;"	p	interface:ServiceWorker
onstop	tsvscode.ts	/^    onstop: ((this: MediaRecorder, ev: Event) => any) | null;$/;"	p	interface:MediaRecorder
onstorage	tsvscode.ts	/^    onstorage: ((this: WindowEventHandlers, ev: StorageEvent) => any) | null;$/;"	p	interface:WindowEventHandlers
onsubmit	tsvscode.ts	/^    onsubmit: ((this: GlobalEventHandlers, ev: SubmitEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onsuccess	tsvscode.ts	/^    onsuccess: ((this: IDBRequest<T>, ev: Event) => any) | null;$/;"	p	interface:IDBRequest
onsuspend	tsvscode.ts	/^    onsuspend: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
ontimeout	tsvscode.ts	/^    ontimeout: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;$/;"	p	interface:XMLHttpRequestEventTarget
ontimeupdate	tsvscode.ts	/^    ontimeupdate: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
ontoggle	tsvscode.ts	/^    ontoggle: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
ontonechange	tsvscode.ts	/^    ontonechange: ((this: RTCDTMFSender, ev: RTCDTMFToneChangeEvent) => any) | null;$/;"	p	interface:RTCDTMFSender
ontouchcancel	tsvscode.ts	/^    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;$/;"	p	interface:GlobalEventHandlers
ontouchend	tsvscode.ts	/^    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;$/;"	p	interface:GlobalEventHandlers
ontouchmove	tsvscode.ts	/^    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;$/;"	p	interface:GlobalEventHandlers
ontouchstart	tsvscode.ts	/^    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;$/;"	p	interface:GlobalEventHandlers
ontrack	tsvscode.ts	/^    ontrack: ((this: RTCPeerConnection, ev: RTCTrackEvent) => any) | null;$/;"	p	interface:RTCPeerConnection
ontransitioncancel	tsvscode.ts	/^    ontransitioncancel: ((this: GlobalEventHandlers, ev: TransitionEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
ontransitionend	tsvscode.ts	/^    ontransitionend: ((this: GlobalEventHandlers, ev: TransitionEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
ontransitionrun	tsvscode.ts	/^    ontransitionrun: ((this: GlobalEventHandlers, ev: TransitionEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
ontransitionstart	tsvscode.ts	/^    ontransitionstart: ((this: GlobalEventHandlers, ev: TransitionEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
onunhandledrejection	tsvscode.ts	/^    onunhandledrejection: ((this: WindowEventHandlers, ev: PromiseRejectionEvent) => any) | null/;"	p	interface:WindowEventHandlers
onunload	tsvscode.ts	/^    onunload: ((this: WindowEventHandlers, ev: Event) => any) | null;$/;"	p	interface:WindowEventHandlers
onunmute	tsvscode.ts	/^    onunmute: ((this: MediaStreamTrack, ev: Event) => any) | null;$/;"	p	interface:MediaStreamTrack
onupdate	tsvscode.ts	/^    onupdate: ((this: SourceBuffer, ev: Event) => any) | null;$/;"	p	interface:SourceBuffer
onupdateend	tsvscode.ts	/^    onupdateend: ((this: SourceBuffer, ev: Event) => any) | null;$/;"	p	interface:SourceBuffer
onupdatefound	tsvscode.ts	/^    onupdatefound: ((this: ServiceWorkerRegistration, ev: Event) => any) | null;$/;"	p	interface:ServiceWorkerRegistration
onupdatestart	tsvscode.ts	/^    onupdatestart: ((this: SourceBuffer, ev: Event) => any) | null;$/;"	p	interface:SourceBuffer
onupgradeneeded	tsvscode.ts	/^    onupgradeneeded: ((this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => any) | null;$/;"	p	interface:IDBOpenDBRequest
onversionchange	tsvscode.ts	/^    onversionchange: ((this: IDBDatabase, ev: IDBVersionChangeEvent) => any) | null;$/;"	p	interface:IDBDatabase
onvisibilitychange	tsvscode.ts	/^    onvisibilitychange: ((this: Document, ev: Event) => any) | null;$/;"	p	interface:Document
onvoiceschanged	tsvscode.ts	/^    onvoiceschanged: ((this: SpeechSynthesis, ev: Event) => any) | null;$/;"	p	interface:SpeechSynthesis
onvolumechange	tsvscode.ts	/^    onvolumechange: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onwaiting	tsvscode.ts	/^    onwaiting: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onwaitingforkey	tsvscode.ts	/^    onwaitingforkey: ((this: HTMLMediaElement, ev: Event) => any) | null;$/;"	p	interface:HTMLMediaElement
onwebkitanimationend	tsvscode.ts	/^    onwebkitanimationend: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onwebkitanimationiteration	tsvscode.ts	/^    onwebkitanimationiteration: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onwebkitanimationstart	tsvscode.ts	/^    onwebkitanimationstart: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onwebkittransitionend	tsvscode.ts	/^    onwebkittransitionend: ((this: GlobalEventHandlers, ev: Event) => any) | null;$/;"	p	interface:GlobalEventHandlers
onwheel	tsvscode.ts	/^    onwheel: ((this: GlobalEventHandlers, ev: WheelEvent) => any) | null;$/;"	p	interface:GlobalEventHandlers
opacity	tsvscode.ts	/^    opacity: string;$/;"	p	interface:CSSStyleDeclaration
open	tsvscode.ts	/^    open(): Promise<MIDIPort>;$/;"	m	interface:MIDIPort
open	tsvscode.ts	/^    open(cacheName: string): Promise<Cache>;$/;"	m	interface:CacheStorage
open	tsvscode.ts	/^    open(method: string, url: string | URL): void;$/;"	m	interface:XMLHttpRequest
open	tsvscode.ts	/^    open(method: string, url: string | URL, async: boolean, username?: string | null, password?:/;"	m	interface:XMLHttpRequest
open	tsvscode.ts	/^    open(name: string, version?: number): IDBOpenDBRequest;$/;"	m	interface:IDBFactory
open	tsvscode.ts	/^    open(unused1?: string, unused2?: string): Document;$/;"	m	interface:Document
open	tsvscode.ts	/^    open(url: string | URL, name: string, features: string): WindowProxy | null;$/;"	m	interface:Document
open	tsvscode.ts	/^    open(url?: string | URL, target?: string, features?: string): WindowProxy | null;$/;"	m	interface:Window
open	tsvscode.ts	/^    open: boolean;$/;"	p	interface:HTMLDetailsElement
open	tsvscode.ts	/^    open: boolean;$/;"	p	interface:HTMLDialogElement
openCursor	tsvscode.ts	/^    openCursor(query?: IDBValidKey | IDBKeyRange | null, direction?: IDBCursorDirection): IDBReq/;"	m	interface:IDBIndex
openCursor	tsvscode.ts	/^    openCursor(query?: IDBValidKey | IDBKeyRange | null, direction?: IDBCursorDirection): IDBReq/;"	m	interface:IDBObjectStore
openKeyCursor	tsvscode.ts	/^    openKeyCursor(query?: IDBValidKey | IDBKeyRange | null, direction?: IDBCursorDirection): IDB/;"	m	interface:IDBIndex
openKeyCursor	tsvscode.ts	/^    openKeyCursor(query?: IDBValidKey | IDBKeyRange | null, direction?: IDBCursorDirection): IDB/;"	m	interface:IDBObjectStore
opener	tsvscode.ts	/^    opener: any;$/;"	p	interface:Window
opener	tsvscode.ts	/^declare var opener: any;$/;"	v	namespace:CSS
operator	tsvscode.ts	/^    readonly operator: CSSMathOperator;$/;"	p	interface:CSSMathValue
operator	tsvscode.ts	/^    readonly operator: SVGAnimatedEnumeration;$/;"	p	interface:SVGFECompositeElement
operator	tsvscode.ts	/^    readonly operator: SVGAnimatedEnumeration;$/;"	p	interface:SVGFEMorphologyElement
optimizeForLatency	tsvscode.ts	/^    optimizeForLatency?: boolean;$/;"	p	interface:VideoDecoderConfig
optimum	tsvscode.ts	/^    optimum: number;$/;"	p	interface:HTMLMeterElement
options	tsvscode.ts	/^    readonly options: HTMLCollectionOf<HTMLOptionElement>;$/;"	p	interface:HTMLDataListElement
options	tsvscode.ts	/^    readonly options: HTMLOptionsCollection;$/;"	p	interface:HTMLSelectElement
options	tsvscode.ts	/^    readonly options: PushSubscriptionOptions;$/;"	p	interface:PushSubscription
order	tsvscode.ts	/^    order: string;$/;"	p	interface:CSSStyleDeclaration
orderX	tsvscode.ts	/^    readonly orderX: SVGAnimatedInteger;$/;"	p	interface:SVGFEConvolveMatrixElement
orderY	tsvscode.ts	/^    readonly orderY: SVGAnimatedInteger;$/;"	p	interface:SVGFEConvolveMatrixElement
ordered	tsvscode.ts	/^    ordered?: boolean;$/;"	p	interface:RTCDataChannelInit
ordered	tsvscode.ts	/^    readonly ordered: boolean;$/;"	p	interface:RTCDataChannel
orientAngle	tsvscode.ts	/^    readonly orientAngle: SVGAnimatedAngle;$/;"	p	interface:SVGMarkerElement
orientType	tsvscode.ts	/^    readonly orientType: SVGAnimatedEnumeration;$/;"	p	interface:SVGMarkerElement
orientation	tsvscode.ts	/^    readonly orientation: ScreenOrientation;$/;"	p	interface:Screen
orientation	tsvscode.ts	/^    readonly orientation: number;$/;"	p	interface:Window
orientation	tsvscode.ts	/^declare var orientation: number;$/;"	v	namespace:CSS
orientationX	tsvscode.ts	/^    orientationX?: number;$/;"	p	interface:PannerOptions
orientationX	tsvscode.ts	/^    readonly orientationX: AudioParam;$/;"	p	interface:PannerNode
orientationY	tsvscode.ts	/^    orientationY?: number;$/;"	p	interface:PannerOptions
orientationY	tsvscode.ts	/^    readonly orientationY: AudioParam;$/;"	p	interface:PannerNode
orientationZ	tsvscode.ts	/^    orientationZ?: number;$/;"	p	interface:PannerOptions
orientationZ	tsvscode.ts	/^    readonly orientationZ: AudioParam;$/;"	p	interface:PannerNode
origin	tsvscode.ts	/^    origin?: string;$/;"	p	interface:MessageEventInit
origin	tsvscode.ts	/^    readonly origin: string;$/;"	p	interface:HTMLHyperlinkElementUtils
origin	tsvscode.ts	/^    readonly origin: string;$/;"	p	interface:Location
origin	tsvscode.ts	/^    readonly origin: string;$/;"	p	interface:MessageEvent
origin	tsvscode.ts	/^    readonly origin: string;$/;"	p	interface:URL
origin	tsvscode.ts	/^    readonly origin: string;$/;"	p	interface:WindowOrWorkerGlobalScope
originTime	tsvscode.ts	/^    originTime?: DOMHighResTimeStamp;$/;"	p	interface:DocumentTimelineOptions
originalPolicy	tsvscode.ts	/^    originalPolicy: string;$/;"	p	interface:SecurityPolicyViolationEventInit
originalPolicy	tsvscode.ts	/^    readonly originalPolicy: string;$/;"	p	interface:SecurityPolicyViolationEvent
orphans	tsvscode.ts	/^    orphans: string;$/;"	p	interface:CSSStyleDeclaration
oth	tsvscode.ts	/^    oth?: RsaOtherPrimesInfo[];$/;"	p	interface:JsonWebKey
outerHTML	tsvscode.ts	/^    outerHTML: string;$/;"	p	interface:Element
outerHeight	tsvscode.ts	/^    readonly outerHeight: number;$/;"	p	interface:Window
outerHeight	tsvscode.ts	/^declare var outerHeight: number;$/;"	v	namespace:CSS
outerText	tsvscode.ts	/^    outerText: string;$/;"	p	interface:HTMLElement
outerWidth	tsvscode.ts	/^    readonly outerWidth: number;$/;"	p	interface:Window
outerWidth	tsvscode.ts	/^declare var outerWidth: number;$/;"	v	namespace:CSS
outgoingHighWaterMark	tsvscode.ts	/^    outgoingHighWaterMark: number;$/;"	p	interface:WebTransportDatagramDuplexStream
outgoingMaxAge	tsvscode.ts	/^    outgoingMaxAge: number | null;$/;"	p	interface:WebTransportDatagramDuplexStream
outline	tsvscode.ts	/^    outline: string;$/;"	p	interface:CSSStyleDeclaration
outlineColor	tsvscode.ts	/^    outlineColor: string;$/;"	p	interface:CSSStyleDeclaration
outlineOffset	tsvscode.ts	/^    outlineOffset: string;$/;"	p	interface:CSSStyleDeclaration
outlineStyle	tsvscode.ts	/^    outlineStyle: string;$/;"	p	interface:CSSStyleDeclaration
outlineWidth	tsvscode.ts	/^    outlineWidth: string;$/;"	p	interface:CSSStyleDeclaration
output	tsvscode.ts	/^    output: EncodedVideoChunkOutputCallback;$/;"	p	interface:VideoEncoderInit
output	tsvscode.ts	/^    output: VideoFrameOutputCallback;$/;"	p	interface:VideoDecoderInit
outputBuffer	tsvscode.ts	/^    outputBuffer: AudioBuffer;$/;"	p	interface:AudioProcessingEventInit
outputBuffer	tsvscode.ts	/^    readonly outputBuffer: AudioBuffer;$/;"	p	interface:AudioProcessingEvent
outputChannelCount	tsvscode.ts	/^    outputChannelCount?: number[];$/;"	p	interface:AudioWorkletNodeOptions
outputLatency	tsvscode.ts	/^    readonly outputLatency: number;$/;"	p	interface:AudioContext
outputs	tsvscode.ts	/^    readonly outputs: MIDIOutputMap;$/;"	p	interface:MIDIAccess
overflow	tsvscode.ts	/^    overflow: string;$/;"	p	interface:CSSStyleDeclaration
overflowAnchor	tsvscode.ts	/^    overflowAnchor: string;$/;"	p	interface:CSSStyleDeclaration
overflowClipMargin	tsvscode.ts	/^    overflowClipMargin: string;$/;"	p	interface:CSSStyleDeclaration
overflowWrap	tsvscode.ts	/^    overflowWrap: string;$/;"	p	interface:CSSStyleDeclaration
overflowX	tsvscode.ts	/^    overflowX: string;$/;"	p	interface:CSSStyleDeclaration
overflowY	tsvscode.ts	/^    overflowY: string;$/;"	p	interface:CSSStyleDeclaration
overrideColors	tsvscode.ts	/^    readonly overrideColors: string;$/;"	p	interface:CSSFontPaletteValuesRule
overrideMimeType	tsvscode.ts	/^    overrideMimeType(mime: string): void;$/;"	m	interface:XMLHttpRequest
oversample	tsvscode.ts	/^    oversample: OverSampleType;$/;"	p	interface:WaveShaperNode
oversample	tsvscode.ts	/^    oversample?: OverSampleType;$/;"	p	interface:WaveShaperOptions
overscrollBehavior	tsvscode.ts	/^    overscrollBehavior: string;$/;"	p	interface:CSSStyleDeclaration
overscrollBehaviorBlock	tsvscode.ts	/^    overscrollBehaviorBlock: string;$/;"	p	interface:CSSStyleDeclaration
overscrollBehaviorInline	tsvscode.ts	/^    overscrollBehaviorInline: string;$/;"	p	interface:CSSStyleDeclaration
overscrollBehaviorX	tsvscode.ts	/^    overscrollBehaviorX: string;$/;"	p	interface:CSSStyleDeclaration
overscrollBehaviorY	tsvscode.ts	/^    overscrollBehaviorY: string;$/;"	p	interface:CSSStyleDeclaration
ownerDocument	tsvscode.ts	/^    readonly ownerDocument: Document | null;$/;"	p	interface:Node
ownerDocument	tsvscode.ts	/^    readonly ownerDocument: Document;$/;"	p	interface:Attr
ownerDocument	tsvscode.ts	/^    readonly ownerDocument: Document;$/;"	p	interface:CharacterData
ownerDocument	tsvscode.ts	/^    readonly ownerDocument: Document;$/;"	p	interface:DocumentFragment
ownerDocument	tsvscode.ts	/^    readonly ownerDocument: Document;$/;"	p	interface:DocumentType
ownerDocument	tsvscode.ts	/^    readonly ownerDocument: Document;$/;"	p	interface:Element
ownerDocument	tsvscode.ts	/^    readonly ownerDocument: Document;$/;"	p	interface:ProcessingInstruction
ownerDocument	tsvscode.ts	/^    readonly ownerDocument: null;$/;"	p	interface:Document
ownerElement	tsvscode.ts	/^    readonly ownerElement: Element | null;$/;"	p	interface:Attr
ownerNode	tsvscode.ts	/^    readonly ownerNode: Element | ProcessingInstruction | null;$/;"	p	interface:StyleSheet
ownerRule	tsvscode.ts	/^    readonly ownerRule: CSSRule | null;$/;"	p	interface:CSSStyleSheet
ownerSVGElement	tsvscode.ts	/^    readonly ownerSVGElement: SVGSVGElement | null;$/;"	p	interface:SVGElement
p	tsvscode.ts	/^    p?: string;$/;"	p	interface:JsonWebKey
p1	tsvscode.ts	/^    p1?: DOMPointInit;$/;"	p	interface:DOMQuadInit
p1	tsvscode.ts	/^    readonly p1: DOMPoint;$/;"	p	interface:DOMQuad
p2	tsvscode.ts	/^    p2?: DOMPointInit;$/;"	p	interface:DOMQuadInit
p2	tsvscode.ts	/^    readonly p2: DOMPoint;$/;"	p	interface:DOMQuad
p3	tsvscode.ts	/^    p3?: DOMPointInit;$/;"	p	interface:DOMQuadInit
p3	tsvscode.ts	/^    readonly p3: DOMPoint;$/;"	p	interface:DOMQuad
p4	tsvscode.ts	/^    p4?: DOMPointInit;$/;"	p	interface:DOMQuadInit
p4	tsvscode.ts	/^    readonly p4: DOMPoint;$/;"	p	interface:DOMQuad
packetsDiscarded	tsvscode.ts	/^    packetsDiscarded?: number;$/;"	p	interface:RTCInboundRtpStreamStats
packetsLost	tsvscode.ts	/^    packetsLost?: number;$/;"	p	interface:RTCReceivedRtpStreamStats
packetsReceived	tsvscode.ts	/^    packetsReceived?: number;$/;"	p	interface:RTCReceivedRtpStreamStats
packetsSent	tsvscode.ts	/^    packetsSent?: number;$/;"	p	interface:RTCSentRtpStreamStats
pad	tsvscode.ts	/^    pad: string;$/;"	p	interface:CSSCounterStyleRule
padding	tsvscode.ts	/^    padding: string;$/;"	p	interface:CSSStyleDeclaration
paddingBlock	tsvscode.ts	/^    paddingBlock: string;$/;"	p	interface:CSSStyleDeclaration
paddingBlockEnd	tsvscode.ts	/^    paddingBlockEnd: string;$/;"	p	interface:CSSStyleDeclaration
paddingBlockStart	tsvscode.ts	/^    paddingBlockStart: string;$/;"	p	interface:CSSStyleDeclaration
paddingBottom	tsvscode.ts	/^    paddingBottom: string;$/;"	p	interface:CSSStyleDeclaration
paddingInline	tsvscode.ts	/^    paddingInline: string;$/;"	p	interface:CSSStyleDeclaration
paddingInlineEnd	tsvscode.ts	/^    paddingInlineEnd: string;$/;"	p	interface:CSSStyleDeclaration
paddingInlineStart	tsvscode.ts	/^    paddingInlineStart: string;$/;"	p	interface:CSSStyleDeclaration
paddingLeft	tsvscode.ts	/^    paddingLeft: string;$/;"	p	interface:CSSStyleDeclaration
paddingRight	tsvscode.ts	/^    paddingRight: string;$/;"	p	interface:CSSStyleDeclaration
paddingTop	tsvscode.ts	/^    paddingTop: string;$/;"	p	interface:CSSStyleDeclaration
page	tsvscode.ts	/^    page: string;$/;"	p	interface:CSSStyleDeclaration
pageBreakAfter	tsvscode.ts	/^    pageBreakAfter: string;$/;"	p	interface:CSSStyleDeclaration
pageBreakBefore	tsvscode.ts	/^    pageBreakBefore: string;$/;"	p	interface:CSSStyleDeclaration
pageBreakInside	tsvscode.ts	/^    pageBreakInside: string;$/;"	p	interface:CSSStyleDeclaration
pageLeft	tsvscode.ts	/^    readonly pageLeft: number;$/;"	p	interface:VisualViewport
pageTop	tsvscode.ts	/^    readonly pageTop: number;$/;"	p	interface:VisualViewport
pageX	tsvscode.ts	/^    pageX?: number;$/;"	p	interface:TouchInit
pageX	tsvscode.ts	/^    readonly pageX: number;$/;"	p	interface:MouseEvent
pageX	tsvscode.ts	/^    readonly pageX: number;$/;"	p	interface:Touch
pageXOffset	tsvscode.ts	/^    readonly pageXOffset: number;$/;"	p	interface:Window
pageXOffset	tsvscode.ts	/^declare var pageXOffset: number;$/;"	v	namespace:CSS
pageY	tsvscode.ts	/^    pageY?: number;$/;"	p	interface:TouchInit
pageY	tsvscode.ts	/^    readonly pageY: number;$/;"	p	interface:MouseEvent
pageY	tsvscode.ts	/^    readonly pageY: number;$/;"	p	interface:Touch
pageYOffset	tsvscode.ts	/^    readonly pageYOffset: number;$/;"	p	interface:Window
pageYOffset	tsvscode.ts	/^declare var pageYOffset: number;$/;"	v	namespace:CSS
paintOrder	tsvscode.ts	/^    paintOrder: string;$/;"	p	interface:CSSStyleDeclaration
pan	tsvscode.ts	/^    pan?: number;$/;"	p	interface:StereoPannerOptions
pan	tsvscode.ts	/^    readonly pan: AudioParam;$/;"	p	interface:StereoPannerNode
panningModel	tsvscode.ts	/^    panningModel: PanningModelType;$/;"	p	interface:PannerNode
panningModel	tsvscode.ts	/^    panningModel?: PanningModelType;$/;"	p	interface:PannerOptions
parameterData	tsvscode.ts	/^    parameterData?: Record<string, number>;$/;"	p	interface:AudioWorkletNodeOptions
parameters	tsvscode.ts	/^    readonly parameters: AudioParamMap;$/;"	p	interface:AudioWorkletNode
parent	tsvscode.ts	/^    readonly parent: WindowProxy;$/;"	p	interface:Window
parent	tsvscode.ts	/^declare var parent: WindowProxy;$/;"	v	namespace:CSS
parentElement	tsvscode.ts	/^    readonly parentElement: HTMLElement | null;$/;"	p	interface:Node
parentNode	tsvscode.ts	/^    parentNode(): Node | null;$/;"	m	interface:TreeWalker
parentNode	tsvscode.ts	/^    readonly parentNode: ParentNode | null;$/;"	p	interface:Node
parentRule	tsvscode.ts	/^    readonly parentRule: CSSRule | null;$/;"	p	interface:CSSRule
parentRule	tsvscode.ts	/^    readonly parentRule: CSSRule | null;$/;"	p	interface:CSSStyleDeclaration
parentStyleSheet	tsvscode.ts	/^    readonly parentStyleSheet: CSSStyleSheet | null;$/;"	p	interface:CSSRule
parentStyleSheet	tsvscode.ts	/^    readonly parentStyleSheet: CSSStyleSheet | null;$/;"	p	interface:StyleSheet
parse	ests.ts	/^    parse(s: string): number;$/;"	m	interface:DateConstructor
parse	ests.ts	/^    parse(text: string, reviver?: (this: any, key: string, value: any) => any): any;$/;"	m	interface:JSON
parse	tsvscode.ts	/^    parse(cssText: string): CSSNumericValue;$/;"	v
parse	tsvscode.ts	/^    parse(property: string, cssText: string): CSSStyleValue;$/;"	v
parseAll	tsvscode.ts	/^    parseAll(property: string, cssText: string): CSSStyleValue[];$/;"	v
parseFromString	tsvscode.ts	/^    parseFromString(string: string, type: DOMParserSupportedType): Document;$/;"	m	interface:DOMParser
part	tsvscode.ts	/^    readonly part: DOMTokenList;$/;"	p	interface:Element
passive	tsvscode.ts	/^    passive?: boolean;$/;"	p	interface:AddEventListenerOptions
password	tsvscode.ts	/^    password: string;$/;"	p	interface:HTMLHyperlinkElementUtils
password	tsvscode.ts	/^    password: string;$/;"	p	interface:URL
pathLength	tsvscode.ts	/^    readonly pathLength: SVGAnimatedNumber;$/;"	p	interface:SVGGeometryElement
pathname	tsvscode.ts	/^    pathname: string;$/;"	p	interface:HTMLHyperlinkElementUtils
pathname	tsvscode.ts	/^    pathname: string;$/;"	p	interface:Location
pathname	tsvscode.ts	/^    pathname: string;$/;"	p	interface:URL
pattern	tsvscode.ts	/^    pattern: string;$/;"	p	interface:HTMLInputElement
patternContentUnits	tsvscode.ts	/^    readonly patternContentUnits: SVGAnimatedEnumeration;$/;"	p	interface:SVGPatternElement
patternMismatch	tsvscode.ts	/^    patternMismatch?: boolean;$/;"	p	interface:ValidityStateFlags
patternMismatch	tsvscode.ts	/^    readonly patternMismatch: boolean;$/;"	p	interface:ValidityState
patternTransform	tsvscode.ts	/^    readonly patternTransform: SVGAnimatedTransformList;$/;"	p	interface:SVGPatternElement
patternUnits	tsvscode.ts	/^    readonly patternUnits: SVGAnimatedEnumeration;$/;"	p	interface:SVGPatternElement
pause	tsvscode.ts	/^    pause(): void;$/;"	m	interface:Animation
pause	tsvscode.ts	/^    pause(): void;$/;"	m	interface:HTMLMediaElement
pause	tsvscode.ts	/^    pause(): void;$/;"	m	interface:MediaRecorder
pause	tsvscode.ts	/^    pause(): void;$/;"	m	interface:SpeechSynthesis
pauseAnimations	tsvscode.ts	/^    pauseAnimations(): void;$/;"	m	interface:SVGSVGElement
pauseOnExit	tsvscode.ts	/^    pauseOnExit: boolean;$/;"	p	interface:TextTrackCue
pauseTransformFeedback	tsvscode.ts	/^    pauseTransformFeedback(): void;$/;"	m	interface:WebGL2RenderingContextBase
paused	tsvscode.ts	/^    readonly paused: boolean;$/;"	p	interface:HTMLMediaElement
paused	tsvscode.ts	/^    readonly paused: boolean;$/;"	p	interface:SpeechSynthesis
payloadType	tsvscode.ts	/^    payloadType: number;$/;"	p	interface:RTCRtpCodecParameters
payloadType	tsvscode.ts	/^    payloadType?: number;$/;"	p	interface:RTCEncodedAudioFrameMetadata
payloadType	tsvscode.ts	/^    payloadType?: number;$/;"	p	interface:RTCEncodedVideoFrameMetadata
paymentMethod	tsvscode.ts	/^    paymentMethod?: any;$/;"	p	interface:PaymentValidationErrors
paymentMethodErrors	tsvscode.ts	/^    paymentMethodErrors?: any;$/;"	p	interface:PaymentDetailsUpdate
pdfViewerEnabled	tsvscode.ts	/^    readonly pdfViewerEnabled: boolean;$/;"	p	interface:NavigatorPlugins
peerIdentity	tsvscode.ts	/^    peerIdentity?: string;$/;"	p	interface:MediaStreamConstraints
pending	tsvscode.ts	/^    pending?: LockInfo[];$/;"	p	interface:LockManagerSnapshot
pending	tsvscode.ts	/^    pending?: boolean;$/;"	p	interface:PaymentItem
pending	tsvscode.ts	/^    readonly pending: boolean;$/;"	p	interface:Animation
pending	tsvscode.ts	/^    readonly pending: boolean;$/;"	p	interface:SpeechSynthesis
pendingLocalDescription	tsvscode.ts	/^    readonly pendingLocalDescription: RTCSessionDescription | null;$/;"	p	interface:RTCPeerConnection
pendingRemoteDescription	tsvscode.ts	/^    readonly pendingRemoteDescription: RTCSessionDescription | null;$/;"	p	interface:RTCPeerConnection
percent	ests.ts	/^        percent: never;$/;"	p	interface:Intl.NumberFormatOptionsStyleRegistry
percent	tsvscode.ts	/^    percent?: number;$/;"	p	interface:CSSNumericType
percentHint	tsvscode.ts	/^    percentHint?: CSSNumericBaseType;$/;"	p	interface:CSSNumericType
performance	tsvscode.ts	/^    readonly performance: Performance;$/;"	p	interface:WindowOrWorkerGlobalScope
performanceTime	tsvscode.ts	/^    performanceTime?: DOMHighResTimeStamp;$/;"	p	interface:AudioTimestamp
periodicWave	tsvscode.ts	/^    periodicWave?: PeriodicWave;$/;"	p	interface:OscillatorOptions
permission	tsvscode.ts	/^    readonly permission: NotificationPermission;$/;"	v
permissionState	tsvscode.ts	/^    permissionState(options?: PushSubscriptionOptionsInit): Promise<PermissionState>;$/;"	m	interface:PushManager
permissions	tsvscode.ts	/^    readonly permissions: Permissions;$/;"	p	interface:Navigator
persist	tsvscode.ts	/^    persist(): Promise<boolean>;$/;"	m	interface:StorageManager
persist	tsvscode.ts	/^    persist(): void;$/;"	m	interface:Animation
persisted	tsvscode.ts	/^    persisted(): Promise<boolean>;$/;"	m	interface:StorageManager
persisted	tsvscode.ts	/^    persisted?: boolean;$/;"	p	interface:PageTransitionEventInit
persisted	tsvscode.ts	/^    readonly persisted: boolean;$/;"	p	interface:PageTransitionEvent
persistentState	tsvscode.ts	/^    persistentState?: MediaKeysRequirement;$/;"	p	interface:MediaKeySystemConfiguration
personalbar	tsvscode.ts	/^    readonly personalbar: BarProp;$/;"	p	interface:Window
personalbar	tsvscode.ts	/^declare var personalbar: BarProp;$/;"	v	namespace:CSS
perspective	tsvscode.ts	/^    perspective: string;$/;"	p	interface:CSSStyleDeclaration
perspectiveOrigin	tsvscode.ts	/^    perspectiveOrigin: string;$/;"	p	interface:CSSStyleDeclaration
pictureInPictureElement	tsvscode.ts	/^    readonly pictureInPictureElement: Element | null;$/;"	p	interface:DocumentOrShadowRoot
pictureInPictureEnabled	tsvscode.ts	/^    readonly pictureInPictureEnabled: boolean;$/;"	p	interface:Document
pictureInPictureWindow	tsvscode.ts	/^    pictureInPictureWindow: PictureInPictureWindow;$/;"	p	interface:PictureInPictureEventInit
pictureInPictureWindow	tsvscode.ts	/^    readonly pictureInPictureWindow: PictureInPictureWindow;$/;"	p	interface:PictureInPictureEvent
ping	tsvscode.ts	/^    ping: string;$/;"	p	interface:HTMLAnchorElement
ping	tsvscode.ts	/^    ping: string;$/;"	p	interface:HTMLAreaElement
pipeThrough	tsvscode.ts	/^    pipeThrough<T>(transform: ReadableWritablePair<T, R>, options?: StreamPipeOptions): Readable/;"	m	interface:ReadableStream
pipeTo	tsvscode.ts	/^    pipeTo(destination: WritableStream<R>, options?: StreamPipeOptions): Promise<void>;$/;"	m	interface:ReadableStream
pitch	tsvscode.ts	/^    pitch: number;$/;"	p	interface:SpeechSynthesisUtterance
pixelDepth	tsvscode.ts	/^    readonly pixelDepth: number;$/;"	p	interface:Screen
pixelStorei	tsvscode.ts	/^    pixelStorei(pname: GLenum, param: GLint | GLboolean): void;$/;"	m	interface:WebGLRenderingContextBase
placeContent	tsvscode.ts	/^    placeContent: string;$/;"	p	interface:CSSStyleDeclaration
placeItems	tsvscode.ts	/^    placeItems: string;$/;"	p	interface:CSSStyleDeclaration
placeSelf	tsvscode.ts	/^    placeSelf: string;$/;"	p	interface:CSSStyleDeclaration
placeholder	tsvscode.ts	/^    placeholder: string;$/;"	p	interface:HTMLInputElement
placeholder	tsvscode.ts	/^    placeholder: string;$/;"	p	interface:HTMLTextAreaElement
platform	tsvscode.ts	/^    readonly platform: string;$/;"	p	interface:NavigatorID
play	tsvscode.ts	/^    play(): Promise<void>;$/;"	m	interface:HTMLMediaElement
play	tsvscode.ts	/^    play(): void;$/;"	m	interface:Animation
playEffect	tsvscode.ts	/^    playEffect(type: GamepadHapticEffectType, params?: GamepadEffectParameters): Promise<Gamepad/;"	m	interface:GamepadHapticActuator
playState	tsvscode.ts	/^    readonly playState: AnimationPlayState;$/;"	p	interface:Animation
playbackRate	tsvscode.ts	/^    playbackRate: number;$/;"	p	interface:Animation
playbackRate	tsvscode.ts	/^    playbackRate: number;$/;"	p	interface:HTMLMediaElement
playbackRate	tsvscode.ts	/^    playbackRate?: number;$/;"	p	interface:AudioBufferSourceOptions
playbackRate	tsvscode.ts	/^    playbackRate?: number;$/;"	p	interface:EffectTiming
playbackRate	tsvscode.ts	/^    playbackRate?: number;$/;"	p	interface:MediaPositionState
playbackRate	tsvscode.ts	/^    playbackRate?: number;$/;"	p	interface:OptionalEffectTiming
playbackRate	tsvscode.ts	/^    readonly playbackRate: AudioParam;$/;"	p	interface:AudioBufferSourceNode
playbackState	tsvscode.ts	/^    playbackState: MediaSessionPlaybackState;$/;"	p	interface:MediaSession
playbackTime	tsvscode.ts	/^    playbackTime: number;$/;"	p	interface:AudioProcessingEventInit
playbackTime	tsvscode.ts	/^    readonly playbackTime: number;$/;"	p	interface:AudioProcessingEvent
played	tsvscode.ts	/^    readonly played: TimeRanges;$/;"	p	interface:HTMLMediaElement
playsInline	tsvscode.ts	/^    playsInline: boolean;$/;"	p	interface:HTMLVideoElement
pliCount	tsvscode.ts	/^    pliCount?: number;$/;"	p	interface:RTCInboundRtpStreamStats
pliCount	tsvscode.ts	/^    pliCount?: number;$/;"	p	interface:RTCOutboundRtpStreamStats
plugins	tsvscode.ts	/^    readonly plugins: HTMLCollectionOf<HTMLEmbedElement>;$/;"	p	interface:Document
plugins	tsvscode.ts	/^    readonly plugins: PluginArray;$/;"	p	interface:NavigatorPlugins
pointerBeforeReferenceNode	tsvscode.ts	/^    readonly pointerBeforeReferenceNode: boolean;$/;"	p	interface:NodeIterator
pointerEvents	tsvscode.ts	/^    pointerEvents: string;$/;"	p	interface:CSSStyleDeclaration
pointerId	tsvscode.ts	/^    pointerId?: number;$/;"	p	interface:PointerEventInit
pointerId	tsvscode.ts	/^    readonly pointerId: number;$/;"	p	interface:PointerEvent
pointerLockElement	tsvscode.ts	/^    readonly pointerLockElement: Element | null;$/;"	p	interface:DocumentOrShadowRoot
pointerType	tsvscode.ts	/^    pointerType?: string;$/;"	p	interface:PointerEventInit
pointerType	tsvscode.ts	/^    readonly pointerType: string;$/;"	p	interface:PointerEvent
points	tsvscode.ts	/^    readonly points: SVGPointList;$/;"	p	interface:SVGAnimatedPoints
pointsAtX	tsvscode.ts	/^    readonly pointsAtX: SVGAnimatedNumber;$/;"	p	interface:SVGFESpotLightElement
pointsAtY	tsvscode.ts	/^    readonly pointsAtY: SVGAnimatedNumber;$/;"	p	interface:SVGFESpotLightElement
pointsAtZ	tsvscode.ts	/^    readonly pointsAtZ: SVGAnimatedNumber;$/;"	p	interface:SVGFESpotLightElement
polygonOffset	tsvscode.ts	/^    polygonOffset(factor: GLfloat, units: GLfloat): void;$/;"	m	interface:WebGLRenderingContextBase
pop	ests.ts	/^    pop(): T | undefined;$/;"	m	interface:Array
popover	tsvscode.ts	/^    popover: string | null;$/;"	p	interface:HTMLElement
popoverTargetAction	tsvscode.ts	/^    popoverTargetAction: string;$/;"	p	interface:PopoverInvokerElement
popoverTargetElement	tsvscode.ts	/^    popoverTargetElement: Element | null;$/;"	p	interface:PopoverInvokerElement
port	tsvscode.ts	/^    port: string;$/;"	p	interface:HTMLHyperlinkElementUtils
port	tsvscode.ts	/^    port: string;$/;"	p	interface:Location
port	tsvscode.ts	/^    port: string;$/;"	p	interface:URL
port	tsvscode.ts	/^    port?: MIDIPort;$/;"	p	interface:MIDIConnectionEventInit
port	tsvscode.ts	/^    port?: number | null;$/;"	p	interface:RTCPeerConnectionIceErrorEventInit
port	tsvscode.ts	/^    readonly port: MIDIPort | null;$/;"	p	interface:MIDIConnectionEvent
port	tsvscode.ts	/^    readonly port: MessagePort;$/;"	p	interface:AudioWorkletNode
port	tsvscode.ts	/^    readonly port: MessagePort;$/;"	p	interface:SharedWorker
port	tsvscode.ts	/^    readonly port: number | null;$/;"	p	interface:RTCIceCandidate
port	tsvscode.ts	/^    readonly port: number | null;$/;"	p	interface:RTCPeerConnectionIceErrorEvent
port1	tsvscode.ts	/^    readonly port1: MessagePort;$/;"	p	interface:MessageChannel
port2	tsvscode.ts	/^    readonly port2: MessagePort;$/;"	p	interface:MessageChannel
ports	tsvscode.ts	/^    ports?: MessagePort[];$/;"	p	interface:MessageEventInit
ports	tsvscode.ts	/^    readonly ports: ReadonlyArray<MessagePort>;$/;"	p	interface:MessageEvent
position	tsvscode.ts	/^    position: LineAndPositionSetting;$/;"	p	interface:VTTCue
position	tsvscode.ts	/^    position: string;$/;"	p	interface:CSSStyleDeclaration
position	tsvscode.ts	/^    position?: number | null;$/;"	p	interface:WriteParams
position	tsvscode.ts	/^    position?: number;$/;"	p	interface:MediaPositionState
position	tsvscode.ts	/^    readonly position: number;$/;"	p	interface:HTMLProgressElement
positionAlign	tsvscode.ts	/^    positionAlign: PositionAlignSetting;$/;"	p	interface:VTTCue
positionX	tsvscode.ts	/^    positionX?: number;$/;"	p	interface:PannerOptions
positionX	tsvscode.ts	/^    readonly positionX: AudioParam;$/;"	p	interface:AudioListener
positionX	tsvscode.ts	/^    readonly positionX: AudioParam;$/;"	p	interface:PannerNode
positionY	tsvscode.ts	/^    positionY?: number;$/;"	p	interface:PannerOptions
positionY	tsvscode.ts	/^    readonly positionY: AudioParam;$/;"	p	interface:AudioListener
positionY	tsvscode.ts	/^    readonly positionY: AudioParam;$/;"	p	interface:PannerNode
positionZ	tsvscode.ts	/^    positionZ?: number;$/;"	p	interface:PannerOptions
positionZ	tsvscode.ts	/^    readonly positionZ: AudioParam;$/;"	p	interface:AudioListener
positionZ	tsvscode.ts	/^    readonly positionZ: AudioParam;$/;"	p	interface:PannerNode
postMessage	tsvscode.ts	/^    postMessage(message: any): void;$/;"	m	interface:BroadcastChannel
postMessage	tsvscode.ts	/^    postMessage(message: any, options?: StructuredSerializeOptions): void;$/;"	m	interface:MessagePort
postMessage	tsvscode.ts	/^    postMessage(message: any, options?: StructuredSerializeOptions): void;$/;"	m	interface:ServiceWorker
postMessage	tsvscode.ts	/^    postMessage(message: any, options?: StructuredSerializeOptions): void;$/;"	m	interface:Worker
postMessage	tsvscode.ts	/^    postMessage(message: any, options?: WindowPostMessageOptions): void;$/;"	m	interface:Window
postMessage	tsvscode.ts	/^    postMessage(message: any, targetOrigin: string, transfer?: Transferable[]): void;$/;"	m	interface:Window
postMessage	tsvscode.ts	/^    postMessage(message: any, transfer: Transferable[]): void;$/;"	m	interface:MessagePort
postMessage	tsvscode.ts	/^    postMessage(message: any, transfer: Transferable[]): void;$/;"	m	interface:ServiceWorker
postMessage	tsvscode.ts	/^    postMessage(message: any, transfer: Transferable[]): void;$/;"	m	interface:Worker
poster	tsvscode.ts	/^    poster: string;$/;"	p	interface:HTMLVideoElement
pow	ests.ts	/^    pow(x: number, y: number): number;$/;"	m	interface:Math
powerEfficient	tsvscode.ts	/^    powerEfficient: boolean;$/;"	p	interface:MediaCapabilitiesInfo
powerPreference	tsvscode.ts	/^    powerPreference?: WebGLPowerPreference;$/;"	p	interface:WebGLContextAttributes
preMultiplySelf	tsvscode.ts	/^    preMultiplySelf(other?: DOMMatrixInit): DOMMatrix;$/;"	m	interface:DOMMatrix
precision	tsvscode.ts	/^    readonly precision: GLint;$/;"	p	interface:WebGLShaderPrecisionFormat
predictedEvents	tsvscode.ts	/^    predictedEvents?: PointerEvent[];$/;"	p	interface:PointerEventInit
preferCurrentTab	tsvscode.ts	/^    preferCurrentTab?: boolean;$/;"	p	interface:MediaStreamConstraints
prefix	tsvscode.ts	/^    prefix: string;$/;"	p	interface:CSSCounterStyleRule
prefix	tsvscode.ts	/^    readonly prefix: string | null;$/;"	p	interface:Attr
prefix	tsvscode.ts	/^    readonly prefix: string | null;$/;"	p	interface:Element
prefix	tsvscode.ts	/^    readonly prefix: string;$/;"	p	interface:CSSNamespaceRule
preload	tsvscode.ts	/^    preload: "none" | "metadata" | "auto" | "";$/;"	p	interface:HTMLMediaElement
premultipliedAlpha	tsvscode.ts	/^    premultipliedAlpha?: boolean;$/;"	p	interface:WebGLContextAttributes
premultiplyAlpha	tsvscode.ts	/^    premultiplyAlpha?: PremultiplyAlpha;$/;"	p	interface:ImageBitmapOptions
prepend	tsvscode.ts	/^    prepend(...nodes: (Node | string)[]): void;$/;"	m	interface:ParentNode
presentationStyle	tsvscode.ts	/^    presentationStyle?: PresentationStyle;$/;"	p	interface:ClipboardItemOptions
presentationTime	tsvscode.ts	/^    presentationTime: DOMHighResTimeStamp;$/;"	p	interface:VideoFrameCallbackMetadata
presentedFrames	tsvscode.ts	/^    presentedFrames: number;$/;"	p	interface:VideoFrameCallbackMetadata
preserveAlpha	tsvscode.ts	/^    readonly preserveAlpha: SVGAnimatedBoolean;$/;"	p	interface:SVGFEConvolveMatrixElement
preserveAspectRatio	tsvscode.ts	/^    readonly preserveAspectRatio: SVGAnimatedPreserveAspectRatio;$/;"	p	interface:SVGFEImageElement
preserveAspectRatio	tsvscode.ts	/^    readonly preserveAspectRatio: SVGAnimatedPreserveAspectRatio;$/;"	p	interface:SVGFitToViewBox
preserveAspectRatio	tsvscode.ts	/^    readonly preserveAspectRatio: SVGAnimatedPreserveAspectRatio;$/;"	p	interface:SVGImageElement
preserveDrawingBuffer	tsvscode.ts	/^    preserveDrawingBuffer?: boolean;$/;"	p	interface:WebGLContextAttributes
preservesPitch	tsvscode.ts	/^    preservesPitch: boolean;$/;"	p	interface:HTMLMediaElement
pressed	tsvscode.ts	/^    readonly pressed: boolean;$/;"	p	interface:GamepadButton
pressure	tsvscode.ts	/^    pressure?: number;$/;"	p	interface:PointerEventInit
pressure	tsvscode.ts	/^    readonly pressure: number;$/;"	p	interface:PointerEvent
prevValue	tsvscode.ts	/^    readonly prevValue: string;$/;"	p	interface:MutationEvent
preventAbort	tsvscode.ts	/^    preventAbort?: boolean;$/;"	p	interface:StreamPipeOptions
preventCancel	tsvscode.ts	/^    preventCancel?: boolean;$/;"	p	interface:StreamPipeOptions
preventClose	tsvscode.ts	/^    preventClose?: boolean;$/;"	p	interface:StreamPipeOptions
preventDefault	tsvscode.ts	/^    preventDefault(): void;$/;"	m	interface:Event
preventExtensions	ests.ts	/^    preventExtensions<T>(o: T): T;$/;"	m	interface:ObjectConstructor
preventScroll	tsvscode.ts	/^    preventScroll?: boolean;$/;"	p	interface:FocusOptions
preventSilentAccess	tsvscode.ts	/^    preventSilentAccess(): Promise<void>;$/;"	m	interface:CredentialsContainer
previousElementSibling	tsvscode.ts	/^    readonly previousElementSibling: Element | null;$/;"	p	interface:NonDocumentTypeChildNode
previousNode	tsvscode.ts	/^    previousNode(): Node | null;$/;"	m	interface:NodeIterator
previousNode	tsvscode.ts	/^    previousNode(): Node | null;$/;"	m	interface:TreeWalker
previousSibling	tsvscode.ts	/^    previousSibling(): Node | null;$/;"	m	interface:TreeWalker
previousSibling	tsvscode.ts	/^    readonly previousSibling: ChildNode | null;$/;"	p	interface:Node
previousSibling	tsvscode.ts	/^    readonly previousSibling: Node | null;$/;"	p	interface:MutationRecord
primaries	tsvscode.ts	/^    primaries?: VideoColorPrimaries | null;$/;"	p	interface:VideoColorSpaceInit
primaries	tsvscode.ts	/^    readonly primaries: VideoColorPrimaries | null;$/;"	p	interface:VideoColorSpace
primaryKey	tsvscode.ts	/^    readonly primaryKey: IDBValidKey;$/;"	p	interface:IDBCursor
primitiveUnits	tsvscode.ts	/^    readonly primitiveUnits: SVGAnimatedEnumeration;$/;"	p	interface:SVGFilterElement
print	tsvscode.ts	/^    print(): void;$/;"	m	interface:Window
printColorAdjust	tsvscode.ts	/^    printColorAdjust: string;$/;"	p	interface:CSSStyleDeclaration
priority	tsvscode.ts	/^    priority: number;$/;"	p	interface:Highlight
priority	tsvscode.ts	/^    priority?: RTCPriorityType;$/;"	p	interface:RTCRtpEncodingParameters
priority	tsvscode.ts	/^    priority?: RequestPriority;$/;"	p	interface:RequestInit
priority	tsvscode.ts	/^    readonly priority: number | null;$/;"	p	interface:RTCIceCandidate
privateKey	tsvscode.ts	/^    privateKey: CryptoKey;$/;"	p	interface:CryptoKeyPair
processingDuration	tsvscode.ts	/^    processingDuration?: number;$/;"	p	interface:VideoFrameCallbackMetadata
processingEnd	tsvscode.ts	/^    readonly processingEnd: DOMHighResTimeStamp;$/;"	p	interface:PerformanceEventTiming
processingStart	tsvscode.ts	/^    readonly processingStart: DOMHighResTimeStamp;$/;"	p	interface:PerformanceEventTiming
processorOptions	tsvscode.ts	/^    processorOptions?: any;$/;"	p	interface:AudioWorkletNodeOptions
product	tsvscode.ts	/^    readonly product: string;$/;"	p	interface:NavigatorID
productSub	tsvscode.ts	/^    readonly productSub: string;$/;"	p	interface:NavigatorID
progress	tsvscode.ts	/^    progress?: number | null;$/;"	p	interface:ComputedEffectTiming
promise	tsvscode.ts	/^    promise: Promise<any>;$/;"	p	interface:PromiseRejectionEventInit
promise	tsvscode.ts	/^    readonly promise: Promise<any>;$/;"	p	interface:PromiseRejectionEvent
prompt	tsvscode.ts	/^    prompt(): Promise<void>;$/;"	m	interface:RemotePlayback
prompt	tsvscode.ts	/^    prompt(message?: string, _default?: string): string | null;$/;"	m	interface:Window
propertyIsEnumerable	ests.ts	/^    propertyIsEnumerable(v: PropertyKey): boolean;$/;"	m	interface:Object
propertyName	tsvscode.ts	/^    propertyName?: string;$/;"	p	interface:TransitionEventInit
propertyName	tsvscode.ts	/^    readonly propertyName: string;$/;"	p	interface:TransitionEvent
protocol	tsvscode.ts	/^    protocol: string;$/;"	p	interface:HTMLHyperlinkElementUtils
protocol	tsvscode.ts	/^    protocol: string;$/;"	p	interface:Location
protocol	tsvscode.ts	/^    protocol: string;$/;"	p	interface:URL
protocol	tsvscode.ts	/^    protocol?: string;$/;"	p	interface:RTCDataChannelInit
protocol	tsvscode.ts	/^    readonly protocol: RTCIceProtocol | null;$/;"	p	interface:RTCIceCandidate
protocol	tsvscode.ts	/^    readonly protocol: string;$/;"	p	interface:RTCDataChannel
protocol	tsvscode.ts	/^    readonly protocol: string;$/;"	p	interface:WebSocket
prototype	ests.ts	/^        readonly prototype: DateTimeFormat;$/;"	p	interface:Intl.DateTimeFormatConstructor
prototype	ests.ts	/^        readonly prototype: NumberFormat;$/;"	p	interface:Intl.NumberFormatConstructor
prototype	ests.ts	/^    prototype: any;$/;"	p	interface:Function
prototype	ests.ts	/^    readonly prototype: ArrayBuffer;$/;"	p	interface:ArrayBufferConstructor
prototype	ests.ts	/^    readonly prototype: Boolean;$/;"	p	interface:BooleanConstructor
prototype	ests.ts	/^    readonly prototype: DataView;$/;"	p	interface:DataViewConstructor
prototype	ests.ts	/^    readonly prototype: Date;$/;"	p	interface:DateConstructor
prototype	ests.ts	/^    readonly prototype: Error;$/;"	p	interface:ErrorConstructor
prototype	ests.ts	/^    readonly prototype: EvalError;$/;"	p	interface:EvalErrorConstructor
prototype	ests.ts	/^    readonly prototype: Float32Array;$/;"	p	interface:Float32ArrayConstructor
prototype	ests.ts	/^    readonly prototype: Float64Array;$/;"	p	interface:Float64ArrayConstructor
prototype	ests.ts	/^    readonly prototype: Function;$/;"	p	interface:FunctionConstructor
prototype	ests.ts	/^    readonly prototype: Int16Array;$/;"	p	interface:Int16ArrayConstructor
prototype	ests.ts	/^    readonly prototype: Int32Array;$/;"	p	interface:Int32ArrayConstructor
prototype	ests.ts	/^    readonly prototype: Int8Array;$/;"	p	interface:Int8ArrayConstructor
prototype	ests.ts	/^    readonly prototype: Number;$/;"	p	interface:NumberConstructor
prototype	ests.ts	/^    readonly prototype: Object;$/;"	p	interface:ObjectConstructor
prototype	ests.ts	/^    readonly prototype: RangeError;$/;"	p	interface:RangeErrorConstructor
prototype	ests.ts	/^    readonly prototype: ReferenceError;$/;"	p	interface:ReferenceErrorConstructor
prototype	ests.ts	/^    readonly prototype: String;$/;"	p	interface:StringConstructor
prototype	ests.ts	/^    readonly prototype: SyntaxError;$/;"	p	interface:SyntaxErrorConstructor
prototype	ests.ts	/^    readonly prototype: TypeError;$/;"	p	interface:TypeErrorConstructor
prototype	ests.ts	/^    readonly prototype: URIError;$/;"	p	interface:URIErrorConstructor
prototype	ests.ts	/^    readonly prototype: Uint16Array;$/;"	p	interface:Uint16ArrayConstructor
prototype	ests.ts	/^    readonly prototype: Uint32Array;$/;"	p	interface:Uint32ArrayConstructor
prototype	ests.ts	/^    readonly prototype: Uint8Array;$/;"	p	interface:Uint8ArrayConstructor
prototype	ests.ts	/^    readonly prototype: Uint8ClampedArray;$/;"	p	interface:Uint8ClampedArrayConstructor
prototype	ests.ts	/^    readonly prototype: any[];$/;"	p	interface:ArrayConstructor
pseudoElement	tsvscode.ts	/^    pseudoElement: string | null;$/;"	p	interface:KeyframeEffect
pseudoElement	tsvscode.ts	/^    pseudoElement?: string | null;$/;"	p	interface:KeyframeEffectOptions
pseudoElement	tsvscode.ts	/^    pseudoElement?: string;$/;"	p	interface:AnimationEventInit
pseudoElement	tsvscode.ts	/^    pseudoElement?: string;$/;"	p	interface:TransitionEventInit
pseudoElement	tsvscode.ts	/^    readonly pseudoElement: string;$/;"	p	interface:AnimationEvent
pseudoElement	tsvscode.ts	/^    readonly pseudoElement: string;$/;"	p	interface:TransitionEvent
pubKeyCredParams	tsvscode.ts	/^    pubKeyCredParams: PublicKeyCredentialParameters[];$/;"	p	interface:PublicKeyCredentialCreationOptions
publicExponent	tsvscode.ts	/^    publicExponent: BigInteger;$/;"	p	interface:RsaKeyAlgorithm
publicExponent	tsvscode.ts	/^    publicExponent: BigInteger;$/;"	p	interface:RsaKeyGenParams
publicId	tsvscode.ts	/^    readonly publicId: string;$/;"	p	interface:DocumentType
publicKey	tsvscode.ts	/^    publicKey: CryptoKey;$/;"	p	interface:CryptoKeyPair
publicKey	tsvscode.ts	/^    publicKey?: PublicKeyCredentialCreationOptions;$/;"	p	interface:CredentialCreationOptions
publicKey	tsvscode.ts	/^    publicKey?: PublicKeyCredentialRequestOptions;$/;"	p	interface:CredentialRequestOptions
pull	tsvscode.ts	/^    pull?: (controller: ReadableByteStreamController) => void | PromiseLike<void>;$/;"	p	interface:UnderlyingByteSource
pull	tsvscode.ts	/^    pull?: (controller: ReadableStreamDefaultController<R>) => void | PromiseLike<void>;$/;"	p	interface:UnderlyingDefaultSource
pull	tsvscode.ts	/^    pull?: UnderlyingSourcePullCallback<R>;$/;"	p	interface:UnderlyingSource
push	ests.ts	/^    push(...items: T[]): number;$/;"	m	interface:Array
pushManager	tsvscode.ts	/^    readonly pushManager: PushManager;$/;"	p	interface:ServiceWorkerRegistration
pushState	tsvscode.ts	/^    pushState(data: any, unused: string, url?: string | URL | null): void;$/;"	m	interface:History
put	tsvscode.ts	/^    put(request: RequestInfo | URL, response: Response): Promise<void>;$/;"	m	interface:Cache
put	tsvscode.ts	/^    put(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>;$/;"	m	interface:IDBObjectStore
putImageData	tsvscode.ts	/^    putImageData(imagedata: ImageData, dx: number, dy: number): void;$/;"	m	interface:CanvasImageData
putImageData	tsvscode.ts	/^    putImageData(imagedata: ImageData, dx: number, dy: number, dirtyX: number, dirtyY: number, d/;"	m	interface:CanvasImageData
q	tsvscode.ts	/^    q?: string;$/;"	p	interface:JsonWebKey
qi	tsvscode.ts	/^    qi?: string;$/;"	p	interface:JsonWebKey
qpSum	tsvscode.ts	/^    qpSum?: number;$/;"	p	interface:RTCInboundRtpStreamStats
qpSum	tsvscode.ts	/^    qpSum?: number;$/;"	p	interface:RTCOutboundRtpStreamStats
quadraticCurveTo	tsvscode.ts	/^    quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void;$/;"	m	interface:CanvasPath
quality	tsvscode.ts	/^    quality?: number;$/;"	p	interface:ImageEncodeOptions
qualityLimitationResolutionChanges	tsvscode.ts	/^    qualityLimitationResolutionChanges?: number;$/;"	p	interface:RTCOutboundRtpStreamStats
query	tsvscode.ts	/^    query(): Promise<LockManagerSnapshot>;$/;"	m	interface:LockManager
query	tsvscode.ts	/^    query(permissionDesc: PermissionDescriptor): Promise<PermissionStatus>;$/;"	m	interface:Permissions
queryCommandEnabled	tsvscode.ts	/^    queryCommandEnabled(commandId: string): boolean;$/;"	m	interface:Document
queryCommandIndeterm	tsvscode.ts	/^    queryCommandIndeterm(commandId: string): boolean;$/;"	m	interface:Document
queryCommandState	tsvscode.ts	/^    queryCommandState(commandId: string): boolean;$/;"	m	interface:Document
queryCommandSupported	tsvscode.ts	/^    queryCommandSupported(commandId: string): boolean;$/;"	m	interface:Document
queryCommandValue	tsvscode.ts	/^    queryCommandValue(commandId: string): string;$/;"	m	interface:Document
querySelector	tsvscode.ts	/^    querySelector<E extends Element = Element>(selectors: string): E | null;$/;"	m	interface:ParentNode
querySelector	tsvscode.ts	/^    querySelector<K extends keyof HTMLElementDeprecatedTagNameMap>(selectors: K): HTMLElementDep/;"	m	interface:ParentNode
querySelector	tsvscode.ts	/^    querySelector<K extends keyof HTMLElementTagNameMap>(selectors: K): HTMLElementTagNameMap[K]/;"	m	interface:ParentNode
querySelector	tsvscode.ts	/^    querySelector<K extends keyof MathMLElementTagNameMap>(selectors: K): MathMLElementTagNameMa/;"	m	interface:ParentNode
querySelector	tsvscode.ts	/^    querySelector<K extends keyof SVGElementTagNameMap>(selectors: K): SVGElementTagNameMap[K] |/;"	m	interface:ParentNode
querySelectorAll	tsvscode.ts	/^    querySelectorAll<E extends Element = Element>(selectors: string): NodeListOf<E>;$/;"	m	interface:ParentNode
querySelectorAll	tsvscode.ts	/^    querySelectorAll<K extends keyof HTMLElementDeprecatedTagNameMap>(selectors: K): NodeListOf</;"	m	interface:ParentNode
querySelectorAll	tsvscode.ts	/^    querySelectorAll<K extends keyof HTMLElementTagNameMap>(selectors: K): NodeListOf<HTMLElemen/;"	m	interface:ParentNode
querySelectorAll	tsvscode.ts	/^    querySelectorAll<K extends keyof MathMLElementTagNameMap>(selectors: K): NodeListOf<MathMLEl/;"	m	interface:ParentNode
querySelectorAll	tsvscode.ts	/^    querySelectorAll<K extends keyof SVGElementTagNameMap>(selectors: K): NodeListOf<SVGElementT/;"	m	interface:ParentNode
queueMicrotask	tsvscode.ts	/^    queueMicrotask(callback: VoidFunction): void;$/;"	m	interface:WindowOrWorkerGlobalScope
quota	tsvscode.ts	/^    quota?: number;$/;"	p	interface:StorageEstimate
quotes	tsvscode.ts	/^    quotes: string;$/;"	p	interface:CSSStyleDeclaration
r	tsvscode.ts	/^    r: string;$/;"	p	interface:CSSStyleDeclaration
r	tsvscode.ts	/^    r?: string;$/;"	p	interface:RsaOtherPrimesInfo
r	tsvscode.ts	/^    readonly r: SVGAnimatedLength;$/;"	p	interface:SVGCircleElement
r	tsvscode.ts	/^    readonly r: SVGAnimatedLength;$/;"	p	interface:SVGRadialGradientElement
radiusX	tsvscode.ts	/^    radiusX?: number;$/;"	p	interface:TouchInit
radiusX	tsvscode.ts	/^    readonly radiusX: SVGAnimatedNumber;$/;"	p	interface:SVGFEMorphologyElement
radiusX	tsvscode.ts	/^    readonly radiusX: number;$/;"	p	interface:Touch
radiusY	tsvscode.ts	/^    radiusY?: number;$/;"	p	interface:TouchInit
radiusY	tsvscode.ts	/^    readonly radiusY: SVGAnimatedNumber;$/;"	p	interface:SVGFEMorphologyElement
radiusY	tsvscode.ts	/^    readonly radiusY: number;$/;"	p	interface:Touch
random	ests.ts	/^    random(): number;$/;"	m	interface:Math
randomUUID	tsvscode.ts	/^    randomUUID(): `${string}-${string}-${string}-${string}-${string}`;$/;"	m	interface:Crypto
range	tsvscode.ts	/^    range: string;$/;"	p	interface:CSSCounterStyleRule
rangeCount	tsvscode.ts	/^    readonly rangeCount: number;$/;"	p	interface:Selection
rangeMax	tsvscode.ts	/^    readonly rangeMax: GLint;$/;"	p	interface:WebGLShaderPrecisionFormat
rangeMin	tsvscode.ts	/^    readonly rangeMin: GLint;$/;"	p	interface:WebGLShaderPrecisionFormat
rangeOverflow	tsvscode.ts	/^    rangeOverflow?: boolean;$/;"	p	interface:ValidityStateFlags
rangeOverflow	tsvscode.ts	/^    readonly rangeOverflow: boolean;$/;"	p	interface:ValidityState
rangeUnderflow	tsvscode.ts	/^    rangeUnderflow?: boolean;$/;"	p	interface:ValidityStateFlags
rangeUnderflow	tsvscode.ts	/^    readonly rangeUnderflow: boolean;$/;"	p	interface:ValidityState
rate	tsvscode.ts	/^    rate: number;$/;"	p	interface:SpeechSynthesisUtterance
ratio	tsvscode.ts	/^    ratio?: number;$/;"	p	interface:DynamicsCompressorOptions
ratio	tsvscode.ts	/^    readonly ratio: AudioParam;$/;"	p	interface:DynamicsCompressorNode
raw	ests.ts	/^    readonly raw: readonly string[];$/;"	p	interface:TemplateStringsArray
rawId	tsvscode.ts	/^    readonly rawId: ArrayBuffer;$/;"	p	interface:PublicKeyCredential
read	tsvscode.ts	/^    read(): Promise<ClipboardItems>;$/;"	m	interface:Clipboard
read	tsvscode.ts	/^    read(): Promise<ReadableStreamReadResult<R>>;$/;"	m	interface:ReadableStreamDefaultReader
read	tsvscode.ts	/^    read: number;$/;"	p	interface:TextEncoderEncodeIntoResult
read	tsvscode.ts	/^    read<T extends ArrayBufferView>(view: T): Promise<ReadableStreamReadResult<T>>;$/;"	m	interface:ReadableStreamBYOBReader
readAsArrayBuffer	tsvscode.ts	/^    readAsArrayBuffer(blob: Blob): void;$/;"	m	interface:FileReader
readAsBinaryString	tsvscode.ts	/^    readAsBinaryString(blob: Blob): void;$/;"	m	interface:FileReader
readAsDataURL	tsvscode.ts	/^    readAsDataURL(blob: Blob): void;$/;"	m	interface:FileReader
readAsText	tsvscode.ts	/^    readAsText(blob: Blob, encoding?: string): void;$/;"	m	interface:FileReader
readBuffer	tsvscode.ts	/^    readBuffer(src: GLenum): void;$/;"	m	interface:WebGL2RenderingContextBase
readEntries	tsvscode.ts	/^    readEntries(successCallback: FileSystemEntriesCallback, errorCallback?: ErrorCallback): void/;"	m	interface:FileSystemDirectoryReader
readOnly	tsvscode.ts	/^    readOnly: boolean;$/;"	p	interface:HTMLInputElement
readOnly	tsvscode.ts	/^    readOnly: boolean;$/;"	p	interface:HTMLTextAreaElement
readPixels	tsvscode.ts	/^    readPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum/;"	m	interface:WebGL2RenderingContextOverloads
readPixels	tsvscode.ts	/^    readPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum/;"	m	interface:WebGLRenderingContextOverloads
readText	tsvscode.ts	/^    readText(): Promise<string>;$/;"	m	interface:Clipboard
readable	tsvscode.ts	/^    readable: ReadableStream<R>;$/;"	p	interface:ReadableWritablePair
readable	tsvscode.ts	/^    readonly readable: ReadableStream;$/;"	p	interface:GenericTransformStream
readable	tsvscode.ts	/^    readonly readable: ReadableStream;$/;"	p	interface:WebTransportBidirectionalStream
readable	tsvscode.ts	/^    readonly readable: ReadableStream;$/;"	p	interface:WebTransportDatagramDuplexStream
readable	tsvscode.ts	/^    readonly readable: ReadableStream<O>;$/;"	p	interface:TransformStream
readable	tsvscode.ts	/^    readonly readable: ReadableStream<Uint8Array>;$/;"	p	interface:TextEncoderStream
readable	tsvscode.ts	/^    readonly readable: ReadableStream<string>;$/;"	p	interface:TextDecoderStream
readableType	tsvscode.ts	/^    readableType?: undefined;$/;"	p	interface:Transformer
readonly	tsvscode.ts	/^    readonly ACTIVE_ATTRIBUTES: 0x8B89;$/;"	v
readonly	tsvscode.ts	/^    readonly ACTIVE_TEXTURE: 0x84E0;$/;"	v
readonly	tsvscode.ts	/^    readonly ACTIVE_UNIFORMS: 0x8B86;$/;"	v
readonly	tsvscode.ts	/^    readonly ACTIVE_UNIFORM_BLOCKS: 0x8A36;$/;"	v
readonly	tsvscode.ts	/^    readonly ALIASED_LINE_WIDTH_RANGE: 0x846E;$/;"	v
readonly	tsvscode.ts	/^    readonly ALIASED_POINT_SIZE_RANGE: 0x846D;$/;"	v
readonly	tsvscode.ts	/^    readonly ALPHA: 0x1906;$/;"	v
readonly	tsvscode.ts	/^    readonly ALPHA_BITS: 0x0D55;$/;"	v
readonly	tsvscode.ts	/^    readonly ALREADY_SIGNALED: 0x911A;$/;"	v
readonly	tsvscode.ts	/^    readonly ALWAYS: 0x0207;$/;"	v
readonly	tsvscode.ts	/^    readonly ANY_SAMPLES_PASSED: 0x8C2F;$/;"	v
readonly	tsvscode.ts	/^    readonly ANY_SAMPLES_PASSED_CONSERVATIVE: 0x8D6A;$/;"	v
readonly	tsvscode.ts	/^    readonly ANY_TYPE: 0;$/;"	v
readonly	tsvscode.ts	/^    readonly ARRAY_BUFFER: 0x8892;$/;"	v
readonly	tsvscode.ts	/^    readonly ARRAY_BUFFER_BINDING: 0x8894;$/;"	v
readonly	tsvscode.ts	/^    readonly ATTACHED_SHADERS: 0x8B85;$/;"	v
readonly	tsvscode.ts	/^    readonly BACK: 0x0405;$/;"	v
readonly	tsvscode.ts	/^    readonly BLEND: 0x0BE2;$/;"	v
readonly	tsvscode.ts	/^    readonly BLEND_COLOR: 0x8005;$/;"	v
readonly	tsvscode.ts	/^    readonly BLEND_DST_ALPHA: 0x80CA;$/;"	v
readonly	tsvscode.ts	/^    readonly BLEND_DST_RGB: 0x80C8;$/;"	v
readonly	tsvscode.ts	/^    readonly BLEND_EQUATION: 0x8009;$/;"	v
readonly	tsvscode.ts	/^    readonly BLEND_EQUATION_ALPHA: 0x883D;$/;"	v
readonly	tsvscode.ts	/^    readonly BLEND_EQUATION_RGB: 0x8009;$/;"	v
readonly	tsvscode.ts	/^    readonly BLEND_SRC_ALPHA: 0x80CB;$/;"	v
readonly	tsvscode.ts	/^    readonly BLEND_SRC_RGB: 0x80C9;$/;"	v
readonly	tsvscode.ts	/^    readonly BLUE_BITS: 0x0D54;$/;"	v
readonly	tsvscode.ts	/^    readonly BOOL: 0x8B56;$/;"	v
readonly	tsvscode.ts	/^    readonly BOOL_VEC2: 0x8B57;$/;"	v
readonly	tsvscode.ts	/^    readonly BOOL_VEC3: 0x8B58;$/;"	v
readonly	tsvscode.ts	/^    readonly BOOL_VEC4: 0x8B59;$/;"	v
readonly	tsvscode.ts	/^    readonly BROWSER_DEFAULT_WEBGL: 0x9244;$/;"	v
readonly	tsvscode.ts	/^    readonly BUFFER_SIZE: 0x8764;$/;"	v
readonly	tsvscode.ts	/^    readonly BUFFER_USAGE: 0x8765;$/;"	v
readonly	tsvscode.ts	/^    readonly BYTE: 0x1400;$/;"	v
readonly	tsvscode.ts	/^    readonly CCW: 0x0901;$/;"	v
readonly	tsvscode.ts	/^    readonly CLAMP_TO_EDGE: 0x812F;$/;"	v
readonly	tsvscode.ts	/^    readonly COLOR: 0x1800;$/;"	v
readonly	tsvscode.ts	/^    readonly COLOR_ATTACHMENT0: 0x8CE0;$/;"	v
readonly	tsvscode.ts	/^    readonly COLOR_ATTACHMENT10: 0x8CEA;$/;"	v
readonly	tsvscode.ts	/^    readonly COLOR_ATTACHMENT11: 0x8CEB;$/;"	v
readonly	tsvscode.ts	/^    readonly COLOR_ATTACHMENT12: 0x8CEC;$/;"	v
readonly	tsvscode.ts	/^    readonly COLOR_ATTACHMENT13: 0x8CED;$/;"	v
readonly	tsvscode.ts	/^    readonly COLOR_ATTACHMENT14: 0x8CEE;$/;"	v
readonly	tsvscode.ts	/^    readonly COLOR_ATTACHMENT15: 0x8CEF;$/;"	v
readonly	tsvscode.ts	/^    readonly COLOR_ATTACHMENT1: 0x8CE1;$/;"	v
readonly	tsvscode.ts	/^    readonly COLOR_ATTACHMENT2: 0x8CE2;$/;"	v
readonly	tsvscode.ts	/^    readonly COLOR_ATTACHMENT3: 0x8CE3;$/;"	v
readonly	tsvscode.ts	/^    readonly COLOR_ATTACHMENT4: 0x8CE4;$/;"	v
readonly	tsvscode.ts	/^    readonly COLOR_ATTACHMENT5: 0x8CE5;$/;"	v
readonly	tsvscode.ts	/^    readonly COLOR_ATTACHMENT6: 0x8CE6;$/;"	v
readonly	tsvscode.ts	/^    readonly COLOR_ATTACHMENT7: 0x8CE7;$/;"	v
readonly	tsvscode.ts	/^    readonly COLOR_ATTACHMENT8: 0x8CE8;$/;"	v
readonly	tsvscode.ts	/^    readonly COLOR_ATTACHMENT9: 0x8CE9;$/;"	v
readonly	tsvscode.ts	/^    readonly COLOR_BUFFER_BIT: 0x00004000;$/;"	v
readonly	tsvscode.ts	/^    readonly COLOR_CLEAR_VALUE: 0x0C22;$/;"	v
readonly	tsvscode.ts	/^    readonly COLOR_WRITEMASK: 0x0C23;$/;"	v
readonly	tsvscode.ts	/^    readonly COMPARE_REF_TO_TEXTURE: 0x884E;$/;"	v
readonly	tsvscode.ts	/^    readonly COMPILE_STATUS: 0x8B81;$/;"	v
readonly	tsvscode.ts	/^    readonly COMPRESSED_TEXTURE_FORMATS: 0x86A3;$/;"	v
readonly	tsvscode.ts	/^    readonly CONDITION_SATISFIED: 0x911C;$/;"	v
readonly	tsvscode.ts	/^    readonly CONNECTING: 0;$/;"	v
readonly	tsvscode.ts	/^    readonly CONSTANT_ALPHA: 0x8003;$/;"	v
readonly	tsvscode.ts	/^    readonly CONSTANT_COLOR: 0x8001;$/;"	v
readonly	tsvscode.ts	/^    readonly CONTEXT_LOST_WEBGL: 0x9242;$/;"	v
readonly	tsvscode.ts	/^    readonly COPY_READ_BUFFER: 0x8F36;$/;"	v
readonly	tsvscode.ts	/^    readonly COPY_READ_BUFFER_BINDING: 0x8F36;$/;"	v
readonly	tsvscode.ts	/^    readonly COPY_WRITE_BUFFER: 0x8F37;$/;"	v
readonly	tsvscode.ts	/^    readonly COPY_WRITE_BUFFER_BINDING: 0x8F37;$/;"	v
readonly	tsvscode.ts	/^    readonly CULL_FACE: 0x0B44;$/;"	v
readonly	tsvscode.ts	/^    readonly CULL_FACE_MODE: 0x0B45;$/;"	v
readonly	tsvscode.ts	/^    readonly CURRENT_PROGRAM: 0x8B8D;$/;"	v
readonly	tsvscode.ts	/^    readonly CURRENT_QUERY: 0x8865;$/;"	v
readonly	tsvscode.ts	/^    readonly CURRENT_VERTEX_ATTRIB: 0x8626;$/;"	v
readonly	tsvscode.ts	/^    readonly CW: 0x0900;$/;"	v
readonly	tsvscode.ts	/^    readonly DECR: 0x1E03;$/;"	v
readonly	tsvscode.ts	/^    readonly DECR_WRAP: 0x8508;$/;"	v
readonly	tsvscode.ts	/^    readonly DELETE_STATUS: 0x8B80;$/;"	v
readonly	tsvscode.ts	/^    readonly DEPTH24_STENCIL8: 0x88F0;$/;"	v
readonly	tsvscode.ts	/^    readonly DEPTH32F_STENCIL8: 0x8CAD;$/;"	v
readonly	tsvscode.ts	/^    readonly DEPTH: 0x1801;$/;"	v
readonly	tsvscode.ts	/^    readonly DEPTH_ATTACHMENT: 0x8D00;$/;"	v
readonly	tsvscode.ts	/^    readonly DEPTH_BITS: 0x0D56;$/;"	v
readonly	tsvscode.ts	/^    readonly DEPTH_BUFFER_BIT: 0x00000100;$/;"	v
readonly	tsvscode.ts	/^    readonly DEPTH_CLEAR_VALUE: 0x0B73;$/;"	v
readonly	tsvscode.ts	/^    readonly DEPTH_COMPONENT16: 0x81A5;$/;"	v
readonly	tsvscode.ts	/^    readonly DEPTH_COMPONENT24: 0x81A6;$/;"	v
readonly	tsvscode.ts	/^    readonly DEPTH_COMPONENT32F: 0x8CAC;$/;"	v
readonly	tsvscode.ts	/^    readonly DEPTH_COMPONENT: 0x1902;$/;"	v
readonly	tsvscode.ts	/^    readonly DEPTH_FUNC: 0x0B74;$/;"	v
readonly	tsvscode.ts	/^    readonly DEPTH_RANGE: 0x0B70;$/;"	v
readonly	tsvscode.ts	/^    readonly DEPTH_STENCIL: 0x84F9;$/;"	v
readonly	tsvscode.ts	/^    readonly DEPTH_STENCIL_ATTACHMENT: 0x821A;$/;"	v
readonly	tsvscode.ts	/^    readonly DEPTH_TEST: 0x0B71;$/;"	v
readonly	tsvscode.ts	/^    readonly DEPTH_WRITEMASK: 0x0B72;$/;"	v
readonly	tsvscode.ts	/^    readonly DITHER: 0x0BD0;$/;"	v
readonly	tsvscode.ts	/^    readonly DOCUMENT_POSITION_CONTAINED_BY: 0x10;$/;"	v
readonly	tsvscode.ts	/^    readonly DOCUMENT_POSITION_CONTAINS: 0x08;$/;"	v
readonly	tsvscode.ts	/^    readonly DOCUMENT_POSITION_FOLLOWING: 0x04;$/;"	v
readonly	tsvscode.ts	/^    readonly DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: 0x20;$/;"	v
readonly	tsvscode.ts	/^    readonly DOCUMENT_POSITION_PRECEDING: 0x02;$/;"	v
readonly	tsvscode.ts	/^    readonly DOM_DELTA_LINE: 0x01;$/;"	v
readonly	tsvscode.ts	/^    readonly DOM_DELTA_PAGE: 0x02;$/;"	v
readonly	tsvscode.ts	/^    readonly DOM_DELTA_PIXEL: 0x00;$/;"	v
readonly	tsvscode.ts	/^    readonly DOM_KEY_LOCATION_LEFT: 0x01;$/;"	v
readonly	tsvscode.ts	/^    readonly DOM_KEY_LOCATION_NUMPAD: 0x03;$/;"	v
readonly	tsvscode.ts	/^    readonly DOM_KEY_LOCATION_RIGHT: 0x02;$/;"	v
readonly	tsvscode.ts	/^    readonly DOM_KEY_LOCATION_STANDARD: 0x00;$/;"	v
readonly	tsvscode.ts	/^    readonly DONT_CARE: 0x1100;$/;"	v
readonly	tsvscode.ts	/^    readonly DRAW_BUFFER0: 0x8825;$/;"	v
readonly	tsvscode.ts	/^    readonly DRAW_BUFFER10: 0x882F;$/;"	v
readonly	tsvscode.ts	/^    readonly DRAW_BUFFER11: 0x8830;$/;"	v
readonly	tsvscode.ts	/^    readonly DRAW_BUFFER12: 0x8831;$/;"	v
readonly	tsvscode.ts	/^    readonly DRAW_BUFFER13: 0x8832;$/;"	v
readonly	tsvscode.ts	/^    readonly DRAW_BUFFER14: 0x8833;$/;"	v
readonly	tsvscode.ts	/^    readonly DRAW_BUFFER15: 0x8834;$/;"	v
readonly	tsvscode.ts	/^    readonly DRAW_BUFFER1: 0x8826;$/;"	v
readonly	tsvscode.ts	/^    readonly DRAW_BUFFER2: 0x8827;$/;"	v
readonly	tsvscode.ts	/^    readonly DRAW_BUFFER3: 0x8828;$/;"	v
readonly	tsvscode.ts	/^    readonly DRAW_BUFFER4: 0x8829;$/;"	v
readonly	tsvscode.ts	/^    readonly DRAW_BUFFER5: 0x882A;$/;"	v
readonly	tsvscode.ts	/^    readonly DRAW_BUFFER6: 0x882B;$/;"	v
readonly	tsvscode.ts	/^    readonly DRAW_BUFFER7: 0x882C;$/;"	v
readonly	tsvscode.ts	/^    readonly DRAW_BUFFER8: 0x882D;$/;"	v
readonly	tsvscode.ts	/^    readonly DRAW_BUFFER9: 0x882E;$/;"	v
readonly	tsvscode.ts	/^    readonly DRAW_FRAMEBUFFER: 0x8CA9;$/;"	v
readonly	tsvscode.ts	/^    readonly DRAW_FRAMEBUFFER_BINDING: 0x8CA6;$/;"	v
readonly	tsvscode.ts	/^    readonly DST_ALPHA: 0x0304;$/;"	v
readonly	tsvscode.ts	/^    readonly DST_COLOR: 0x0306;$/;"	v
readonly	tsvscode.ts	/^    readonly DYNAMIC_COPY: 0x88EA;$/;"	v
readonly	tsvscode.ts	/^    readonly DYNAMIC_DRAW: 0x88E8;$/;"	v
readonly	tsvscode.ts	/^    readonly DYNAMIC_READ: 0x88E9;$/;"	v
readonly	tsvscode.ts	/^    readonly ELEMENT_ARRAY_BUFFER: 0x8893;$/;"	v
readonly	tsvscode.ts	/^    readonly ELEMENT_ARRAY_BUFFER_BINDING: 0x8895;$/;"	v
readonly	tsvscode.ts	/^    readonly ELEMENT_NODE: 1;$/;"	v
readonly	tsvscode.ts	/^    readonly EMPTY: 0;$/;"	v
readonly	tsvscode.ts	/^    readonly EQUAL: 0x0202;$/;"	v
readonly	tsvscode.ts	/^    readonly FASTEST: 0x1101;$/;"	v
readonly	tsvscode.ts	/^    readonly FLOAT: 0x1406;$/;"	v
readonly	tsvscode.ts	/^    readonly FLOAT_32_UNSIGNED_INT_24_8_REV: 0x8DAD;$/;"	v
readonly	tsvscode.ts	/^    readonly FLOAT_MAT2: 0x8B5A;$/;"	v
readonly	tsvscode.ts	/^    readonly FLOAT_MAT2x3: 0x8B65;$/;"	v
readonly	tsvscode.ts	/^    readonly FLOAT_MAT2x4: 0x8B66;$/;"	v
readonly	tsvscode.ts	/^    readonly FLOAT_MAT3: 0x8B5B;$/;"	v
readonly	tsvscode.ts	/^    readonly FLOAT_MAT3x2: 0x8B67;$/;"	v
readonly	tsvscode.ts	/^    readonly FLOAT_MAT3x4: 0x8B68;$/;"	v
readonly	tsvscode.ts	/^    readonly FLOAT_MAT4: 0x8B5C;$/;"	v
readonly	tsvscode.ts	/^    readonly FLOAT_MAT4x2: 0x8B69;$/;"	v
readonly	tsvscode.ts	/^    readonly FLOAT_MAT4x3: 0x8B6A;$/;"	v
readonly	tsvscode.ts	/^    readonly FLOAT_VEC2: 0x8B50;$/;"	v
readonly	tsvscode.ts	/^    readonly FLOAT_VEC3: 0x8B51;$/;"	v
readonly	tsvscode.ts	/^    readonly FLOAT_VEC4: 0x8B52;$/;"	v
readonly	tsvscode.ts	/^    readonly FRAGMENT_SHADER: 0x8B30;$/;"	v
readonly	tsvscode.ts	/^    readonly FRAGMENT_SHADER_DERIVATIVE_HINT: 0x8B8B;$/;"	v
readonly	tsvscode.ts	/^    readonly FRAMEBUFFER: 0x8D40;$/;"	v
readonly	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: 0x8215;$/;"	v
readonly	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: 0x8214;$/;"	v
readonly	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: 0x8210;$/;"	v
readonly	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: 0x8211;$/;"	v
readonly	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: 0x8216;$/;"	v
readonly	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: 0x8213;$/;"	v
readonly	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: 0x8CD1;$/;"	v
readonly	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: 0x8CD0;$/;"	v
readonly	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_RED_SIZE: 0x8212;$/;"	v
readonly	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: 0x8217;$/;"	v
readonly	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: 0x8CD3;$/;"	v
readonly	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: 0x8CD4;$/;"	v
readonly	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: 0x8CD2;$/;"	v
readonly	tsvscode.ts	/^    readonly FRAMEBUFFER_BINDING: 0x8CA6;$/;"	v
readonly	tsvscode.ts	/^    readonly FRAMEBUFFER_DEFAULT: 0x8218;$/;"	v
readonly	tsvscode.ts	/^    readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT: 0x8CD6;$/;"	v
readonly	tsvscode.ts	/^    readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS: 0x8CD9;$/;"	v
readonly	tsvscode.ts	/^    readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: 0x8CD7;$/;"	v
readonly	tsvscode.ts	/^    readonly FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: 0x8D56;$/;"	v
readonly	tsvscode.ts	/^    readonly FRAMEBUFFER_UNSUPPORTED: 0x8CDD;$/;"	v
readonly	tsvscode.ts	/^    readonly FRONT: 0x0404;$/;"	v
readonly	tsvscode.ts	/^    readonly FRONT_AND_BACK: 0x0408;$/;"	v
readonly	tsvscode.ts	/^    readonly FRONT_FACE: 0x0B46;$/;"	v
readonly	tsvscode.ts	/^    readonly FUNC_ADD: 0x8006;$/;"	v
readonly	tsvscode.ts	/^    readonly FUNC_REVERSE_SUBTRACT: 0x800B;$/;"	v
readonly	tsvscode.ts	/^    readonly FUNC_SUBTRACT: 0x800A;$/;"	v
readonly	tsvscode.ts	/^    readonly GENERATE_MIPMAP_HINT: 0x8192;$/;"	v
readonly	tsvscode.ts	/^    readonly GEQUAL: 0x0206;$/;"	v
readonly	tsvscode.ts	/^    readonly GREATER: 0x0204;$/;"	v
readonly	tsvscode.ts	/^    readonly GREEN_BITS: 0x0D53;$/;"	v
readonly	tsvscode.ts	/^    readonly HALF_FLOAT: 0x140B;$/;"	v
readonly	tsvscode.ts	/^    readonly HIGH_FLOAT: 0x8DF2;$/;"	v
readonly	tsvscode.ts	/^    readonly HIGH_INT: 0x8DF5;$/;"	v
readonly	tsvscode.ts	/^    readonly IMPLEMENTATION_COLOR_READ_FORMAT: 0x8B9B;$/;"	v
readonly	tsvscode.ts	/^    readonly IMPLEMENTATION_COLOR_READ_TYPE: 0x8B9A;$/;"	v
readonly	tsvscode.ts	/^    readonly INCR: 0x1E02;$/;"	v
readonly	tsvscode.ts	/^    readonly INCR_WRAP: 0x8507;$/;"	v
readonly	tsvscode.ts	/^    readonly INDEX_SIZE_ERR: 1;$/;"	v
readonly	tsvscode.ts	/^    readonly INT: 0x1404;$/;"	v
readonly	tsvscode.ts	/^    readonly INTERLEAVED_ATTRIBS: 0x8C8C;$/;"	v
readonly	tsvscode.ts	/^    readonly INT_2_10_10_10_REV: 0x8D9F;$/;"	v
readonly	tsvscode.ts	/^    readonly INT_SAMPLER_2D: 0x8DCA;$/;"	v
readonly	tsvscode.ts	/^    readonly INT_SAMPLER_2D_ARRAY: 0x8DCF;$/;"	v
readonly	tsvscode.ts	/^    readonly INT_SAMPLER_3D: 0x8DCB;$/;"	v
readonly	tsvscode.ts	/^    readonly INT_SAMPLER_CUBE: 0x8DCC;$/;"	v
readonly	tsvscode.ts	/^    readonly INT_VEC2: 0x8B53;$/;"	v
readonly	tsvscode.ts	/^    readonly INT_VEC3: 0x8B54;$/;"	v
readonly	tsvscode.ts	/^    readonly INT_VEC4: 0x8B55;$/;"	v
readonly	tsvscode.ts	/^    readonly INVALID_FRAMEBUFFER_OPERATION: 0x0506;$/;"	v
readonly	tsvscode.ts	/^    readonly INVALID_INDEX: 0xFFFFFFFF;$/;"	v
readonly	tsvscode.ts	/^    readonly INVALID_OPERATION: 0x0502;$/;"	v
readonly	tsvscode.ts	/^    readonly INVALID_VALUE: 0x0501;$/;"	v
readonly	tsvscode.ts	/^    readonly INVERT: 0x150A;$/;"	v
readonly	tsvscode.ts	/^    readonly KEEP: 0x1E00;$/;"	v
readonly	tsvscode.ts	/^    readonly LENGTHADJUST_UNKNOWN: 0;$/;"	v
readonly	tsvscode.ts	/^    readonly LEQUAL: 0x0203;$/;"	v
readonly	tsvscode.ts	/^    readonly LESS: 0x0201;$/;"	v
readonly	tsvscode.ts	/^    readonly LINEAR: 0x2601;$/;"	v
readonly	tsvscode.ts	/^    readonly LINEAR_MIPMAP_LINEAR: 0x2703;$/;"	v
readonly	tsvscode.ts	/^    readonly LINEAR_MIPMAP_NEAREST: 0x2701;$/;"	v
readonly	tsvscode.ts	/^    readonly LINES: 0x0001;$/;"	v
readonly	tsvscode.ts	/^    readonly LINE_LOOP: 0x0002;$/;"	v
readonly	tsvscode.ts	/^    readonly LINE_STRIP: 0x0003;$/;"	v
readonly	tsvscode.ts	/^    readonly LINE_WIDTH: 0x0B21;$/;"	v
readonly	tsvscode.ts	/^    readonly LINK_STATUS: 0x8B82;$/;"	v
readonly	tsvscode.ts	/^    readonly LOW_FLOAT: 0x8DF0;$/;"	v
readonly	tsvscode.ts	/^    readonly LOW_INT: 0x8DF3;$/;"	v
readonly	tsvscode.ts	/^    readonly LUMINANCE: 0x1909;$/;"	v
readonly	tsvscode.ts	/^    readonly LUMINANCE_ALPHA: 0x190A;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX: 0x8008;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_3D_TEXTURE_SIZE: 0x8073;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_ARRAY_TEXTURE_LAYERS: 0x88FF;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_COLOR_ATTACHMENTS: 0x8CDF;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: 0x8A33;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS: 0x8B4D;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_COMBINED_UNIFORM_BLOCKS: 0x8A2E;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: 0x8A31;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_CUBE_MAP_TEXTURE_SIZE: 0x851C;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_DRAW_BUFFERS: 0x8824;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_ELEMENTS_INDICES: 0x80E9;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_ELEMENTS_VERTICES: 0x80E8;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_ELEMENT_INDEX: 0x8D6B;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_FRAGMENT_INPUT_COMPONENTS: 0x9125;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_FRAGMENT_UNIFORM_BLOCKS: 0x8A2D;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_FRAGMENT_UNIFORM_COMPONENTS: 0x8B49;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_FRAGMENT_UNIFORM_VECTORS: 0x8DFD;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_PROGRAM_TEXEL_OFFSET: 0x8905;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_RENDERBUFFER_SIZE: 0x84E8;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_SAMPLES: 0x8D57;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_SERVER_WAIT_TIMEOUT: 0x9111;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_TEXTURE_IMAGE_UNITS: 0x8872;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_TEXTURE_LOD_BIAS: 0x84FD;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_TEXTURE_SIZE: 0x0D33;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: 0x8C8A;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: 0x8C8B;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: 0x8C80;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_UNIFORM_BLOCK_SIZE: 0x8A30;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_UNIFORM_BUFFER_BINDINGS: 0x8A2F;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_VARYING_COMPONENTS: 0x8B4B;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_VARYING_VECTORS: 0x8DFC;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_VERTEX_ATTRIBS: 0x8869;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_VERTEX_OUTPUT_COMPONENTS: 0x9122;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS: 0x8B4C;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_VERTEX_UNIFORM_BLOCKS: 0x8A2B;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_VERTEX_UNIFORM_COMPONENTS: 0x8B4A;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_VERTEX_UNIFORM_VECTORS: 0x8DFB;$/;"	v
readonly	tsvscode.ts	/^    readonly MAX_VIEWPORT_DIMS: 0x0D3A;$/;"	v
readonly	tsvscode.ts	/^    readonly MEDIA_ERR_ABORTED: 1;$/;"	v
readonly	tsvscode.ts	/^    readonly MEDIUM_FLOAT: 0x8DF1;$/;"	v
readonly	tsvscode.ts	/^    readonly MEDIUM_INT: 0x8DF4;$/;"	v
readonly	tsvscode.ts	/^    readonly MIN: 0x8007;$/;"	v
readonly	tsvscode.ts	/^    readonly MIN_PROGRAM_TEXEL_OFFSET: 0x8904;$/;"	v
readonly	tsvscode.ts	/^    readonly MIRRORED_REPEAT: 0x8370;$/;"	v
readonly	tsvscode.ts	/^    readonly MODIFICATION: 1;$/;"	v
readonly	tsvscode.ts	/^    readonly NEAREST: 0x2600;$/;"	v
readonly	tsvscode.ts	/^    readonly NEAREST_MIPMAP_LINEAR: 0x2702;$/;"	v
readonly	tsvscode.ts	/^    readonly NEAREST_MIPMAP_NEAREST: 0x2700;$/;"	v
readonly	tsvscode.ts	/^    readonly NETWORK_EMPTY: 0;$/;"	v
readonly	tsvscode.ts	/^    readonly NEVER: 0x0200;$/;"	v
readonly	tsvscode.ts	/^    readonly NICEST: 0x1102;$/;"	v
readonly	tsvscode.ts	/^    readonly NONE: 0;$/;"	v
readonly	tsvscode.ts	/^    readonly NOTEQUAL: 0x0205;$/;"	v
readonly	tsvscode.ts	/^    readonly NO_ERROR: 0;$/;"	v
readonly	tsvscode.ts	/^    readonly OBJECT_TYPE: 0x9112;$/;"	v
readonly	tsvscode.ts	/^    readonly ONE_MINUS_CONSTANT_ALPHA: 0x8004;$/;"	v
readonly	tsvscode.ts	/^    readonly ONE_MINUS_CONSTANT_COLOR: 0x8002;$/;"	v
readonly	tsvscode.ts	/^    readonly ONE_MINUS_DST_ALPHA: 0x0305;$/;"	v
readonly	tsvscode.ts	/^    readonly ONE_MINUS_DST_COLOR: 0x0307;$/;"	v
readonly	tsvscode.ts	/^    readonly ONE_MINUS_SRC_ALPHA: 0x0303;$/;"	v
readonly	tsvscode.ts	/^    readonly ONE_MINUS_SRC_COLOR: 0x0301;$/;"	v
readonly	tsvscode.ts	/^    readonly OUT_OF_MEMORY: 0x0505;$/;"	v
readonly	tsvscode.ts	/^    readonly PACK_ALIGNMENT: 0x0D05;$/;"	v
readonly	tsvscode.ts	/^    readonly PACK_ROW_LENGTH: 0x0D02;$/;"	v
readonly	tsvscode.ts	/^    readonly PACK_SKIP_PIXELS: 0x0D04;$/;"	v
readonly	tsvscode.ts	/^    readonly PACK_SKIP_ROWS: 0x0D03;$/;"	v
readonly	tsvscode.ts	/^    readonly PERMISSION_DENIED: 1;$/;"	v
readonly	tsvscode.ts	/^    readonly PIXEL_PACK_BUFFER: 0x88EB;$/;"	v
readonly	tsvscode.ts	/^    readonly PIXEL_PACK_BUFFER_BINDING: 0x88ED;$/;"	v
readonly	tsvscode.ts	/^    readonly PIXEL_UNPACK_BUFFER: 0x88EC;$/;"	v
readonly	tsvscode.ts	/^    readonly PIXEL_UNPACK_BUFFER_BINDING: 0x88EF;$/;"	v
readonly	tsvscode.ts	/^    readonly POINTS: 0x0000;$/;"	v
readonly	tsvscode.ts	/^    readonly POLYGON_OFFSET_FACTOR: 0x8038;$/;"	v
readonly	tsvscode.ts	/^    readonly POLYGON_OFFSET_FILL: 0x8037;$/;"	v
readonly	tsvscode.ts	/^    readonly POLYGON_OFFSET_UNITS: 0x2A00;$/;"	v
readonly	tsvscode.ts	/^    readonly QUERY_RESULT: 0x8866;$/;"	v
readonly	tsvscode.ts	/^    readonly QUERY_RESULT_AVAILABLE: 0x8867;$/;"	v
readonly	tsvscode.ts	/^    readonly R11F_G11F_B10F: 0x8C3A;$/;"	v
readonly	tsvscode.ts	/^    readonly R16F: 0x822D;$/;"	v
readonly	tsvscode.ts	/^    readonly R16I: 0x8233;$/;"	v
readonly	tsvscode.ts	/^    readonly R16UI: 0x8234;$/;"	v
readonly	tsvscode.ts	/^    readonly R32F: 0x822E;$/;"	v
readonly	tsvscode.ts	/^    readonly R32I: 0x8235;$/;"	v
readonly	tsvscode.ts	/^    readonly R32UI: 0x8236;$/;"	v
readonly	tsvscode.ts	/^    readonly R8: 0x8229;$/;"	v
readonly	tsvscode.ts	/^    readonly R8I: 0x8231;$/;"	v
readonly	tsvscode.ts	/^    readonly R8UI: 0x8232;$/;"	v
readonly	tsvscode.ts	/^    readonly R8_SNORM: 0x8F94;$/;"	v
readonly	tsvscode.ts	/^    readonly RASTERIZER_DISCARD: 0x8C89;$/;"	v
readonly	tsvscode.ts	/^    readonly READ_BUFFER: 0x0C02;$/;"	v
readonly	tsvscode.ts	/^    readonly READ_FRAMEBUFFER: 0x8CA8;$/;"	v
readonly	tsvscode.ts	/^    readonly READ_FRAMEBUFFER_BINDING: 0x8CAA;$/;"	v
readonly	tsvscode.ts	/^    readonly RED: 0x1903;$/;"	v
readonly	tsvscode.ts	/^    readonly RED_BITS: 0x0D52;$/;"	v
readonly	tsvscode.ts	/^    readonly RED_INTEGER: 0x8D94;$/;"	v
readonly	tsvscode.ts	/^    readonly RENDERBUFFER: 0x8D41;$/;"	v
readonly	tsvscode.ts	/^    readonly RENDERBUFFER_ALPHA_SIZE: 0x8D53;$/;"	v
readonly	tsvscode.ts	/^    readonly RENDERBUFFER_BINDING: 0x8CA7;$/;"	v
readonly	tsvscode.ts	/^    readonly RENDERBUFFER_BLUE_SIZE: 0x8D52;$/;"	v
readonly	tsvscode.ts	/^    readonly RENDERBUFFER_DEPTH_SIZE: 0x8D54;$/;"	v
readonly	tsvscode.ts	/^    readonly RENDERBUFFER_GREEN_SIZE: 0x8D51;$/;"	v
readonly	tsvscode.ts	/^    readonly RENDERBUFFER_HEIGHT: 0x8D43;$/;"	v
readonly	tsvscode.ts	/^    readonly RENDERBUFFER_INTERNAL_FORMAT: 0x8D44;$/;"	v
readonly	tsvscode.ts	/^    readonly RENDERBUFFER_RED_SIZE: 0x8D50;$/;"	v
readonly	tsvscode.ts	/^    readonly RENDERBUFFER_SAMPLES: 0x8CAB;$/;"	v
readonly	tsvscode.ts	/^    readonly RENDERBUFFER_STENCIL_SIZE: 0x8D55;$/;"	v
readonly	tsvscode.ts	/^    readonly RENDERBUFFER_WIDTH: 0x8D42;$/;"	v
readonly	tsvscode.ts	/^    readonly RENDERER: 0x1F01;$/;"	v
readonly	tsvscode.ts	/^    readonly REPEAT: 0x2901;$/;"	v
readonly	tsvscode.ts	/^    readonly REPLACE: 0x1E01;$/;"	v
readonly	tsvscode.ts	/^    readonly RG16F: 0x822F;$/;"	v
readonly	tsvscode.ts	/^    readonly RG16I: 0x8239;$/;"	v
readonly	tsvscode.ts	/^    readonly RG16UI: 0x823A;$/;"	v
readonly	tsvscode.ts	/^    readonly RG32F: 0x8230;$/;"	v
readonly	tsvscode.ts	/^    readonly RG32I: 0x823B;$/;"	v
readonly	tsvscode.ts	/^    readonly RG32UI: 0x823C;$/;"	v
readonly	tsvscode.ts	/^    readonly RG8: 0x822B;$/;"	v
readonly	tsvscode.ts	/^    readonly RG8I: 0x8237;$/;"	v
readonly	tsvscode.ts	/^    readonly RG8UI: 0x8238;$/;"	v
readonly	tsvscode.ts	/^    readonly RG8_SNORM: 0x8F95;$/;"	v
readonly	tsvscode.ts	/^    readonly RG: 0x8227;$/;"	v
readonly	tsvscode.ts	/^    readonly RGB10_A2: 0x8059;$/;"	v
readonly	tsvscode.ts	/^    readonly RGB10_A2UI: 0x906F;$/;"	v
readonly	tsvscode.ts	/^    readonly RGB16F: 0x881B;$/;"	v
readonly	tsvscode.ts	/^    readonly RGB16I: 0x8D89;$/;"	v
readonly	tsvscode.ts	/^    readonly RGB16UI: 0x8D77;$/;"	v
readonly	tsvscode.ts	/^    readonly RGB32F: 0x8815;$/;"	v
readonly	tsvscode.ts	/^    readonly RGB32I: 0x8D83;$/;"	v
readonly	tsvscode.ts	/^    readonly RGB32UI: 0x8D71;$/;"	v
readonly	tsvscode.ts	/^    readonly RGB565: 0x8D62;$/;"	v
readonly	tsvscode.ts	/^    readonly RGB5_A1: 0x8057;$/;"	v
readonly	tsvscode.ts	/^    readonly RGB8: 0x8051;$/;"	v
readonly	tsvscode.ts	/^    readonly RGB8I: 0x8D8F;$/;"	v
readonly	tsvscode.ts	/^    readonly RGB8UI: 0x8D7D;$/;"	v
readonly	tsvscode.ts	/^    readonly RGB8_SNORM: 0x8F96;$/;"	v
readonly	tsvscode.ts	/^    readonly RGB9_E5: 0x8C3D;$/;"	v
readonly	tsvscode.ts	/^    readonly RGB: 0x1907;$/;"	v
readonly	tsvscode.ts	/^    readonly RGBA16F: 0x881A;$/;"	v
readonly	tsvscode.ts	/^    readonly RGBA16I: 0x8D88;$/;"	v
readonly	tsvscode.ts	/^    readonly RGBA16UI: 0x8D76;$/;"	v
readonly	tsvscode.ts	/^    readonly RGBA32F: 0x8814;$/;"	v
readonly	tsvscode.ts	/^    readonly RGBA32I: 0x8D82;$/;"	v
readonly	tsvscode.ts	/^    readonly RGBA32UI: 0x8D70;$/;"	v
readonly	tsvscode.ts	/^    readonly RGBA4: 0x8056;$/;"	v
readonly	tsvscode.ts	/^    readonly RGBA8: 0x8058;$/;"	v
readonly	tsvscode.ts	/^    readonly RGBA8I: 0x8D8E;$/;"	v
readonly	tsvscode.ts	/^    readonly RGBA8UI: 0x8D7C;$/;"	v
readonly	tsvscode.ts	/^    readonly RGBA8_SNORM: 0x8F97;$/;"	v
readonly	tsvscode.ts	/^    readonly RGBA: 0x1908;$/;"	v
readonly	tsvscode.ts	/^    readonly RGBA_INTEGER: 0x8D99;$/;"	v
readonly	tsvscode.ts	/^    readonly RGB_INTEGER: 0x8D98;$/;"	v
readonly	tsvscode.ts	/^    readonly RG_INTEGER: 0x8228;$/;"	v
readonly	tsvscode.ts	/^    readonly SAMPLER_2D: 0x8B5E;$/;"	v
readonly	tsvscode.ts	/^    readonly SAMPLER_2D_ARRAY: 0x8DC1;$/;"	v
readonly	tsvscode.ts	/^    readonly SAMPLER_2D_ARRAY_SHADOW: 0x8DC4;$/;"	v
readonly	tsvscode.ts	/^    readonly SAMPLER_2D_SHADOW: 0x8B62;$/;"	v
readonly	tsvscode.ts	/^    readonly SAMPLER_3D: 0x8B5F;$/;"	v
readonly	tsvscode.ts	/^    readonly SAMPLER_BINDING: 0x8919;$/;"	v
readonly	tsvscode.ts	/^    readonly SAMPLER_CUBE: 0x8B60;$/;"	v
readonly	tsvscode.ts	/^    readonly SAMPLER_CUBE_SHADOW: 0x8DC5;$/;"	v
readonly	tsvscode.ts	/^    readonly SAMPLES: 0x80A9;$/;"	v
readonly	tsvscode.ts	/^    readonly SAMPLE_ALPHA_TO_COVERAGE: 0x809E;$/;"	v
readonly	tsvscode.ts	/^    readonly SAMPLE_BUFFERS: 0x80A8;$/;"	v
readonly	tsvscode.ts	/^    readonly SAMPLE_COVERAGE: 0x80A0;$/;"	v
readonly	tsvscode.ts	/^    readonly SAMPLE_COVERAGE_INVERT: 0x80AB;$/;"	v
readonly	tsvscode.ts	/^    readonly SAMPLE_COVERAGE_VALUE: 0x80AA;$/;"	v
readonly	tsvscode.ts	/^    readonly SCISSOR_BOX: 0x0C10;$/;"	v
readonly	tsvscode.ts	/^    readonly SCISSOR_TEST: 0x0C11;$/;"	v
readonly	tsvscode.ts	/^    readonly SEPARATE_ATTRIBS: 0x8C8D;$/;"	v
readonly	tsvscode.ts	/^    readonly SHADER_TYPE: 0x8B4F;$/;"	v
readonly	tsvscode.ts	/^    readonly SHADING_LANGUAGE_VERSION: 0x8B8C;$/;"	v
readonly	tsvscode.ts	/^    readonly SHORT: 0x1402;$/;"	v
readonly	tsvscode.ts	/^    readonly SHOW_ATTRIBUTE: 0x2;$/;"	v
readonly	tsvscode.ts	/^    readonly SHOW_CDATA_SECTION: 0x8;$/;"	v
readonly	tsvscode.ts	/^    readonly SHOW_COMMENT: 0x80;$/;"	v
readonly	tsvscode.ts	/^    readonly SHOW_DOCUMENT: 0x100;$/;"	v
readonly	tsvscode.ts	/^    readonly SHOW_DOCUMENT_FRAGMENT: 0x400;$/;"	v
readonly	tsvscode.ts	/^    readonly SHOW_DOCUMENT_TYPE: 0x200;$/;"	v
readonly	tsvscode.ts	/^    readonly SHOW_ELEMENT: 0x1;$/;"	v
readonly	tsvscode.ts	/^    readonly SHOW_ENTITY: 0x20;$/;"	v
readonly	tsvscode.ts	/^    readonly SHOW_ENTITY_REFERENCE: 0x10;$/;"	v
readonly	tsvscode.ts	/^    readonly SHOW_NOTATION: 0x800;$/;"	v
readonly	tsvscode.ts	/^    readonly SHOW_PROCESSING_INSTRUCTION: 0x40;$/;"	v
readonly	tsvscode.ts	/^    readonly SHOW_TEXT: 0x4;$/;"	v
readonly	tsvscode.ts	/^    readonly SIGNALED: 0x9119;$/;"	v
readonly	tsvscode.ts	/^    readonly SIGNED_NORMALIZED: 0x8F9C;$/;"	v
readonly	tsvscode.ts	/^    readonly SRC_ALPHA: 0x0302;$/;"	v
readonly	tsvscode.ts	/^    readonly SRC_ALPHA_SATURATE: 0x0308;$/;"	v
readonly	tsvscode.ts	/^    readonly SRGB8: 0x8C41;$/;"	v
readonly	tsvscode.ts	/^    readonly SRGB8_ALPHA8: 0x8C43;$/;"	v
readonly	tsvscode.ts	/^    readonly SRGB: 0x8C40;$/;"	v
readonly	tsvscode.ts	/^    readonly START_TO_START: 0;$/;"	v
readonly	tsvscode.ts	/^    readonly STATIC_COPY: 0x88E6;$/;"	v
readonly	tsvscode.ts	/^    readonly STATIC_DRAW: 0x88E4;$/;"	v
readonly	tsvscode.ts	/^    readonly STATIC_READ: 0x88E5;$/;"	v
readonly	tsvscode.ts	/^    readonly STENCIL: 0x1802;$/;"	v
readonly	tsvscode.ts	/^    readonly STENCIL_ATTACHMENT: 0x8D20;$/;"	v
readonly	tsvscode.ts	/^    readonly STENCIL_BACK_FAIL: 0x8801;$/;"	v
readonly	tsvscode.ts	/^    readonly STENCIL_BACK_FUNC: 0x8800;$/;"	v
readonly	tsvscode.ts	/^    readonly STENCIL_BACK_PASS_DEPTH_FAIL: 0x8802;$/;"	v
readonly	tsvscode.ts	/^    readonly STENCIL_BACK_PASS_DEPTH_PASS: 0x8803;$/;"	v
readonly	tsvscode.ts	/^    readonly STENCIL_BACK_REF: 0x8CA3;$/;"	v
readonly	tsvscode.ts	/^    readonly STENCIL_BACK_VALUE_MASK: 0x8CA4;$/;"	v
readonly	tsvscode.ts	/^    readonly STENCIL_BACK_WRITEMASK: 0x8CA5;$/;"	v
readonly	tsvscode.ts	/^    readonly STENCIL_BITS: 0x0D57;$/;"	v
readonly	tsvscode.ts	/^    readonly STENCIL_BUFFER_BIT: 0x00000400;$/;"	v
readonly	tsvscode.ts	/^    readonly STENCIL_CLEAR_VALUE: 0x0B91;$/;"	v
readonly	tsvscode.ts	/^    readonly STENCIL_FAIL: 0x0B94;$/;"	v
readonly	tsvscode.ts	/^    readonly STENCIL_FUNC: 0x0B92;$/;"	v
readonly	tsvscode.ts	/^    readonly STENCIL_INDEX8: 0x8D48;$/;"	v
readonly	tsvscode.ts	/^    readonly STENCIL_PASS_DEPTH_FAIL: 0x0B95;$/;"	v
readonly	tsvscode.ts	/^    readonly STENCIL_PASS_DEPTH_PASS: 0x0B96;$/;"	v
readonly	tsvscode.ts	/^    readonly STENCIL_REF: 0x0B97;$/;"	v
readonly	tsvscode.ts	/^    readonly STENCIL_TEST: 0x0B90;$/;"	v
readonly	tsvscode.ts	/^    readonly STENCIL_VALUE_MASK: 0x0B93;$/;"	v
readonly	tsvscode.ts	/^    readonly STENCIL_WRITEMASK: 0x0B98;$/;"	v
readonly	tsvscode.ts	/^    readonly STREAM_COPY: 0x88E2;$/;"	v
readonly	tsvscode.ts	/^    readonly STREAM_DRAW: 0x88E0;$/;"	v
readonly	tsvscode.ts	/^    readonly STREAM_READ: 0x88E1;$/;"	v
readonly	tsvscode.ts	/^    readonly STYLE_RULE: 1;$/;"	v
readonly	tsvscode.ts	/^    readonly SUBPIXEL_BITS: 0x0D50;$/;"	v
readonly	tsvscode.ts	/^    readonly SVG_ANGLETYPE_UNKNOWN: 0;$/;"	v
readonly	tsvscode.ts	/^    readonly SVG_CHANNEL_UNKNOWN: 0;$/;"	v
readonly	tsvscode.ts	/^    readonly SVG_EDGEMODE_UNKNOWN: 0;$/;"	v
readonly	tsvscode.ts	/^    readonly SVG_FEBLEND_MODE_UNKNOWN: 0;$/;"	v
readonly	tsvscode.ts	/^    readonly SVG_FECOLORMATRIX_TYPE_UNKNOWN: 0;$/;"	v
readonly	tsvscode.ts	/^    readonly SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN: 0;$/;"	v
readonly	tsvscode.ts	/^    readonly SVG_FECOMPOSITE_OPERATOR_UNKNOWN: 0;$/;"	v
readonly	tsvscode.ts	/^    readonly SVG_LENGTHTYPE_UNKNOWN: 0;$/;"	v
readonly	tsvscode.ts	/^    readonly SVG_MARKERUNITS_UNKNOWN: 0;$/;"	v
readonly	tsvscode.ts	/^    readonly SVG_MORPHOLOGY_OPERATOR_UNKNOWN: 0;$/;"	v
readonly	tsvscode.ts	/^    readonly SVG_PRESERVEASPECTRATIO_UNKNOWN: 0;$/;"	v
readonly	tsvscode.ts	/^    readonly SVG_SPREADMETHOD_UNKNOWN: 0;$/;"	v
readonly	tsvscode.ts	/^    readonly SVG_TRANSFORM_UNKNOWN: 0;$/;"	v
readonly	tsvscode.ts	/^    readonly SVG_TURBULENCE_TYPE_UNKNOWN: 0;$/;"	v
readonly	tsvscode.ts	/^    readonly SVG_UNIT_TYPE_UNKNOWN: 0;$/;"	v
readonly	tsvscode.ts	/^    readonly SYNC_CONDITION: 0x9113;$/;"	v
readonly	tsvscode.ts	/^    readonly SYNC_FENCE: 0x9116;$/;"	v
readonly	tsvscode.ts	/^    readonly SYNC_FLAGS: 0x9115;$/;"	v
readonly	tsvscode.ts	/^    readonly SYNC_FLUSH_COMMANDS_BIT: 0x00000001;$/;"	v
readonly	tsvscode.ts	/^    readonly SYNC_GPU_COMMANDS_COMPLETE: 0x9117;$/;"	v
readonly	tsvscode.ts	/^    readonly SYNC_STATUS: 0x9114;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTPATH_METHODTYPE_UNKNOWN: 0;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE0: 0x84C0;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE10: 0x84CA;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE11: 0x84CB;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE12: 0x84CC;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE13: 0x84CD;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE14: 0x84CE;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE15: 0x84CF;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE16: 0x84D0;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE17: 0x84D1;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE18: 0x84D2;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE19: 0x84D3;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE1: 0x84C1;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE20: 0x84D4;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE21: 0x84D5;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE22: 0x84D6;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE23: 0x84D7;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE24: 0x84D8;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE25: 0x84D9;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE26: 0x84DA;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE27: 0x84DB;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE28: 0x84DC;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE29: 0x84DD;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE2: 0x84C2;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE30: 0x84DE;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE31: 0x84DF;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE3: 0x84C3;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE4: 0x84C4;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE5: 0x84C5;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE6: 0x84C6;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE7: 0x84C7;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE8: 0x84C8;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE9: 0x84C9;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE: 0x1702;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE_2D: 0x0DE1;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE_2D_ARRAY: 0x8C1A;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE_3D: 0x806F;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE_BASE_LEVEL: 0x813C;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE_BINDING_2D: 0x8069;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE_BINDING_2D_ARRAY: 0x8C1D;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE_BINDING_3D: 0x806A;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE_BINDING_CUBE_MAP: 0x8514;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE_COMPARE_FUNC: 0x884D;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE_COMPARE_MODE: 0x884C;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE_CUBE_MAP: 0x8513;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE_CUBE_MAP_NEGATIVE_X: 0x8516;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE_CUBE_MAP_NEGATIVE_Y: 0x8518;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE_CUBE_MAP_NEGATIVE_Z: 0x851A;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE_CUBE_MAP_POSITIVE_X: 0x8515;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE_CUBE_MAP_POSITIVE_Y: 0x8517;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE_CUBE_MAP_POSITIVE_Z: 0x8519;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE_IMMUTABLE_FORMAT: 0x912F;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE_IMMUTABLE_LEVELS: 0x82DF;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE_MAG_FILTER: 0x2800;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE_MAX_LEVEL: 0x813D;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE_MAX_LOD: 0x813B;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE_MIN_FILTER: 0x2801;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE_MIN_LOD: 0x813A;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE_WRAP_R: 0x8072;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE_WRAP_S: 0x2802;$/;"	v
readonly	tsvscode.ts	/^    readonly TEXTURE_WRAP_T: 0x2803;$/;"	v
readonly	tsvscode.ts	/^    readonly TIMEOUT_EXPIRED: 0x911B;$/;"	v
readonly	tsvscode.ts	/^    readonly TIMEOUT_IGNORED: -1;$/;"	v
readonly	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK: 0x8E22;$/;"	v
readonly	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_ACTIVE: 0x8E24;$/;"	v
readonly	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_BINDING: 0x8E25;$/;"	v
readonly	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_BUFFER: 0x8C8E;$/;"	v
readonly	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_BUFFER_BINDING: 0x8C8F;$/;"	v
readonly	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_BUFFER_MODE: 0x8C7F;$/;"	v
readonly	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_BUFFER_SIZE: 0x8C85;$/;"	v
readonly	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_BUFFER_START: 0x8C84;$/;"	v
readonly	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_PAUSED: 0x8E23;$/;"	v
readonly	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: 0x8C88;$/;"	v
readonly	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_VARYINGS: 0x8C83;$/;"	v
readonly	tsvscode.ts	/^    readonly TRIANGLES: 0x0004;$/;"	v
readonly	tsvscode.ts	/^    readonly TRIANGLE_FAN: 0x0006;$/;"	v
readonly	tsvscode.ts	/^    readonly TRIANGLE_STRIP: 0x0005;$/;"	v
readonly	tsvscode.ts	/^    readonly TYPE_NAVIGATE: 0;$/;"	v
readonly	tsvscode.ts	/^    readonly UNIFORM_ARRAY_STRIDE: 0x8A3C;$/;"	v
readonly	tsvscode.ts	/^    readonly UNIFORM_BLOCK_ACTIVE_UNIFORMS: 0x8A42;$/;"	v
readonly	tsvscode.ts	/^    readonly UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: 0x8A43;$/;"	v
readonly	tsvscode.ts	/^    readonly UNIFORM_BLOCK_BINDING: 0x8A3F;$/;"	v
readonly	tsvscode.ts	/^    readonly UNIFORM_BLOCK_DATA_SIZE: 0x8A40;$/;"	v
readonly	tsvscode.ts	/^    readonly UNIFORM_BLOCK_INDEX: 0x8A3A;$/;"	v
readonly	tsvscode.ts	/^    readonly UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: 0x8A46;$/;"	v
readonly	tsvscode.ts	/^    readonly UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: 0x8A44;$/;"	v
readonly	tsvscode.ts	/^    readonly UNIFORM_BUFFER: 0x8A11;$/;"	v
readonly	tsvscode.ts	/^    readonly UNIFORM_BUFFER_BINDING: 0x8A28;$/;"	v
readonly	tsvscode.ts	/^    readonly UNIFORM_BUFFER_OFFSET_ALIGNMENT: 0x8A34;$/;"	v
readonly	tsvscode.ts	/^    readonly UNIFORM_BUFFER_SIZE: 0x8A2A;$/;"	v
readonly	tsvscode.ts	/^    readonly UNIFORM_BUFFER_START: 0x8A29;$/;"	v
readonly	tsvscode.ts	/^    readonly UNIFORM_IS_ROW_MAJOR: 0x8A3E;$/;"	v
readonly	tsvscode.ts	/^    readonly UNIFORM_MATRIX_STRIDE: 0x8A3D;$/;"	v
readonly	tsvscode.ts	/^    readonly UNIFORM_OFFSET: 0x8A3B;$/;"	v
readonly	tsvscode.ts	/^    readonly UNIFORM_SIZE: 0x8A38;$/;"	v
readonly	tsvscode.ts	/^    readonly UNIFORM_TYPE: 0x8A37;$/;"	v
readonly	tsvscode.ts	/^    readonly UNPACK_ALIGNMENT: 0x0CF5;$/;"	v
readonly	tsvscode.ts	/^    readonly UNPACK_COLORSPACE_CONVERSION_WEBGL: 0x9243;$/;"	v
readonly	tsvscode.ts	/^    readonly UNPACK_FLIP_Y_WEBGL: 0x9240;$/;"	v
readonly	tsvscode.ts	/^    readonly UNPACK_IMAGE_HEIGHT: 0x806E;$/;"	v
readonly	tsvscode.ts	/^    readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL: 0x9241;$/;"	v
readonly	tsvscode.ts	/^    readonly UNPACK_ROW_LENGTH: 0x0CF2;$/;"	v
readonly	tsvscode.ts	/^    readonly UNPACK_SKIP_IMAGES: 0x806D;$/;"	v
readonly	tsvscode.ts	/^    readonly UNPACK_SKIP_PIXELS: 0x0CF4;$/;"	v
readonly	tsvscode.ts	/^    readonly UNPACK_SKIP_ROWS: 0x0CF3;$/;"	v
readonly	tsvscode.ts	/^    readonly UNSENT: 0;$/;"	v
readonly	tsvscode.ts	/^    readonly UNSIGNALED: 0x9118;$/;"	v
readonly	tsvscode.ts	/^    readonly UNSIGNED_BYTE: 0x1401;$/;"	v
readonly	tsvscode.ts	/^    readonly UNSIGNED_INT: 0x1405;$/;"	v
readonly	tsvscode.ts	/^    readonly UNSIGNED_INT_10F_11F_11F_REV: 0x8C3B;$/;"	v
readonly	tsvscode.ts	/^    readonly UNSIGNED_INT_24_8: 0x84FA;$/;"	v
readonly	tsvscode.ts	/^    readonly UNSIGNED_INT_2_10_10_10_REV: 0x8368;$/;"	v
readonly	tsvscode.ts	/^    readonly UNSIGNED_INT_5_9_9_9_REV: 0x8C3E;$/;"	v
readonly	tsvscode.ts	/^    readonly UNSIGNED_INT_SAMPLER_2D: 0x8DD2;$/;"	v
readonly	tsvscode.ts	/^    readonly UNSIGNED_INT_SAMPLER_2D_ARRAY: 0x8DD7;$/;"	v
readonly	tsvscode.ts	/^    readonly UNSIGNED_INT_SAMPLER_3D: 0x8DD3;$/;"	v
readonly	tsvscode.ts	/^    readonly UNSIGNED_INT_SAMPLER_CUBE: 0x8DD4;$/;"	v
readonly	tsvscode.ts	/^    readonly UNSIGNED_INT_VEC2: 0x8DC6;$/;"	v
readonly	tsvscode.ts	/^    readonly UNSIGNED_INT_VEC3: 0x8DC7;$/;"	v
readonly	tsvscode.ts	/^    readonly UNSIGNED_INT_VEC4: 0x8DC8;$/;"	v
readonly	tsvscode.ts	/^    readonly UNSIGNED_NORMALIZED: 0x8C17;$/;"	v
readonly	tsvscode.ts	/^    readonly UNSIGNED_SHORT: 0x1403;$/;"	v
readonly	tsvscode.ts	/^    readonly UNSIGNED_SHORT_4_4_4_4: 0x8033;$/;"	v
readonly	tsvscode.ts	/^    readonly UNSIGNED_SHORT_5_5_5_1: 0x8034;$/;"	v
readonly	tsvscode.ts	/^    readonly UNSIGNED_SHORT_5_6_5: 0x8363;$/;"	v
readonly	tsvscode.ts	/^    readonly VALIDATE_STATUS: 0x8B83;$/;"	v
readonly	tsvscode.ts	/^    readonly VENDOR: 0x1F00;$/;"	v
readonly	tsvscode.ts	/^    readonly VERSION: 0x1F02;$/;"	v
readonly	tsvscode.ts	/^    readonly VERTEX_ARRAY_BINDING: 0x85B5;$/;"	v
readonly	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: 0x889F;$/;"	v
readonly	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_DIVISOR: 0x88FE;$/;"	v
readonly	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_ENABLED: 0x8622;$/;"	v
readonly	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_INTEGER: 0x88FD;$/;"	v
readonly	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_NORMALIZED: 0x886A;$/;"	v
readonly	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_POINTER: 0x8645;$/;"	v
readonly	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_SIZE: 0x8623;$/;"	v
readonly	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_STRIDE: 0x8624;$/;"	v
readonly	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_TYPE: 0x8625;$/;"	v
readonly	tsvscode.ts	/^    readonly VERTEX_SHADER: 0x8B31;$/;"	v
readonly	tsvscode.ts	/^    readonly VIEWPORT: 0x0BA2;$/;"	v
readonly	tsvscode.ts	/^    readonly WAIT_FAILED: 0x911D;$/;"	v
readonly	tsvscode.ts	/^    readonly ZERO: 0;$/;"	v
readonly	tsvscode.ts	/^    readonly permission: NotificationPermission;$/;"	v
readonly	tsvscode.ts	/^    readonly supportedContentEncodings: ReadonlyArray<string>;$/;"	v
readonly	tsvscode.ts	/^    readonly supportedEntryTypes: ReadonlyArray<string>;$/;"	v
ready	tsvscode.ts	/^    readonly ready: Promise<Animation>;$/;"	p	interface:Animation
ready	tsvscode.ts	/^    readonly ready: Promise<FontFaceSet>;$/;"	p	interface:FontFaceSet
ready	tsvscode.ts	/^    readonly ready: Promise<ServiceWorkerRegistration>;$/;"	p	interface:ServiceWorkerContainer
ready	tsvscode.ts	/^    readonly ready: Promise<undefined>;$/;"	p	interface:WebTransport
ready	tsvscode.ts	/^    readonly ready: Promise<undefined>;$/;"	p	interface:WritableStreamDefaultWriter
readyState	tsvscode.ts	/^    readonly readyState: DocumentReadyState;$/;"	p	interface:Document
readyState	tsvscode.ts	/^    readonly readyState: IDBRequestReadyState;$/;"	p	interface:IDBRequest
readyState	tsvscode.ts	/^    readonly readyState: MediaStreamTrackState;$/;"	p	interface:MediaStreamTrack
readyState	tsvscode.ts	/^    readonly readyState: RTCDataChannelState;$/;"	p	interface:RTCDataChannel
readyState	tsvscode.ts	/^    readonly readyState: ReadyState;$/;"	p	interface:MediaSource
readyState	tsvscode.ts	/^    readonly readyState: number;$/;"	p	interface:EventSource
readyState	tsvscode.ts	/^    readonly readyState: number;$/;"	p	interface:HTMLMediaElement
readyState	tsvscode.ts	/^    readonly readyState: number;$/;"	p	interface:HTMLTrackElement
readyState	tsvscode.ts	/^    readonly readyState: number;$/;"	p	interface:WebSocket
readyState	tsvscode.ts	/^    readonly readyState: number;$/;"	p	interface:XMLHttpRequest
readyState	tsvscode.ts	/^    readonly readyState: typeof FileReader.EMPTY | typeof FileReader.LOADING | typeof FileReader/;"	p	interface:FileReader
real	tsvscode.ts	/^    real?: number[] | Float32Array;$/;"	p	interface:PeriodicWaveOptions
reason	tsvscode.ts	/^    readonly reason: any;$/;"	p	interface:AbortSignal
reason	tsvscode.ts	/^    readonly reason: any;$/;"	p	interface:PromiseRejectionEvent
reason	tsvscode.ts	/^    readonly reason: string;$/;"	p	interface:CloseEvent
reason	tsvscode.ts	/^    reason?: any;$/;"	p	interface:PromiseRejectionEventInit
reason	tsvscode.ts	/^    reason?: string;$/;"	p	interface:CloseEventInit
reason	tsvscode.ts	/^    reason?: string;$/;"	p	interface:WebTransportCloseInfo
receiveTime	tsvscode.ts	/^    receiveTime?: DOMHighResTimeStamp;$/;"	p	interface:VideoFrameCallbackMetadata
receivedAlert	tsvscode.ts	/^    readonly receivedAlert: number | null;$/;"	p	interface:RTCError
receivedAlert	tsvscode.ts	/^    receivedAlert?: number;$/;"	p	interface:RTCErrorInit
receiver	tsvscode.ts	/^    readonly receiver: RTCRtpReceiver;$/;"	p	interface:RTCRtpTransceiver
receiver	tsvscode.ts	/^    readonly receiver: RTCRtpReceiver;$/;"	p	interface:RTCTrackEvent
receiver	tsvscode.ts	/^    receiver: RTCRtpReceiver;$/;"	p	interface:RTCTrackEventInit
rect	tsvscode.ts	/^    rect(x: number, y: number, w: number, h: number): void;$/;"	m	interface:CanvasPath
rect	tsvscode.ts	/^    rect?: DOMRectInit;$/;"	p	interface:VideoFrameCopyToOptions
recursive	tsvscode.ts	/^    recursive?: boolean;$/;"	p	interface:FileSystemRemoveOptions
redirect	tsvscode.ts	/^    readonly redirect: RequestRedirect;$/;"	p	interface:Request
redirect	tsvscode.ts	/^    redirect(url: string | URL, status?: number): Response;$/;"	v
redirect	tsvscode.ts	/^    redirect?: RequestRedirect;$/;"	p	interface:RequestInit
redirectCount	tsvscode.ts	/^    readonly redirectCount: number;$/;"	p	interface:PerformanceNavigation
redirectCount	tsvscode.ts	/^    readonly redirectCount: number;$/;"	p	interface:PerformanceNavigationTiming
redirectEnd	tsvscode.ts	/^    readonly redirectEnd: DOMHighResTimeStamp;$/;"	p	interface:PerformanceResourceTiming
redirectEnd	tsvscode.ts	/^    readonly redirectEnd: number;$/;"	p	interface:PerformanceTiming
redirectStart	tsvscode.ts	/^    readonly redirectStart: DOMHighResTimeStamp;$/;"	p	interface:PerformanceResourceTiming
redirectStart	tsvscode.ts	/^    readonly redirectStart: number;$/;"	p	interface:PerformanceTiming
redirected	tsvscode.ts	/^    readonly redirected: boolean;$/;"	p	interface:Response
reduce	ests.ts	/^    reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => /;"	m	interface:Array
reduce	ests.ts	/^    reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: readonly/;"	m	interface:ReadonlyArray
reduce	ests.ts	/^    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array/;"	m	interface:Float32Array
reduce	ests.ts	/^    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array/;"	m	interface:Float64Array
reduce	ests.ts	/^    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array/;"	m	interface:Int16Array
reduce	ests.ts	/^    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array/;"	m	interface:Int32Array
reduce	ests.ts	/^    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array/;"	m	interface:Int8Array
reduce	ests.ts	/^    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array/;"	m	interface:Uint16Array
reduce	ests.ts	/^    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array/;"	m	interface:Uint32Array
reduce	ests.ts	/^    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array/;"	m	interface:Uint8Array
reduce	ests.ts	/^    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array/;"	m	interface:Uint8ClampedArray
reduce	ests.ts	/^    reduce<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) /;"	m	interface:Array
reduce	ests.ts	/^    reduce<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: reado/;"	m	interface:ReadonlyArray
reduce	ests.ts	/^    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: /;"	m	interface:Float32Array
reduce	ests.ts	/^    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: /;"	m	interface:Float64Array
reduce	ests.ts	/^    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: /;"	m	interface:Int16Array
reduce	ests.ts	/^    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: /;"	m	interface:Int32Array
reduce	ests.ts	/^    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: /;"	m	interface:Int8Array
reduce	ests.ts	/^    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: /;"	m	interface:Uint16Array
reduce	ests.ts	/^    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: /;"	m	interface:Uint32Array
reduce	ests.ts	/^    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: /;"	m	interface:Uint8Array
reduce	ests.ts	/^    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: /;"	m	interface:Uint8ClampedArray
reduceRight	ests.ts	/^    reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]/;"	m	interface:Array
reduceRight	ests.ts	/^    reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: rea/;"	m	interface:ReadonlyArray
reduceRight	ests.ts	/^    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, /;"	m	interface:Float32Array
reduceRight	ests.ts	/^    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, /;"	m	interface:Float64Array
reduceRight	ests.ts	/^    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, /;"	m	interface:Int16Array
reduceRight	ests.ts	/^    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, /;"	m	interface:Int32Array
reduceRight	ests.ts	/^    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, /;"	m	interface:Int8Array
reduceRight	ests.ts	/^    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, /;"	m	interface:Uint16Array
reduceRight	ests.ts	/^    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, /;"	m	interface:Uint32Array
reduceRight	ests.ts	/^    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, /;"	m	interface:Uint8Array
reduceRight	ests.ts	/^    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, /;"	m	interface:Uint8ClampedArray
reduceRight	ests.ts	/^    reduceRight<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: /;"	m	interface:Array
reduceRight	ests.ts	/^    reduceRight<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: /;"	m	interface:ReadonlyArray
reduceRight	ests.ts	/^    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, ar/;"	m	interface:Float32Array
reduceRight	ests.ts	/^    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, ar/;"	m	interface:Float64Array
reduceRight	ests.ts	/^    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, ar/;"	m	interface:Int16Array
reduceRight	ests.ts	/^    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, ar/;"	m	interface:Int32Array
reduceRight	ests.ts	/^    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, ar/;"	m	interface:Int8Array
reduceRight	ests.ts	/^    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, ar/;"	m	interface:Uint16Array
reduceRight	ests.ts	/^    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, ar/;"	m	interface:Uint32Array
reduceRight	ests.ts	/^    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, ar/;"	m	interface:Uint8Array
reduceRight	ests.ts	/^    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, ar/;"	m	interface:Uint8ClampedArray
reducedSize	tsvscode.ts	/^    reducedSize?: boolean;$/;"	p	interface:RTCRtcpParameters
reduction	tsvscode.ts	/^    readonly reduction: number;$/;"	p	interface:DynamicsCompressorNode
refDistance	tsvscode.ts	/^    refDistance: number;$/;"	p	interface:PannerNode
refDistance	tsvscode.ts	/^    refDistance?: number;$/;"	p	interface:PannerOptions
refX	tsvscode.ts	/^    readonly refX: SVGAnimatedLength;$/;"	p	interface:SVGMarkerElement
refY	tsvscode.ts	/^    readonly refY: SVGAnimatedLength;$/;"	p	interface:SVGMarkerElement
referenceNode	tsvscode.ts	/^    readonly referenceNode: Node;$/;"	p	interface:NodeIterator
referrer	tsvscode.ts	/^    readonly referrer: string;$/;"	p	interface:Document
referrer	tsvscode.ts	/^    readonly referrer: string;$/;"	p	interface:Request
referrer	tsvscode.ts	/^    readonly referrer: string;$/;"	p	interface:SecurityPolicyViolationEvent
referrer	tsvscode.ts	/^    referrer?: string;$/;"	p	interface:RequestInit
referrer	tsvscode.ts	/^    referrer?: string;$/;"	p	interface:SecurityPolicyViolationEventInit
referrerPolicy	tsvscode.ts	/^    readonly referrerPolicy: ReferrerPolicy;$/;"	p	interface:Request
referrerPolicy	tsvscode.ts	/^    referrerPolicy: ReferrerPolicy;$/;"	p	interface:HTMLIFrameElement
referrerPolicy	tsvscode.ts	/^    referrerPolicy: string;$/;"	p	interface:HTMLAnchorElement
referrerPolicy	tsvscode.ts	/^    referrerPolicy: string;$/;"	p	interface:HTMLAreaElement
referrerPolicy	tsvscode.ts	/^    referrerPolicy: string;$/;"	p	interface:HTMLImageElement
referrerPolicy	tsvscode.ts	/^    referrerPolicy: string;$/;"	p	interface:HTMLLinkElement
referrerPolicy	tsvscode.ts	/^    referrerPolicy: string;$/;"	p	interface:HTMLScriptElement
referrerPolicy	tsvscode.ts	/^    referrerPolicy?: ReferrerPolicy;$/;"	p	interface:RequestInit
refresh	tsvscode.ts	/^    refresh(): void;$/;"	m	interface:PluginArray
region	tsvscode.ts	/^    region: VTTRegion | null;$/;"	p	interface:VTTCue
regionAnchorX	tsvscode.ts	/^    regionAnchorX: number;$/;"	p	interface:VTTRegion
regionAnchorY	tsvscode.ts	/^    regionAnchorY: number;$/;"	p	interface:VTTRegion
register	tsvscode.ts	/^    register(scriptURL: string | URL, options?: RegistrationOptions): Promise<ServiceWorkerRegis/;"	m	interface:ServiceWorkerContainer
registerProtocolHandler	tsvscode.ts	/^    registerProtocolHandler(scheme: string, url: string | URL): void;$/;"	m	interface:NavigatorContentUtils
rel	tsvscode.ts	/^    rel: string;$/;"	p	interface:HTMLAnchorElement
rel	tsvscode.ts	/^    rel: string;$/;"	p	interface:HTMLAreaElement
rel	tsvscode.ts	/^    rel: string;$/;"	p	interface:HTMLFormElement
rel	tsvscode.ts	/^    rel: string;$/;"	p	interface:HTMLLinkElement
rel	tsvscode.ts	/^    rel: string;$/;"	p	interface:SVGAElement
relList	tsvscode.ts	/^    readonly relList: DOMTokenList;$/;"	p	interface:HTMLAnchorElement
relList	tsvscode.ts	/^    readonly relList: DOMTokenList;$/;"	p	interface:HTMLAreaElement
relList	tsvscode.ts	/^    readonly relList: DOMTokenList;$/;"	p	interface:HTMLFormElement
relList	tsvscode.ts	/^    readonly relList: DOMTokenList;$/;"	p	interface:HTMLLinkElement
relList	tsvscode.ts	/^    readonly relList: DOMTokenList;$/;"	p	interface:SVGAElement
relatedAddress	tsvscode.ts	/^    readonly relatedAddress: string | null;$/;"	p	interface:RTCIceCandidate
relatedNode	tsvscode.ts	/^    readonly relatedNode: Node | null;$/;"	p	interface:MutationEvent
relatedPort	tsvscode.ts	/^    readonly relatedPort: number | null;$/;"	p	interface:RTCIceCandidate
relatedTarget	tsvscode.ts	/^    readonly relatedTarget: EventTarget | null;$/;"	p	interface:FocusEvent
relatedTarget	tsvscode.ts	/^    readonly relatedTarget: EventTarget | null;$/;"	p	interface:MouseEvent
relatedTarget	tsvscode.ts	/^    relatedTarget?: EventTarget | null;$/;"	p	interface:FocusEventInit
relatedTarget	tsvscode.ts	/^    relatedTarget?: EventTarget | null;$/;"	p	interface:MouseEventInit
release	tsvscode.ts	/^    readonly release: AudioParam;$/;"	p	interface:DynamicsCompressorNode
release	tsvscode.ts	/^    release(): Promise<void>;$/;"	m	interface:WakeLockSentinel
release	tsvscode.ts	/^    release?: number;$/;"	p	interface:DynamicsCompressorOptions
releaseEvents	tsvscode.ts	/^    releaseEvents(): void;$/;"	m	interface:Document
releaseEvents	tsvscode.ts	/^    releaseEvents(): void;$/;"	m	interface:Window
releaseLock	tsvscode.ts	/^    releaseLock(): void;$/;"	m	interface:ReadableStreamBYOBReader
releaseLock	tsvscode.ts	/^    releaseLock(): void;$/;"	m	interface:ReadableStreamDefaultReader
releaseLock	tsvscode.ts	/^    releaseLock(): void;$/;"	m	interface:WritableStreamDefaultWriter
releasePointerCapture	tsvscode.ts	/^    releasePointerCapture(pointerId: number): void;$/;"	m	interface:Element
released	tsvscode.ts	/^    readonly released: boolean;$/;"	p	interface:WakeLockSentinel
reload	tsvscode.ts	/^    reload(): void;$/;"	m	interface:Location
remote	tsvscode.ts	/^    readonly remote: RemotePlayback;$/;"	p	interface:HTMLMediaElement
remote	tsvscode.ts	/^    remote?: RTCIceCandidate;$/;"	p	interface:RTCIceCandidatePair
remoteCandidateId	tsvscode.ts	/^    remoteCandidateId: string;$/;"	p	interface:RTCIceCandidatePairStats
remoteCertificateId	tsvscode.ts	/^    remoteCertificateId?: string;$/;"	p	interface:RTCTransportStats
remoteDescription	tsvscode.ts	/^    readonly remoteDescription: RTCSessionDescription | null;$/;"	p	interface:RTCPeerConnection
remoteId	tsvscode.ts	/^    remoteId?: string;$/;"	p	interface:RTCInboundRtpStreamStats
remoteId	tsvscode.ts	/^    remoteId?: string;$/;"	p	interface:RTCOutboundRtpStreamStats
remove	tsvscode.ts	/^    remove(): Promise<void>;$/;"	m	interface:MediaKeySession
remove	tsvscode.ts	/^    remove(): void;$/;"	m	interface:ChildNode
remove	tsvscode.ts	/^    remove(): void;$/;"	m	interface:HTMLSelectElement
remove	tsvscode.ts	/^    remove(...tokens: string[]): void;$/;"	m	interface:DOMTokenList
remove	tsvscode.ts	/^    remove(index: number): void;$/;"	m	interface:DataTransferItemList
remove	tsvscode.ts	/^    remove(index: number): void;$/;"	m	interface:HTMLOptionsCollection
remove	tsvscode.ts	/^    remove(index: number): void;$/;"	m	interface:HTMLSelectElement
remove	tsvscode.ts	/^    remove(start: number, end: number): void;$/;"	m	interface:SourceBuffer
removeAllRanges	tsvscode.ts	/^    removeAllRanges(): void;$/;"	m	interface:Selection
removeAttribute	tsvscode.ts	/^    removeAttribute(qualifiedName: string): void;$/;"	m	interface:Element
removeAttributeNS	tsvscode.ts	/^    removeAttributeNS(namespace: string | null, localName: string): void;$/;"	m	interface:Element
removeAttributeNode	tsvscode.ts	/^    removeAttributeNode(attr: Attr): Attr;$/;"	m	interface:Element
removeChild	tsvscode.ts	/^    removeChild<T extends Node>(child: T): T;$/;"	m	interface:Node
removeCue	tsvscode.ts	/^    removeCue(cue: TextTrackCue): void;$/;"	m	interface:TextTrack
removeEntry	tsvscode.ts	/^    removeEntry(name: string, options?: FileSystemRemoveOptions): Promise<void>;$/;"	m	interface:FileSystemDirectoryHandle
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, callback: EventListenerOrEventListenerObject | null, optio/;"	m	interface:EventTarget
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: (this: EventSource, event: MessageEvent) => any,/;"	m	interface:EventSource
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:AbortSignal
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:AbstractWorker
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:Animation
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:AudioBufferSourceNode
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:AudioContext
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:AudioScheduledSourceNode
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:AudioWorkletNode
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:BaseAudioContext
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:BroadcastChannel
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:CSSAnimation
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:CSSTransition
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:CanvasCaptureMediaStreamTrack
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:ConstantSourceNode
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:Document
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:Element
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:EventSource
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:FileReader
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:FontFaceSet
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:GlobalEventHandlers
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLAnchorElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLAreaElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLAudioElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLBRElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLBaseElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLBodyElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLButtonElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLCanvasElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLDListElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLDataElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLDataListElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLDetailsElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLDialogElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLDirectoryElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLDivElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLDocument
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLEmbedElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLFieldSetElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLFontElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLFormElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLFrameElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLFrameSetElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLHRElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLHeadElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLHeadingElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLHtmlElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLIFrameElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLImageElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLInputElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLLIElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLLabelElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLLegendElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLLinkElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLMapElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLMarqueeElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLMediaElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLMenuElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLMetaElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLMeterElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLModElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLOListElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLObjectElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLOptGroupElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLOptionElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLOutputElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLParagraphElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLParamElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLPictureElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLPreElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLProgressElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLQuoteElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLScriptElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLSelectElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLSlotElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLSourceElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLSpanElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLStyleElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLTableCaptionElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLTableCellElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLTableColElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLTableDataCellElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLTableElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLTableHeaderCellElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLTableRowElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLTableSectionElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLTemplateElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLTextAreaElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLTimeElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLTitleElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLTrackElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLUListElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLUnknownElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:HTMLVideoElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:IDBDatabase
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:IDBOpenDBRequest
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:IDBRequest
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:IDBTransaction
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:MIDIAccess
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:MIDIInput
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:MIDIOutput
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:MIDIPort
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:MathMLElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:MediaDevices
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:MediaKeySession
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:MediaQueryList
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:MediaRecorder
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:MediaSource
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:MediaStream
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:MediaStreamTrack
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:MessagePort
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:Notification
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:OfflineAudioContext
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:OffscreenCanvas
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:OscillatorNode
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:PaymentRequest
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:Performance
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:PermissionStatus
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:PictureInPictureWindow
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:RTCDTMFSender
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:RTCDataChannel
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:RTCDtlsTransport
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:RTCIceTransport
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:RTCPeerConnection
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:RTCSctpTransport
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:RemotePlayback
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGAElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGAnimateElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGAnimateMotionElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGAnimateTransformElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGAnimationElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGCircleElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGClipPathElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGComponentTransferFunctionElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGDefsElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGDescElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGEllipseElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGFEBlendElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGFEColorMatrixElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGFEComponentTransferElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGFECompositeElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGFEConvolveMatrixElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGFEDiffuseLightingElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGFEDisplacementMapElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGFEDistantLightElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGFEDropShadowElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGFEFloodElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGFEFuncAElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGFEFuncBElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGFEFuncGElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGFEFuncRElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGFEGaussianBlurElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGFEImageElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGFEMergeElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGFEMergeNodeElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGFEMorphologyElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGFEOffsetElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGFEPointLightElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGFESpecularLightingElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGFESpotLightElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGFETileElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGFETurbulenceElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGFilterElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGForeignObjectElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGGElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGGeometryElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGGradientElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGGraphicsElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGImageElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGLineElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGLinearGradientElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGMPathElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGMarkerElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGMaskElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGMetadataElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGPathElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGPatternElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGPolygonElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGPolylineElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGRadialGradientElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGRectElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGSVGElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGScriptElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGSetElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGStopElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGStyleElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGSwitchElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGSymbolElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGTSpanElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGTextContentElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGTextElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGTextPathElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGTextPositioningElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGTitleElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGUseElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SVGViewElement
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:ScreenOrientation
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:ScriptProcessorNode
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:ServiceWorker
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:ServiceWorkerContainer
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:ServiceWorkerRegistration
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:ShadowRoot
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SharedWorker
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SourceBuffer
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SourceBufferList
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SpeechSynthesis
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:SpeechSynthesisUtterance
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:TextTrack
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:TextTrackCue
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:TextTrackList
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:VTTCue
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:VideoDecoder
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:VideoEncoder
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:VisualViewport
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:WakeLockSentinel
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:WebSocket
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:Window
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:WindowEventHandlers
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:Worker
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:XMLDocument
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:XMLHttpRequest
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:XMLHttpRequestEventTarget
removeEventListener	tsvscode.ts	/^    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: bo/;"	m	interface:XMLHttpRequestUpload
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof AbortSignalEventMap>(type: K, listener: (this: AbortSign/;"	m	interface:AbortSignal
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof AbstractWorkerEventMap>(type: K, listener: (this: Abstra/;"	m	interface:AbstractWorker
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof AbstractWorkerEventMap>(type: K, listener: (this: Shared/;"	m	interface:SharedWorker
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof AnimationEventMap>(type: K, listener: (this: Animation, /;"	m	interface:Animation
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof AnimationEventMap>(type: K, listener: (this: CSSAnimatio/;"	m	interface:CSSAnimation
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof AnimationEventMap>(type: K, listener: (this: CSSTransiti/;"	m	interface:CSSTransition
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof AudioScheduledSourceNodeEventMap>(type: K, listener: (th/;"	m	interface:AudioBufferSourceNode
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof AudioScheduledSourceNodeEventMap>(type: K, listener: (th/;"	m	interface:AudioScheduledSourceNode
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof AudioScheduledSourceNodeEventMap>(type: K, listener: (th/;"	m	interface:ConstantSourceNode
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof AudioScheduledSourceNodeEventMap>(type: K, listener: (th/;"	m	interface:OscillatorNode
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof AudioWorkletNodeEventMap>(type: K, listener: (this: Audi/;"	m	interface:AudioWorkletNode
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof BaseAudioContextEventMap>(type: K, listener: (this: Audi/;"	m	interface:AudioContext
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof BaseAudioContextEventMap>(type: K, listener: (this: Base/;"	m	interface:BaseAudioContext
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof BroadcastChannelEventMap>(type: K, listener: (this: Broa/;"	m	interface:BroadcastChannel
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev/;"	m	interface:Document
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: HTMLDocument/;"	m	interface:HTMLDocument
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: XMLDocument,/;"	m	interface:XMLDocument
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof ElementEventMap>(type: K, listener: (this: Element, ev: /;"	m	interface:Element
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof EventSourceEventMap>(type: K, listener: (this: EventSour/;"	m	interface:EventSource
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof FileReaderEventMap>(type: K, listener: (this: FileReader/;"	m	interface:FileReader
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof FontFaceSetEventMap>(type: K, listener: (this: FontFaceS/;"	m	interface:FontFaceSet
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: G/;"	m	interface:GlobalEventHandlers
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLBodyElementEventMap>(type: K, listener: (this: HTMLB/;"	m	interface:HTMLBodyElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAncho/;"	m	interface:HTMLAnchorElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAreaE/;"	m	interface:HTMLAreaElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBREle/;"	m	interface:HTMLBRElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBaseE/;"	m	interface:HTMLBaseElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLButto/;"	m	interface:HTMLButtonElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLCanva/;"	m	interface:HTMLCanvasElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDList/;"	m	interface:HTMLDListElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDataE/;"	m	interface:HTMLDataElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDataL/;"	m	interface:HTMLDataListElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDetai/;"	m	interface:HTMLDetailsElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDialo/;"	m	interface:HTMLDialogElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDirec/;"	m	interface:HTMLDirectoryElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDivEl/;"	m	interface:HTMLDivElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLEleme/;"	m	interface:HTMLElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLEmbed/;"	m	interface:HTMLEmbedElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLField/;"	m	interface:HTMLFieldSetElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFontE/;"	m	interface:HTMLFontElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFormE/;"	m	interface:HTMLFormElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFrame/;"	m	interface:HTMLFrameElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHREle/;"	m	interface:HTMLHRElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHeadE/;"	m	interface:HTMLHeadElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHeadi/;"	m	interface:HTMLHeadingElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHtmlE/;"	m	interface:HTMLHtmlElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLIFram/;"	m	interface:HTMLIFrameElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLImage/;"	m	interface:HTMLImageElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLInput/;"	m	interface:HTMLInputElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLIEle/;"	m	interface:HTMLLIElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLabel/;"	m	interface:HTMLLabelElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLegen/;"	m	interface:HTMLLegendElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLinkE/;"	m	interface:HTMLLinkElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMapEl/;"	m	interface:HTMLMapElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMarqu/;"	m	interface:HTMLMarqueeElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMenuE/;"	m	interface:HTMLMenuElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMetaE/;"	m	interface:HTMLMetaElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMeter/;"	m	interface:HTMLMeterElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLModEl/;"	m	interface:HTMLModElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOList/;"	m	interface:HTMLOListElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLObjec/;"	m	interface:HTMLObjectElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOptGr/;"	m	interface:HTMLOptGroupElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOptio/;"	m	interface:HTMLOptionElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOutpu/;"	m	interface:HTMLOutputElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLParag/;"	m	interface:HTMLParagraphElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLParam/;"	m	interface:HTMLParamElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLPictu/;"	m	interface:HTMLPictureElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLPreEl/;"	m	interface:HTMLPreElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLProgr/;"	m	interface:HTMLProgressElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLQuote/;"	m	interface:HTMLQuoteElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLScrip/;"	m	interface:HTMLScriptElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSelec/;"	m	interface:HTMLSelectElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSlotE/;"	m	interface:HTMLSlotElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSourc/;"	m	interface:HTMLSourceElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSpanE/;"	m	interface:HTMLSpanElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLStyle/;"	m	interface:HTMLStyleElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTable/;"	m	interface:HTMLTableCaptionElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTable/;"	m	interface:HTMLTableCellElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTable/;"	m	interface:HTMLTableColElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTable/;"	m	interface:HTMLTableDataCellElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTable/;"	m	interface:HTMLTableElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTable/;"	m	interface:HTMLTableHeaderCellElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTable/;"	m	interface:HTMLTableRowElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTable/;"	m	interface:HTMLTableSectionElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTempl/;"	m	interface:HTMLTemplateElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTextA/;"	m	interface:HTMLTextAreaElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTimeE/;"	m	interface:HTMLTimeElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTitle/;"	m	interface:HTMLTitleElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTrack/;"	m	interface:HTMLTrackElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLUList/;"	m	interface:HTMLUListElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLUnkno/;"	m	interface:HTMLUnknownElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLFrameSetElementEventMap>(type: K, listener: (this: H/;"	m	interface:HTMLFrameSetElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLMediaElementEventMap>(type: K, listener: (this: HTML/;"	m	interface:HTMLAudioElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLMediaElementEventMap>(type: K, listener: (this: HTML/;"	m	interface:HTMLMediaElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof HTMLVideoElementEventMap>(type: K, listener: (this: HTML/;"	m	interface:HTMLVideoElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof IDBDatabaseEventMap>(type: K, listener: (this: IDBDataba/;"	m	interface:IDBDatabase
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof IDBOpenDBRequestEventMap>(type: K, listener: (this: IDBO/;"	m	interface:IDBOpenDBRequest
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof IDBRequestEventMap>(type: K, listener: (this: IDBRequest/;"	m	interface:IDBRequest
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof IDBTransactionEventMap>(type: K, listener: (this: IDBTra/;"	m	interface:IDBTransaction
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof MIDIAccessEventMap>(type: K, listener: (this: MIDIAccess/;"	m	interface:MIDIAccess
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof MIDIInputEventMap>(type: K, listener: (this: MIDIInput, /;"	m	interface:MIDIInput
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof MIDIPortEventMap>(type: K, listener: (this: MIDIOutput, /;"	m	interface:MIDIOutput
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof MIDIPortEventMap>(type: K, listener: (this: MIDIPort, ev/;"	m	interface:MIDIPort
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof MathMLElementEventMap>(type: K, listener: (this: MathMLE/;"	m	interface:MathMLElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof MediaDevicesEventMap>(type: K, listener: (this: MediaDev/;"	m	interface:MediaDevices
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof MediaKeySessionEventMap>(type: K, listener: (this: Media/;"	m	interface:MediaKeySession
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof MediaQueryListEventMap>(type: K, listener: (this: MediaQ/;"	m	interface:MediaQueryList
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof MediaRecorderEventMap>(type: K, listener: (this: MediaRe/;"	m	interface:MediaRecorder
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof MediaSourceEventMap>(type: K, listener: (this: MediaSour/;"	m	interface:MediaSource
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof MediaStreamEventMap>(type: K, listener: (this: MediaStre/;"	m	interface:MediaStream
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof MediaStreamTrackEventMap>(type: K, listener: (this: Canv/;"	m	interface:CanvasCaptureMediaStreamTrack
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof MediaStreamTrackEventMap>(type: K, listener: (this: Medi/;"	m	interface:MediaStreamTrack
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof MessagePortEventMap>(type: K, listener: (this: MessagePo/;"	m	interface:MessagePort
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof NotificationEventMap>(type: K, listener: (this: Notifica/;"	m	interface:Notification
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof OfflineAudioContextEventMap>(type: K, listener: (this: O/;"	m	interface:OfflineAudioContext
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof OffscreenCanvasEventMap>(type: K, listener: (this: Offsc/;"	m	interface:OffscreenCanvas
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof PaymentRequestEventMap>(type: K, listener: (this: Paymen/;"	m	interface:PaymentRequest
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof PerformanceEventMap>(type: K, listener: (this: Performan/;"	m	interface:Performance
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof PermissionStatusEventMap>(type: K, listener: (this: Perm/;"	m	interface:PermissionStatus
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof PictureInPictureWindowEventMap>(type: K, listener: (this/;"	m	interface:PictureInPictureWindow
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof RTCDTMFSenderEventMap>(type: K, listener: (this: RTCDTMF/;"	m	interface:RTCDTMFSender
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof RTCDataChannelEventMap>(type: K, listener: (this: RTCDat/;"	m	interface:RTCDataChannel
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof RTCDtlsTransportEventMap>(type: K, listener: (this: RTCD/;"	m	interface:RTCDtlsTransport
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof RTCIceTransportEventMap>(type: K, listener: (this: RTCIc/;"	m	interface:RTCIceTransport
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof RTCPeerConnectionEventMap>(type: K, listener: (this: RTC/;"	m	interface:RTCPeerConnection
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof RTCSctpTransportEventMap>(type: K, listener: (this: RTCS/;"	m	interface:RTCSctpTransport
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof RemotePlaybackEventMap>(type: K, listener: (this: Remote/;"	m	interface:RemotePlayback
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAElemen/;"	m	interface:SVGAElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAnimate/;"	m	interface:SVGAnimateElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAnimate/;"	m	interface:SVGAnimateMotionElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAnimate/;"	m	interface:SVGAnimateTransformElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAnimati/;"	m	interface:SVGAnimationElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGCircleE/;"	m	interface:SVGCircleElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGClipPat/;"	m	interface:SVGClipPathElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGCompone/;"	m	interface:SVGComponentTransferFunctionElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGDefsEle/;"	m	interface:SVGDefsElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGDescEle/;"	m	interface:SVGDescElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGElement/;"	m	interface:SVGElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGEllipse/;"	m	interface:SVGEllipseElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEBlend/;"	m	interface:SVGFEBlendElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEColor/;"	m	interface:SVGFEColorMatrixElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFECompo/;"	m	interface:SVGFEComponentTransferElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFECompo/;"	m	interface:SVGFECompositeElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEConvo/;"	m	interface:SVGFEConvolveMatrixElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDiffu/;"	m	interface:SVGFEDiffuseLightingElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDispl/;"	m	interface:SVGFEDisplacementMapElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDista/;"	m	interface:SVGFEDistantLightElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDropS/;"	m	interface:SVGFEDropShadowElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFlood/;"	m	interface:SVGFEFloodElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncA/;"	m	interface:SVGFEFuncAElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncB/;"	m	interface:SVGFEFuncBElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncG/;"	m	interface:SVGFEFuncGElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncR/;"	m	interface:SVGFEFuncRElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEGauss/;"	m	interface:SVGFEGaussianBlurElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEImage/;"	m	interface:SVGFEImageElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMerge/;"	m	interface:SVGFEMergeElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMerge/;"	m	interface:SVGFEMergeNodeElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMorph/;"	m	interface:SVGFEMorphologyElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEOffse/;"	m	interface:SVGFEOffsetElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEPoint/;"	m	interface:SVGFEPointLightElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFESpecu/;"	m	interface:SVGFESpecularLightingElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFESpotL/;"	m	interface:SVGFESpotLightElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFETileE/;"	m	interface:SVGFETileElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFETurbu/;"	m	interface:SVGFETurbulenceElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFilterE/;"	m	interface:SVGFilterElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGForeign/;"	m	interface:SVGForeignObjectElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGElemen/;"	m	interface:SVGGElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGeometr/;"	m	interface:SVGGeometryElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGradien/;"	m	interface:SVGGradientElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGraphic/;"	m	interface:SVGGraphicsElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGImageEl/;"	m	interface:SVGImageElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGLineEle/;"	m	interface:SVGLineElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGLinearG/;"	m	interface:SVGLinearGradientElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMPathEl/;"	m	interface:SVGMPathElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMarkerE/;"	m	interface:SVGMarkerElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMaskEle/;"	m	interface:SVGMaskElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMetadat/;"	m	interface:SVGMetadataElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPathEle/;"	m	interface:SVGPathElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPattern/;"	m	interface:SVGPatternElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPolygon/;"	m	interface:SVGPolygonElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPolylin/;"	m	interface:SVGPolylineElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGRadialG/;"	m	interface:SVGRadialGradientElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGRectEle/;"	m	interface:SVGRectElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGScriptE/;"	m	interface:SVGScriptElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSetElem/;"	m	interface:SVGSetElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGStopEle/;"	m	interface:SVGStopElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGStyleEl/;"	m	interface:SVGStyleElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSwitchE/;"	m	interface:SVGSwitchElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSymbolE/;"	m	interface:SVGSymbolElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTSpanEl/;"	m	interface:SVGTSpanElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextCon/;"	m	interface:SVGTextContentElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextEle/;"	m	interface:SVGTextElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextPat/;"	m	interface:SVGTextPathElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextPos/;"	m	interface:SVGTextPositioningElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTitleEl/;"	m	interface:SVGTitleElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGUseElem/;"	m	interface:SVGUseElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGViewEle/;"	m	interface:SVGViewElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SVGSVGElementEventMap>(type: K, listener: (this: SVGSVGE/;"	m	interface:SVGSVGElement
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof ScreenOrientationEventMap>(type: K, listener: (this: Scr/;"	m	interface:ScreenOrientation
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof ScriptProcessorNodeEventMap>(type: K, listener: (this: S/;"	m	interface:ScriptProcessorNode
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof ServiceWorkerContainerEventMap>(type: K, listener: (this/;"	m	interface:ServiceWorkerContainer
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof ServiceWorkerEventMap>(type: K, listener: (this: Service/;"	m	interface:ServiceWorker
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof ServiceWorkerRegistrationEventMap>(type: K, listener: (t/;"	m	interface:ServiceWorkerRegistration
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof ShadowRootEventMap>(type: K, listener: (this: ShadowRoot/;"	m	interface:ShadowRoot
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SourceBufferEventMap>(type: K, listener: (this: SourceBu/;"	m	interface:SourceBuffer
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SourceBufferListEventMap>(type: K, listener: (this: Sour/;"	m	interface:SourceBufferList
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SpeechSynthesisEventMap>(type: K, listener: (this: Speec/;"	m	interface:SpeechSynthesis
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof SpeechSynthesisUtteranceEventMap>(type: K, listener: (th/;"	m	interface:SpeechSynthesisUtterance
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof TextTrackCueEventMap>(type: K, listener: (this: TextTrac/;"	m	interface:TextTrackCue
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof TextTrackCueEventMap>(type: K, listener: (this: VTTCue, /;"	m	interface:VTTCue
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof TextTrackEventMap>(type: K, listener: (this: TextTrack, /;"	m	interface:TextTrack
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof TextTrackListEventMap>(type: K, listener: (this: TextTra/;"	m	interface:TextTrackList
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof VideoDecoderEventMap>(type: K, listener: (this: VideoDec/;"	m	interface:VideoDecoder
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof VideoEncoderEventMap>(type: K, listener: (this: VideoEnc/;"	m	interface:VideoEncoder
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof VisualViewportEventMap>(type: K, listener: (this: Visual/;"	m	interface:VisualViewport
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof WakeLockSentinelEventMap>(type: K, listener: (this: Wake/;"	m	interface:WakeLockSentinel
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof WebSocketEventMap>(type: K, listener: (this: WebSocket, /;"	m	interface:WebSocket
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof WindowEventHandlersEventMap>(type: K, listener: (this: W/;"	m	interface:WindowEventHandlers
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof WindowEventMap>(type: K, listener: (this: Window, ev: Wi/;"	m	interface:Window
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof WorkerEventMap>(type: K, listener: (this: Worker, ev: Wo/;"	m	interface:Worker
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof XMLHttpRequestEventMap>(type: K, listener: (this: XMLHtt/;"	m	interface:XMLHttpRequest
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (t/;"	m	interface:XMLHttpRequestEventTarget
removeEventListener	tsvscode.ts	/^    removeEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (t/;"	m	interface:XMLHttpRequestUpload
removeItem	tsvscode.ts	/^    removeItem(index: number): DOMPoint;$/;"	m	interface:SVGPointList
removeItem	tsvscode.ts	/^    removeItem(index: number): SVGLength;$/;"	m	interface:SVGLengthList
removeItem	tsvscode.ts	/^    removeItem(index: number): SVGNumber;$/;"	m	interface:SVGNumberList
removeItem	tsvscode.ts	/^    removeItem(index: number): SVGTransform;$/;"	m	interface:SVGTransformList
removeItem	tsvscode.ts	/^    removeItem(index: number): string;$/;"	m	interface:SVGStringList
removeItem	tsvscode.ts	/^    removeItem(key: string): void;$/;"	m	interface:Storage
removeListener	tsvscode.ts	/^    removeListener(callback: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null): v/;"	m	interface:MediaQueryList
removeNamedItem	tsvscode.ts	/^    removeNamedItem(qualifiedName: string): Attr;$/;"	m	interface:NamedNodeMap
removeNamedItemNS	tsvscode.ts	/^    removeNamedItemNS(namespace: string | null, localName: string): Attr;$/;"	m	interface:NamedNodeMap
removeParameter	tsvscode.ts	/^    removeParameter(namespaceURI: string | null, localName: string): void;$/;"	m	interface:XSLTProcessor
removeProperty	tsvscode.ts	/^    removeProperty(property: string): string;$/;"	m	interface:CSSStyleDeclaration
removeRange	tsvscode.ts	/^    removeRange(range: Range): void;$/;"	m	interface:Selection
removeRule	tsvscode.ts	/^    removeRule(index?: number): void;$/;"	m	interface:CSSStyleSheet
removeSourceBuffer	tsvscode.ts	/^    removeSourceBuffer(sourceBuffer: SourceBuffer): void;$/;"	m	interface:MediaSource
removeTrack	tsvscode.ts	/^    removeTrack(sender: RTCRtpSender): void;$/;"	m	interface:RTCPeerConnection
removeTrack	tsvscode.ts	/^    removeTrack(track: MediaStreamTrack): void;$/;"	m	interface:MediaStream
removedNodes	tsvscode.ts	/^    readonly removedNodes: NodeList;$/;"	p	interface:MutationRecord
removedSamplesForAcceleration	tsvscode.ts	/^    removedSamplesForAcceleration?: number;$/;"	p	interface:RTCInboundRtpStreamStats
renderbufferStorage	tsvscode.ts	/^    renderbufferStorage(target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei)/;"	m	interface:WebGLRenderingContextBase
renderbufferStorageMultisample	tsvscode.ts	/^    renderbufferStorageMultisample(target: GLenum, samples: GLsizei, internalformat: GLenum, wid/;"	m	interface:WebGL2RenderingContextBase
renderedBuffer	tsvscode.ts	/^    readonly renderedBuffer: AudioBuffer;$/;"	p	interface:OfflineAudioCompletionEvent
renderedBuffer	tsvscode.ts	/^    renderedBuffer: AudioBuffer;$/;"	p	interface:OfflineAudioCompletionEventInit
repeat	tsvscode.ts	/^    readonly repeat: boolean;$/;"	p	interface:KeyboardEvent
repeat	tsvscode.ts	/^    repeat?: boolean;$/;"	p	interface:KeyboardEventInit
replace	ests.ts	/^    replace(searchValue: string | RegExp, replaceValue: string): string;$/;"	m	interface:String
replace	ests.ts	/^    replace(searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => strin/;"	m	interface:String
replace	tsvscode.ts	/^    replace(text: string): Promise<CSSStyleSheet>;$/;"	m	interface:CSSStyleSheet
replace	tsvscode.ts	/^    replace(token: string, newToken: string): boolean;$/;"	m	interface:DOMTokenList
replace	tsvscode.ts	/^    replace(url: string | URL): void;$/;"	m	interface:Location
replaceChild	tsvscode.ts	/^    replaceChild<T extends Node>(node: Node, child: T): T;$/;"	m	interface:Node
replaceChildren	tsvscode.ts	/^    replaceChildren(...nodes: (Node | string)[]): void;$/;"	m	interface:ParentNode
replaceData	tsvscode.ts	/^    replaceData(offset: number, count: number, data: string): void;$/;"	m	interface:CharacterData
replaceItem	tsvscode.ts	/^    replaceItem(newItem: DOMPoint, index: number): DOMPoint;$/;"	m	interface:SVGPointList
replaceItem	tsvscode.ts	/^    replaceItem(newItem: SVGLength, index: number): SVGLength;$/;"	m	interface:SVGLengthList
replaceItem	tsvscode.ts	/^    replaceItem(newItem: SVGNumber, index: number): SVGNumber;$/;"	m	interface:SVGNumberList
replaceItem	tsvscode.ts	/^    replaceItem(newItem: SVGTransform, index: number): SVGTransform;$/;"	m	interface:SVGTransformList
replaceItem	tsvscode.ts	/^    replaceItem(newItem: string, index: number): string;$/;"	m	interface:SVGStringList
replaceState	tsvscode.ts	/^    readonly replaceState: AnimationReplaceState;$/;"	p	interface:Animation
replaceState	tsvscode.ts	/^    replaceState(data: any, unused: string, url?: string | URL | null): void;$/;"	m	interface:History
replaceSync	tsvscode.ts	/^    replaceSync(text: string): void;$/;"	m	interface:CSSStyleSheet
replaceTrack	tsvscode.ts	/^    replaceTrack(withTrack: MediaStreamTrack | null): Promise<void>;$/;"	m	interface:RTCRtpSender
replaceWith	tsvscode.ts	/^    replaceWith(...nodes: (Node | string)[]): void;$/;"	m	interface:ChildNode
reportError	tsvscode.ts	/^    reportError(e: any): void;$/;"	m	interface:WindowOrWorkerGlobalScope
reportValidity	tsvscode.ts	/^    reportValidity(): boolean;$/;"	m	interface:ElementInternals
reportValidity	tsvscode.ts	/^    reportValidity(): boolean;$/;"	m	interface:HTMLButtonElement
reportValidity	tsvscode.ts	/^    reportValidity(): boolean;$/;"	m	interface:HTMLFieldSetElement
reportValidity	tsvscode.ts	/^    reportValidity(): boolean;$/;"	m	interface:HTMLFormElement
reportValidity	tsvscode.ts	/^    reportValidity(): boolean;$/;"	m	interface:HTMLInputElement
reportValidity	tsvscode.ts	/^    reportValidity(): boolean;$/;"	m	interface:HTMLObjectElement
reportValidity	tsvscode.ts	/^    reportValidity(): boolean;$/;"	m	interface:HTMLOutputElement
reportValidity	tsvscode.ts	/^    reportValidity(): boolean;$/;"	m	interface:HTMLSelectElement
reportValidity	tsvscode.ts	/^    reportValidity(): boolean;$/;"	m	interface:HTMLTextAreaElement
request	tsvscode.ts	/^    readonly request: IDBRequest;$/;"	p	interface:IDBCursor
request	tsvscode.ts	/^    request(name: string, callback: LockGrantedCallback): Promise<any>;$/;"	m	interface:LockManager
request	tsvscode.ts	/^    request(name: string, options: LockOptions, callback: LockGrantedCallback): Promise<any>;$/;"	m	interface:LockManager
request	tsvscode.ts	/^    request(type?: WakeLockType): Promise<WakeLockSentinel>;$/;"	m	interface:WakeLock
requestAnimationFrame	tsvscode.ts	/^    requestAnimationFrame(callback: FrameRequestCallback): number;$/;"	m	interface:AnimationFrameProvider
requestData	tsvscode.ts	/^    requestData(): void;$/;"	m	interface:MediaRecorder
requestFrame	tsvscode.ts	/^    requestFrame(): void;$/;"	m	interface:CanvasCaptureMediaStreamTrack
requestFullscreen	tsvscode.ts	/^    requestFullscreen(options?: FullscreenOptions): Promise<void>;$/;"	m	interface:Element
requestId	tsvscode.ts	/^    readonly requestId: string;$/;"	p	interface:PaymentResponse
requestIdleCallback	tsvscode.ts	/^    requestIdleCallback(callback: IdleRequestCallback, options?: IdleRequestOptions): number;$/;"	m	interface:Window
requestMIDIAccess	tsvscode.ts	/^    requestMIDIAccess(options?: MIDIOptions): Promise<MIDIAccess>;$/;"	m	interface:Navigator
requestMediaKeySystemAccess	tsvscode.ts	/^    requestMediaKeySystemAccess(keySystem: string, supportedConfigurations: MediaKeySystemConfig/;"	m	interface:Navigator
requestPermission	tsvscode.ts	/^    requestPermission(deprecatedCallback?: NotificationPermissionCallback): Promise<Notification/;"	v
requestPictureInPicture	tsvscode.ts	/^    requestPictureInPicture(): Promise<PictureInPictureWindow>;$/;"	m	interface:HTMLVideoElement
requestPointerLock	tsvscode.ts	/^    requestPointerLock(): void;$/;"	m	interface:Element
requestStart	tsvscode.ts	/^    readonly requestStart: DOMHighResTimeStamp;$/;"	p	interface:PerformanceResourceTiming
requestStart	tsvscode.ts	/^    readonly requestStart: number;$/;"	p	interface:PerformanceTiming
requestStorageAccess	tsvscode.ts	/^    requestStorageAccess(): Promise<void>;$/;"	m	interface:Document
requestSubmit	tsvscode.ts	/^    requestSubmit(submitter?: HTMLElement | null): void;$/;"	m	interface:HTMLFormElement
requestVideoFrameCallback	tsvscode.ts	/^    requestVideoFrameCallback(callback: VideoFrameRequestCallback): number;$/;"	m	interface:HTMLVideoElement
requestsReceived	tsvscode.ts	/^    requestsReceived?: number;$/;"	p	interface:RTCIceCandidatePairStats
requestsSent	tsvscode.ts	/^    requestsSent?: number;$/;"	p	interface:RTCIceCandidatePairStats
requireInteraction	tsvscode.ts	/^    readonly requireInteraction: boolean;$/;"	p	interface:Notification
requireInteraction	tsvscode.ts	/^    requireInteraction?: boolean;$/;"	p	interface:NotificationOptions
requireResidentKey	tsvscode.ts	/^    requireResidentKey?: boolean;$/;"	p	interface:AuthenticatorSelectionCriteria
requireUnreliable	tsvscode.ts	/^    requireUnreliable?: boolean;$/;"	p	interface:WebTransportOptions
required	tsvscode.ts	/^    required: boolean;$/;"	p	interface:HTMLInputElement
required	tsvscode.ts	/^    required: boolean;$/;"	p	interface:HTMLSelectElement
required	tsvscode.ts	/^    required: boolean;$/;"	p	interface:HTMLTextAreaElement
requiredExtensions	tsvscode.ts	/^    readonly requiredExtensions: SVGStringList;$/;"	p	interface:SVGTests
reset	tsvscode.ts	/^    reset(): Promise<GamepadHapticsResult>;$/;"	m	interface:GamepadHapticActuator
reset	tsvscode.ts	/^    reset(): void;$/;"	m	interface:CanvasState
reset	tsvscode.ts	/^    reset(): void;$/;"	m	interface:HTMLFormElement
reset	tsvscode.ts	/^    reset(): void;$/;"	m	interface:VideoDecoder
reset	tsvscode.ts	/^    reset(): void;$/;"	m	interface:VideoEncoder
reset	tsvscode.ts	/^    reset(): void;$/;"	m	interface:XSLTProcessor
resetTransform	tsvscode.ts	/^    resetTransform(): void;$/;"	m	interface:CanvasTransform
residentKey	tsvscode.ts	/^    residentKey?: ResidentKeyRequirement;$/;"	p	interface:AuthenticatorSelectionCriteria
resize	tsvscode.ts	/^    resize: string;$/;"	p	interface:CSSStyleDeclaration
resizeBy	tsvscode.ts	/^    resizeBy(x: number, y: number): void;$/;"	m	interface:Window
resizeHeight	tsvscode.ts	/^    resizeHeight?: number;$/;"	p	interface:ImageBitmapOptions
resizeQuality	tsvscode.ts	/^    resizeQuality?: ResizeQuality;$/;"	p	interface:ImageBitmapOptions
resizeTo	tsvscode.ts	/^    resizeTo(width: number, height: number): void;$/;"	m	interface:Window
resizeWidth	tsvscode.ts	/^    resizeWidth?: number;$/;"	p	interface:ImageBitmapOptions
resolution	tsvscode.ts	/^    resolution?: number;$/;"	p	interface:CSSNumericType
resolve	tsvscode.ts	/^    resolve(possibleDescendant: FileSystemHandle): Promise<string[] | null>;$/;"	m	interface:FileSystemDirectoryHandle
resolvedOptions	ests.ts	/^        resolvedOptions(): ResolvedCollatorOptions;$/;"	m	interface:Intl.Collator
resolvedOptions	ests.ts	/^        resolvedOptions(): ResolvedDateTimeFormatOptions;$/;"	m	interface:Intl.DateTimeFormat
resolvedOptions	ests.ts	/^        resolvedOptions(): ResolvedNumberFormatOptions;$/;"	m	interface:Intl.NumberFormat
respond	tsvscode.ts	/^    respond(bytesWritten: number): void;$/;"	m	interface:ReadableStreamBYOBRequest
respondWithNewView	tsvscode.ts	/^    respondWithNewView(view: ArrayBufferView): void;$/;"	m	interface:ReadableStreamBYOBRequest
response	tsvscode.ts	/^    readonly response: AuthenticatorResponse;$/;"	p	interface:PublicKeyCredential
response	tsvscode.ts	/^    readonly response: any;$/;"	p	interface:XMLHttpRequest
responseEnd	tsvscode.ts	/^    readonly responseEnd: DOMHighResTimeStamp;$/;"	p	interface:PerformanceResourceTiming
responseEnd	tsvscode.ts	/^    readonly responseEnd: number;$/;"	p	interface:PerformanceTiming
responseStart	tsvscode.ts	/^    readonly responseStart: DOMHighResTimeStamp;$/;"	p	interface:PerformanceResourceTiming
responseStart	tsvscode.ts	/^    readonly responseStart: number;$/;"	p	interface:PerformanceTiming
responseText	tsvscode.ts	/^    readonly responseText: string;$/;"	p	interface:XMLHttpRequest
responseType	tsvscode.ts	/^    responseType: XMLHttpRequestResponseType;$/;"	p	interface:XMLHttpRequest
responseURL	tsvscode.ts	/^    readonly responseURL: string;$/;"	p	interface:XMLHttpRequest
responseXML	tsvscode.ts	/^    readonly responseXML: Document | null;$/;"	p	interface:XMLHttpRequest
responsesReceived	tsvscode.ts	/^    responsesReceived?: number;$/;"	p	interface:RTCIceCandidatePairStats
responsesSent	tsvscode.ts	/^    responsesSent?: number;$/;"	p	interface:RTCIceCandidatePairStats
restartIce	tsvscode.ts	/^    restartIce(): void;$/;"	m	interface:RTCPeerConnection
restore	tsvscode.ts	/^    restore(): void;$/;"	m	interface:CanvasState
restoreContext	tsvscode.ts	/^    restoreContext(): void;$/;"	m	interface:WEBGL_lose_context
result	tsvscode.ts	/^    readonly result: SVGAnimatedString;$/;"	p	interface:SVGFilterPrimitiveStandardAttributes
result	tsvscode.ts	/^    readonly result: T;$/;"	p	interface:IDBRequest
result	tsvscode.ts	/^    readonly result: string | ArrayBuffer | null;$/;"	p	interface:FileReader
resultType	tsvscode.ts	/^    readonly resultType: number;$/;"	p	interface:XPathResult
resume	tsvscode.ts	/^    resume(): Promise<void>;$/;"	m	interface:AudioContext
resume	tsvscode.ts	/^    resume(): Promise<void>;$/;"	m	interface:OfflineAudioContext
resume	tsvscode.ts	/^    resume(): void;$/;"	m	interface:MediaRecorder
resume	tsvscode.ts	/^    resume(): void;$/;"	m	interface:SpeechSynthesis
resumeTransformFeedback	tsvscode.ts	/^    resumeTransformFeedback(): void;$/;"	m	interface:WebGL2RenderingContextBase
retransmittedBytesSent	tsvscode.ts	/^    retransmittedBytesSent?: number;$/;"	p	interface:RTCOutboundRtpStreamStats
retransmittedPacketsSent	tsvscode.ts	/^    retransmittedPacketsSent?: number;$/;"	p	interface:RTCOutboundRtpStreamStats
retry	tsvscode.ts	/^    retry(errorFields?: PaymentValidationErrors): Promise<void>;$/;"	m	interface:PaymentResponse
returnValue	tsvscode.ts	/^    returnValue: any;$/;"	p	interface:BeforeUnloadEvent
returnValue	tsvscode.ts	/^    returnValue: boolean;$/;"	p	interface:Event
returnValue	tsvscode.ts	/^    returnValue: string;$/;"	p	interface:HTMLDialogElement
rev	tsvscode.ts	/^    rev: string;$/;"	p	interface:HTMLAnchorElement
rev	tsvscode.ts	/^    rev: string;$/;"	p	interface:HTMLLinkElement
reverse	ests.ts	/^    reverse(): Float32Array;$/;"	m	interface:Float32Array
reverse	ests.ts	/^    reverse(): Float64Array;$/;"	m	interface:Float64Array
reverse	ests.ts	/^    reverse(): Int16Array;$/;"	m	interface:Int16Array
reverse	ests.ts	/^    reverse(): Int32Array;$/;"	m	interface:Int32Array
reverse	ests.ts	/^    reverse(): Int8Array;$/;"	m	interface:Int8Array
reverse	ests.ts	/^    reverse(): T[];$/;"	m	interface:Array
reverse	ests.ts	/^    reverse(): Uint16Array;$/;"	m	interface:Uint16Array
reverse	ests.ts	/^    reverse(): Uint32Array;$/;"	m	interface:Uint32Array
reverse	ests.ts	/^    reverse(): Uint8Array;$/;"	m	interface:Uint8Array
reverse	ests.ts	/^    reverse(): Uint8ClampedArray;$/;"	m	interface:Uint8ClampedArray
reverse	tsvscode.ts	/^    reverse(): void;$/;"	m	interface:Animation
reversed	tsvscode.ts	/^    reversed: boolean;$/;"	p	interface:HTMLOListElement
revokeObjectURL	tsvscode.ts	/^    revokeObjectURL(url: string): void;$/;"	v
rid	tsvscode.ts	/^    rid?: string;$/;"	p	interface:RTCOutboundRtpStreamStats
rid	tsvscode.ts	/^    rid?: string;$/;"	p	interface:RTCRtpCodingParameters
right	tsvscode.ts	/^    readonly right: number;$/;"	p	interface:DOMRectReadOnly
right	tsvscode.ts	/^    right: string;$/;"	p	interface:CSSStyleDeclaration
rk	tsvscode.ts	/^    rk?: boolean;$/;"	p	interface:CredentialPropertiesOutput
robustness	tsvscode.ts	/^    robustness?: string;$/;"	p	interface:MediaKeySystemMediaCapability
role	tsvscode.ts	/^    role: string | null;$/;"	p	interface:ARIAMixin
rolloffFactor	tsvscode.ts	/^    rolloffFactor: number;$/;"	p	interface:PannerNode
rolloffFactor	tsvscode.ts	/^    rolloffFactor?: number;$/;"	p	interface:PannerOptions
root	tsvscode.ts	/^    readonly root: Element | Document | null;$/;"	p	interface:IntersectionObserver
root	tsvscode.ts	/^    readonly root: FileSystemDirectoryEntry;$/;"	p	interface:FileSystem
root	tsvscode.ts	/^    readonly root: Node;$/;"	p	interface:NodeIterator
root	tsvscode.ts	/^    readonly root: Node;$/;"	p	interface:TreeWalker
root	tsvscode.ts	/^    root?: Element | Document | null;$/;"	p	interface:IntersectionObserverInit
rootBounds	tsvscode.ts	/^    readonly rootBounds: DOMRectReadOnly | null;$/;"	p	interface:IntersectionObserverEntry
rootBounds	tsvscode.ts	/^    rootBounds: DOMRectInit | null;$/;"	p	interface:IntersectionObserverEntryInit
rootElement	tsvscode.ts	/^    readonly rootElement: SVGSVGElement | null;$/;"	p	interface:Document
rootMargin	tsvscode.ts	/^    readonly rootMargin: string;$/;"	p	interface:IntersectionObserver
rootMargin	tsvscode.ts	/^    rootMargin?: string;$/;"	p	interface:IntersectionObserverInit
rotate	tsvscode.ts	/^    readonly rotate: SVGAnimatedNumberList;$/;"	p	interface:SVGTextPositioningElement
rotate	tsvscode.ts	/^    rotate(angle: number): void;$/;"	m	interface:CanvasTransform
rotate	tsvscode.ts	/^    rotate(rotX?: number, rotY?: number, rotZ?: number): DOMMatrix;$/;"	m	interface:DOMMatrixReadOnly
rotate	tsvscode.ts	/^    rotate: string;$/;"	p	interface:CSSStyleDeclaration
rotateAxisAngle	tsvscode.ts	/^    rotateAxisAngle(x?: number, y?: number, z?: number, angle?: number): DOMMatrix;$/;"	m	interface:DOMMatrixReadOnly
rotateAxisAngleSelf	tsvscode.ts	/^    rotateAxisAngleSelf(x?: number, y?: number, z?: number, angle?: number): DOMMatrix;$/;"	m	interface:DOMMatrix
rotateFromVector	tsvscode.ts	/^    rotateFromVector(x?: number, y?: number): DOMMatrix;$/;"	m	interface:DOMMatrixReadOnly
rotateFromVectorSelf	tsvscode.ts	/^    rotateFromVectorSelf(x?: number, y?: number): DOMMatrix;$/;"	m	interface:DOMMatrix
rotateSelf	tsvscode.ts	/^    rotateSelf(rotX?: number, rotY?: number, rotZ?: number): DOMMatrix;$/;"	m	interface:DOMMatrix
rotationAngle	tsvscode.ts	/^    readonly rotationAngle: number;$/;"	p	interface:Touch
rotationAngle	tsvscode.ts	/^    rotationAngle?: number;$/;"	p	interface:TouchInit
rotationRate	tsvscode.ts	/^    readonly rotationRate: DeviceMotionEventRotationRate | null;$/;"	p	interface:DeviceMotionEvent
rotationRate	tsvscode.ts	/^    rotationRate?: DeviceMotionEventRotationRateInit;$/;"	p	interface:DeviceMotionEventInit
round	ests.ts	/^    round(x: number): number;$/;"	m	interface:Math
roundRect	tsvscode.ts	/^    roundRect(x: number, y: number, w: number, h: number, radii?: number | DOMPointInit | (numbe/;"	m	interface:CanvasPath
rowGap	tsvscode.ts	/^    rowGap: string;$/;"	p	interface:CSSStyleDeclaration
rowIndex	tsvscode.ts	/^    readonly rowIndex: number;$/;"	p	interface:HTMLTableRowElement
rowSpan	tsvscode.ts	/^    rowSpan: number;$/;"	p	interface:HTMLTableCellElement
rows	tsvscode.ts	/^    readonly rows: HTMLCollectionOf<HTMLTableRowElement>;$/;"	p	interface:HTMLTableElement
rows	tsvscode.ts	/^    readonly rows: HTMLCollectionOf<HTMLTableRowElement>;$/;"	p	interface:HTMLTableSectionElement
rows	tsvscode.ts	/^    rows: number;$/;"	p	interface:HTMLTextAreaElement
rows	tsvscode.ts	/^    rows: string;$/;"	p	interface:HTMLFrameSetElement
rp	tsvscode.ts	/^    rp: PublicKeyCredentialRpEntity;$/;"	p	interface:PublicKeyCredentialCreationOptions
rpId	tsvscode.ts	/^    rpId?: string;$/;"	p	interface:PublicKeyCredentialRequestOptions
rtcp	tsvscode.ts	/^    rtcp: RTCRtcpParameters;$/;"	p	interface:RTCRtpParameters
rtcpMuxPolicy	tsvscode.ts	/^    rtcpMuxPolicy?: RTCRtcpMuxPolicy;$/;"	p	interface:RTCConfiguration
rtpTimestamp	tsvscode.ts	/^    rtpTimestamp: number;$/;"	p	interface:RTCRtpContributingSource
rtpTimestamp	tsvscode.ts	/^    rtpTimestamp?: number;$/;"	p	interface:VideoFrameCallbackMetadata
rtxSsrc	tsvscode.ts	/^    rtxSsrc?: number;$/;"	p	interface:RTCOutboundRtpStreamStats
rubyPosition	tsvscode.ts	/^    rubyPosition: string;$/;"	p	interface:CSSStyleDeclaration
rules	tsvscode.ts	/^    readonly rules: CSSRuleList;$/;"	p	interface:CSSStyleSheet
rules	tsvscode.ts	/^    rules: string;$/;"	p	interface:HTMLTableElement
rx	tsvscode.ts	/^    readonly rx: SVGAnimatedLength;$/;"	p	interface:SVGEllipseElement
rx	tsvscode.ts	/^    readonly rx: SVGAnimatedLength;$/;"	p	interface:SVGRectElement
rx	tsvscode.ts	/^    rx: string;$/;"	p	interface:CSSStyleDeclaration
ry	tsvscode.ts	/^    readonly ry: SVGAnimatedLength;$/;"	p	interface:SVGEllipseElement
ry	tsvscode.ts	/^    readonly ry: SVGAnimatedLength;$/;"	p	interface:SVGRectElement
ry	tsvscode.ts	/^    ry: string;$/;"	p	interface:CSSStyleDeclaration
salt	tsvscode.ts	/^    salt: BufferSource;$/;"	p	interface:HkdfParams
salt	tsvscode.ts	/^    salt: BufferSource;$/;"	p	interface:Pbkdf2Params
saltLength	tsvscode.ts	/^    saltLength: number;$/;"	p	interface:RsaPssParams
sample	tsvscode.ts	/^    readonly sample: string;$/;"	p	interface:SecurityPolicyViolationEvent
sample	tsvscode.ts	/^    sample?: string;$/;"	p	interface:SecurityPolicyViolationEventInit
sampleCoverage	tsvscode.ts	/^    sampleCoverage(value: GLclampf, invert: GLboolean): void;$/;"	m	interface:WebGLRenderingContextBase
sampleRate	tsvscode.ts	/^    readonly sampleRate: number;$/;"	p	interface:AudioBuffer
sampleRate	tsvscode.ts	/^    readonly sampleRate: number;$/;"	p	interface:BaseAudioContext
sampleRate	tsvscode.ts	/^    sampleRate: number;$/;"	p	interface:AudioBufferOptions
sampleRate	tsvscode.ts	/^    sampleRate: number;$/;"	p	interface:OfflineAudioContextOptions
sampleRate	tsvscode.ts	/^    sampleRate?: ConstrainULong;$/;"	p	interface:MediaTrackConstraintSet
sampleRate	tsvscode.ts	/^    sampleRate?: ULongRange;$/;"	p	interface:MediaTrackCapabilities
sampleRate	tsvscode.ts	/^    sampleRate?: boolean;$/;"	p	interface:MediaTrackSupportedConstraints
sampleRate	tsvscode.ts	/^    sampleRate?: number;$/;"	p	interface:AudioContextOptions
sampleRate	tsvscode.ts	/^    sampleRate?: number;$/;"	p	interface:MediaTrackSettings
sampleSize	tsvscode.ts	/^    sampleSize?: ConstrainULong;$/;"	p	interface:MediaTrackConstraintSet
sampleSize	tsvscode.ts	/^    sampleSize?: ULongRange;$/;"	p	interface:MediaTrackCapabilities
sampleSize	tsvscode.ts	/^    sampleSize?: boolean;$/;"	p	interface:MediaTrackSupportedConstraints
sampleSize	tsvscode.ts	/^    sampleSize?: number;$/;"	p	interface:MediaTrackSettings
samplerParameterf	tsvscode.ts	/^    samplerParameterf(sampler: WebGLSampler, pname: GLenum, param: GLfloat): void;$/;"	m	interface:WebGL2RenderingContextBase
samplerParameteri	tsvscode.ts	/^    samplerParameteri(sampler: WebGLSampler, pname: GLenum, param: GLint): void;$/;"	m	interface:WebGL2RenderingContextBase
samplerate	tsvscode.ts	/^    samplerate?: number;$/;"	p	interface:AudioConfiguration
sandbox	tsvscode.ts	/^    readonly sandbox: DOMTokenList;$/;"	p	interface:HTMLIFrameElement
save	tsvscode.ts	/^    save(): void;$/;"	m	interface:CanvasState
scalabilityMode	tsvscode.ts	/^    scalabilityMode?: string;$/;"	p	interface:VideoConfiguration
scalabilityMode	tsvscode.ts	/^    scalabilityMode?: string;$/;"	p	interface:VideoEncoderConfig
scale	tsvscode.ts	/^    readonly scale: SVGAnimatedNumber;$/;"	p	interface:SVGFEDisplacementMapElement
scale	tsvscode.ts	/^    readonly scale: number;$/;"	p	interface:VisualViewport
scale	tsvscode.ts	/^    scale(scaleX?: number, scaleY?: number, scaleZ?: number, originX?: number, originY?: number,/;"	m	interface:DOMMatrixReadOnly
scale	tsvscode.ts	/^    scale(x: number, y: number): void;$/;"	m	interface:CanvasTransform
scale	tsvscode.ts	/^    scale: string;$/;"	p	interface:CSSStyleDeclaration
scale3d	tsvscode.ts	/^    scale3d(scale?: number, originX?: number, originY?: number, originZ?: number): DOMMatrix;$/;"	m	interface:DOMMatrixReadOnly
scale3dSelf	tsvscode.ts	/^    scale3dSelf(scale?: number, originX?: number, originY?: number, originZ?: number): DOMMatrix/;"	m	interface:DOMMatrix
scaleNonUniform	tsvscode.ts	/^    scaleNonUniform(scaleX?: number, scaleY?: number): DOMMatrix;$/;"	m	interface:DOMMatrixReadOnly
scaleResolutionDownBy	tsvscode.ts	/^    scaleResolutionDownBy?: number;$/;"	p	interface:RTCRtpEncodingParameters
scaleSelf	tsvscode.ts	/^    scaleSelf(scaleX?: number, scaleY?: number, scaleZ?: number, originX?: number, originY?: num/;"	m	interface:DOMMatrix
scheme	tsvscode.ts	/^    scheme: string;$/;"	p	interface:HTMLMetaElement
scissor	tsvscode.ts	/^    scissor(x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;$/;"	m	interface:WebGLRenderingContextBase
scope	tsvscode.ts	/^    readonly scope: string;$/;"	p	interface:ServiceWorkerRegistration
scope	tsvscode.ts	/^    scope: string;$/;"	p	interface:HTMLTableCellElement
scope	tsvscode.ts	/^    scope?: string;$/;"	p	interface:RegistrationOptions
screen	tsvscode.ts	/^    readonly screen: Screen;$/;"	p	interface:Window
screen	tsvscode.ts	/^declare var screen: Screen;$/;"	v	namespace:CSS
screenLeft	tsvscode.ts	/^    readonly screenLeft: number;$/;"	p	interface:Window
screenLeft	tsvscode.ts	/^declare var screenLeft: number;$/;"	v	namespace:CSS
screenTop	tsvscode.ts	/^    readonly screenTop: number;$/;"	p	interface:Window
screenTop	tsvscode.ts	/^declare var screenTop: number;$/;"	v	namespace:CSS
screenX	tsvscode.ts	/^    readonly screenX: number;$/;"	p	interface:MouseEvent
screenX	tsvscode.ts	/^    readonly screenX: number;$/;"	p	interface:Touch
screenX	tsvscode.ts	/^    readonly screenX: number;$/;"	p	interface:Window
screenX	tsvscode.ts	/^    screenX?: number;$/;"	p	interface:MouseEventInit
screenX	tsvscode.ts	/^    screenX?: number;$/;"	p	interface:TouchInit
screenX	tsvscode.ts	/^declare var screenX: number;$/;"	v	namespace:CSS
screenY	tsvscode.ts	/^    readonly screenY: number;$/;"	p	interface:MouseEvent
screenY	tsvscode.ts	/^    readonly screenY: number;$/;"	p	interface:Touch
screenY	tsvscode.ts	/^    readonly screenY: number;$/;"	p	interface:Window
screenY	tsvscode.ts	/^    screenY?: number;$/;"	p	interface:MouseEventInit
screenY	tsvscode.ts	/^    screenY?: number;$/;"	p	interface:TouchInit
screenY	tsvscode.ts	/^declare var screenY: number;$/;"	v	namespace:CSS
scriptURL	tsvscode.ts	/^    readonly scriptURL: string;$/;"	p	interface:ServiceWorker
scripts	tsvscode.ts	/^    readonly scripts: HTMLCollectionOf<HTMLScriptElement>;$/;"	p	interface:Document
scroll	tsvscode.ts	/^    scroll(options?: ScrollToOptions): void;$/;"	m	interface:Element
scroll	tsvscode.ts	/^    scroll(options?: ScrollToOptions): void;$/;"	m	interface:Window
scroll	tsvscode.ts	/^    scroll(x: number, y: number): void;$/;"	m	interface:Element
scroll	tsvscode.ts	/^    scroll(x: number, y: number): void;$/;"	m	interface:Window
scroll	tsvscode.ts	/^    scroll: ScrollSetting;$/;"	p	interface:VTTRegion
scrollAmount	tsvscode.ts	/^    scrollAmount: number;$/;"	p	interface:HTMLMarqueeElement
scrollBehavior	tsvscode.ts	/^    scrollBehavior: string;$/;"	p	interface:CSSStyleDeclaration
scrollBy	tsvscode.ts	/^    scrollBy(options?: ScrollToOptions): void;$/;"	m	interface:Element
scrollBy	tsvscode.ts	/^    scrollBy(options?: ScrollToOptions): void;$/;"	m	interface:Window
scrollBy	tsvscode.ts	/^    scrollBy(x: number, y: number): void;$/;"	m	interface:Element
scrollBy	tsvscode.ts	/^    scrollBy(x: number, y: number): void;$/;"	m	interface:Window
scrollDelay	tsvscode.ts	/^    scrollDelay: number;$/;"	p	interface:HTMLMarqueeElement
scrollHeight	tsvscode.ts	/^    readonly scrollHeight: number;$/;"	p	interface:Element
scrollIntoView	tsvscode.ts	/^    scrollIntoView(arg?: boolean | ScrollIntoViewOptions): void;$/;"	m	interface:Element
scrollLeft	tsvscode.ts	/^    scrollLeft: number;$/;"	p	interface:Element
scrollMargin	tsvscode.ts	/^    scrollMargin: string;$/;"	p	interface:CSSStyleDeclaration
scrollMarginBlock	tsvscode.ts	/^    scrollMarginBlock: string;$/;"	p	interface:CSSStyleDeclaration
scrollMarginBlockEnd	tsvscode.ts	/^    scrollMarginBlockEnd: string;$/;"	p	interface:CSSStyleDeclaration
scrollMarginBlockStart	tsvscode.ts	/^    scrollMarginBlockStart: string;$/;"	p	interface:CSSStyleDeclaration
scrollMarginBottom	tsvscode.ts	/^    scrollMarginBottom: string;$/;"	p	interface:CSSStyleDeclaration
scrollMarginInline	tsvscode.ts	/^    scrollMarginInline: string;$/;"	p	interface:CSSStyleDeclaration
scrollMarginInlineEnd	tsvscode.ts	/^    scrollMarginInlineEnd: string;$/;"	p	interface:CSSStyleDeclaration
scrollMarginInlineStart	tsvscode.ts	/^    scrollMarginInlineStart: string;$/;"	p	interface:CSSStyleDeclaration
scrollMarginLeft	tsvscode.ts	/^    scrollMarginLeft: string;$/;"	p	interface:CSSStyleDeclaration
scrollMarginRight	tsvscode.ts	/^    scrollMarginRight: string;$/;"	p	interface:CSSStyleDeclaration
scrollMarginTop	tsvscode.ts	/^    scrollMarginTop: string;$/;"	p	interface:CSSStyleDeclaration
scrollPadding	tsvscode.ts	/^    scrollPadding: string;$/;"	p	interface:CSSStyleDeclaration
scrollPaddingBlock	tsvscode.ts	/^    scrollPaddingBlock: string;$/;"	p	interface:CSSStyleDeclaration
scrollPaddingBlockEnd	tsvscode.ts	/^    scrollPaddingBlockEnd: string;$/;"	p	interface:CSSStyleDeclaration
scrollPaddingBlockStart	tsvscode.ts	/^    scrollPaddingBlockStart: string;$/;"	p	interface:CSSStyleDeclaration
scrollPaddingBottom	tsvscode.ts	/^    scrollPaddingBottom: string;$/;"	p	interface:CSSStyleDeclaration
scrollPaddingInline	tsvscode.ts	/^    scrollPaddingInline: string;$/;"	p	interface:CSSStyleDeclaration
scrollPaddingInlineEnd	tsvscode.ts	/^    scrollPaddingInlineEnd: string;$/;"	p	interface:CSSStyleDeclaration
scrollPaddingInlineStart	tsvscode.ts	/^    scrollPaddingInlineStart: string;$/;"	p	interface:CSSStyleDeclaration
scrollPaddingLeft	tsvscode.ts	/^    scrollPaddingLeft: string;$/;"	p	interface:CSSStyleDeclaration
scrollPaddingRight	tsvscode.ts	/^    scrollPaddingRight: string;$/;"	p	interface:CSSStyleDeclaration
scrollPaddingTop	tsvscode.ts	/^    scrollPaddingTop: string;$/;"	p	interface:CSSStyleDeclaration
scrollRestoration	tsvscode.ts	/^    scrollRestoration: ScrollRestoration;$/;"	p	interface:History
scrollSnapAlign	tsvscode.ts	/^    scrollSnapAlign: string;$/;"	p	interface:CSSStyleDeclaration
scrollSnapStop	tsvscode.ts	/^    scrollSnapStop: string;$/;"	p	interface:CSSStyleDeclaration
scrollSnapType	tsvscode.ts	/^    scrollSnapType: string;$/;"	p	interface:CSSStyleDeclaration
scrollTo	tsvscode.ts	/^    scrollTo(options?: ScrollToOptions): void;$/;"	m	interface:Element
scrollTo	tsvscode.ts	/^    scrollTo(options?: ScrollToOptions): void;$/;"	m	interface:Window
scrollTo	tsvscode.ts	/^    scrollTo(x: number, y: number): void;$/;"	m	interface:Element
scrollTo	tsvscode.ts	/^    scrollTo(x: number, y: number): void;$/;"	m	interface:Window
scrollTop	tsvscode.ts	/^    scrollTop: number;$/;"	p	interface:Element
scrollWidth	tsvscode.ts	/^    readonly scrollWidth: number;$/;"	p	interface:Element
scrollX	tsvscode.ts	/^    readonly scrollX: number;$/;"	p	interface:Window
scrollX	tsvscode.ts	/^declare var scrollX: number;$/;"	v	namespace:CSS
scrollY	tsvscode.ts	/^    readonly scrollY: number;$/;"	p	interface:Window
scrollY	tsvscode.ts	/^declare var scrollY: number;$/;"	v	namespace:CSS
scrollbarColor	tsvscode.ts	/^    scrollbarColor: string;$/;"	p	interface:CSSStyleDeclaration
scrollbarGutter	tsvscode.ts	/^    scrollbarGutter: string;$/;"	p	interface:CSSStyleDeclaration
scrollbarWidth	tsvscode.ts	/^    scrollbarWidth: string;$/;"	p	interface:CSSStyleDeclaration
scrollbars	tsvscode.ts	/^    readonly scrollbars: BarProp;$/;"	p	interface:Window
scrollbars	tsvscode.ts	/^declare var scrollbars: BarProp;$/;"	v	namespace:CSS
scrolling	tsvscode.ts	/^    scrolling: string;$/;"	p	interface:HTMLFrameElement
scrolling	tsvscode.ts	/^    scrolling: string;$/;"	p	interface:HTMLIFrameElement
scrollingElement	tsvscode.ts	/^    readonly scrollingElement: Element | null;$/;"	p	interface:Document
sctp	tsvscode.ts	/^    readonly sctp: RTCSctpTransport | null;$/;"	p	interface:RTCPeerConnection
sctpCauseCode	tsvscode.ts	/^    readonly sctpCauseCode: number | null;$/;"	p	interface:RTCError
sctpCauseCode	tsvscode.ts	/^    sctpCauseCode?: number;$/;"	p	interface:RTCErrorInit
sdp	tsvscode.ts	/^    readonly sdp: string;$/;"	p	interface:RTCSessionDescription
sdp	tsvscode.ts	/^    sdp?: string;$/;"	p	interface:RTCLocalSessionDescriptionInit
sdp	tsvscode.ts	/^    sdp?: string;$/;"	p	interface:RTCSessionDescriptionInit
sdpFmtpLine	tsvscode.ts	/^    sdpFmtpLine?: string;$/;"	p	interface:RTCRtpCodec
sdpLineNumber	tsvscode.ts	/^    readonly sdpLineNumber: number | null;$/;"	p	interface:RTCError
sdpLineNumber	tsvscode.ts	/^    sdpLineNumber?: number;$/;"	p	interface:RTCErrorInit
sdpMLineIndex	tsvscode.ts	/^    readonly sdpMLineIndex: number | null;$/;"	p	interface:RTCIceCandidate
sdpMLineIndex	tsvscode.ts	/^    sdpMLineIndex?: number | null;$/;"	p	interface:RTCIceCandidateInit
sdpMid	tsvscode.ts	/^    readonly sdpMid: string | null;$/;"	p	interface:RTCIceCandidate
sdpMid	tsvscode.ts	/^    sdpMid?: string | null;$/;"	p	interface:RTCIceCandidateInit
seal	ests.ts	/^    seal<T>(o: T): T;$/;"	m	interface:ObjectConstructor
search	ests.ts	/^    search(regexp: string | RegExp): number;$/;"	m	interface:String
search	tsvscode.ts	/^    search: string;$/;"	p	interface:HTMLHyperlinkElementUtils
search	tsvscode.ts	/^    search: string;$/;"	p	interface:Location
search	tsvscode.ts	/^    search: string;$/;"	p	interface:URL
searchParams	tsvscode.ts	/^    readonly searchParams: URLSearchParams;$/;"	p	interface:URL
second	ests.ts	/^        second?: "numeric" | "2-digit" | undefined;$/;"	p	interface:Intl.DateTimeFormatOptions
second	ests.ts	/^        second?: string;$/;"	p	interface:Intl.ResolvedDateTimeFormatOptions
sectionRowIndex	tsvscode.ts	/^    readonly sectionRowIndex: number;$/;"	p	interface:HTMLTableRowElement
secureConnectionStart	tsvscode.ts	/^    readonly secureConnectionStart: DOMHighResTimeStamp;$/;"	p	interface:PerformanceResourceTiming
secureConnectionStart	tsvscode.ts	/^    readonly secureConnectionStart: number;$/;"	p	interface:PerformanceTiming
seed	tsvscode.ts	/^    readonly seed: SVGAnimatedNumber;$/;"	p	interface:SVGFETurbulenceElement
seek	tsvscode.ts	/^    seek(position: number): Promise<void>;$/;"	m	interface:FileSystemWritableFileStream
seekOffset	tsvscode.ts	/^    seekOffset?: number;$/;"	p	interface:MediaSessionActionDetails
seekTime	tsvscode.ts	/^    seekTime?: number;$/;"	p	interface:MediaSessionActionDetails
seekable	tsvscode.ts	/^    readonly seekable: TimeRanges;$/;"	p	interface:HTMLMediaElement
seeking	tsvscode.ts	/^    readonly seeking: boolean;$/;"	p	interface:HTMLMediaElement
select	tsvscode.ts	/^    select(): void;$/;"	m	interface:HTMLInputElement
select	tsvscode.ts	/^    select(): void;$/;"	m	interface:HTMLTextAreaElement
selectAllChildren	tsvscode.ts	/^    selectAllChildren(node: Node): void;$/;"	m	interface:Selection
selectNode	tsvscode.ts	/^    selectNode(node: Node): void;$/;"	m	interface:Range
selectNodeContents	tsvscode.ts	/^    selectNodeContents(node: Node): void;$/;"	m	interface:Range
selectSubString	tsvscode.ts	/^    selectSubString(charnum: number, nchars: number): void;$/;"	m	interface:SVGTextContentElement
selected	tsvscode.ts	/^    selected: boolean;$/;"	p	interface:HTMLOptionElement
selectedCandidatePairId	tsvscode.ts	/^    selectedCandidatePairId?: string;$/;"	p	interface:RTCTransportStats
selectedIndex	tsvscode.ts	/^    selectedIndex: number;$/;"	p	interface:HTMLOptionsCollection
selectedIndex	tsvscode.ts	/^    selectedIndex: number;$/;"	p	interface:HTMLSelectElement
selectedOptions	tsvscode.ts	/^    readonly selectedOptions: HTMLCollectionOf<HTMLOptionElement>;$/;"	p	interface:HTMLSelectElement
selectionDirection	tsvscode.ts	/^    selectionDirection: "forward" | "backward" | "none" | null;$/;"	p	interface:HTMLInputElement
selectionDirection	tsvscode.ts	/^    selectionDirection: "forward" | "backward" | "none";$/;"	p	interface:HTMLTextAreaElement
selectionEnd	tsvscode.ts	/^    selectionEnd: number | null;$/;"	p	interface:HTMLInputElement
selectionEnd	tsvscode.ts	/^    selectionEnd: number;$/;"	p	interface:HTMLTextAreaElement
selectionStart	tsvscode.ts	/^    selectionStart: number | null;$/;"	p	interface:HTMLInputElement
selectionStart	tsvscode.ts	/^    selectionStart: number;$/;"	p	interface:HTMLTextAreaElement
selectorText	tsvscode.ts	/^    selectorText: string;$/;"	p	interface:CSSPageRule
selectorText	tsvscode.ts	/^    selectorText: string;$/;"	p	interface:CSSStyleRule
self	tsvscode.ts	/^    readonly self: Window & typeof globalThis;$/;"	p	interface:Window
self	tsvscode.ts	/^declare var self: Window & typeof globalThis;$/;"	v	namespace:CSS
send	tsvscode.ts	/^    send(body?: Document | XMLHttpRequestBodyInit | null): void;$/;"	m	interface:XMLHttpRequest
send	tsvscode.ts	/^    send(data: ArrayBuffer): void;$/;"	m	interface:RTCDataChannel
send	tsvscode.ts	/^    send(data: ArrayBufferView): void;$/;"	m	interface:RTCDataChannel
send	tsvscode.ts	/^    send(data: Blob): void;$/;"	m	interface:RTCDataChannel
send	tsvscode.ts	/^    send(data: number[], timestamp?: DOMHighResTimeStamp): void;$/;"	m	interface:MIDIOutput
send	tsvscode.ts	/^    send(data: string | ArrayBufferLike | Blob | ArrayBufferView): void;$/;"	m	interface:WebSocket
send	tsvscode.ts	/^    send(data: string): void;$/;"	m	interface:RTCDataChannel
sendBeacon	tsvscode.ts	/^    sendBeacon(url: string | URL, data?: BodyInit | null): boolean;$/;"	m	interface:Navigator
sendEncodings	tsvscode.ts	/^    sendEncodings?: RTCRtpEncodingParameters[];$/;"	p	interface:RTCRtpTransceiverInit
sendOrder	tsvscode.ts	/^    sendOrder?: number;$/;"	p	interface:WebTransportSendStreamOptions
sender	tsvscode.ts	/^    readonly sender: RTCRtpSender;$/;"	p	interface:RTCRtpTransceiver
sensitivity	ests.ts	/^        sensitivity: string;$/;"	p	interface:Intl.ResolvedCollatorOptions
sensitivity	ests.ts	/^        sensitivity?: "base" | "accent" | "case" | "variant" | undefined;$/;"	p	interface:Intl.CollatorOptions
sentAlert	tsvscode.ts	/^    readonly sentAlert: number | null;$/;"	p	interface:RTCError
sentAlert	tsvscode.ts	/^    sentAlert?: number;$/;"	p	interface:RTCErrorInit
sequenceNumber	tsvscode.ts	/^    sequenceNumber?: number;$/;"	p	interface:RTCEncodedAudioFrameMetadata
serializeToString	tsvscode.ts	/^    serializeToString(root: Node): string;$/;"	m	interface:XMLSerializer
serverCertificateHashes	tsvscode.ts	/^    serverCertificateHashes?: WebTransportHash[];$/;"	p	interface:WebTransportOptions
serverTiming	tsvscode.ts	/^    readonly serverTiming: ReadonlyArray<PerformanceServerTiming>;$/;"	p	interface:PerformanceResourceTiming
serviceWorker	tsvscode.ts	/^    readonly serviceWorker: ServiceWorkerContainer;$/;"	p	interface:Navigator
sessionId	tsvscode.ts	/^    readonly sessionId: string;$/;"	p	interface:MediaKeySession
sessionStorage	tsvscode.ts	/^    readonly sessionStorage: Storage;$/;"	p	interface:WindowSessionStorage
sessionTypes	tsvscode.ts	/^    sessionTypes?: string[];$/;"	p	interface:MediaKeySystemConfiguration
set	ests.ts	/^    set(array: ArrayLike<number>, offset?: number): void;$/;"	m	interface:Float32Array
set	ests.ts	/^    set(array: ArrayLike<number>, offset?: number): void;$/;"	m	interface:Float64Array
set	ests.ts	/^    set(array: ArrayLike<number>, offset?: number): void;$/;"	m	interface:Int16Array
set	ests.ts	/^    set(array: ArrayLike<number>, offset?: number): void;$/;"	m	interface:Int32Array
set	ests.ts	/^    set(array: ArrayLike<number>, offset?: number): void;$/;"	m	interface:Int8Array
set	ests.ts	/^    set(array: ArrayLike<number>, offset?: number): void;$/;"	m	interface:Uint16Array
set	ests.ts	/^    set(array: ArrayLike<number>, offset?: number): void;$/;"	m	interface:Uint32Array
set	ests.ts	/^    set(array: ArrayLike<number>, offset?: number): void;$/;"	m	interface:Uint8Array
set	ests.ts	/^    set(array: ArrayLike<number>, offset?: number): void;$/;"	m	interface:Uint8ClampedArray
set	ests.ts	/^    set?(v: any): void;$/;"	m	interface:PropertyDescriptor
set	ests.ts	/^    set?: (value: T) => void;$/;"	p	interface:TypedPropertyDescriptor
set	tsvscode.ts	/^    set location(href: string | Location);$/;"	p	interface:Document
set	tsvscode.ts	/^    set location(href: string | Location);$/;"	p	interface:Window
set	tsvscode.ts	/^    set(name: string, blobValue: Blob, filename?: string): void;$/;"	m	interface:FormData
set	tsvscode.ts	/^    set(name: string, value: string | Blob): void;$/;"	m	interface:FormData
set	tsvscode.ts	/^    set(name: string, value: string): void;$/;"	m	interface:FormData
set	tsvscode.ts	/^    set(name: string, value: string): void;$/;"	m	interface:Headers
set	tsvscode.ts	/^    set(name: string, value: string): void;$/;"	m	interface:URLSearchParams
set	tsvscode.ts	/^    set(property: string, ...values: (CSSStyleValue | string)[]): void;$/;"	m	interface:StylePropertyMap
setActionHandler	tsvscode.ts	/^    setActionHandler(action: MediaSessionAction, handler: MediaSessionActionHandler | null): voi/;"	m	interface:MediaSession
setAppBadge	tsvscode.ts	/^    setAppBadge(contents?: number): Promise<void>;$/;"	m	interface:NavigatorBadge
setAttribute	tsvscode.ts	/^    setAttribute(qualifiedName: string, value: string): void;$/;"	m	interface:Element
setAttributeNS	tsvscode.ts	/^    setAttributeNS(namespace: string | null, qualifiedName: string, value: string): void;$/;"	m	interface:Element
setAttributeNode	tsvscode.ts	/^    setAttributeNode(attr: Attr): Attr | null;$/;"	m	interface:Element
setAttributeNodeNS	tsvscode.ts	/^    setAttributeNodeNS(attr: Attr): Attr | null;$/;"	m	interface:Element
setBaseAndExtent	tsvscode.ts	/^    setBaseAndExtent(anchorNode: Node, anchorOffset: number, focusNode: Node, focusOffset: numbe/;"	m	interface:Selection
setCodecPreferences	tsvscode.ts	/^    setCodecPreferences(codecs: RTCRtpCodecCapability[]): void;$/;"	m	interface:RTCRtpTransceiver
setConfiguration	tsvscode.ts	/^    setConfiguration(configuration?: RTCConfiguration): void;$/;"	m	interface:RTCPeerConnection
setCurrentTime	tsvscode.ts	/^    setCurrentTime(seconds: number): void;$/;"	m	interface:SVGSVGElement
setCustomValidity	tsvscode.ts	/^    setCustomValidity(error: string): void;$/;"	m	interface:HTMLButtonElement
setCustomValidity	tsvscode.ts	/^    setCustomValidity(error: string): void;$/;"	m	interface:HTMLFieldSetElement
setCustomValidity	tsvscode.ts	/^    setCustomValidity(error: string): void;$/;"	m	interface:HTMLInputElement
setCustomValidity	tsvscode.ts	/^    setCustomValidity(error: string): void;$/;"	m	interface:HTMLObjectElement
setCustomValidity	tsvscode.ts	/^    setCustomValidity(error: string): void;$/;"	m	interface:HTMLOutputElement
setCustomValidity	tsvscode.ts	/^    setCustomValidity(error: string): void;$/;"	m	interface:HTMLSelectElement
setCustomValidity	tsvscode.ts	/^    setCustomValidity(error: string): void;$/;"	m	interface:HTMLTextAreaElement
setData	tsvscode.ts	/^    setData(format: string, data: string): void;$/;"	m	interface:DataTransfer
setDate	ests.ts	/^    setDate(date: number): number;$/;"	m	interface:Date
setDragImage	tsvscode.ts	/^    setDragImage(image: Element, x: number, y: number): void;$/;"	m	interface:DataTransfer
setEnd	tsvscode.ts	/^    setEnd(node: Node, offset: number): void;$/;"	m	interface:Range
setEndAfter	tsvscode.ts	/^    setEndAfter(node: Node): void;$/;"	m	interface:Range
setEndBefore	tsvscode.ts	/^    setEndBefore(node: Node): void;$/;"	m	interface:Range
setFloat32	ests.ts	/^    setFloat32(byteOffset: number, value: number, littleEndian?: boolean): void;$/;"	m	interface:DataView
setFloat64	ests.ts	/^    setFloat64(byteOffset: number, value: number, littleEndian?: boolean): void;$/;"	m	interface:DataView
setFormValue	tsvscode.ts	/^    setFormValue(value: File | string | FormData | null, state?: File | string | FormData | null/;"	m	interface:ElementInternals
setFullYear	ests.ts	/^    setFullYear(year: number, month?: number, date?: number): number;$/;"	m	interface:Date
setHeaderValue	tsvscode.ts	/^    setHeaderValue(value: string): Promise<void>;$/;"	m	interface:NavigationPreloadManager
setHours	ests.ts	/^    setHours(hours: number, min?: number, sec?: number, ms?: number): number;$/;"	m	interface:Date
setInt16	ests.ts	/^    setInt16(byteOffset: number, value: number, littleEndian?: boolean): void;$/;"	m	interface:DataView
setInt32	ests.ts	/^    setInt32(byteOffset: number, value: number, littleEndian?: boolean): void;$/;"	m	interface:DataView
setInt8	ests.ts	/^    setInt8(byteOffset: number, value: number): void;$/;"	m	interface:DataView
setInterval	tsvscode.ts	/^    setInterval(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;$/;"	m	interface:WindowOrWorkerGlobalScope
setItem	tsvscode.ts	/^    setItem(key: string, value: string): void;$/;"	m	interface:Storage
setKeyframes	tsvscode.ts	/^    setKeyframes(keyframes: Keyframe[] | PropertyIndexedKeyframes | null): void;$/;"	m	interface:KeyframeEffect
setLineDash	tsvscode.ts	/^    setLineDash(segments: number[]): void;$/;"	m	interface:CanvasPathDrawingStyles
setLiveSeekableRange	tsvscode.ts	/^    setLiveSeekableRange(start: number, end: number): void;$/;"	m	interface:MediaSource
setLocalDescription	tsvscode.ts	/^    setLocalDescription(description: RTCLocalSessionDescriptionInit, successCallback: VoidFuncti/;"	m	interface:RTCPeerConnection
setLocalDescription	tsvscode.ts	/^    setLocalDescription(description?: RTCLocalSessionDescriptionInit): Promise<void>;$/;"	m	interface:RTCPeerConnection
setMatrix	tsvscode.ts	/^    setMatrix(matrix?: DOMMatrix2DInit): void;$/;"	m	interface:SVGTransform
setMatrixValue	tsvscode.ts	/^    setMatrixValue(transformList: string): DOMMatrix;$/;"	m	interface:DOMMatrix
setMediaKeys	tsvscode.ts	/^    setMediaKeys(mediaKeys: MediaKeys | null): Promise<void>;$/;"	m	interface:HTMLMediaElement
setMilliseconds	ests.ts	/^    setMilliseconds(ms: number): number;$/;"	m	interface:Date
setMinutes	ests.ts	/^    setMinutes(min: number, sec?: number, ms?: number): number;$/;"	m	interface:Date
setMonth	ests.ts	/^    setMonth(month: number, date?: number): number;$/;"	m	interface:Date
setNamedItem	tsvscode.ts	/^    setNamedItem(attr: Attr): Attr | null;$/;"	m	interface:NamedNodeMap
setNamedItemNS	tsvscode.ts	/^    setNamedItemNS(attr: Attr): Attr | null;$/;"	m	interface:NamedNodeMap
setOrientToAngle	tsvscode.ts	/^    setOrientToAngle(angle: SVGAngle): void;$/;"	m	interface:SVGMarkerElement
setOrientToAuto	tsvscode.ts	/^    setOrientToAuto(): void;$/;"	m	interface:SVGMarkerElement
setOrientation	tsvscode.ts	/^    setOrientation(x: number, y: number, z: number): void;$/;"	m	interface:PannerNode
setOrientation	tsvscode.ts	/^    setOrientation(x: number, y: number, z: number, xUp: number, yUp: number, zUp: number): void/;"	m	interface:AudioListener
setParameter	tsvscode.ts	/^    setParameter(namespaceURI: string | null, localName: string, value: any): void;$/;"	m	interface:XSLTProcessor
setParameters	tsvscode.ts	/^    setParameters(parameters: RTCRtpSendParameters, setParameterOptions?: RTCSetParameterOptions/;"	m	interface:RTCRtpSender
setPeriodicWave	tsvscode.ts	/^    setPeriodicWave(periodicWave: PeriodicWave): void;$/;"	m	interface:OscillatorNode
setPointerCapture	tsvscode.ts	/^    setPointerCapture(pointerId: number): void;$/;"	m	interface:Element
setPosition	tsvscode.ts	/^    setPosition(node: Node | null, offset?: number): void;$/;"	m	interface:Selection
setPosition	tsvscode.ts	/^    setPosition(x: number, y: number, z: number): void;$/;"	m	interface:AudioListener
setPosition	tsvscode.ts	/^    setPosition(x: number, y: number, z: number): void;$/;"	m	interface:PannerNode
setPositionState	tsvscode.ts	/^    setPositionState(state?: MediaPositionState): void;$/;"	m	interface:MediaSession
setProperty	tsvscode.ts	/^    setProperty(property: string, value: string | null, priority?: string): void;$/;"	m	interface:CSSStyleDeclaration
setRangeText	tsvscode.ts	/^    setRangeText(replacement: string): void;$/;"	m	interface:HTMLInputElement
setRangeText	tsvscode.ts	/^    setRangeText(replacement: string): void;$/;"	m	interface:HTMLTextAreaElement
setRangeText	tsvscode.ts	/^    setRangeText(replacement: string, start: number, end: number, selectionMode?: SelectionMode)/;"	m	interface:HTMLInputElement
setRangeText	tsvscode.ts	/^    setRangeText(replacement: string, start: number, end: number, selectionMode?: SelectionMode)/;"	m	interface:HTMLTextAreaElement
setRemoteDescription	tsvscode.ts	/^    setRemoteDescription(description: RTCSessionDescriptionInit): Promise<void>;$/;"	m	interface:RTCPeerConnection
setRemoteDescription	tsvscode.ts	/^    setRemoteDescription(description: RTCSessionDescriptionInit, successCallback: VoidFunction, /;"	m	interface:RTCPeerConnection
setRequestHeader	tsvscode.ts	/^    setRequestHeader(name: string, value: string): void;$/;"	m	interface:XMLHttpRequest
setResourceTimingBufferSize	tsvscode.ts	/^    setResourceTimingBufferSize(maxSize: number): void;$/;"	m	interface:Performance
setRotate	tsvscode.ts	/^    setRotate(angle: number, cx: number, cy: number): void;$/;"	m	interface:SVGTransform
setScale	tsvscode.ts	/^    setScale(sx: number, sy: number): void;$/;"	m	interface:SVGTransform
setSeconds	ests.ts	/^    setSeconds(sec: number, ms?: number): number;$/;"	m	interface:Date
setSelectionRange	tsvscode.ts	/^    setSelectionRange(start: number | null, end: number | null, direction?: "forward" | "backwar/;"	m	interface:HTMLInputElement
setSelectionRange	tsvscode.ts	/^    setSelectionRange(start: number | null, end: number | null, direction?: "forward" | "backwar/;"	m	interface:HTMLTextAreaElement
setServerCertificate	tsvscode.ts	/^    setServerCertificate(serverCertificate: BufferSource): Promise<boolean>;$/;"	m	interface:MediaKeys
setSinkId	tsvscode.ts	/^    setSinkId(sinkId: string): Promise<void>;$/;"	m	interface:HTMLMediaElement
setSkewX	tsvscode.ts	/^    setSkewX(angle: number): void;$/;"	m	interface:SVGTransform
setSkewY	tsvscode.ts	/^    setSkewY(angle: number): void;$/;"	m	interface:SVGTransform
setStart	tsvscode.ts	/^    setStart(node: Node, offset: number): void;$/;"	m	interface:Range
setStartAfter	tsvscode.ts	/^    setStartAfter(node: Node): void;$/;"	m	interface:Range
setStartBefore	tsvscode.ts	/^    setStartBefore(node: Node): void;$/;"	m	interface:Range
setStdDeviation	tsvscode.ts	/^    setStdDeviation(stdDeviationX: number, stdDeviationY: number): void;$/;"	m	interface:SVGFEDropShadowElement
setStdDeviation	tsvscode.ts	/^    setStdDeviation(stdDeviationX: number, stdDeviationY: number): void;$/;"	m	interface:SVGFEGaussianBlurElement
setStreams	tsvscode.ts	/^    setStreams(...streams: MediaStream[]): void;$/;"	m	interface:RTCRtpSender
setTargetAtTime	tsvscode.ts	/^    setTargetAtTime(target: number, startTime: number, timeConstant: number): AudioParam;$/;"	m	interface:AudioParam
setTime	ests.ts	/^    setTime(time: number): number;$/;"	m	interface:Date
setTimeout	tsvscode.ts	/^    setTimeout(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;$/;"	m	interface:WindowOrWorkerGlobalScope
setTransform	tsvscode.ts	/^    setTransform(a: number, b: number, c: number, d: number, e: number, f: number): void;$/;"	m	interface:CanvasTransform
setTransform	tsvscode.ts	/^    setTransform(transform?: DOMMatrix2DInit): void;$/;"	m	interface:CanvasPattern
setTransform	tsvscode.ts	/^    setTransform(transform?: DOMMatrix2DInit): void;$/;"	m	interface:CanvasTransform
setTranslate	tsvscode.ts	/^    setTranslate(tx: number, ty: number): void;$/;"	m	interface:SVGTransform
setUTCDate	ests.ts	/^    setUTCDate(date: number): number;$/;"	m	interface:Date
setUTCFullYear	ests.ts	/^    setUTCFullYear(year: number, month?: number, date?: number): number;$/;"	m	interface:Date
setUTCHours	ests.ts	/^    setUTCHours(hours: number, min?: number, sec?: number, ms?: number): number;$/;"	m	interface:Date
setUTCMilliseconds	ests.ts	/^    setUTCMilliseconds(ms: number): number;$/;"	m	interface:Date
setUTCMinutes	ests.ts	/^    setUTCMinutes(min: number, sec?: number, ms?: number): number;$/;"	m	interface:Date
setUTCMonth	ests.ts	/^    setUTCMonth(month: number, date?: number): number;$/;"	m	interface:Date
setUTCSeconds	ests.ts	/^    setUTCSeconds(sec: number, ms?: number): number;$/;"	m	interface:Date
setUint16	ests.ts	/^    setUint16(byteOffset: number, value: number, littleEndian?: boolean): void;$/;"	m	interface:DataView
setUint32	ests.ts	/^    setUint32(byteOffset: number, value: number, littleEndian?: boolean): void;$/;"	m	interface:DataView
setUint8	ests.ts	/^    setUint8(byteOffset: number, value: number): void;$/;"	m	interface:DataView
setValidity	tsvscode.ts	/^    setValidity(flags?: ValidityStateFlags, message?: string, anchor?: HTMLElement): void;$/;"	m	interface:ElementInternals
setValueAtTime	tsvscode.ts	/^    setValueAtTime(value: number, startTime: number): AudioParam;$/;"	m	interface:AudioParam
setValueCurveAtTime	tsvscode.ts	/^    setValueCurveAtTime(values: number[] | Float32Array, startTime: number, duration: number): A/;"	m	interface:AudioParam
shaderSource	tsvscode.ts	/^    shaderSource(shader: WebGLShader, source: string): void;$/;"	m	interface:WebGLRenderingContextBase
shadowBlur	tsvscode.ts	/^    shadowBlur: number;$/;"	p	interface:CanvasShadowStyles
shadowColor	tsvscode.ts	/^    shadowColor: string;$/;"	p	interface:CanvasShadowStyles
shadowOffsetX	tsvscode.ts	/^    shadowOffsetX: number;$/;"	p	interface:CanvasShadowStyles
shadowOffsetY	tsvscode.ts	/^    shadowOffsetY: number;$/;"	p	interface:CanvasShadowStyles
shadowRoot	tsvscode.ts	/^    readonly shadowRoot: ShadowRoot | null;$/;"	p	interface:Element
shadowRoot	tsvscode.ts	/^    readonly shadowRoot: ShadowRoot | null;$/;"	p	interface:ElementInternals
shadowRootMode	tsvscode.ts	/^    shadowRootMode: string;$/;"	p	interface:HTMLTemplateElement
shape	tsvscode.ts	/^    shape: string;$/;"	p	interface:HTMLAnchorElement
shape	tsvscode.ts	/^    shape: string;$/;"	p	interface:HTMLAreaElement
shapeImageThreshold	tsvscode.ts	/^    shapeImageThreshold: string;$/;"	p	interface:CSSStyleDeclaration
shapeMargin	tsvscode.ts	/^    shapeMargin: string;$/;"	p	interface:CSSStyleDeclaration
shapeOutside	tsvscode.ts	/^    shapeOutside: string;$/;"	p	interface:CSSStyleDeclaration
shapeRendering	tsvscode.ts	/^    shapeRendering: string;$/;"	p	interface:CSSStyleDeclaration
share	tsvscode.ts	/^    share(data?: ShareData): Promise<void>;$/;"	m	interface:Navigator
sheet	tsvscode.ts	/^    readonly sheet: CSSStyleSheet | null;$/;"	p	interface:LinkStyle
shift	ests.ts	/^    shift(): T | undefined;$/;"	m	interface:Array
shiftKey	tsvscode.ts	/^    readonly shiftKey: boolean;$/;"	p	interface:KeyboardEvent
shiftKey	tsvscode.ts	/^    readonly shiftKey: boolean;$/;"	p	interface:MouseEvent
shiftKey	tsvscode.ts	/^    readonly shiftKey: boolean;$/;"	p	interface:TouchEvent
shiftKey	tsvscode.ts	/^    shiftKey?: boolean;$/;"	p	interface:EventModifierInit
show	tsvscode.ts	/^    show(): void;$/;"	m	interface:HTMLDialogElement
show	tsvscode.ts	/^    show(detailsPromise?: PaymentDetailsUpdate | PromiseLike<PaymentDetailsUpdate>): Promise<Pay/;"	m	interface:PaymentRequest
showModal	tsvscode.ts	/^    showModal(): void;$/;"	m	interface:HTMLDialogElement
showNotification	tsvscode.ts	/^    showNotification(title: string, options?: NotificationOptions): Promise<void>;$/;"	m	interface:ServiceWorkerRegistration
showPicker	tsvscode.ts	/^    showPicker(): void;$/;"	m	interface:HTMLInputElement
showPicker	tsvscode.ts	/^    showPicker(): void;$/;"	m	interface:HTMLSelectElement
showPopover	tsvscode.ts	/^    showPopover(): void;$/;"	m	interface:HTMLElement
sign	tsvscode.ts	/^    sign(algorithm: AlgorithmIdentifier | RsaPssParams | EcdsaParams, key: CryptoKey, data: Buff/;"	m	interface:SubtleCrypto
signal	tsvscode.ts	/^    readonly signal: AbortSignal;$/;"	p	interface:AbortController
signal	tsvscode.ts	/^    readonly signal: AbortSignal;$/;"	p	interface:Request
signal	tsvscode.ts	/^    readonly signal: AbortSignal;$/;"	p	interface:WritableStreamDefaultController
signal	tsvscode.ts	/^    signal?: AbortSignal | null;$/;"	p	interface:RequestInit
signal	tsvscode.ts	/^    signal?: AbortSignal;$/;"	p	interface:AddEventListenerOptions
signal	tsvscode.ts	/^    signal?: AbortSignal;$/;"	p	interface:CredentialCreationOptions
signal	tsvscode.ts	/^    signal?: AbortSignal;$/;"	p	interface:CredentialRequestOptions
signal	tsvscode.ts	/^    signal?: AbortSignal;$/;"	p	interface:LockOptions
signal	tsvscode.ts	/^    signal?: AbortSignal;$/;"	p	interface:StreamPipeOptions
signalingState	tsvscode.ts	/^    readonly signalingState: RTCSignalingState;$/;"	p	interface:RTCPeerConnection
signature	tsvscode.ts	/^    readonly signature: ArrayBuffer;$/;"	p	interface:AuthenticatorAssertionResponse
silent	tsvscode.ts	/^    readonly silent: boolean | null;$/;"	p	interface:Notification
silent	tsvscode.ts	/^    silent?: boolean | null;$/;"	p	interface:NotificationOptions
silentConcealedSamples	tsvscode.ts	/^    silentConcealedSamples?: number;$/;"	p	interface:RTCInboundRtpStreamStats
sin	ests.ts	/^    sin(x: number): number;$/;"	m	interface:Math
singleNodeValue	tsvscode.ts	/^    readonly singleNodeValue: Node | null;$/;"	p	interface:XPathResult
sinkId	tsvscode.ts	/^    readonly sinkId: string;$/;"	p	interface:HTMLMediaElement
size	tsvscode.ts	/^    readonly size: GLint;$/;"	p	interface:WebGLActiveInfo
size	tsvscode.ts	/^    readonly size: QueuingStrategySize;$/;"	p	interface:CountQueuingStrategy
size	tsvscode.ts	/^    readonly size: QueuingStrategySize<ArrayBufferView>;$/;"	p	interface:ByteLengthQueuingStrategy
size	tsvscode.ts	/^    readonly size: number;$/;"	p	interface:Blob
size	tsvscode.ts	/^    readonly size: number;$/;"	p	interface:MediaKeyStatusMap
size	tsvscode.ts	/^    readonly size: number;$/;"	p	interface:StylePropertyMapReadOnly
size	tsvscode.ts	/^    readonly size: number;$/;"	p	interface:URLSearchParams
size	tsvscode.ts	/^    size: number;$/;"	p	interface:HTMLInputElement
size	tsvscode.ts	/^    size: number;$/;"	p	interface:HTMLSelectElement
size	tsvscode.ts	/^    size: number;$/;"	p	interface:VTTCue
size	tsvscode.ts	/^    size: string;$/;"	p	interface:HTMLFontElement
size	tsvscode.ts	/^    size: string;$/;"	p	interface:HTMLHRElement
size	tsvscode.ts	/^    size?: QueuingStrategySize<T>;$/;"	p	interface:QueuingStrategy
size	tsvscode.ts	/^    size?: number | null;$/;"	p	interface:WriteParams
sizes	tsvscode.ts	/^    readonly sizes: DOMTokenList;$/;"	p	interface:HTMLLinkElement
sizes	tsvscode.ts	/^    sizes: string;$/;"	p	interface:HTMLImageElement
sizes	tsvscode.ts	/^    sizes: string;$/;"	p	interface:HTMLSourceElement
sizes	tsvscode.ts	/^    sizes?: string;$/;"	p	interface:MediaImage
skewX	tsvscode.ts	/^    skewX(sx?: number): DOMMatrix;$/;"	m	interface:DOMMatrixReadOnly
skewXSelf	tsvscode.ts	/^    skewXSelf(sx?: number): DOMMatrix;$/;"	m	interface:DOMMatrix
skewY	tsvscode.ts	/^    skewY(sy?: number): DOMMatrix;$/;"	m	interface:DOMMatrixReadOnly
skewYSelf	tsvscode.ts	/^    skewYSelf(sy?: number): DOMMatrix;$/;"	m	interface:DOMMatrix
slice	ests.ts	/^    slice(begin: number, end?: number): ArrayBuffer;$/;"	m	interface:ArrayBuffer
slice	ests.ts	/^    slice(start?: number, end?: number): Float32Array;$/;"	m	interface:Float32Array
slice	ests.ts	/^    slice(start?: number, end?: number): Float64Array;$/;"	m	interface:Float64Array
slice	ests.ts	/^    slice(start?: number, end?: number): Int16Array;$/;"	m	interface:Int16Array
slice	ests.ts	/^    slice(start?: number, end?: number): Int32Array;$/;"	m	interface:Int32Array
slice	ests.ts	/^    slice(start?: number, end?: number): Int8Array;$/;"	m	interface:Int8Array
slice	ests.ts	/^    slice(start?: number, end?: number): T[];$/;"	m	interface:Array
slice	ests.ts	/^    slice(start?: number, end?: number): T[];$/;"	m	interface:ConcatArray
slice	ests.ts	/^    slice(start?: number, end?: number): T[];$/;"	m	interface:ReadonlyArray
slice	ests.ts	/^    slice(start?: number, end?: number): Uint16Array;$/;"	m	interface:Uint16Array
slice	ests.ts	/^    slice(start?: number, end?: number): Uint32Array;$/;"	m	interface:Uint32Array
slice	ests.ts	/^    slice(start?: number, end?: number): Uint8Array;$/;"	m	interface:Uint8Array
slice	ests.ts	/^    slice(start?: number, end?: number): Uint8ClampedArray;$/;"	m	interface:Uint8ClampedArray
slice	ests.ts	/^    slice(start?: number, end?: number): string;$/;"	m	interface:String
slice	tsvscode.ts	/^    slice(start?: number, end?: number, contentType?: string): Blob;$/;"	m	interface:Blob
slope	tsvscode.ts	/^    readonly slope: SVGAnimatedNumber;$/;"	p	interface:SVGComponentTransferFunctionElement
slot	tsvscode.ts	/^    slot: string;$/;"	p	interface:Element
slotAssignment	tsvscode.ts	/^    readonly slotAssignment: SlotAssignmentMode;$/;"	p	interface:ShadowRoot
slotAssignment	tsvscode.ts	/^    slotAssignment?: SlotAssignmentMode;$/;"	p	interface:ShadowRootInit
smooth	tsvscode.ts	/^    smooth: boolean;$/;"	p	interface:MediaCapabilitiesInfo
smoothingTimeConstant	tsvscode.ts	/^    smoothingTimeConstant: number;$/;"	p	interface:AnalyserNode
smoothingTimeConstant	tsvscode.ts	/^    smoothingTimeConstant?: number;$/;"	p	interface:AnalyserOptions
snapToLines	tsvscode.ts	/^    snapToLines: boolean;$/;"	p	interface:VTTCue
snapshotItem	tsvscode.ts	/^    snapshotItem(index: number): Node | null;$/;"	m	interface:XPathResult
snapshotLength	tsvscode.ts	/^    readonly snapshotLength: number;$/;"	p	interface:XPathResult
software	tsvscode.ts	/^    software?: boolean;$/;"	p	interface:MIDIOptions
some	ests.ts	/^    some(predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): boolean;$/;"	m	interface:Array
some	ests.ts	/^    some(predicate: (value: T, index: number, array: readonly T[]) => unknown, thisArg?: any): b/;"	m	interface:ReadonlyArray
some	ests.ts	/^    some(predicate: (value: number, index: number, array: Float32Array) => unknown, thisArg?: an/;"	m	interface:Float32Array
some	ests.ts	/^    some(predicate: (value: number, index: number, array: Float64Array) => unknown, thisArg?: an/;"	m	interface:Float64Array
some	ests.ts	/^    some(predicate: (value: number, index: number, array: Int16Array) => unknown, thisArg?: any)/;"	m	interface:Int16Array
some	ests.ts	/^    some(predicate: (value: number, index: number, array: Int32Array) => unknown, thisArg?: any)/;"	m	interface:Int32Array
some	ests.ts	/^    some(predicate: (value: number, index: number, array: Int8Array) => unknown, thisArg?: any):/;"	m	interface:Int8Array
some	ests.ts	/^    some(predicate: (value: number, index: number, array: Uint16Array) => unknown, thisArg?: any/;"	m	interface:Uint16Array
some	ests.ts	/^    some(predicate: (value: number, index: number, array: Uint32Array) => unknown, thisArg?: any/;"	m	interface:Uint32Array
some	ests.ts	/^    some(predicate: (value: number, index: number, array: Uint8Array) => unknown, thisArg?: any)/;"	m	interface:Uint8Array
some	ests.ts	/^    some(predicate: (value: number, index: number, array: Uint8ClampedArray) => unknown, thisArg/;"	m	interface:Uint8ClampedArray
sort	ests.ts	/^    sort(compareFn?: (a: T, b: T) => number): this;$/;"	m	interface:Array
sort	ests.ts	/^    sort(compareFn?: (a: number, b: number) => number): this;$/;"	m	interface:Float32Array
sort	ests.ts	/^    sort(compareFn?: (a: number, b: number) => number): this;$/;"	m	interface:Float64Array
sort	ests.ts	/^    sort(compareFn?: (a: number, b: number) => number): this;$/;"	m	interface:Int16Array
sort	ests.ts	/^    sort(compareFn?: (a: number, b: number) => number): this;$/;"	m	interface:Int32Array
sort	ests.ts	/^    sort(compareFn?: (a: number, b: number) => number): this;$/;"	m	interface:Int8Array
sort	ests.ts	/^    sort(compareFn?: (a: number, b: number) => number): this;$/;"	m	interface:Uint16Array
sort	ests.ts	/^    sort(compareFn?: (a: number, b: number) => number): this;$/;"	m	interface:Uint32Array
sort	ests.ts	/^    sort(compareFn?: (a: number, b: number) => number): this;$/;"	m	interface:Uint8Array
sort	ests.ts	/^    sort(compareFn?: (a: number, b: number) => number): this;$/;"	m	interface:Uint8ClampedArray
sort	tsvscode.ts	/^    sort(): void;$/;"	m	interface:URLSearchParams
source	ests.ts	/^    readonly source: string;$/;"	p	interface:RegExp
source	tsvscode.ts	/^    readonly source: IDBObjectStore | IDBIndex | IDBCursor;$/;"	p	interface:IDBRequest
source	tsvscode.ts	/^    readonly source: IDBObjectStore | IDBIndex;$/;"	p	interface:IDBCursor
source	tsvscode.ts	/^    readonly source: MessageEventSource | null;$/;"	p	interface:MessageEvent
source	tsvscode.ts	/^    readonly source: WebTransportErrorSource;$/;"	p	interface:WebTransportError
source	tsvscode.ts	/^    source: number;$/;"	p	interface:RTCRtpContributingSource
source	tsvscode.ts	/^    source?: MessageEventSource | null;$/;"	p	interface:MessageEventInit
source	tsvscode.ts	/^    source?: WebTransportErrorSource;$/;"	p	interface:WebTransportErrorOptions
sourceBuffers	tsvscode.ts	/^    readonly sourceBuffers: SourceBufferList;$/;"	p	interface:MediaSource
sourceFile	tsvscode.ts	/^    readonly sourceFile: string;$/;"	p	interface:SecurityPolicyViolationEvent
sourceFile	tsvscode.ts	/^    sourceFile?: string;$/;"	p	interface:SecurityPolicyViolationEventInit
spacing	tsvscode.ts	/^    readonly spacing: SVGAnimatedEnumeration;$/;"	p	interface:SVGTextPathElement
span	tsvscode.ts	/^    span: number;$/;"	p	interface:HTMLTableColElement
spatialIndex	tsvscode.ts	/^    spatialIndex?: number;$/;"	p	interface:RTCEncodedVideoFrameMetadata
spatialRendering	tsvscode.ts	/^    spatialRendering?: boolean;$/;"	p	interface:AudioConfiguration
speak	tsvscode.ts	/^    speak(utterance: SpeechSynthesisUtterance): void;$/;"	m	interface:SpeechSynthesis
speakAs	tsvscode.ts	/^    speakAs: string;$/;"	p	interface:CSSCounterStyleRule
speaking	tsvscode.ts	/^    readonly speaking: boolean;$/;"	p	interface:SpeechSynthesis
specified	tsvscode.ts	/^    readonly specified: boolean;$/;"	p	interface:Attr
specularConstant	tsvscode.ts	/^    readonly specularConstant: SVGAnimatedNumber;$/;"	p	interface:SVGFESpecularLightingElement
specularExponent	tsvscode.ts	/^    readonly specularExponent: SVGAnimatedNumber;$/;"	p	interface:SVGFESpecularLightingElement
specularExponent	tsvscode.ts	/^    readonly specularExponent: SVGAnimatedNumber;$/;"	p	interface:SVGFESpotLightElement
speechSynthesis	tsvscode.ts	/^    readonly speechSynthesis: SpeechSynthesis;$/;"	p	interface:Window
speechSynthesis	tsvscode.ts	/^declare var speechSynthesis: SpeechSynthesis;$/;"	v	namespace:CSS
speed	tsvscode.ts	/^    readonly speed: number | null;$/;"	p	interface:GeolocationCoordinates
spellcheck	tsvscode.ts	/^    spellcheck: boolean;$/;"	p	interface:HTMLElement
splice	ests.ts	/^    splice(start: number, deleteCount: number, ...items: T[]): T[];$/;"	m	interface:Array
splice	ests.ts	/^    splice(start: number, deleteCount?: number): T[];$/;"	m	interface:Array
split	ests.ts	/^    split(separator: string | RegExp, limit?: number): string[];$/;"	m	interface:String
splitText	tsvscode.ts	/^    splitText(offset: number): Text;$/;"	m	interface:Text
spreadMethod	tsvscode.ts	/^    readonly spreadMethod: SVGAnimatedEnumeration;$/;"	p	interface:SVGGradientElement
sqrt	ests.ts	/^    sqrt(x: number): number;$/;"	m	interface:Math
src	tsvscode.ts	/^    src: string;$/;"	p	interface:HTMLEmbedElement
src	tsvscode.ts	/^    src: string;$/;"	p	interface:HTMLFrameElement
src	tsvscode.ts	/^    src: string;$/;"	p	interface:HTMLIFrameElement
src	tsvscode.ts	/^    src: string;$/;"	p	interface:HTMLImageElement
src	tsvscode.ts	/^    src: string;$/;"	p	interface:HTMLInputElement
src	tsvscode.ts	/^    src: string;$/;"	p	interface:HTMLMediaElement
src	tsvscode.ts	/^    src: string;$/;"	p	interface:HTMLScriptElement
src	tsvscode.ts	/^    src: string;$/;"	p	interface:HTMLSourceElement
src	tsvscode.ts	/^    src: string;$/;"	p	interface:HTMLTrackElement
src	tsvscode.ts	/^    src: string;$/;"	p	interface:MediaImage
srcElement	tsvscode.ts	/^    readonly srcElement: EventTarget | null;$/;"	p	interface:Event
srcObject	tsvscode.ts	/^    srcObject: MediaProvider | null;$/;"	p	interface:HTMLMediaElement
srcdoc	tsvscode.ts	/^    srcdoc: string;$/;"	p	interface:HTMLIFrameElement
srclang	tsvscode.ts	/^    srclang: string;$/;"	p	interface:HTMLTrackElement
srcset	tsvscode.ts	/^    srcset: string;$/;"	p	interface:HTMLImageElement
srcset	tsvscode.ts	/^    srcset: string;$/;"	p	interface:HTMLSourceElement
srtpCipher	tsvscode.ts	/^    srtpCipher?: string;$/;"	p	interface:RTCTransportStats
ssrc	tsvscode.ts	/^    ssrc: number;$/;"	p	interface:RTCRtpStreamStats
stack	ests.ts	/^    stack?: string;$/;"	p	interface:Error
standby	tsvscode.ts	/^    standby: string;$/;"	p	interface:HTMLObjectElement
start	tsvscode.ts	/^    start(): void;$/;"	m	interface:HTMLMarqueeElement
start	tsvscode.ts	/^    start(): void;$/;"	m	interface:MessagePort
start	tsvscode.ts	/^    start(index: number): number;$/;"	m	interface:TimeRanges
start	tsvscode.ts	/^    start(timeslice?: number): void;$/;"	m	interface:MediaRecorder
start	tsvscode.ts	/^    start(when?: number): void;$/;"	m	interface:AudioScheduledSourceNode
start	tsvscode.ts	/^    start(when?: number, offset?: number, duration?: number): void;$/;"	m	interface:AudioBufferSourceNode
start	tsvscode.ts	/^    start: number;$/;"	p	interface:HTMLOListElement
start	tsvscode.ts	/^    start?: (controller: ReadableByteStreamController) => any;$/;"	p	interface:UnderlyingByteSource
start	tsvscode.ts	/^    start?: (controller: ReadableStreamDefaultController<R>) => any;$/;"	p	interface:UnderlyingDefaultSource
start	tsvscode.ts	/^    start?: TransformerStartCallback<O>;$/;"	p	interface:Transformer
start	tsvscode.ts	/^    start?: UnderlyingSinkStartCallback;$/;"	p	interface:UnderlyingSink
start	tsvscode.ts	/^    start?: UnderlyingSourceStartCallback<R>;$/;"	p	interface:UnderlyingSource
start	tsvscode.ts	/^    start?: string | DOMHighResTimeStamp;$/;"	p	interface:PerformanceMeasureOptions
startContainer	tsvscode.ts	/^    readonly startContainer: Node;$/;"	p	interface:AbstractRange
startContainer	tsvscode.ts	/^    startContainer: Node;$/;"	p	interface:StaticRangeInit
startDelay	tsvscode.ts	/^    startDelay?: number;$/;"	p	interface:GamepadEffectParameters
startMessages	tsvscode.ts	/^    startMessages(): void;$/;"	m	interface:ServiceWorkerContainer
startOffset	tsvscode.ts	/^    readonly startOffset: SVGAnimatedLength;$/;"	p	interface:SVGTextPathElement
startOffset	tsvscode.ts	/^    readonly startOffset: number;$/;"	p	interface:AbstractRange
startOffset	tsvscode.ts	/^    startOffset: number;$/;"	p	interface:StaticRangeInit
startRendering	tsvscode.ts	/^    startRendering(): Promise<AudioBuffer>;$/;"	m	interface:OfflineAudioContext
startTime	tsvscode.ts	/^    readonly startTime: DOMHighResTimeStamp;$/;"	p	interface:PerformanceEntry
startTime	tsvscode.ts	/^    startTime: CSSNumberish | null;$/;"	p	interface:Animation
startTime	tsvscode.ts	/^    startTime: number;$/;"	p	interface:TextTrackCue
startTime	tsvscode.ts	/^    startTime?: CSSNumberish;$/;"	p	interface:ComputedEffectTiming
startTime	tsvscode.ts	/^    startTime?: DOMHighResTimeStamp;$/;"	p	interface:PerformanceMarkOptions
state	tsvscode.ts	/^    readonly state: AudioContextState;$/;"	p	interface:BaseAudioContext
state	tsvscode.ts	/^    readonly state: CodecState;$/;"	p	interface:VideoDecoder
state	tsvscode.ts	/^    readonly state: CodecState;$/;"	p	interface:VideoEncoder
state	tsvscode.ts	/^    readonly state: MIDIPortDeviceState;$/;"	p	interface:MIDIPort
state	tsvscode.ts	/^    readonly state: PermissionState;$/;"	p	interface:PermissionStatus
state	tsvscode.ts	/^    readonly state: RTCDtlsTransportState;$/;"	p	interface:RTCDtlsTransport
state	tsvscode.ts	/^    readonly state: RTCIceTransportState;$/;"	p	interface:RTCIceTransport
state	tsvscode.ts	/^    readonly state: RTCSctpTransportState;$/;"	p	interface:RTCSctpTransport
state	tsvscode.ts	/^    readonly state: RecordingState;$/;"	p	interface:MediaRecorder
state	tsvscode.ts	/^    readonly state: RemotePlaybackState;$/;"	p	interface:RemotePlayback
state	tsvscode.ts	/^    readonly state: ServiceWorkerState;$/;"	p	interface:ServiceWorker
state	tsvscode.ts	/^    readonly state: any;$/;"	p	interface:History
state	tsvscode.ts	/^    readonly state: any;$/;"	p	interface:PopStateEvent
state	tsvscode.ts	/^    state: RTCStatsIceCandidatePairState;$/;"	p	interface:RTCIceCandidatePairStats
state	tsvscode.ts	/^    state?: any;$/;"	p	interface:PopStateEventInit
status	tsvscode.ts	/^    readonly status: FontFaceLoadStatus;$/;"	p	interface:FontFace
status	tsvscode.ts	/^    readonly status: FontFaceSetLoadStatus;$/;"	p	interface:FontFaceSet
status	tsvscode.ts	/^    readonly status: number;$/;"	p	interface:Response
status	tsvscode.ts	/^    readonly status: number;$/;"	p	interface:XMLHttpRequest
status	tsvscode.ts	/^    status: string;$/;"	p	interface:Window
status	tsvscode.ts	/^    status?: number;$/;"	p	interface:ResponseInit
status	tsvscode.ts	/^declare var status: string;$/;"	v	namespace:CSS
statusCode	tsvscode.ts	/^    readonly statusCode: number;$/;"	p	interface:SecurityPolicyViolationEvent
statusCode	tsvscode.ts	/^    statusCode: number;$/;"	p	interface:SecurityPolicyViolationEventInit
statusMessage	tsvscode.ts	/^    readonly statusMessage: string;$/;"	p	interface:WebGLContextEvent
statusMessage	tsvscode.ts	/^    statusMessage?: string;$/;"	p	interface:WebGLContextEventInit
statusText	tsvscode.ts	/^    readonly statusText: string;$/;"	p	interface:Response
statusText	tsvscode.ts	/^    readonly statusText: string;$/;"	p	interface:XMLHttpRequest
statusText	tsvscode.ts	/^    statusText?: string;$/;"	p	interface:ResponseInit
statusbar	tsvscode.ts	/^    readonly statusbar: BarProp;$/;"	p	interface:Window
statusbar	tsvscode.ts	/^declare var statusbar: BarProp;$/;"	v	namespace:CSS
stdDeviationX	tsvscode.ts	/^    readonly stdDeviationX: SVGAnimatedNumber;$/;"	p	interface:SVGFEDropShadowElement
stdDeviationX	tsvscode.ts	/^    readonly stdDeviationX: SVGAnimatedNumber;$/;"	p	interface:SVGFEGaussianBlurElement
stdDeviationY	tsvscode.ts	/^    readonly stdDeviationY: SVGAnimatedNumber;$/;"	p	interface:SVGFEDropShadowElement
stdDeviationY	tsvscode.ts	/^    readonly stdDeviationY: SVGAnimatedNumber;$/;"	p	interface:SVGFEGaussianBlurElement
steal	tsvscode.ts	/^    steal?: boolean;$/;"	p	interface:LockOptions
stencil	tsvscode.ts	/^    stencil?: boolean;$/;"	p	interface:WebGLContextAttributes
stencilFunc	tsvscode.ts	/^    stencilFunc(func: GLenum, ref: GLint, mask: GLuint): void;$/;"	m	interface:WebGLRenderingContextBase
stencilFuncSeparate	tsvscode.ts	/^    stencilFuncSeparate(face: GLenum, func: GLenum, ref: GLint, mask: GLuint): void;$/;"	m	interface:WebGLRenderingContextBase
stencilMask	tsvscode.ts	/^    stencilMask(mask: GLuint): void;$/;"	m	interface:WebGLRenderingContextBase
stencilMaskSeparate	tsvscode.ts	/^    stencilMaskSeparate(face: GLenum, mask: GLuint): void;$/;"	m	interface:WebGLRenderingContextBase
stencilOp	tsvscode.ts	/^    stencilOp(fail: GLenum, zfail: GLenum, zpass: GLenum): void;$/;"	m	interface:WebGLRenderingContextBase
stencilOpSeparate	tsvscode.ts	/^    stencilOpSeparate(face: GLenum, fail: GLenum, zfail: GLenum, zpass: GLenum): void;$/;"	m	interface:WebGLRenderingContextBase
step	tsvscode.ts	/^    step: string;$/;"	p	interface:HTMLInputElement
stepDown	tsvscode.ts	/^    stepDown(n?: number): void;$/;"	m	interface:HTMLInputElement
stepMismatch	tsvscode.ts	/^    readonly stepMismatch: boolean;$/;"	p	interface:ValidityState
stepMismatch	tsvscode.ts	/^    stepMismatch?: boolean;$/;"	p	interface:ValidityStateFlags
stepUp	tsvscode.ts	/^    stepUp(n?: number): void;$/;"	m	interface:HTMLInputElement
stitchTiles	tsvscode.ts	/^    readonly stitchTiles: SVGAnimatedEnumeration;$/;"	p	interface:SVGFETurbulenceElement
stop	tsvscode.ts	/^    stop(): void;$/;"	m	interface:HTMLMarqueeElement
stop	tsvscode.ts	/^    stop(): void;$/;"	m	interface:MediaRecorder
stop	tsvscode.ts	/^    stop(): void;$/;"	m	interface:MediaStreamTrack
stop	tsvscode.ts	/^    stop(): void;$/;"	m	interface:RTCRtpTransceiver
stop	tsvscode.ts	/^    stop(): void;$/;"	m	interface:Window
stop	tsvscode.ts	/^    stop(when?: number): void;$/;"	m	interface:AudioScheduledSourceNode
stopColor	tsvscode.ts	/^    stopColor: string;$/;"	p	interface:CSSStyleDeclaration
stopImmediatePropagation	tsvscode.ts	/^    stopImmediatePropagation(): void;$/;"	m	interface:Event
stopOpacity	tsvscode.ts	/^    stopOpacity: string;$/;"	p	interface:CSSStyleDeclaration
stopPropagation	tsvscode.ts	/^    stopPropagation(): void;$/;"	m	interface:Event
storage	tsvscode.ts	/^    readonly storage: StorageManager;$/;"	p	interface:NavigatorStorage
storageArea	tsvscode.ts	/^    readonly storageArea: Storage | null;$/;"	p	interface:StorageEvent
storageArea	tsvscode.ts	/^    storageArea?: Storage | null;$/;"	p	interface:StorageEventInit
store	tsvscode.ts	/^    store(credential: Credential): Promise<void>;$/;"	m	interface:CredentialsContainer
stream	tsvscode.ts	/^    readonly stream: MediaStream;$/;"	p	interface:MediaRecorder
stream	tsvscode.ts	/^    readonly stream: MediaStream;$/;"	p	interface:MediaStreamAudioDestinationNode
stream	tsvscode.ts	/^    stream(): ReadableStream<Uint8Array>;$/;"	m	interface:Blob
stream	tsvscode.ts	/^    stream?: boolean;$/;"	p	interface:TextDecodeOptions
streamErrorCode	tsvscode.ts	/^    readonly streamErrorCode: number | null;$/;"	p	interface:WebTransportError
streamErrorCode	tsvscode.ts	/^    streamErrorCode?: number | null;$/;"	p	interface:WebTransportErrorOptions
streams	tsvscode.ts	/^    readonly streams: ReadonlyArray<MediaStream>;$/;"	p	interface:RTCTrackEvent
streams	tsvscode.ts	/^    streams?: MediaStream[];$/;"	p	interface:RTCRtpTransceiverInit
streams	tsvscode.ts	/^    streams?: MediaStream[];$/;"	p	interface:RTCTrackEventInit
stretch	tsvscode.ts	/^    stretch: string;$/;"	p	interface:FontFace
stretch	tsvscode.ts	/^    stretch?: string;$/;"	p	interface:FontFaceDescriptors
stride	tsvscode.ts	/^    stride: number;$/;"	p	interface:PlaneLayout
stringValue	tsvscode.ts	/^    readonly stringValue: string;$/;"	p	interface:XPathResult
stringify	ests.ts	/^    stringify(value: any, replacer?: (number | string)[] | null, space?: string | number): strin/;"	m	interface:JSON
stringify	ests.ts	/^    stringify(value: any, replacer?: (this: any, key: string, value: any) => any, space?: string/;"	m	interface:JSON
stroke	tsvscode.ts	/^    stroke(): void;$/;"	m	interface:CanvasDrawPath
stroke	tsvscode.ts	/^    stroke(path: Path2D): void;$/;"	m	interface:CanvasDrawPath
stroke	tsvscode.ts	/^    stroke: string;$/;"	p	interface:CSSStyleDeclaration
stroke	tsvscode.ts	/^    stroke?: boolean;$/;"	p	interface:SVGBoundingBoxOptions
strokeDasharray	tsvscode.ts	/^    strokeDasharray: string;$/;"	p	interface:CSSStyleDeclaration
strokeDashoffset	tsvscode.ts	/^    strokeDashoffset: string;$/;"	p	interface:CSSStyleDeclaration
strokeLinecap	tsvscode.ts	/^    strokeLinecap: string;$/;"	p	interface:CSSStyleDeclaration
strokeLinejoin	tsvscode.ts	/^    strokeLinejoin: string;$/;"	p	interface:CSSStyleDeclaration
strokeMiterlimit	tsvscode.ts	/^    strokeMiterlimit: string;$/;"	p	interface:CSSStyleDeclaration
strokeOpacity	tsvscode.ts	/^    strokeOpacity: string;$/;"	p	interface:CSSStyleDeclaration
strokeRect	tsvscode.ts	/^    strokeRect(x: number, y: number, w: number, h: number): void;$/;"	m	interface:CanvasRect
strokeStyle	tsvscode.ts	/^    strokeStyle: string | CanvasGradient | CanvasPattern;$/;"	p	interface:CanvasFillStrokeStyles
strokeText	tsvscode.ts	/^    strokeText(text: string, x: number, y: number, maxWidth?: number): void;$/;"	m	interface:CanvasText
strokeWidth	tsvscode.ts	/^    strokeWidth: string;$/;"	p	interface:CSSStyleDeclaration
strongMagnitude	tsvscode.ts	/^    strongMagnitude?: number;$/;"	p	interface:GamepadEffectParameters
structuredClone	tsvscode.ts	/^    structuredClone<T = any>(value: T, options?: StructuredSerializeOptions): T;$/;"	m	interface:WindowOrWorkerGlobalScope
style	ests.ts	/^        style: NumberFormatOptionsStyle;$/;"	p	interface:Intl.ResolvedNumberFormatOptions
style	ests.ts	/^        style?: NumberFormatOptionsStyle | undefined;$/;"	p	interface:Intl.NumberFormatOptions
style	tsvscode.ts	/^    readonly style: CSSStyleDeclaration;$/;"	p	interface:CSSFontFaceRule
style	tsvscode.ts	/^    readonly style: CSSStyleDeclaration;$/;"	p	interface:CSSKeyframeRule
style	tsvscode.ts	/^    readonly style: CSSStyleDeclaration;$/;"	p	interface:CSSPageRule
style	tsvscode.ts	/^    readonly style: CSSStyleDeclaration;$/;"	p	interface:CSSStyleRule
style	tsvscode.ts	/^    readonly style: CSSStyleDeclaration;$/;"	p	interface:ElementCSSInlineStyle
style	tsvscode.ts	/^    style: string;$/;"	p	interface:FontFace
style	tsvscode.ts	/^    style?: string;$/;"	p	interface:FontFaceDescriptors
styleMap	tsvscode.ts	/^    readonly styleMap: StylePropertyMap;$/;"	p	interface:CSSStyleRule
styleSheet	tsvscode.ts	/^    readonly styleSheet: CSSStyleSheet | null;$/;"	p	interface:CSSImportRule
styleSheets	tsvscode.ts	/^    readonly styleSheets: StyleSheetList;$/;"	p	interface:DocumentOrShadowRoot
sub	tsvscode.ts	/^    sub(...values: CSSNumberish[]): CSSNumericValue;$/;"	m	interface:CSSNumericValue
subarray	ests.ts	/^    subarray(begin?: number, end?: number): Float32Array;$/;"	m	interface:Float32Array
subarray	ests.ts	/^    subarray(begin?: number, end?: number): Float64Array;$/;"	m	interface:Float64Array
subarray	ests.ts	/^    subarray(begin?: number, end?: number): Int16Array;$/;"	m	interface:Int16Array
subarray	ests.ts	/^    subarray(begin?: number, end?: number): Int32Array;$/;"	m	interface:Int32Array
subarray	ests.ts	/^    subarray(begin?: number, end?: number): Int8Array;$/;"	m	interface:Int8Array
subarray	ests.ts	/^    subarray(begin?: number, end?: number): Uint16Array;$/;"	m	interface:Uint16Array
subarray	ests.ts	/^    subarray(begin?: number, end?: number): Uint32Array;$/;"	m	interface:Uint32Array
subarray	ests.ts	/^    subarray(begin?: number, end?: number): Uint8Array;$/;"	m	interface:Uint8Array
subarray	ests.ts	/^    subarray(begin?: number, end?: number): Uint8ClampedArray;$/;"	m	interface:Uint8ClampedArray
submit	tsvscode.ts	/^    submit(): void;$/;"	m	interface:HTMLFormElement
submitter	tsvscode.ts	/^    readonly submitter: HTMLElement | null;$/;"	p	interface:SubmitEvent
submitter	tsvscode.ts	/^    submitter?: HTMLElement | null;$/;"	p	interface:SubmitEventInit
subscribe	tsvscode.ts	/^    subscribe(options?: PushSubscriptionOptionsInit): Promise<PushSubscription>;$/;"	m	interface:PushManager
substr	ests.ts	/^    substr(from: number, length?: number): string;$/;"	m	interface:String
substring	ests.ts	/^    substring(start: number, end?: number): string;$/;"	m	interface:String
substringData	tsvscode.ts	/^    substringData(offset: number, count: number): string;$/;"	m	interface:CharacterData
subtle	tsvscode.ts	/^    readonly subtle: SubtleCrypto;$/;"	p	interface:Crypto
subtree	tsvscode.ts	/^    subtree?: boolean;$/;"	p	interface:GetAnimationsOptions
subtree	tsvscode.ts	/^    subtree?: boolean;$/;"	p	interface:MutationObserverInit
suffix	tsvscode.ts	/^    suffix: string;$/;"	p	interface:CSSCounterStyleRule
suffixes	tsvscode.ts	/^    readonly suffixes: string;$/;"	p	interface:MimeType
summary	tsvscode.ts	/^    summary: string;$/;"	p	interface:HTMLTableElement
supported	tsvscode.ts	/^    supported: boolean;$/;"	p	interface:MediaCapabilitiesInfo
supported	tsvscode.ts	/^    supported?: boolean;$/;"	p	interface:VideoDecoderSupport
supported	tsvscode.ts	/^    supported?: boolean;$/;"	p	interface:VideoEncoderSupport
supportedContentEncodings	tsvscode.ts	/^    readonly supportedContentEncodings: ReadonlyArray<string>;$/;"	v
supportedEntryTypes	tsvscode.ts	/^    readonly supportedEntryTypes: ReadonlyArray<string>;$/;"	v
supportedLocalesOf	ests.ts	/^        supportedLocalesOf(locales: string | string[], options?: CollatorOptions): string[];$/;"	m	interface:Intl.CollatorConstructor
supportedLocalesOf	ests.ts	/^        supportedLocalesOf(locales: string | string[], options?: DateTimeFormatOptions): string[/;"	m	interface:Intl.DateTimeFormatConstructor
supportedLocalesOf	ests.ts	/^        supportedLocalesOf(locales: string | string[], options?: NumberFormatOptions): string[];$/;"	m	interface:Intl.NumberFormatConstructor
supportedMethods	tsvscode.ts	/^    supportedMethods: string;$/;"	p	interface:PaymentDetailsModifier
supportedMethods	tsvscode.ts	/^    supportedMethods: string;$/;"	p	interface:PaymentMethodData
supports	tsvscode.ts	/^    supports(token: string): boolean;$/;"	m	interface:DOMTokenList
supports	tsvscode.ts	/^    supports(type: string): boolean;$/;"	v
supportsText	tsvscode.ts	/^    readonly supportsText: string | null;$/;"	p	interface:CSSImportRule
surfaceScale	tsvscode.ts	/^    readonly surfaceScale: SVGAnimatedNumber;$/;"	p	interface:SVGFEDiffuseLightingElement
surfaceScale	tsvscode.ts	/^    readonly surfaceScale: SVGAnimatedNumber;$/;"	p	interface:SVGFESpecularLightingElement
surroundContents	tsvscode.ts	/^    surroundContents(newParent: Node): void;$/;"	m	interface:Range
suspend	tsvscode.ts	/^    suspend(): Promise<void>;$/;"	m	interface:AudioContext
suspend	tsvscode.ts	/^    suspend(suspendTime: number): Promise<void>;$/;"	m	interface:OfflineAudioContext
suspendRedraw	tsvscode.ts	/^    suspendRedraw(maxWaitMilliseconds: number): number;$/;"	m	interface:SVGSVGElement
symbol	ests.ts	/^        symbol: never;$/;"	p	interface:Intl.NumberFormatOptionsCurrencyDisplayRegistry
symbols	tsvscode.ts	/^    symbols: string;$/;"	p	interface:CSSCounterStyleRule
synchronizationSource	tsvscode.ts	/^    synchronizationSource?: number;$/;"	p	interface:RTCEncodedAudioFrameMetadata
synchronizationSource	tsvscode.ts	/^    synchronizationSource?: number;$/;"	p	interface:RTCEncodedVideoFrameMetadata
syntax	tsvscode.ts	/^    readonly syntax: string;$/;"	p	interface:CSSPropertyRule
syntax	tsvscode.ts	/^    syntax?: string;$/;"	p	interface:PropertyDefinition
sysex	tsvscode.ts	/^    sysex?: boolean;$/;"	p	interface:MIDIOptions
sysexEnabled	tsvscode.ts	/^    readonly sysexEnabled: boolean;$/;"	p	interface:MIDIAccess
system	tsvscode.ts	/^    system: string;$/;"	p	interface:CSSCounterStyleRule
systemId	tsvscode.ts	/^    readonly systemId: string;$/;"	p	interface:DocumentType
systemLanguage	tsvscode.ts	/^    readonly systemLanguage: SVGStringList;$/;"	p	interface:SVGTests
t	tsvscode.ts	/^    t?: string;$/;"	p	interface:RsaOtherPrimesInfo
tBodies	tsvscode.ts	/^    readonly tBodies: HTMLCollectionOf<HTMLTableSectionElement>;$/;"	p	interface:HTMLTableElement
tFoot	tsvscode.ts	/^    tFoot: HTMLTableSectionElement | null;$/;"	p	interface:HTMLTableElement
tHead	tsvscode.ts	/^    tHead: HTMLTableSectionElement | null;$/;"	p	interface:HTMLTableElement
tabIndex	tsvscode.ts	/^    tabIndex: number;$/;"	p	interface:HTMLOrSVGElement
tabSize	tsvscode.ts	/^    tabSize: string;$/;"	p	interface:CSSStyleDeclaration
table	tsvscode.ts	/^    table(tabularData?: any, properties?: string[]): void;$/;"	m	interface:Console
tableLayout	tsvscode.ts	/^    tableLayout: string;$/;"	p	interface:CSSStyleDeclaration
tableValues	tsvscode.ts	/^    readonly tableValues: SVGAnimatedNumberList;$/;"	p	interface:SVGComponentTransferFunctionElement
tag	tsvscode.ts	/^    readonly tag: string;$/;"	p	interface:Notification
tag	tsvscode.ts	/^    tag?: string;$/;"	p	interface:GetNotificationOptions
tag	tsvscode.ts	/^    tag?: string;$/;"	p	interface:NotificationOptions
tagLength	tsvscode.ts	/^    tagLength?: number;$/;"	p	interface:AesGcmParams
tagName	tsvscode.ts	/^    readonly tagName: string;$/;"	p	interface:Element
takeRecords	tsvscode.ts	/^    takeRecords(): IntersectionObserverEntry[];$/;"	m	interface:IntersectionObserver
takeRecords	tsvscode.ts	/^    takeRecords(): MutationRecord[];$/;"	m	interface:MutationObserver
takeRecords	tsvscode.ts	/^    takeRecords(): PerformanceEntryList;$/;"	m	interface:PerformanceObserver
takeRecords	tsvscode.ts	/^    takeRecords(): ReportList;$/;"	m	interface:ReportingObserver
tan	ests.ts	/^    tan(x: number): number;$/;"	m	interface:Math
tangentialPressure	tsvscode.ts	/^    readonly tangentialPressure: number;$/;"	p	interface:PointerEvent
tangentialPressure	tsvscode.ts	/^    tangentialPressure?: number;$/;"	p	interface:PointerEventInit
target	tsvscode.ts	/^    readonly target: Element;$/;"	p	interface:IntersectionObserverEntry
target	tsvscode.ts	/^    readonly target: Element;$/;"	p	interface:ResizeObserverEntry
target	tsvscode.ts	/^    readonly target: EventTarget | null;$/;"	p	interface:Event
target	tsvscode.ts	/^    readonly target: EventTarget;$/;"	p	interface:Touch
target	tsvscode.ts	/^    readonly target: Node | null;$/;"	p	interface:PerformanceEventTiming
target	tsvscode.ts	/^    readonly target: Node;$/;"	p	interface:MutationRecord
target	tsvscode.ts	/^    readonly target: SVGAnimatedString;$/;"	p	interface:SVGAElement
target	tsvscode.ts	/^    readonly target: T | null;$/;"	p	interface:ProgressEvent
target	tsvscode.ts	/^    readonly target: string;$/;"	p	interface:ProcessingInstruction
target	tsvscode.ts	/^    target: Element | null;$/;"	p	interface:KeyframeEffect
target	tsvscode.ts	/^    target: Element;$/;"	p	interface:IntersectionObserverEntryInit
target	tsvscode.ts	/^    target: EventTarget;$/;"	p	interface:TouchInit
target	tsvscode.ts	/^    target: string;$/;"	p	interface:HTMLAnchorElement
target	tsvscode.ts	/^    target: string;$/;"	p	interface:HTMLAreaElement
target	tsvscode.ts	/^    target: string;$/;"	p	interface:HTMLBaseElement
target	tsvscode.ts	/^    target: string;$/;"	p	interface:HTMLFormElement
target	tsvscode.ts	/^    target: string;$/;"	p	interface:HTMLLinkElement
targetBitrate	tsvscode.ts	/^    targetBitrate?: number;$/;"	p	interface:RTCOutboundRtpStreamStats
targetElement	tsvscode.ts	/^    readonly targetElement: SVGElement | null;$/;"	p	interface:SVGAnimationElement
targetOrigin	tsvscode.ts	/^    targetOrigin?: string;$/;"	p	interface:WindowPostMessageOptions
targetRanges	tsvscode.ts	/^    targetRanges?: StaticRange[];$/;"	p	interface:InputEventInit
targetTouches	tsvscode.ts	/^    readonly targetTouches: TouchList;$/;"	p	interface:TouchEvent
targetTouches	tsvscode.ts	/^    targetTouches?: Touch[];$/;"	p	interface:TouchEventInit
targetX	tsvscode.ts	/^    readonly targetX: SVGAnimatedInteger;$/;"	p	interface:SVGFEConvolveMatrixElement
targetY	tsvscode.ts	/^    readonly targetY: SVGAnimatedInteger;$/;"	p	interface:SVGFEConvolveMatrixElement
tcpType	tsvscode.ts	/^    readonly tcpType: RTCIceTcpCandidateType | null;$/;"	p	interface:RTCIceCandidate
tee	tsvscode.ts	/^    tee(): [ReadableStream<R>, ReadableStream<R>];$/;"	m	interface:ReadableStream
temporalIndex	tsvscode.ts	/^    temporalIndex?: number;$/;"	p	interface:RTCEncodedVideoFrameMetadata
terminate	tsvscode.ts	/^    terminate(): void;$/;"	m	interface:TransformStreamDefaultController
terminate	tsvscode.ts	/^    terminate(): void;$/;"	m	interface:Worker
test	ests.ts	/^    test(string: string): boolean;$/;"	m	interface:RegExp
texImage2D	tsvscode.ts	/^    texImage2D(target: GLenum, level: GLint, internalformat: GLint, format: GLenum, type: GLenum/;"	m	interface:WebGL2RenderingContextOverloads
texImage2D	tsvscode.ts	/^    texImage2D(target: GLenum, level: GLint, internalformat: GLint, format: GLenum, type: GLenum/;"	m	interface:WebGLRenderingContextOverloads
texImage2D	tsvscode.ts	/^    texImage2D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsi/;"	m	interface:WebGL2RenderingContextOverloads
texImage2D	tsvscode.ts	/^    texImage2D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsi/;"	m	interface:WebGLRenderingContextOverloads
texImage3D	tsvscode.ts	/^    texImage3D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsi/;"	m	interface:WebGL2RenderingContextBase
texParameterf	tsvscode.ts	/^    texParameterf(target: GLenum, pname: GLenum, param: GLfloat): void;$/;"	m	interface:WebGLRenderingContextBase
texParameteri	tsvscode.ts	/^    texParameteri(target: GLenum, pname: GLenum, param: GLint): void;$/;"	m	interface:WebGLRenderingContextBase
texStorage2D	tsvscode.ts	/^    texStorage2D(target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height/;"	m	interface:WebGL2RenderingContextBase
texStorage3D	tsvscode.ts	/^    texStorage3D(target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height/;"	m	interface:WebGL2RenderingContextBase
texSubImage2D	tsvscode.ts	/^    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, format: GLenum, /;"	m	interface:WebGL2RenderingContextOverloads
texSubImage2D	tsvscode.ts	/^    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, format: GLenum, /;"	m	interface:WebGLRenderingContextOverloads
texSubImage2D	tsvscode.ts	/^    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, /;"	m	interface:WebGL2RenderingContextOverloads
texSubImage2D	tsvscode.ts	/^    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, /;"	m	interface:WebGLRenderingContextOverloads
texSubImage3D	tsvscode.ts	/^    texSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, /;"	m	interface:WebGL2RenderingContextBase
text	tsvscode.ts	/^    text(): Promise<string>;$/;"	m	interface:Blob
text	tsvscode.ts	/^    text(): Promise<string>;$/;"	m	interface:Body
text	tsvscode.ts	/^    text: string;$/;"	p	interface:HTMLAnchorElement
text	tsvscode.ts	/^    text: string;$/;"	p	interface:HTMLBodyElement
text	tsvscode.ts	/^    text: string;$/;"	p	interface:HTMLOptionElement
text	tsvscode.ts	/^    text: string;$/;"	p	interface:HTMLScriptElement
text	tsvscode.ts	/^    text: string;$/;"	p	interface:HTMLTitleElement
text	tsvscode.ts	/^    text: string;$/;"	p	interface:SpeechSynthesisUtterance
text	tsvscode.ts	/^    text: string;$/;"	p	interface:VTTCue
text	tsvscode.ts	/^    text?: string;$/;"	p	interface:ShareData
textAlign	tsvscode.ts	/^    textAlign: CanvasTextAlign;$/;"	p	interface:CanvasTextDrawingStyles
textAlign	tsvscode.ts	/^    textAlign: string;$/;"	p	interface:CSSStyleDeclaration
textAlignLast	tsvscode.ts	/^    textAlignLast: string;$/;"	p	interface:CSSStyleDeclaration
textAnchor	tsvscode.ts	/^    textAnchor: string;$/;"	p	interface:CSSStyleDeclaration
textBaseline	tsvscode.ts	/^    textBaseline: CanvasTextBaseline;$/;"	p	interface:CanvasTextDrawingStyles
textCombineUpright	tsvscode.ts	/^    textCombineUpright: string;$/;"	p	interface:CSSStyleDeclaration
textContent	tsvscode.ts	/^    textContent: string | null;$/;"	p	interface:Node
textDecoration	tsvscode.ts	/^    textDecoration: string;$/;"	p	interface:CSSStyleDeclaration
textDecorationColor	tsvscode.ts	/^    textDecorationColor: string;$/;"	p	interface:CSSStyleDeclaration
textDecorationLine	tsvscode.ts	/^    textDecorationLine: string;$/;"	p	interface:CSSStyleDeclaration
textDecorationSkipInk	tsvscode.ts	/^    textDecorationSkipInk: string;$/;"	p	interface:CSSStyleDeclaration
textDecorationStyle	tsvscode.ts	/^    textDecorationStyle: string;$/;"	p	interface:CSSStyleDeclaration
textDecorationThickness	tsvscode.ts	/^    textDecorationThickness: string;$/;"	p	interface:CSSStyleDeclaration
textEmphasis	tsvscode.ts	/^    textEmphasis: string;$/;"	p	interface:CSSStyleDeclaration
textEmphasisColor	tsvscode.ts	/^    textEmphasisColor: string;$/;"	p	interface:CSSStyleDeclaration
textEmphasisPosition	tsvscode.ts	/^    textEmphasisPosition: string;$/;"	p	interface:CSSStyleDeclaration
textEmphasisStyle	tsvscode.ts	/^    textEmphasisStyle: string;$/;"	p	interface:CSSStyleDeclaration
textIndent	tsvscode.ts	/^    textIndent: string;$/;"	p	interface:CSSStyleDeclaration
textLength	tsvscode.ts	/^    readonly textLength: SVGAnimatedLength;$/;"	p	interface:SVGTextContentElement
textLength	tsvscode.ts	/^    readonly textLength: number;$/;"	p	interface:HTMLTextAreaElement
textOrientation	tsvscode.ts	/^    textOrientation: string;$/;"	p	interface:CSSStyleDeclaration
textOverflow	tsvscode.ts	/^    textOverflow: string;$/;"	p	interface:CSSStyleDeclaration
textRendering	tsvscode.ts	/^    textRendering: CanvasTextRendering;$/;"	p	interface:CanvasTextDrawingStyles
textRendering	tsvscode.ts	/^    textRendering: string;$/;"	p	interface:CSSStyleDeclaration
textShadow	tsvscode.ts	/^    textShadow: string;$/;"	p	interface:CSSStyleDeclaration
textTracks	tsvscode.ts	/^    readonly textTracks: TextTrackList;$/;"	p	interface:HTMLMediaElement
textTransform	tsvscode.ts	/^    textTransform: string;$/;"	p	interface:CSSStyleDeclaration
textUnderlineOffset	tsvscode.ts	/^    textUnderlineOffset: string;$/;"	p	interface:CSSStyleDeclaration
textUnderlinePosition	tsvscode.ts	/^    textUnderlinePosition: string;$/;"	p	interface:CSSStyleDeclaration
textWrap	tsvscode.ts	/^    textWrap: string;$/;"	p	interface:CSSStyleDeclaration
then	ests.ts	/^    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TRe/;"	m	interface:Promise
then	ests.ts	/^    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TRe/;"	m	interface:PromiseLike
threshold	tsvscode.ts	/^    readonly threshold: AudioParam;$/;"	p	interface:DynamicsCompressorNode
threshold	tsvscode.ts	/^    threshold?: number | number[];$/;"	p	interface:IntersectionObserverInit
threshold	tsvscode.ts	/^    threshold?: number;$/;"	p	interface:DynamicsCompressorOptions
thresholds	tsvscode.ts	/^    readonly thresholds: ReadonlyArray<number>;$/;"	p	interface:IntersectionObserver
throwIfAborted	tsvscode.ts	/^    throwIfAborted(): void;$/;"	m	interface:AbortSignal
tiltX	tsvscode.ts	/^    readonly tiltX: number;$/;"	p	interface:PointerEvent
tiltX	tsvscode.ts	/^    tiltX?: number;$/;"	p	interface:PointerEventInit
tiltY	tsvscode.ts	/^    readonly tiltY: number;$/;"	p	interface:PointerEvent
tiltY	tsvscode.ts	/^    tiltY?: number;$/;"	p	interface:PointerEventInit
time	tsvscode.ts	/^    readonly time: DOMHighResTimeStamp;$/;"	p	interface:IntersectionObserverEntry
time	tsvscode.ts	/^    time(label?: string): void;$/;"	m	interface:Console
time	tsvscode.ts	/^    time: DOMHighResTimeStamp;$/;"	p	interface:IntersectionObserverEntryInit
time	tsvscode.ts	/^    time?: number;$/;"	p	interface:CSSNumericType
timeEnd	tsvscode.ts	/^    timeEnd(label?: string): void;$/;"	m	interface:Console
timeLog	tsvscode.ts	/^    timeLog(label?: string, ...data: any[]): void;$/;"	m	interface:Console
timeOrigin	tsvscode.ts	/^    readonly timeOrigin: DOMHighResTimeStamp;$/;"	p	interface:Performance
timeRemaining	tsvscode.ts	/^    timeRemaining(): DOMHighResTimeStamp;$/;"	m	interface:IdleDeadline
timeStamp	tsvscode.ts	/^    readonly timeStamp: DOMHighResTimeStamp;$/;"	p	interface:Event
timeStamp	tsvscode.ts	/^    timeStamp(label?: string): void;$/;"	m	interface:Console
timeZone	ests.ts	/^        timeZone: string;$/;"	p	interface:Intl.ResolvedDateTimeFormatOptions
timeZone	ests.ts	/^        timeZone?: string | undefined;$/;"	p	interface:Intl.DateTimeFormatOptions
timeZoneName	ests.ts	/^        timeZoneName?: "short" | "long" | "shortOffset" | "longOffset" | "shortGeneric" | "longG/;"	p	interface:Intl.DateTimeFormatOptions
timeZoneName	ests.ts	/^        timeZoneName?: string;$/;"	p	interface:Intl.ResolvedDateTimeFormatOptions
timecode	tsvscode.ts	/^    readonly timecode: DOMHighResTimeStamp;$/;"	p	interface:BlobEvent
timecode	tsvscode.ts	/^    timecode?: DOMHighResTimeStamp;$/;"	p	interface:BlobEventInit
timeline	tsvscode.ts	/^    readonly timeline: DocumentTimeline;$/;"	p	interface:Document
timeline	tsvscode.ts	/^    timeline: AnimationTimeline | null;$/;"	p	interface:Animation
timeline	tsvscode.ts	/^    timeline?: AnimationTimeline | null;$/;"	p	interface:KeyframeAnimationOptions
timelineTime	tsvscode.ts	/^    readonly timelineTime: CSSNumberish | null;$/;"	p	interface:AnimationPlaybackEvent
timelineTime	tsvscode.ts	/^    timelineTime?: CSSNumberish | null;$/;"	p	interface:AnimationPlaybackEventInit
timeout	tsvscode.ts	/^    timeout(milliseconds: number): AbortSignal;$/;"	v
timeout	tsvscode.ts	/^    timeout: number;$/;"	p	interface:XMLHttpRequest
timeout	tsvscode.ts	/^    timeout?: number;$/;"	p	interface:IdleRequestOptions
timeout	tsvscode.ts	/^    timeout?: number;$/;"	p	interface:PositionOptions
timeout	tsvscode.ts	/^    timeout?: number;$/;"	p	interface:PublicKeyCredentialCreationOptions
timeout	tsvscode.ts	/^    timeout?: number;$/;"	p	interface:PublicKeyCredentialRequestOptions
timestamp	tsvscode.ts	/^    readonly timestamp: DOMHighResTimeStamp;$/;"	p	interface:Gamepad
timestamp	tsvscode.ts	/^    readonly timestamp: EpochTimeStamp;$/;"	p	interface:GeolocationPosition
timestamp	tsvscode.ts	/^    readonly timestamp: number;$/;"	p	interface:EncodedVideoChunk
timestamp	tsvscode.ts	/^    readonly timestamp: number;$/;"	p	interface:RTCEncodedAudioFrame
timestamp	tsvscode.ts	/^    readonly timestamp: number;$/;"	p	interface:RTCEncodedVideoFrame
timestamp	tsvscode.ts	/^    readonly timestamp: number;$/;"	p	interface:VideoFrame
timestamp	tsvscode.ts	/^    timestamp: DOMHighResTimeStamp;$/;"	p	interface:RTCRtpContributingSource
timestamp	tsvscode.ts	/^    timestamp: DOMHighResTimeStamp;$/;"	p	interface:RTCStats
timestamp	tsvscode.ts	/^    timestamp: number;$/;"	p	interface:EncodedVideoChunkInit
timestamp	tsvscode.ts	/^    timestamp: number;$/;"	p	interface:VideoFrameBufferInit
timestamp	tsvscode.ts	/^    timestamp?: number;$/;"	p	interface:RTCEncodedVideoFrameMetadata
timestamp	tsvscode.ts	/^    timestamp?: number;$/;"	p	interface:VideoFrameInit
timestampOffset	tsvscode.ts	/^    timestampOffset: number;$/;"	p	interface:SourceBuffer
timing	tsvscode.ts	/^    readonly timing: PerformanceTiming;$/;"	p	interface:Performance
title	tsvscode.ts	/^    readonly title: string | null;$/;"	p	interface:StyleSheet
title	tsvscode.ts	/^    readonly title: string;$/;"	p	interface:Notification
title	tsvscode.ts	/^    title: string;$/;"	p	interface:Document
title	tsvscode.ts	/^    title: string;$/;"	p	interface:HTMLElement
title	tsvscode.ts	/^    title: string;$/;"	p	interface:MediaMetadata
title	tsvscode.ts	/^    title: string;$/;"	p	interface:SVGStyleElement
title	tsvscode.ts	/^    title?: string;$/;"	p	interface:MediaMetadataInit
title	tsvscode.ts	/^    title?: string;$/;"	p	interface:ShareData
tlsVersion	tsvscode.ts	/^    tlsVersion?: string;$/;"	p	interface:RTCTransportStats
to	tsvscode.ts	/^    to(unit: string): CSSUnitValue;$/;"	m	interface:CSSNumericValue
toBlob	tsvscode.ts	/^    toBlob(callback: BlobCallback, type?: string, quality?: any): void;$/;"	m	interface:HTMLCanvasElement
toDataURL	tsvscode.ts	/^    toDataURL(type?: string, quality?: any): string;$/;"	m	interface:HTMLCanvasElement
toDateString	ests.ts	/^    toDateString(): string;$/;"	m	interface:Date
toExponential	ests.ts	/^    toExponential(fractionDigits?: number): string;$/;"	m	interface:Number
toFixed	ests.ts	/^    toFixed(fractionDigits?: number): string;$/;"	m	interface:Number
toFloat32Array	tsvscode.ts	/^    toFloat32Array(): Float32Array;$/;"	m	interface:DOMMatrixReadOnly
toFloat64Array	tsvscode.ts	/^    toFloat64Array(): Float64Array;$/;"	m	interface:DOMMatrixReadOnly
toISOString	ests.ts	/^    toISOString(): string;$/;"	m	interface:Date
toJSON	ests.ts	/^    toJSON(key?: any): string;$/;"	m	interface:Date
toJSON	tsvscode.ts	/^    toJSON(): PushSubscriptionJSON;$/;"	m	interface:PushSubscription
toJSON	tsvscode.ts	/^    toJSON(): RTCIceCandidateInit;$/;"	m	interface:RTCIceCandidate
toJSON	tsvscode.ts	/^    toJSON(): VideoColorSpaceInit;$/;"	m	interface:VideoColorSpace
toJSON	tsvscode.ts	/^    toJSON(): any;$/;"	m	interface:DOMMatrixReadOnly
toJSON	tsvscode.ts	/^    toJSON(): any;$/;"	m	interface:DOMPointReadOnly
toJSON	tsvscode.ts	/^    toJSON(): any;$/;"	m	interface:DOMQuad
toJSON	tsvscode.ts	/^    toJSON(): any;$/;"	m	interface:DOMRectReadOnly
toJSON	tsvscode.ts	/^    toJSON(): any;$/;"	m	interface:MediaDeviceInfo
toJSON	tsvscode.ts	/^    toJSON(): any;$/;"	m	interface:PaymentResponse
toJSON	tsvscode.ts	/^    toJSON(): any;$/;"	m	interface:Performance
toJSON	tsvscode.ts	/^    toJSON(): any;$/;"	m	interface:PerformanceEntry
toJSON	tsvscode.ts	/^    toJSON(): any;$/;"	m	interface:PerformanceEventTiming
toJSON	tsvscode.ts	/^    toJSON(): any;$/;"	m	interface:PerformanceNavigation
toJSON	tsvscode.ts	/^    toJSON(): any;$/;"	m	interface:PerformanceNavigationTiming
toJSON	tsvscode.ts	/^    toJSON(): any;$/;"	m	interface:PerformanceResourceTiming
toJSON	tsvscode.ts	/^    toJSON(): any;$/;"	m	interface:PerformanceServerTiming
toJSON	tsvscode.ts	/^    toJSON(): any;$/;"	m	interface:PerformanceTiming
toJSON	tsvscode.ts	/^    toJSON(): any;$/;"	m	interface:RTCSessionDescription
toJSON	tsvscode.ts	/^    toJSON(): any;$/;"	m	interface:Report
toJSON	tsvscode.ts	/^    toJSON(): any;$/;"	m	interface:ReportBody
toJSON	tsvscode.ts	/^    toJSON(): string;$/;"	m	interface:URL
toLocaleDateString	ests.ts	/^    toLocaleDateString(): string;$/;"	m	interface:Date
toLocaleDateString	ests.ts	/^    toLocaleDateString(locales?: string | string[], options?: Intl.DateTimeFormatOptions): strin/;"	m	interface:Date
toLocaleLowerCase	ests.ts	/^    toLocaleLowerCase(locales?: string | string[]): string;$/;"	m	interface:String
toLocaleString	ests.ts	/^    toLocaleString(): string;$/;"	m	interface:Array
toLocaleString	ests.ts	/^    toLocaleString(): string;$/;"	m	interface:Date
toLocaleString	ests.ts	/^    toLocaleString(): string;$/;"	m	interface:Float32Array
toLocaleString	ests.ts	/^    toLocaleString(): string;$/;"	m	interface:Float64Array
toLocaleString	ests.ts	/^    toLocaleString(): string;$/;"	m	interface:Int16Array
toLocaleString	ests.ts	/^    toLocaleString(): string;$/;"	m	interface:Int32Array
toLocaleString	ests.ts	/^    toLocaleString(): string;$/;"	m	interface:Int8Array
toLocaleString	ests.ts	/^    toLocaleString(): string;$/;"	m	interface:Object
toLocaleString	ests.ts	/^    toLocaleString(): string;$/;"	m	interface:ReadonlyArray
toLocaleString	ests.ts	/^    toLocaleString(): string;$/;"	m	interface:Uint16Array
toLocaleString	ests.ts	/^    toLocaleString(): string;$/;"	m	interface:Uint32Array
toLocaleString	ests.ts	/^    toLocaleString(): string;$/;"	m	interface:Uint8Array
toLocaleString	ests.ts	/^    toLocaleString(): string;$/;"	m	interface:Uint8ClampedArray
toLocaleString	ests.ts	/^    toLocaleString(locales?: string | string[], options?: Intl.DateTimeFormatOptions): string;$/;"	m	interface:Date
toLocaleString	ests.ts	/^    toLocaleString(locales?: string | string[], options?: Intl.NumberFormatOptions): string;$/;"	m	interface:Number
toLocaleTimeString	ests.ts	/^    toLocaleTimeString(): string;$/;"	m	interface:Date
toLocaleTimeString	ests.ts	/^    toLocaleTimeString(locales?: string | string[], options?: Intl.DateTimeFormatOptions): strin/;"	m	interface:Date
toLocaleUpperCase	ests.ts	/^    toLocaleUpperCase(locales?: string | string[]): string;$/;"	m	interface:String
toLowerCase	ests.ts	/^    toLowerCase(): string;$/;"	m	interface:String
toMatrix	tsvscode.ts	/^    toMatrix(): DOMMatrix;$/;"	m	interface:CSSTransformComponent
toMatrix	tsvscode.ts	/^    toMatrix(): DOMMatrix;$/;"	m	interface:CSSTransformValue
toPrecision	ests.ts	/^    toPrecision(precision?: number): string;$/;"	m	interface:Number
toString	ests.ts	/^    toString(): string;$/;"	m	interface:Array
toString	ests.ts	/^    toString(): string;$/;"	m	interface:Date
toString	ests.ts	/^    toString(): string;$/;"	m	interface:Float32Array
toString	ests.ts	/^    toString(): string;$/;"	m	interface:Float64Array
toString	ests.ts	/^    toString(): string;$/;"	m	interface:Function
toString	ests.ts	/^    toString(): string;$/;"	m	interface:Int16Array
toString	ests.ts	/^    toString(): string;$/;"	m	interface:Int32Array
toString	ests.ts	/^    toString(): string;$/;"	m	interface:Int8Array
toString	ests.ts	/^    toString(): string;$/;"	m	interface:Object
toString	ests.ts	/^    toString(): string;$/;"	m	interface:ReadonlyArray
toString	ests.ts	/^    toString(): string;$/;"	m	interface:String
toString	ests.ts	/^    toString(): string;$/;"	m	interface:Uint16Array
toString	ests.ts	/^    toString(): string;$/;"	m	interface:Uint32Array
toString	ests.ts	/^    toString(): string;$/;"	m	interface:Uint8Array
toString	ests.ts	/^    toString(): string;$/;"	m	interface:Uint8ClampedArray
toString	ests.ts	/^    toString(radix?: number): string;$/;"	m	interface:Number
toString	tsvscode.ts	/^    toString(): string;$/;"	m	interface:CSSStyleValue
toString	tsvscode.ts	/^    toString(): string;$/;"	m	interface:CSSTransformComponent
toString	tsvscode.ts	/^    toString(): string;$/;"	m	interface:DOMMatrixReadOnly
toString	tsvscode.ts	/^    toString(): string;$/;"	m	interface:DOMTokenList
toString	tsvscode.ts	/^    toString(): string;$/;"	m	interface:HTMLHyperlinkElementUtils
toString	tsvscode.ts	/^    toString(): string;$/;"	m	interface:Location
toString	tsvscode.ts	/^    toString(): string;$/;"	m	interface:MediaList
toString	tsvscode.ts	/^    toString(): string;$/;"	m	interface:Range
toString	tsvscode.ts	/^    toString(): string;$/;"	m	interface:Selection
toString	tsvscode.ts	/^    toString(): string;$/;"	m	interface:URL
toString	tsvscode.ts	/^    toString(): string;$/;"	m	interface:URLSearchParams
toSum	tsvscode.ts	/^    toSum(...units: string[]): CSSMathSum;$/;"	m	interface:CSSNumericValue
toTimeString	ests.ts	/^    toTimeString(): string;$/;"	m	interface:Date
toUTCString	ests.ts	/^    toUTCString(): string;$/;"	m	interface:Date
toUpperCase	ests.ts	/^    toUpperCase(): string;$/;"	m	interface:String
toggle	tsvscode.ts	/^    toggle(token: string, force?: boolean): boolean;$/;"	m	interface:DOMTokenList
toggleAttribute	tsvscode.ts	/^    toggleAttribute(qualifiedName: string, force?: boolean): boolean;$/;"	m	interface:Element
togglePopover	tsvscode.ts	/^    togglePopover(force?: boolean): boolean;$/;"	m	interface:HTMLElement
tone	tsvscode.ts	/^    readonly tone: string;$/;"	p	interface:RTCDTMFToneChangeEvent
tone	tsvscode.ts	/^    tone?: string;$/;"	p	interface:RTCDTMFToneChangeEventInit
toneBuffer	tsvscode.ts	/^    readonly toneBuffer: string;$/;"	p	interface:RTCDTMFSender
tooLong	tsvscode.ts	/^    readonly tooLong: boolean;$/;"	p	interface:ValidityState
tooLong	tsvscode.ts	/^    tooLong?: boolean;$/;"	p	interface:ValidityStateFlags
tooShort	tsvscode.ts	/^    readonly tooShort: boolean;$/;"	p	interface:ValidityState
tooShort	tsvscode.ts	/^    tooShort?: boolean;$/;"	p	interface:ValidityStateFlags
toolbar	tsvscode.ts	/^    readonly toolbar: BarProp;$/;"	p	interface:Window
toolbar	tsvscode.ts	/^declare var toolbar: BarProp;$/;"	v	namespace:CSS
top	tsvscode.ts	/^    readonly top: WindowProxy | null;$/;"	p	interface:Window
top	tsvscode.ts	/^    readonly top: number;$/;"	p	interface:DOMRectReadOnly
top	tsvscode.ts	/^    top: string;$/;"	p	interface:CSSStyleDeclaration
top	tsvscode.ts	/^    top?: number;$/;"	p	interface:ScrollToOptions
top	tsvscode.ts	/^declare var top: WindowProxy | null;$/;"	v	namespace:CSS
total	tsvscode.ts	/^    readonly total: number;$/;"	p	interface:ProgressEvent
total	tsvscode.ts	/^    total: PaymentItem;$/;"	p	interface:PaymentDetailsInit
total	tsvscode.ts	/^    total?: PaymentItem;$/;"	p	interface:PaymentDetailsModifier
total	tsvscode.ts	/^    total?: PaymentItem;$/;"	p	interface:PaymentDetailsUpdate
total	tsvscode.ts	/^    total?: number;$/;"	p	interface:ProgressEventInit
totalAudioEnergy	tsvscode.ts	/^    totalAudioEnergy?: number;$/;"	p	interface:RTCInboundRtpStreamStats
totalDecodeTime	tsvscode.ts	/^    totalDecodeTime?: number;$/;"	p	interface:RTCInboundRtpStreamStats
totalEncodeTime	tsvscode.ts	/^    totalEncodeTime?: number;$/;"	p	interface:RTCOutboundRtpStreamStats
totalEncodedBytesTarget	tsvscode.ts	/^    totalEncodedBytesTarget?: number;$/;"	p	interface:RTCOutboundRtpStreamStats
totalInterFrameDelay	tsvscode.ts	/^    totalInterFrameDelay?: number;$/;"	p	interface:RTCInboundRtpStreamStats
totalPacketSendDelay	tsvscode.ts	/^    totalPacketSendDelay?: number;$/;"	p	interface:RTCOutboundRtpStreamStats
totalProcessingDelay	tsvscode.ts	/^    totalProcessingDelay?: number;$/;"	p	interface:RTCInboundRtpStreamStats
totalRoundTripTime	tsvscode.ts	/^    totalRoundTripTime?: number;$/;"	p	interface:RTCIceCandidatePairStats
totalSamplesDuration	tsvscode.ts	/^    totalSamplesDuration?: number;$/;"	p	interface:RTCInboundRtpStreamStats
totalSamplesReceived	tsvscode.ts	/^    totalSamplesReceived?: number;$/;"	p	interface:RTCInboundRtpStreamStats
totalSquaredInterFrameDelay	tsvscode.ts	/^    totalSquaredInterFrameDelay?: number;$/;"	p	interface:RTCInboundRtpStreamStats
totalVideoFrames	tsvscode.ts	/^    readonly totalVideoFrames: number;$/;"	p	interface:VideoPlaybackQuality
touchAction	tsvscode.ts	/^    touchAction: string;$/;"	p	interface:CSSStyleDeclaration
touchType	tsvscode.ts	/^    touchType?: TouchType;$/;"	p	interface:TouchInit
touched	tsvscode.ts	/^    readonly touched: boolean;$/;"	p	interface:GamepadButton
touches	tsvscode.ts	/^    readonly touches: TouchList;$/;"	p	interface:TouchEvent
touches	tsvscode.ts	/^    touches?: Touch[];$/;"	p	interface:TouchEventInit
trace	tsvscode.ts	/^    trace(...data: any[]): void;$/;"	m	interface:Console
track	tsvscode.ts	/^    readonly track: MediaStreamTrack | null;$/;"	p	interface:RTCRtpSender
track	tsvscode.ts	/^    readonly track: MediaStreamTrack;$/;"	p	interface:MediaStreamTrackEvent
track	tsvscode.ts	/^    readonly track: MediaStreamTrack;$/;"	p	interface:RTCRtpReceiver
track	tsvscode.ts	/^    readonly track: MediaStreamTrack;$/;"	p	interface:RTCTrackEvent
track	tsvscode.ts	/^    readonly track: TextTrack | null;$/;"	p	interface:TextTrackCue
track	tsvscode.ts	/^    readonly track: TextTrack | null;$/;"	p	interface:TrackEvent
track	tsvscode.ts	/^    readonly track: TextTrack;$/;"	p	interface:HTMLTrackElement
track	tsvscode.ts	/^    track: MediaStreamTrack;$/;"	p	interface:MediaStreamTrackEventInit
track	tsvscode.ts	/^    track: MediaStreamTrack;$/;"	p	interface:RTCTrackEventInit
track	tsvscode.ts	/^    track?: TextTrack | null;$/;"	p	interface:TrackEventInit
trackIdentifier	tsvscode.ts	/^    trackIdentifier: string;$/;"	p	interface:RTCInboundRtpStreamStats
transaction	tsvscode.ts	/^    readonly transaction: IDBTransaction | null;$/;"	p	interface:IDBRequest
transaction	tsvscode.ts	/^    readonly transaction: IDBTransaction;$/;"	p	interface:IDBObjectStore
transaction	tsvscode.ts	/^    transaction(storeNames: string | string[], mode?: IDBTransactionMode, options?: IDBTransacti/;"	m	interface:IDBDatabase
transactionId	tsvscode.ts	/^    transactionId: string;$/;"	p	interface:RTCRtpSendParameters
transceiver	tsvscode.ts	/^    readonly transceiver: RTCRtpTransceiver;$/;"	p	interface:RTCTrackEvent
transceiver	tsvscode.ts	/^    transceiver: RTCRtpTransceiver;$/;"	p	interface:RTCTrackEventInit
transcript	tsvscode.ts	/^    readonly transcript: string;$/;"	p	interface:SpeechRecognitionAlternative
transfer	tsvscode.ts	/^    readonly transfer: VideoTransferCharacteristics | null;$/;"	p	interface:VideoColorSpace
transfer	tsvscode.ts	/^    transfer?: Transferable[];$/;"	p	interface:StructuredSerializeOptions
transfer	tsvscode.ts	/^    transfer?: VideoTransferCharacteristics | null;$/;"	p	interface:VideoColorSpaceInit
transferControlToOffscreen	tsvscode.ts	/^    transferControlToOffscreen(): OffscreenCanvas;$/;"	m	interface:HTMLCanvasElement
transferFromImageBitmap	tsvscode.ts	/^    transferFromImageBitmap(bitmap: ImageBitmap | null): void;$/;"	m	interface:ImageBitmapRenderingContext
transferFunction	tsvscode.ts	/^    transferFunction?: TransferFunction;$/;"	p	interface:VideoConfiguration
transferSize	tsvscode.ts	/^    readonly transferSize: number;$/;"	p	interface:PerformanceResourceTiming
transferToImageBitmap	tsvscode.ts	/^    transferToImageBitmap(): ImageBitmap;$/;"	m	interface:OffscreenCanvas
transform	tsvscode.ts	/^    readonly transform: SVGAnimatedTransformList;$/;"	p	interface:SVGClipPathElement
transform	tsvscode.ts	/^    readonly transform: SVGAnimatedTransformList;$/;"	p	interface:SVGGraphicsElement
transform	tsvscode.ts	/^    transform(a: number, b: number, c: number, d: number, e: number, f: number): void;$/;"	m	interface:CanvasTransform
transform	tsvscode.ts	/^    transform: RTCRtpTransform | null;$/;"	p	interface:RTCRtpReceiver
transform	tsvscode.ts	/^    transform: RTCRtpTransform | null;$/;"	p	interface:RTCRtpSender
transform	tsvscode.ts	/^    transform: string;$/;"	p	interface:CSSStyleDeclaration
transform	tsvscode.ts	/^    transform?: TransformerTransformCallback<I, O>;$/;"	p	interface:Transformer
transformBox	tsvscode.ts	/^    transformBox: string;$/;"	p	interface:CSSStyleDeclaration
transformFeedbackVaryings	tsvscode.ts	/^    transformFeedbackVaryings(program: WebGLProgram, varyings: string[], bufferMode: GLenum): vo/;"	m	interface:WebGL2RenderingContextBase
transformOrigin	tsvscode.ts	/^    transformOrigin: string;$/;"	p	interface:CSSStyleDeclaration
transformPoint	tsvscode.ts	/^    transformPoint(point?: DOMPointInit): DOMPoint;$/;"	m	interface:DOMMatrixReadOnly
transformStyle	tsvscode.ts	/^    transformStyle: string;$/;"	p	interface:CSSStyleDeclaration
transformToDocument	tsvscode.ts	/^    transformToDocument(source: Node): Document;$/;"	m	interface:XSLTProcessor
transformToFragment	tsvscode.ts	/^    transformToFragment(source: Node, output: Document): DocumentFragment;$/;"	m	interface:XSLTProcessor
transition	tsvscode.ts	/^    transition: string;$/;"	p	interface:CSSStyleDeclaration
transitionDelay	tsvscode.ts	/^    transitionDelay: string;$/;"	p	interface:CSSStyleDeclaration
transitionDuration	tsvscode.ts	/^    transitionDuration: string;$/;"	p	interface:CSSStyleDeclaration
transitionProperty	tsvscode.ts	/^    readonly transitionProperty: string;$/;"	p	interface:CSSTransition
transitionProperty	tsvscode.ts	/^    transitionProperty: string;$/;"	p	interface:CSSStyleDeclaration
transitionTimingFunction	tsvscode.ts	/^    transitionTimingFunction: string;$/;"	p	interface:CSSStyleDeclaration
translate	tsvscode.ts	/^    translate(tx?: number, ty?: number, tz?: number): DOMMatrix;$/;"	m	interface:DOMMatrixReadOnly
translate	tsvscode.ts	/^    translate(x: number, y: number): void;$/;"	m	interface:CanvasTransform
translate	tsvscode.ts	/^    translate: boolean;$/;"	p	interface:HTMLElement
translate	tsvscode.ts	/^    translate: string;$/;"	p	interface:CSSStyleDeclaration
translateSelf	tsvscode.ts	/^    translateSelf(tx?: number, ty?: number, tz?: number): DOMMatrix;$/;"	m	interface:DOMMatrix
transport	tsvscode.ts	/^    readonly transport: RTCDtlsTransport | null;$/;"	p	interface:RTCRtpReceiver
transport	tsvscode.ts	/^    readonly transport: RTCDtlsTransport | null;$/;"	p	interface:RTCRtpSender
transport	tsvscode.ts	/^    readonly transport: RTCDtlsTransport;$/;"	p	interface:RTCSctpTransport
transportId	tsvscode.ts	/^    transportId: string;$/;"	p	interface:RTCIceCandidatePairStats
transportId	tsvscode.ts	/^    transportId?: string;$/;"	p	interface:RTCRtpStreamStats
transports	tsvscode.ts	/^    transports?: AuthenticatorTransport[];$/;"	p	interface:PublicKeyCredentialDescriptor
trim	ests.ts	/^    trim(): string;$/;"	m	interface:String
trueSpeed	tsvscode.ts	/^    trueSpeed: boolean;$/;"	p	interface:HTMLMarqueeElement
truncate	tsvscode.ts	/^    truncate(size: number): Promise<void>;$/;"	m	interface:FileSystemWritableFileStream
twist	tsvscode.ts	/^    readonly twist: number;$/;"	p	interface:PointerEvent
twist	tsvscode.ts	/^    twist?: number;$/;"	p	interface:PointerEventInit
type	tsvscode.ts	/^    readonly type: EncodedVideoChunkType;$/;"	p	interface:EncodedVideoChunk
type	tsvscode.ts	/^    readonly type: GLenum;$/;"	p	interface:WebGLActiveInfo
type	tsvscode.ts	/^    readonly type: GamepadHapticActuatorType;$/;"	p	interface:GamepadHapticActuator
type	tsvscode.ts	/^    readonly type: KeyType;$/;"	p	interface:CryptoKey
type	tsvscode.ts	/^    readonly type: MIDIPortType;$/;"	p	interface:MIDIPort
type	tsvscode.ts	/^    readonly type: MutationRecordType;$/;"	p	interface:MutationRecord
type	tsvscode.ts	/^    readonly type: NavigationTimingType;$/;"	p	interface:PerformanceNavigationTiming
type	tsvscode.ts	/^    readonly type: OrientationType;$/;"	p	interface:ScreenOrientation
type	tsvscode.ts	/^    readonly type: RTCEncodedVideoFrameType;$/;"	p	interface:RTCEncodedVideoFrame
type	tsvscode.ts	/^    readonly type: RTCIceCandidateType | null;$/;"	p	interface:RTCIceCandidate
type	tsvscode.ts	/^    readonly type: RTCSdpType;$/;"	p	interface:RTCSessionDescription
type	tsvscode.ts	/^    readonly type: ResponseType;$/;"	p	interface:Response
type	tsvscode.ts	/^    readonly type: SVGAnimatedEnumeration;$/;"	p	interface:SVGComponentTransferFunctionElement
type	tsvscode.ts	/^    readonly type: SVGAnimatedEnumeration;$/;"	p	interface:SVGFEColorMatrixElement
type	tsvscode.ts	/^    readonly type: SVGAnimatedEnumeration;$/;"	p	interface:SVGFETurbulenceElement
type	tsvscode.ts	/^    readonly type: WakeLockType;$/;"	p	interface:WakeLockSentinel
type	tsvscode.ts	/^    readonly type: number;$/;"	p	interface:CSSRule
type	tsvscode.ts	/^    readonly type: number;$/;"	p	interface:PerformanceNavigation
type	tsvscode.ts	/^    readonly type: number;$/;"	p	interface:SVGTransform
type	tsvscode.ts	/^    readonly type: string;$/;"	p	interface:Blob
type	tsvscode.ts	/^    readonly type: string;$/;"	p	interface:Credential
type	tsvscode.ts	/^    readonly type: string;$/;"	p	interface:DataTransferItem
type	tsvscode.ts	/^    readonly type: string;$/;"	p	interface:Event
type	tsvscode.ts	/^    readonly type: string;$/;"	p	interface:HTMLFieldSetElement
type	tsvscode.ts	/^    readonly type: string;$/;"	p	interface:HTMLOutputElement
type	tsvscode.ts	/^    readonly type: string;$/;"	p	interface:HTMLSelectElement
type	tsvscode.ts	/^    readonly type: string;$/;"	p	interface:HTMLTextAreaElement
type	tsvscode.ts	/^    readonly type: string;$/;"	p	interface:MimeType
type	tsvscode.ts	/^    readonly type: string;$/;"	p	interface:Report
type	tsvscode.ts	/^    readonly type: string;$/;"	p	interface:Selection
type	tsvscode.ts	/^    readonly type: string;$/;"	p	interface:StyleSheet
type	tsvscode.ts	/^    type(): CSSNumericType;$/;"	m	interface:CSSNumericValue
type	tsvscode.ts	/^    type: "bytes";$/;"	p	interface:UnderlyingByteSource
type	tsvscode.ts	/^    type: "submit" | "reset" | "button";$/;"	p	interface:HTMLButtonElement
type	tsvscode.ts	/^    type: BiquadFilterType;$/;"	p	interface:BiquadFilterNode
type	tsvscode.ts	/^    type: EncodedVideoChunkType;$/;"	p	interface:EncodedVideoChunkInit
type	tsvscode.ts	/^    type: HighlightType;$/;"	p	interface:Highlight
type	tsvscode.ts	/^    type: MediaDecodingType;$/;"	p	interface:MediaDecodingConfiguration
type	tsvscode.ts	/^    type: MediaEncodingType;$/;"	p	interface:MediaEncodingConfiguration
type	tsvscode.ts	/^    type: OscillatorType;$/;"	p	interface:OscillatorNode
type	tsvscode.ts	/^    type: PublicKeyCredentialType;$/;"	p	interface:PublicKeyCredentialDescriptor
type	tsvscode.ts	/^    type: PublicKeyCredentialType;$/;"	p	interface:PublicKeyCredentialParameters
type	tsvscode.ts	/^    type: RTCSdpType;$/;"	p	interface:RTCSessionDescriptionInit
type	tsvscode.ts	/^    type: RTCStatsType;$/;"	p	interface:RTCStats
type	tsvscode.ts	/^    type: WriteCommandType;$/;"	p	interface:WriteParams
type	tsvscode.ts	/^    type: string;$/;"	p	interface:HTMLAnchorElement
type	tsvscode.ts	/^    type: string;$/;"	p	interface:HTMLEmbedElement
type	tsvscode.ts	/^    type: string;$/;"	p	interface:HTMLInputElement
type	tsvscode.ts	/^    type: string;$/;"	p	interface:HTMLLIElement
type	tsvscode.ts	/^    type: string;$/;"	p	interface:HTMLLinkElement
type	tsvscode.ts	/^    type: string;$/;"	p	interface:HTMLOListElement
type	tsvscode.ts	/^    type: string;$/;"	p	interface:HTMLObjectElement
type	tsvscode.ts	/^    type: string;$/;"	p	interface:HTMLParamElement
type	tsvscode.ts	/^    type: string;$/;"	p	interface:HTMLScriptElement
type	tsvscode.ts	/^    type: string;$/;"	p	interface:HTMLSourceElement
type	tsvscode.ts	/^    type: string;$/;"	p	interface:HTMLStyleElement
type	tsvscode.ts	/^    type: string;$/;"	p	interface:HTMLUListElement
type	tsvscode.ts	/^    type: string;$/;"	p	interface:SVGScriptElement
type	tsvscode.ts	/^    type: string;$/;"	p	interface:SVGStyleElement
type	tsvscode.ts	/^    type: string;$/;"	p	interface:StyleMedia
type	tsvscode.ts	/^    type?: BiquadFilterType;$/;"	p	interface:BiquadFilterOptions
type	tsvscode.ts	/^    type?: ClientTypes;$/;"	p	interface:ClientQueryOptions
type	tsvscode.ts	/^    type?: OscillatorType;$/;"	p	interface:OscillatorOptions
type	tsvscode.ts	/^    type?: RTCSdpType;$/;"	p	interface:RTCLocalSessionDescriptionInit
type	tsvscode.ts	/^    type?: ReadableStreamType;$/;"	p	interface:UnderlyingSource
type	tsvscode.ts	/^    type?: WorkerType;$/;"	p	interface:RegistrationOptions
type	tsvscode.ts	/^    type?: WorkerType;$/;"	p	interface:WorkerOptions
type	tsvscode.ts	/^    type?: string;$/;"	p	interface:BlobPropertyBag
type	tsvscode.ts	/^    type?: string;$/;"	p	interface:ImageEncodeOptions
type	tsvscode.ts	/^    type?: string;$/;"	p	interface:MediaImage
type	tsvscode.ts	/^    type?: string;$/;"	p	interface:PerformanceObserverInit
type	tsvscode.ts	/^    type?: undefined;$/;"	p	interface:UnderlyingDefaultSource
type	tsvscode.ts	/^    type?: undefined;$/;"	p	interface:UnderlyingSink
typeMismatch	tsvscode.ts	/^    readonly typeMismatch: boolean;$/;"	p	interface:ValidityState
typeMismatch	tsvscode.ts	/^    typeMismatch?: boolean;$/;"	p	interface:ValidityStateFlags
types	tsvscode.ts	/^    readonly types: ReadonlyArray<string>;$/;"	p	interface:ClipboardItem
types	tsvscode.ts	/^    readonly types: ReadonlyArray<string>;$/;"	p	interface:DataTransfer
types	tsvscode.ts	/^    types?: string[];$/;"	p	interface:ReportingObserverOptions
unicodeBidi	tsvscode.ts	/^    unicodeBidi: string;$/;"	p	interface:CSSStyleDeclaration
unicodeRange	tsvscode.ts	/^    unicodeRange: string;$/;"	p	interface:FontFace
unicodeRange	tsvscode.ts	/^    unicodeRange?: string;$/;"	p	interface:FontFaceDescriptors
uniform1f	tsvscode.ts	/^    uniform1f(location: WebGLUniformLocation | null, x: GLfloat): void;$/;"	m	interface:WebGLRenderingContextBase
uniform1fv	tsvscode.ts	/^    uniform1fv(location: WebGLUniformLocation | null, data: Float32List, srcOffset?: number, src/;"	m	interface:WebGL2RenderingContextOverloads
uniform1fv	tsvscode.ts	/^    uniform1fv(location: WebGLUniformLocation | null, v: Float32List): void;$/;"	m	interface:WebGLRenderingContextOverloads
uniform1i	tsvscode.ts	/^    uniform1i(location: WebGLUniformLocation | null, x: GLint): void;$/;"	m	interface:WebGLRenderingContextBase
uniform1iv	tsvscode.ts	/^    uniform1iv(location: WebGLUniformLocation | null, data: Int32List, srcOffset?: number, srcLe/;"	m	interface:WebGL2RenderingContextOverloads
uniform1iv	tsvscode.ts	/^    uniform1iv(location: WebGLUniformLocation | null, v: Int32List): void;$/;"	m	interface:WebGLRenderingContextOverloads
uniform1ui	tsvscode.ts	/^    uniform1ui(location: WebGLUniformLocation | null, v0: GLuint): void;$/;"	m	interface:WebGL2RenderingContextBase
uniform1uiv	tsvscode.ts	/^    uniform1uiv(location: WebGLUniformLocation | null, data: Uint32List, srcOffset?: number, src/;"	m	interface:WebGL2RenderingContextBase
uniform2f	tsvscode.ts	/^    uniform2f(location: WebGLUniformLocation | null, x: GLfloat, y: GLfloat): void;$/;"	m	interface:WebGLRenderingContextBase
uniform2fv	tsvscode.ts	/^    uniform2fv(location: WebGLUniformLocation | null, data: Float32List, srcOffset?: number, src/;"	m	interface:WebGL2RenderingContextOverloads
uniform2fv	tsvscode.ts	/^    uniform2fv(location: WebGLUniformLocation | null, v: Float32List): void;$/;"	m	interface:WebGLRenderingContextOverloads
uniform2i	tsvscode.ts	/^    uniform2i(location: WebGLUniformLocation | null, x: GLint, y: GLint): void;$/;"	m	interface:WebGLRenderingContextBase
uniform2iv	tsvscode.ts	/^    uniform2iv(location: WebGLUniformLocation | null, data: Int32List, srcOffset?: number, srcLe/;"	m	interface:WebGL2RenderingContextOverloads
uniform2iv	tsvscode.ts	/^    uniform2iv(location: WebGLUniformLocation | null, v: Int32List): void;$/;"	m	interface:WebGLRenderingContextOverloads
uniform2ui	tsvscode.ts	/^    uniform2ui(location: WebGLUniformLocation | null, v0: GLuint, v1: GLuint): void;$/;"	m	interface:WebGL2RenderingContextBase
uniform2uiv	tsvscode.ts	/^    uniform2uiv(location: WebGLUniformLocation | null, data: Uint32List, srcOffset?: number, src/;"	m	interface:WebGL2RenderingContextBase
uniform3f	tsvscode.ts	/^    uniform3f(location: WebGLUniformLocation | null, x: GLfloat, y: GLfloat, z: GLfloat): void;$/;"	m	interface:WebGLRenderingContextBase
uniform3fv	tsvscode.ts	/^    uniform3fv(location: WebGLUniformLocation | null, data: Float32List, srcOffset?: number, src/;"	m	interface:WebGL2RenderingContextOverloads
uniform3fv	tsvscode.ts	/^    uniform3fv(location: WebGLUniformLocation | null, v: Float32List): void;$/;"	m	interface:WebGLRenderingContextOverloads
uniform3i	tsvscode.ts	/^    uniform3i(location: WebGLUniformLocation | null, x: GLint, y: GLint, z: GLint): void;$/;"	m	interface:WebGLRenderingContextBase
uniform3iv	tsvscode.ts	/^    uniform3iv(location: WebGLUniformLocation | null, data: Int32List, srcOffset?: number, srcLe/;"	m	interface:WebGL2RenderingContextOverloads
uniform3iv	tsvscode.ts	/^    uniform3iv(location: WebGLUniformLocation | null, v: Int32List): void;$/;"	m	interface:WebGLRenderingContextOverloads
uniform3ui	tsvscode.ts	/^    uniform3ui(location: WebGLUniformLocation | null, v0: GLuint, v1: GLuint, v2: GLuint): void;$/;"	m	interface:WebGL2RenderingContextBase
uniform3uiv	tsvscode.ts	/^    uniform3uiv(location: WebGLUniformLocation | null, data: Uint32List, srcOffset?: number, src/;"	m	interface:WebGL2RenderingContextBase
uniform4f	tsvscode.ts	/^    uniform4f(location: WebGLUniformLocation | null, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfl/;"	m	interface:WebGLRenderingContextBase
uniform4fv	tsvscode.ts	/^    uniform4fv(location: WebGLUniformLocation | null, data: Float32List, srcOffset?: number, src/;"	m	interface:WebGL2RenderingContextOverloads
uniform4fv	tsvscode.ts	/^    uniform4fv(location: WebGLUniformLocation | null, v: Float32List): void;$/;"	m	interface:WebGLRenderingContextOverloads
uniform4i	tsvscode.ts	/^    uniform4i(location: WebGLUniformLocation | null, x: GLint, y: GLint, z: GLint, w: GLint): vo/;"	m	interface:WebGLRenderingContextBase
uniform4iv	tsvscode.ts	/^    uniform4iv(location: WebGLUniformLocation | null, data: Int32List, srcOffset?: number, srcLe/;"	m	interface:WebGL2RenderingContextOverloads
uniform4iv	tsvscode.ts	/^    uniform4iv(location: WebGLUniformLocation | null, v: Int32List): void;$/;"	m	interface:WebGLRenderingContextOverloads
uniform4ui	tsvscode.ts	/^    uniform4ui(location: WebGLUniformLocation | null, v0: GLuint, v1: GLuint, v2: GLuint, v3: GL/;"	m	interface:WebGL2RenderingContextBase
uniform4uiv	tsvscode.ts	/^    uniform4uiv(location: WebGLUniformLocation | null, data: Uint32List, srcOffset?: number, src/;"	m	interface:WebGL2RenderingContextBase
uniformBlockBinding	tsvscode.ts	/^    uniformBlockBinding(program: WebGLProgram, uniformBlockIndex: GLuint, uniformBlockBinding: G/;"	m	interface:WebGL2RenderingContextBase
uniformMatrix2fv	tsvscode.ts	/^    uniformMatrix2fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32L/;"	m	interface:WebGL2RenderingContextOverloads
uniformMatrix2fv	tsvscode.ts	/^    uniformMatrix2fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Float32/;"	m	interface:WebGLRenderingContextOverloads
uniformMatrix2x3fv	tsvscode.ts	/^    uniformMatrix2x3fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float3/;"	m	interface:WebGL2RenderingContextBase
uniformMatrix2x4fv	tsvscode.ts	/^    uniformMatrix2x4fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float3/;"	m	interface:WebGL2RenderingContextBase
uniformMatrix3fv	tsvscode.ts	/^    uniformMatrix3fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32L/;"	m	interface:WebGL2RenderingContextOverloads
uniformMatrix3fv	tsvscode.ts	/^    uniformMatrix3fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Float32/;"	m	interface:WebGLRenderingContextOverloads
uniformMatrix3x2fv	tsvscode.ts	/^    uniformMatrix3x2fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float3/;"	m	interface:WebGL2RenderingContextBase
uniformMatrix3x4fv	tsvscode.ts	/^    uniformMatrix3x4fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float3/;"	m	interface:WebGL2RenderingContextBase
uniformMatrix4fv	tsvscode.ts	/^    uniformMatrix4fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32L/;"	m	interface:WebGL2RenderingContextOverloads
uniformMatrix4fv	tsvscode.ts	/^    uniformMatrix4fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Float32/;"	m	interface:WebGLRenderingContextOverloads
uniformMatrix4x2fv	tsvscode.ts	/^    uniformMatrix4x2fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float3/;"	m	interface:WebGL2RenderingContextBase
uniformMatrix4x3fv	tsvscode.ts	/^    uniformMatrix4x3fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float3/;"	m	interface:WebGL2RenderingContextBase
unique	tsvscode.ts	/^    readonly unique: boolean;$/;"	p	interface:IDBIndex
unique	tsvscode.ts	/^    unique?: boolean;$/;"	p	interface:IDBIndexParameters
unit	tsvscode.ts	/^    readonly unit: string;$/;"	p	interface:CSSUnitValue
unitType	tsvscode.ts	/^    readonly unitType: number;$/;"	p	interface:SVGAngle
unitType	tsvscode.ts	/^    readonly unitType: number;$/;"	p	interface:SVGLength
unloadEventEnd	tsvscode.ts	/^    readonly unloadEventEnd: DOMHighResTimeStamp;$/;"	p	interface:PerformanceNavigationTiming
unloadEventEnd	tsvscode.ts	/^    readonly unloadEventEnd: number;$/;"	p	interface:PerformanceTiming
unloadEventStart	tsvscode.ts	/^    readonly unloadEventStart: DOMHighResTimeStamp;$/;"	p	interface:PerformanceNavigationTiming
unloadEventStart	tsvscode.ts	/^    readonly unloadEventStart: number;$/;"	p	interface:PerformanceTiming
unlock	tsvscode.ts	/^    unlock(): void;$/;"	m	interface:ScreenOrientation
unobserve	tsvscode.ts	/^    unobserve(target: Element): void;$/;"	m	interface:IntersectionObserver
unobserve	tsvscode.ts	/^    unobserve(target: Element): void;$/;"	m	interface:ResizeObserver
unpauseAnimations	tsvscode.ts	/^    unpauseAnimations(): void;$/;"	m	interface:SVGSVGElement
unregister	tsvscode.ts	/^    unregister(): Promise<boolean>;$/;"	m	interface:ServiceWorkerRegistration
unshift	ests.ts	/^    unshift(...items: T[]): number;$/;"	m	interface:Array
unsubscribe	tsvscode.ts	/^    unsubscribe(): Promise<boolean>;$/;"	m	interface:PushSubscription
unsuspendRedraw	tsvscode.ts	/^    unsuspendRedraw(suspendHandleID: number): void;$/;"	m	interface:SVGSVGElement
unsuspendRedrawAll	tsvscode.ts	/^    unsuspendRedrawAll(): void;$/;"	m	interface:SVGSVGElement
unwrapKey	tsvscode.ts	/^    unwrapKey(format: KeyFormat, wrappedKey: BufferSource, unwrappingKey: CryptoKey, unwrapAlgor/;"	m	interface:SubtleCrypto
upX	tsvscode.ts	/^    readonly upX: AudioParam;$/;"	p	interface:AudioListener
upY	tsvscode.ts	/^    readonly upY: AudioParam;$/;"	p	interface:AudioListener
upZ	tsvscode.ts	/^    readonly upZ: AudioParam;$/;"	p	interface:AudioListener
update	tsvscode.ts	/^    update(): Promise<void>;$/;"	m	interface:ServiceWorkerRegistration
update	tsvscode.ts	/^    update(response: BufferSource): Promise<void>;$/;"	m	interface:MediaKeySession
update	tsvscode.ts	/^    update(value: any): IDBRequest<IDBValidKey>;$/;"	m	interface:IDBCursor
updatePlaybackRate	tsvscode.ts	/^    updatePlaybackRate(playbackRate: number): void;$/;"	m	interface:Animation
updateTiming	tsvscode.ts	/^    updateTiming(timing?: OptionalEffectTiming): void;$/;"	m	interface:AnimationEffect
updateViaCache	tsvscode.ts	/^    readonly updateViaCache: ServiceWorkerUpdateViaCache;$/;"	p	interface:ServiceWorkerRegistration
updateViaCache	tsvscode.ts	/^    updateViaCache?: ServiceWorkerUpdateViaCache;$/;"	p	interface:RegistrationOptions
updateWith	tsvscode.ts	/^    updateWith(detailsPromise: PaymentDetailsUpdate | PromiseLike<PaymentDetailsUpdate>): void;$/;"	m	interface:PaymentRequestUpdateEvent
updating	tsvscode.ts	/^    readonly updating: boolean;$/;"	p	interface:SourceBuffer
upgrade	tsvscode.ts	/^    upgrade(root: Node): void;$/;"	m	interface:CustomElementRegistry
upload	tsvscode.ts	/^    readonly upload: XMLHttpRequestUpload;$/;"	p	interface:XMLHttpRequest
upper	tsvscode.ts	/^    readonly upper: CSSNumericValue;$/;"	p	interface:CSSMathClamp
upper	tsvscode.ts	/^    readonly upper: any;$/;"	p	interface:IDBKeyRange
upperBound	tsvscode.ts	/^    upperBound(upper: any, open?: boolean): IDBKeyRange;$/;"	v
upperOpen	tsvscode.ts	/^    readonly upperOpen: boolean;$/;"	p	interface:IDBKeyRange
uri	tsvscode.ts	/^    uri: string;$/;"	p	interface:RTCRtpHeaderExtensionCapability
uri	tsvscode.ts	/^    uri: string;$/;"	p	interface:RTCRtpHeaderExtensionParameters
url	tsvscode.ts	/^    readonly url: string;$/;"	p	interface:EventSource
url	tsvscode.ts	/^    readonly url: string;$/;"	p	interface:RTCPeerConnectionIceErrorEvent
url	tsvscode.ts	/^    readonly url: string;$/;"	p	interface:Report
url	tsvscode.ts	/^    readonly url: string;$/;"	p	interface:Request
url	tsvscode.ts	/^    readonly url: string;$/;"	p	interface:Response
url	tsvscode.ts	/^    readonly url: string;$/;"	p	interface:StorageEvent
url	tsvscode.ts	/^    readonly url: string;$/;"	p	interface:WebSocket
url	tsvscode.ts	/^    url: string;$/;"	p	interface:ImportMeta
url	tsvscode.ts	/^    url?: string | null;$/;"	p	interface:RTCPeerConnectionIceEventInit
url	tsvscode.ts	/^    url?: string;$/;"	p	interface:RTCPeerConnectionIceErrorEventInit
url	tsvscode.ts	/^    url?: string;$/;"	p	interface:ShareData
url	tsvscode.ts	/^    url?: string;$/;"	p	interface:StorageEventInit
urls	tsvscode.ts	/^    urls: string | string[];$/;"	p	interface:RTCIceServer
usage	ests.ts	/^        usage: string;$/;"	p	interface:Intl.ResolvedCollatorOptions
usage	ests.ts	/^        usage?: "sort" | "search" | undefined;$/;"	p	interface:Intl.CollatorOptions
usage	tsvscode.ts	/^    usage?: number;$/;"	p	interface:StorageEstimate
usages	tsvscode.ts	/^    readonly usages: KeyUsage[];$/;"	p	interface:CryptoKey
use	tsvscode.ts	/^    use?: string;$/;"	p	interface:JsonWebKey
useGrouping	ests.ts	/^        useGrouping: ResolvedNumberFormatOptionsUseGrouping;$/;"	p	interface:Intl.ResolvedNumberFormatOptions
useGrouping	ests.ts	/^        useGrouping?: NumberFormatOptionsUseGrouping | undefined;$/;"	p	interface:Intl.NumberFormatOptions
useMap	tsvscode.ts	/^    useMap: string;$/;"	p	interface:HTMLImageElement
useMap	tsvscode.ts	/^    useMap: string;$/;"	p	interface:HTMLInputElement
useMap	tsvscode.ts	/^    useMap: string;$/;"	p	interface:HTMLObjectElement
useProgram	tsvscode.ts	/^    useProgram(program: WebGLProgram | null): void;$/;"	m	interface:WebGLRenderingContextBase
user	tsvscode.ts	/^    user: PublicKeyCredentialUserEntity;$/;"	p	interface:PublicKeyCredentialCreationOptions
userActivation	tsvscode.ts	/^    readonly userActivation: UserActivation;$/;"	p	interface:Navigator
userAgent	tsvscode.ts	/^    readonly userAgent: string;$/;"	p	interface:NavigatorID
userHandle	tsvscode.ts	/^    readonly userHandle: ArrayBuffer | null;$/;"	p	interface:AuthenticatorAssertionResponse
userSelect	tsvscode.ts	/^    userSelect: string;$/;"	p	interface:CSSStyleDeclaration
userVerification	tsvscode.ts	/^    userVerification?: UserVerificationRequirement;$/;"	p	interface:AuthenticatorSelectionCriteria
userVerification	tsvscode.ts	/^    userVerification?: UserVerificationRequirement;$/;"	p	interface:PublicKeyCredentialRequestOptions
userVisibleOnly	tsvscode.ts	/^    readonly userVisibleOnly: boolean;$/;"	p	interface:PushSubscriptionOptions
userVisibleOnly	tsvscode.ts	/^    userVisibleOnly?: boolean;$/;"	p	interface:PushSubscriptionOptionsInit
username	tsvscode.ts	/^    username: string;$/;"	p	interface:HTMLHyperlinkElementUtils
username	tsvscode.ts	/^    username: string;$/;"	p	interface:URL
username	tsvscode.ts	/^    username?: string;$/;"	p	interface:RTCIceServer
usernameFragment	tsvscode.ts	/^    readonly usernameFragment: string | null;$/;"	p	interface:RTCIceCandidate
usernameFragment	tsvscode.ts	/^    usernameFragment?: string | null;$/;"	p	interface:RTCIceCandidateInit
utterance	tsvscode.ts	/^    readonly utterance: SpeechSynthesisUtterance;$/;"	p	interface:SpeechSynthesisEvent
utterance	tsvscode.ts	/^    utterance: SpeechSynthesisUtterance;$/;"	p	interface:SpeechSynthesisEventInit
vAlign	tsvscode.ts	/^    vAlign: string;$/;"	p	interface:HTMLTableCellElement
vAlign	tsvscode.ts	/^    vAlign: string;$/;"	p	interface:HTMLTableColElement
vAlign	tsvscode.ts	/^    vAlign: string;$/;"	p	interface:HTMLTableRowElement
vAlign	tsvscode.ts	/^    vAlign: string;$/;"	p	interface:HTMLTableSectionElement
vLink	tsvscode.ts	/^    vLink: string;$/;"	p	interface:HTMLBodyElement
valid	tsvscode.ts	/^    readonly valid: boolean;$/;"	p	interface:ValidityState
validateProgram	tsvscode.ts	/^    validateProgram(program: WebGLProgram): void;$/;"	m	interface:WebGLRenderingContextBase
validationMessage	tsvscode.ts	/^    readonly validationMessage: string;$/;"	p	interface:ElementInternals
validationMessage	tsvscode.ts	/^    readonly validationMessage: string;$/;"	p	interface:HTMLButtonElement
validationMessage	tsvscode.ts	/^    readonly validationMessage: string;$/;"	p	interface:HTMLFieldSetElement
validationMessage	tsvscode.ts	/^    readonly validationMessage: string;$/;"	p	interface:HTMLInputElement
validationMessage	tsvscode.ts	/^    readonly validationMessage: string;$/;"	p	interface:HTMLObjectElement
validationMessage	tsvscode.ts	/^    readonly validationMessage: string;$/;"	p	interface:HTMLOutputElement
validationMessage	tsvscode.ts	/^    readonly validationMessage: string;$/;"	p	interface:HTMLSelectElement
validationMessage	tsvscode.ts	/^    readonly validationMessage: string;$/;"	p	interface:HTMLTextAreaElement
validity	tsvscode.ts	/^    readonly validity: ValidityState;$/;"	p	interface:ElementInternals
validity	tsvscode.ts	/^    readonly validity: ValidityState;$/;"	p	interface:HTMLButtonElement
validity	tsvscode.ts	/^    readonly validity: ValidityState;$/;"	p	interface:HTMLFieldSetElement
validity	tsvscode.ts	/^    readonly validity: ValidityState;$/;"	p	interface:HTMLInputElement
validity	tsvscode.ts	/^    readonly validity: ValidityState;$/;"	p	interface:HTMLObjectElement
validity	tsvscode.ts	/^    readonly validity: ValidityState;$/;"	p	interface:HTMLOutputElement
validity	tsvscode.ts	/^    readonly validity: ValidityState;$/;"	p	interface:HTMLSelectElement
validity	tsvscode.ts	/^    readonly validity: ValidityState;$/;"	p	interface:HTMLTextAreaElement
value	ests.ts	/^    value?: T;$/;"	p	interface:TypedPropertyDescriptor
value	ests.ts	/^    value?: any;$/;"	p	interface:PropertyDescriptor
value	tsvscode.ts	/^    readonly value: CSSNumericValue;$/;"	p	interface:CSSMathClamp
value	tsvscode.ts	/^    readonly value: CSSNumericValue;$/;"	p	interface:CSSMathInvert
value	tsvscode.ts	/^    readonly value: CSSNumericValue;$/;"	p	interface:CSSMathNegate
value	tsvscode.ts	/^    readonly value: any;$/;"	p	interface:IDBCursorWithValue
value	tsvscode.ts	/^    readonly value: number;$/;"	p	interface:GamepadButton
value	tsvscode.ts	/^    value: T;$/;"	p	interface:ReadableStreamReadValueResult
value	tsvscode.ts	/^    value: number;$/;"	p	interface:AudioParam
value	tsvscode.ts	/^    value: number;$/;"	p	interface:CSSUnitValue
value	tsvscode.ts	/^    value: number;$/;"	p	interface:HTMLLIElement
value	tsvscode.ts	/^    value: number;$/;"	p	interface:HTMLMeterElement
value	tsvscode.ts	/^    value: number;$/;"	p	interface:HTMLProgressElement
value	tsvscode.ts	/^    value: number;$/;"	p	interface:SVGAngle
value	tsvscode.ts	/^    value: number;$/;"	p	interface:SVGLength
value	tsvscode.ts	/^    value: number;$/;"	p	interface:SVGNumber
value	tsvscode.ts	/^    value: string;$/;"	p	interface:Attr
value	tsvscode.ts	/^    value: string;$/;"	p	interface:CSSKeywordValue
value	tsvscode.ts	/^    value: string;$/;"	p	interface:DOMTokenList
value	tsvscode.ts	/^    value: string;$/;"	p	interface:HTMLButtonElement
value	tsvscode.ts	/^    value: string;$/;"	p	interface:HTMLDataElement
value	tsvscode.ts	/^    value: string;$/;"	p	interface:HTMLInputElement
value	tsvscode.ts	/^    value: string;$/;"	p	interface:HTMLOptionElement
value	tsvscode.ts	/^    value: string;$/;"	p	interface:HTMLOutputElement
value	tsvscode.ts	/^    value: string;$/;"	p	interface:HTMLParamElement
value	tsvscode.ts	/^    value: string;$/;"	p	interface:HTMLSelectElement
value	tsvscode.ts	/^    value: string;$/;"	p	interface:HTMLTextAreaElement
value	tsvscode.ts	/^    value: string;$/;"	p	interface:PaymentCurrencyAmount
value	tsvscode.ts	/^    value: string;$/;"	p	interface:RadioNodeList
value	tsvscode.ts	/^    value?: BufferSource;$/;"	p	interface:WebTransportHash
value	tsvscode.ts	/^    value?: T;$/;"	p	interface:ReadableStreamReadDoneResult
value	tsvscode.ts	/^    value?: string;$/;"	p	interface:RTCDtlsFingerprint
valueAsDate	tsvscode.ts	/^    valueAsDate: Date | null;$/;"	p	interface:HTMLInputElement
valueAsNumber	tsvscode.ts	/^    valueAsNumber: number;$/;"	p	interface:HTMLInputElement
valueAsString	tsvscode.ts	/^    valueAsString: string;$/;"	p	interface:SVGAngle
valueAsString	tsvscode.ts	/^    valueAsString: string;$/;"	p	interface:SVGLength
valueInSpecifiedUnits	tsvscode.ts	/^    valueInSpecifiedUnits: number;$/;"	p	interface:SVGAngle
valueInSpecifiedUnits	tsvscode.ts	/^    valueInSpecifiedUnits: number;$/;"	p	interface:SVGLength
valueMissing	tsvscode.ts	/^    readonly valueMissing: boolean;$/;"	p	interface:ValidityState
valueMissing	tsvscode.ts	/^    valueMissing?: boolean;$/;"	p	interface:ValidityStateFlags
valueOf	ests.ts	/^    valueOf(): Float32Array;$/;"	m	interface:Float32Array
valueOf	ests.ts	/^    valueOf(): Float64Array;$/;"	m	interface:Float64Array
valueOf	ests.ts	/^    valueOf(): Int16Array;$/;"	m	interface:Int16Array
valueOf	ests.ts	/^    valueOf(): Int32Array;$/;"	m	interface:Int32Array
valueOf	ests.ts	/^    valueOf(): Int8Array;$/;"	m	interface:Int8Array
valueOf	ests.ts	/^    valueOf(): Object;$/;"	m	interface:Object
valueOf	ests.ts	/^    valueOf(): Uint16Array;$/;"	m	interface:Uint16Array
valueOf	ests.ts	/^    valueOf(): Uint32Array;$/;"	m	interface:Uint32Array
valueOf	ests.ts	/^    valueOf(): Uint8Array;$/;"	m	interface:Uint8Array
valueOf	ests.ts	/^    valueOf(): Uint8ClampedArray;$/;"	m	interface:Uint8ClampedArray
valueOf	ests.ts	/^    valueOf(): boolean;$/;"	m	interface:Boolean
valueOf	ests.ts	/^    valueOf(): number;$/;"	m	interface:Date
valueOf	ests.ts	/^    valueOf(): number;$/;"	m	interface:Number
valueOf	ests.ts	/^    valueOf(): string;$/;"	m	interface:String
valueType	tsvscode.ts	/^    valueType: string;$/;"	p	interface:HTMLParamElement
values	tsvscode.ts	/^    readonly values: CSSNumericArray;$/;"	p	interface:CSSMathMax
values	tsvscode.ts	/^    readonly values: CSSNumericArray;$/;"	p	interface:CSSMathMin
values	tsvscode.ts	/^    readonly values: CSSNumericArray;$/;"	p	interface:CSSMathProduct
values	tsvscode.ts	/^    readonly values: CSSNumericArray;$/;"	p	interface:CSSMathSum
values	tsvscode.ts	/^    readonly values: SVGAnimatedNumberList;$/;"	p	interface:SVGFEColorMatrixElement
variable	tsvscode.ts	/^    variable: string;$/;"	p	interface:CSSVariableReferenceValue
vectorEffect	tsvscode.ts	/^    vectorEffect: string;$/;"	p	interface:CSSStyleDeclaration
vendor	tsvscode.ts	/^    readonly vendor: string;$/;"	p	interface:NavigatorID
vendorSub	tsvscode.ts	/^    readonly vendorSub: string;$/;"	p	interface:NavigatorID
verify	tsvscode.ts	/^    verify(algorithm: AlgorithmIdentifier | RsaPssParams | EcdsaParams, key: CryptoKey, signatur/;"	m	interface:SubtleCrypto
version	tsvscode.ts	/^    readonly version: number;$/;"	p	interface:IDBDatabase
version	tsvscode.ts	/^    readonly version: string | null;$/;"	p	interface:MIDIPort
version	tsvscode.ts	/^    version: string;$/;"	p	interface:HTMLHtmlElement
version	tsvscode.ts	/^    version?: number;$/;"	p	interface:IDBDatabaseInfo
vertexAttrib1f	tsvscode.ts	/^    vertexAttrib1f(index: GLuint, x: GLfloat): void;$/;"	m	interface:WebGLRenderingContextBase
vertexAttrib1fv	tsvscode.ts	/^    vertexAttrib1fv(index: GLuint, values: Float32List): void;$/;"	m	interface:WebGLRenderingContextBase
vertexAttrib2f	tsvscode.ts	/^    vertexAttrib2f(index: GLuint, x: GLfloat, y: GLfloat): void;$/;"	m	interface:WebGLRenderingContextBase
vertexAttrib2fv	tsvscode.ts	/^    vertexAttrib2fv(index: GLuint, values: Float32List): void;$/;"	m	interface:WebGLRenderingContextBase
vertexAttrib3f	tsvscode.ts	/^    vertexAttrib3f(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat): void;$/;"	m	interface:WebGLRenderingContextBase
vertexAttrib3fv	tsvscode.ts	/^    vertexAttrib3fv(index: GLuint, values: Float32List): void;$/;"	m	interface:WebGLRenderingContextBase
vertexAttrib4f	tsvscode.ts	/^    vertexAttrib4f(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat): void;$/;"	m	interface:WebGLRenderingContextBase
vertexAttrib4fv	tsvscode.ts	/^    vertexAttrib4fv(index: GLuint, values: Float32List): void;$/;"	m	interface:WebGLRenderingContextBase
vertexAttribDivisor	tsvscode.ts	/^    vertexAttribDivisor(index: GLuint, divisor: GLuint): void;$/;"	m	interface:WebGL2RenderingContextBase
vertexAttribDivisorANGLE	tsvscode.ts	/^    vertexAttribDivisorANGLE(index: GLuint, divisor: GLuint): void;$/;"	m	interface:ANGLE_instanced_arrays
vertexAttribI4i	tsvscode.ts	/^    vertexAttribI4i(index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint): void;$/;"	m	interface:WebGL2RenderingContextBase
vertexAttribI4iv	tsvscode.ts	/^    vertexAttribI4iv(index: GLuint, values: Int32List): void;$/;"	m	interface:WebGL2RenderingContextBase
vertexAttribI4ui	tsvscode.ts	/^    vertexAttribI4ui(index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint): void;$/;"	m	interface:WebGL2RenderingContextBase
vertexAttribI4uiv	tsvscode.ts	/^    vertexAttribI4uiv(index: GLuint, values: Uint32List): void;$/;"	m	interface:WebGL2RenderingContextBase
vertexAttribIPointer	tsvscode.ts	/^    vertexAttribIPointer(index: GLuint, size: GLint, type: GLenum, stride: GLsizei, offset: GLin/;"	m	interface:WebGL2RenderingContextBase
vertexAttribPointer	tsvscode.ts	/^    vertexAttribPointer(index: GLuint, size: GLint, type: GLenum, normalized: GLboolean, stride:/;"	m	interface:WebGLRenderingContextBase
vertical	tsvscode.ts	/^    vertical: DirectionSetting;$/;"	p	interface:VTTCue
verticalAlign	tsvscode.ts	/^    verticalAlign: string;$/;"	p	interface:CSSStyleDeclaration
vibrate	tsvscode.ts	/^    vibrate(pattern: VibratePattern): boolean;$/;"	m	interface:Navigator
vibrationActuator	tsvscode.ts	/^    readonly vibrationActuator: GamepadHapticActuator | null;$/;"	p	interface:Gamepad
video	tsvscode.ts	/^    video?: VideoConfiguration;$/;"	p	interface:MediaConfiguration
video	tsvscode.ts	/^    video?: boolean | MediaTrackConstraints;$/;"	p	interface:DisplayMediaStreamOptions
video	tsvscode.ts	/^    video?: boolean | MediaTrackConstraints;$/;"	p	interface:MediaStreamConstraints
videoBitsPerSecond	tsvscode.ts	/^    readonly videoBitsPerSecond: number;$/;"	p	interface:MediaRecorder
videoBitsPerSecond	tsvscode.ts	/^    videoBitsPerSecond?: number;$/;"	p	interface:MediaRecorderOptions
videoCapabilities	tsvscode.ts	/^    videoCapabilities?: MediaKeySystemMediaCapability[];$/;"	p	interface:MediaKeySystemConfiguration
videoHeight	tsvscode.ts	/^    readonly videoHeight: number;$/;"	p	interface:HTMLVideoElement
videoWidth	tsvscode.ts	/^    readonly videoWidth: number;$/;"	p	interface:HTMLVideoElement
view	tsvscode.ts	/^    readonly view: ArrayBufferView | null;$/;"	p	interface:ReadableStreamBYOBRequest
view	tsvscode.ts	/^    readonly view: Window | null;$/;"	p	interface:UIEvent
view	tsvscode.ts	/^    view?: Window | null;$/;"	p	interface:UIEventInit
viewBox	tsvscode.ts	/^    readonly viewBox: SVGAnimatedRect;$/;"	p	interface:SVGFitToViewBox
viewport	tsvscode.ts	/^    viewport(x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;$/;"	m	interface:WebGLRenderingContextBase
viewportAnchorX	tsvscode.ts	/^    viewportAnchorX: number;$/;"	p	interface:VTTRegion
viewportAnchorY	tsvscode.ts	/^    viewportAnchorY: number;$/;"	p	interface:VTTRegion
viewportElement	tsvscode.ts	/^    readonly viewportElement: SVGElement | null;$/;"	p	interface:SVGElement
violatedDirective	tsvscode.ts	/^    readonly violatedDirective: string;$/;"	p	interface:SecurityPolicyViolationEvent
violatedDirective	tsvscode.ts	/^    violatedDirective: string;$/;"	p	interface:SecurityPolicyViolationEventInit
visibility	tsvscode.ts	/^    visibility: string;$/;"	p	interface:CSSStyleDeclaration
visibilityState	tsvscode.ts	/^    readonly visibilityState: DocumentVisibilityState;$/;"	p	interface:Document
visible	tsvscode.ts	/^    readonly visible: boolean;$/;"	p	interface:BarProp
visibleRect	tsvscode.ts	/^    readonly visibleRect: DOMRectReadOnly | null;$/;"	p	interface:VideoFrame
visibleRect	tsvscode.ts	/^    visibleRect?: DOMRectInit;$/;"	p	interface:VideoFrameBufferInit
visibleRect	tsvscode.ts	/^    visibleRect?: DOMRectInit;$/;"	p	interface:VideoFrameInit
visualViewport	tsvscode.ts	/^    readonly visualViewport: VisualViewport | null;$/;"	p	interface:Window
visualViewport	tsvscode.ts	/^declare var visualViewport: VisualViewport | null;$/;"	v	namespace:CSS
vlinkColor	tsvscode.ts	/^    vlinkColor: string;$/;"	p	interface:Document
voice	tsvscode.ts	/^    voice: SpeechSynthesisVoice | null;$/;"	p	interface:SpeechSynthesisUtterance
voiceURI	tsvscode.ts	/^    readonly voiceURI: string;$/;"	p	interface:SpeechSynthesisVoice
volume	tsvscode.ts	/^    volume: number;$/;"	p	interface:HTMLMediaElement
volume	tsvscode.ts	/^    volume: number;$/;"	p	interface:SpeechSynthesisUtterance
vspace	tsvscode.ts	/^    vspace: number;$/;"	p	interface:HTMLImageElement
vspace	tsvscode.ts	/^    vspace: number;$/;"	p	interface:HTMLMarqueeElement
vspace	tsvscode.ts	/^    vspace: number;$/;"	p	interface:HTMLObjectElement
w	tsvscode.ts	/^    readonly w: number;$/;"	p	interface:DOMPointReadOnly
w	tsvscode.ts	/^    w: number;$/;"	p	interface:DOMPoint
w	tsvscode.ts	/^    w?: number;$/;"	p	interface:DOMPointInit
waitSync	tsvscode.ts	/^    waitSync(sync: WebGLSync, flags: GLbitfield, timeout: GLint64): void;$/;"	m	interface:WebGL2RenderingContextBase
waiting	tsvscode.ts	/^    readonly waiting: ServiceWorker | null;$/;"	p	interface:ServiceWorkerRegistration
wakeLock	tsvscode.ts	/^    readonly wakeLock: WakeLock;$/;"	p	interface:Navigator
warn	tsvscode.ts	/^    warn(...data: any[]): void;$/;"	m	interface:Console
wasClean	tsvscode.ts	/^    readonly wasClean: boolean;$/;"	p	interface:CloseEvent
wasClean	tsvscode.ts	/^    wasClean?: boolean;$/;"	p	interface:CloseEventInit
watchAvailability	tsvscode.ts	/^    watchAvailability(callback: RemotePlaybackAvailabilityCallback): Promise<number>;$/;"	m	interface:RemotePlayback
watchPosition	tsvscode.ts	/^    watchPosition(successCallback: PositionCallback, errorCallback?: PositionErrorCallback | nul/;"	m	interface:Geolocation
weakMagnitude	tsvscode.ts	/^    weakMagnitude?: number;$/;"	p	interface:GamepadEffectParameters
webdriver	tsvscode.ts	/^    readonly webdriver: boolean;$/;"	p	interface:NavigatorAutomationInformation
webkitAlignContent	tsvscode.ts	/^    webkitAlignContent: string;$/;"	p	interface:CSSStyleDeclaration
webkitAlignItems	tsvscode.ts	/^    webkitAlignItems: string;$/;"	p	interface:CSSStyleDeclaration
webkitAlignSelf	tsvscode.ts	/^    webkitAlignSelf: string;$/;"	p	interface:CSSStyleDeclaration
webkitAnimation	tsvscode.ts	/^    webkitAnimation: string;$/;"	p	interface:CSSStyleDeclaration
webkitAnimationDelay	tsvscode.ts	/^    webkitAnimationDelay: string;$/;"	p	interface:CSSStyleDeclaration
webkitAnimationDirection	tsvscode.ts	/^    webkitAnimationDirection: string;$/;"	p	interface:CSSStyleDeclaration
webkitAnimationDuration	tsvscode.ts	/^    webkitAnimationDuration: string;$/;"	p	interface:CSSStyleDeclaration
webkitAnimationFillMode	tsvscode.ts	/^    webkitAnimationFillMode: string;$/;"	p	interface:CSSStyleDeclaration
webkitAnimationIterationCount	tsvscode.ts	/^    webkitAnimationIterationCount: string;$/;"	p	interface:CSSStyleDeclaration
webkitAnimationName	tsvscode.ts	/^    webkitAnimationName: string;$/;"	p	interface:CSSStyleDeclaration
webkitAnimationPlayState	tsvscode.ts	/^    webkitAnimationPlayState: string;$/;"	p	interface:CSSStyleDeclaration
webkitAnimationTimingFunction	tsvscode.ts	/^    webkitAnimationTimingFunction: string;$/;"	p	interface:CSSStyleDeclaration
webkitAppearance	tsvscode.ts	/^    webkitAppearance: string;$/;"	p	interface:CSSStyleDeclaration
webkitBackfaceVisibility	tsvscode.ts	/^    webkitBackfaceVisibility: string;$/;"	p	interface:CSSStyleDeclaration
webkitBackgroundClip	tsvscode.ts	/^    webkitBackgroundClip: string;$/;"	p	interface:CSSStyleDeclaration
webkitBackgroundOrigin	tsvscode.ts	/^    webkitBackgroundOrigin: string;$/;"	p	interface:CSSStyleDeclaration
webkitBackgroundSize	tsvscode.ts	/^    webkitBackgroundSize: string;$/;"	p	interface:CSSStyleDeclaration
webkitBorderBottomLeftRadius	tsvscode.ts	/^    webkitBorderBottomLeftRadius: string;$/;"	p	interface:CSSStyleDeclaration
webkitBorderBottomRightRadius	tsvscode.ts	/^    webkitBorderBottomRightRadius: string;$/;"	p	interface:CSSStyleDeclaration
webkitBorderRadius	tsvscode.ts	/^    webkitBorderRadius: string;$/;"	p	interface:CSSStyleDeclaration
webkitBorderTopLeftRadius	tsvscode.ts	/^    webkitBorderTopLeftRadius: string;$/;"	p	interface:CSSStyleDeclaration
webkitBorderTopRightRadius	tsvscode.ts	/^    webkitBorderTopRightRadius: string;$/;"	p	interface:CSSStyleDeclaration
webkitBoxAlign	tsvscode.ts	/^    webkitBoxAlign: string;$/;"	p	interface:CSSStyleDeclaration
webkitBoxFlex	tsvscode.ts	/^    webkitBoxFlex: string;$/;"	p	interface:CSSStyleDeclaration
webkitBoxOrdinalGroup	tsvscode.ts	/^    webkitBoxOrdinalGroup: string;$/;"	p	interface:CSSStyleDeclaration
webkitBoxOrient	tsvscode.ts	/^    webkitBoxOrient: string;$/;"	p	interface:CSSStyleDeclaration
webkitBoxPack	tsvscode.ts	/^    webkitBoxPack: string;$/;"	p	interface:CSSStyleDeclaration
webkitBoxShadow	tsvscode.ts	/^    webkitBoxShadow: string;$/;"	p	interface:CSSStyleDeclaration
webkitBoxSizing	tsvscode.ts	/^    webkitBoxSizing: string;$/;"	p	interface:CSSStyleDeclaration
webkitEntries	tsvscode.ts	/^    readonly webkitEntries: ReadonlyArray<FileSystemEntry>;$/;"	p	interface:HTMLInputElement
webkitFilter	tsvscode.ts	/^    webkitFilter: string;$/;"	p	interface:CSSStyleDeclaration
webkitFlex	tsvscode.ts	/^    webkitFlex: string;$/;"	p	interface:CSSStyleDeclaration
webkitFlexBasis	tsvscode.ts	/^    webkitFlexBasis: string;$/;"	p	interface:CSSStyleDeclaration
webkitFlexDirection	tsvscode.ts	/^    webkitFlexDirection: string;$/;"	p	interface:CSSStyleDeclaration
webkitFlexFlow	tsvscode.ts	/^    webkitFlexFlow: string;$/;"	p	interface:CSSStyleDeclaration
webkitFlexGrow	tsvscode.ts	/^    webkitFlexGrow: string;$/;"	p	interface:CSSStyleDeclaration
webkitFlexShrink	tsvscode.ts	/^    webkitFlexShrink: string;$/;"	p	interface:CSSStyleDeclaration
webkitFlexWrap	tsvscode.ts	/^    webkitFlexWrap: string;$/;"	p	interface:CSSStyleDeclaration
webkitGetAsEntry	tsvscode.ts	/^    webkitGetAsEntry(): FileSystemEntry | null;$/;"	m	interface:DataTransferItem
webkitJustifyContent	tsvscode.ts	/^    webkitJustifyContent: string;$/;"	p	interface:CSSStyleDeclaration
webkitLineClamp	tsvscode.ts	/^    webkitLineClamp: string;$/;"	p	interface:CSSStyleDeclaration
webkitMask	tsvscode.ts	/^    webkitMask: string;$/;"	p	interface:CSSStyleDeclaration
webkitMaskBoxImage	tsvscode.ts	/^    webkitMaskBoxImage: string;$/;"	p	interface:CSSStyleDeclaration
webkitMaskBoxImageOutset	tsvscode.ts	/^    webkitMaskBoxImageOutset: string;$/;"	p	interface:CSSStyleDeclaration
webkitMaskBoxImageRepeat	tsvscode.ts	/^    webkitMaskBoxImageRepeat: string;$/;"	p	interface:CSSStyleDeclaration
webkitMaskBoxImageSlice	tsvscode.ts	/^    webkitMaskBoxImageSlice: string;$/;"	p	interface:CSSStyleDeclaration
webkitMaskBoxImageSource	tsvscode.ts	/^    webkitMaskBoxImageSource: string;$/;"	p	interface:CSSStyleDeclaration
webkitMaskBoxImageWidth	tsvscode.ts	/^    webkitMaskBoxImageWidth: string;$/;"	p	interface:CSSStyleDeclaration
webkitMaskClip	tsvscode.ts	/^    webkitMaskClip: string;$/;"	p	interface:CSSStyleDeclaration
webkitMaskComposite	tsvscode.ts	/^    webkitMaskComposite: string;$/;"	p	interface:CSSStyleDeclaration
webkitMaskImage	tsvscode.ts	/^    webkitMaskImage: string;$/;"	p	interface:CSSStyleDeclaration
webkitMaskOrigin	tsvscode.ts	/^    webkitMaskOrigin: string;$/;"	p	interface:CSSStyleDeclaration
webkitMaskPosition	tsvscode.ts	/^    webkitMaskPosition: string;$/;"	p	interface:CSSStyleDeclaration
webkitMaskRepeat	tsvscode.ts	/^    webkitMaskRepeat: string;$/;"	p	interface:CSSStyleDeclaration
webkitMaskSize	tsvscode.ts	/^    webkitMaskSize: string;$/;"	p	interface:CSSStyleDeclaration
webkitMatchesSelector	tsvscode.ts	/^    webkitMatchesSelector(selectors: string): boolean;$/;"	m	interface:Element
webkitOrder	tsvscode.ts	/^    webkitOrder: string;$/;"	p	interface:CSSStyleDeclaration
webkitPerspective	tsvscode.ts	/^    webkitPerspective: string;$/;"	p	interface:CSSStyleDeclaration
webkitPerspectiveOrigin	tsvscode.ts	/^    webkitPerspectiveOrigin: string;$/;"	p	interface:CSSStyleDeclaration
webkitRelativePath	tsvscode.ts	/^    readonly webkitRelativePath: string;$/;"	p	interface:File
webkitTextFillColor	tsvscode.ts	/^    webkitTextFillColor: string;$/;"	p	interface:CSSStyleDeclaration
webkitTextSizeAdjust	tsvscode.ts	/^    webkitTextSizeAdjust: string;$/;"	p	interface:CSSStyleDeclaration
webkitTextStroke	tsvscode.ts	/^    webkitTextStroke: string;$/;"	p	interface:CSSStyleDeclaration
webkitTextStrokeColor	tsvscode.ts	/^    webkitTextStrokeColor: string;$/;"	p	interface:CSSStyleDeclaration
webkitTextStrokeWidth	tsvscode.ts	/^    webkitTextStrokeWidth: string;$/;"	p	interface:CSSStyleDeclaration
webkitTransform	tsvscode.ts	/^    webkitTransform: string;$/;"	p	interface:CSSStyleDeclaration
webkitTransformOrigin	tsvscode.ts	/^    webkitTransformOrigin: string;$/;"	p	interface:CSSStyleDeclaration
webkitTransformStyle	tsvscode.ts	/^    webkitTransformStyle: string;$/;"	p	interface:CSSStyleDeclaration
webkitTransition	tsvscode.ts	/^    webkitTransition: string;$/;"	p	interface:CSSStyleDeclaration
webkitTransitionDelay	tsvscode.ts	/^    webkitTransitionDelay: string;$/;"	p	interface:CSSStyleDeclaration
webkitTransitionDuration	tsvscode.ts	/^    webkitTransitionDuration: string;$/;"	p	interface:CSSStyleDeclaration
webkitTransitionProperty	tsvscode.ts	/^    webkitTransitionProperty: string;$/;"	p	interface:CSSStyleDeclaration
webkitTransitionTimingFunction	tsvscode.ts	/^    webkitTransitionTimingFunction: string;$/;"	p	interface:CSSStyleDeclaration
webkitURL	tsvscode.ts	/^declare var webkitURL: typeof URL;$/;"	v
webkitURL	tsvscode.ts	/^type webkitURL = URL;$/;"	a
webkitUserSelect	tsvscode.ts	/^    webkitUserSelect: string;$/;"	p	interface:CSSStyleDeclaration
webkitdirectory	tsvscode.ts	/^    webkitdirectory: boolean;$/;"	p	interface:HTMLInputElement
weekday	ests.ts	/^        weekday?: "long" | "short" | "narrow" | undefined;$/;"	p	interface:Intl.DateTimeFormatOptions
weekday	ests.ts	/^        weekday?: string;$/;"	p	interface:Intl.ResolvedDateTimeFormatOptions
weight	tsvscode.ts	/^    weight: string;$/;"	p	interface:FontFace
weight	tsvscode.ts	/^    weight?: string;$/;"	p	interface:FontFaceDescriptors
whatToShow	tsvscode.ts	/^    readonly whatToShow: number;$/;"	p	interface:NodeIterator
whatToShow	tsvscode.ts	/^    readonly whatToShow: number;$/;"	p	interface:TreeWalker
whenDefined	tsvscode.ts	/^    whenDefined(name: string): Promise<CustomElementConstructor>;$/;"	m	interface:CustomElementRegistry
which	tsvscode.ts	/^    readonly which: number;$/;"	p	interface:UIEvent
which	tsvscode.ts	/^    which?: number;$/;"	p	interface:UIEventInit
whiteSpace	tsvscode.ts	/^    whiteSpace: string;$/;"	p	interface:CSSStyleDeclaration
wholeText	tsvscode.ts	/^    readonly wholeText: string;$/;"	p	interface:Text
widows	tsvscode.ts	/^    widows: string;$/;"	p	interface:CSSStyleDeclaration
width	tsvscode.ts	/^    readonly width: SVGAnimatedLength;$/;"	p	interface:SVGFilterElement
width	tsvscode.ts	/^    readonly width: SVGAnimatedLength;$/;"	p	interface:SVGFilterPrimitiveStandardAttributes
width	tsvscode.ts	/^    readonly width: SVGAnimatedLength;$/;"	p	interface:SVGForeignObjectElement
width	tsvscode.ts	/^    readonly width: SVGAnimatedLength;$/;"	p	interface:SVGImageElement
width	tsvscode.ts	/^    readonly width: SVGAnimatedLength;$/;"	p	interface:SVGMaskElement
width	tsvscode.ts	/^    readonly width: SVGAnimatedLength;$/;"	p	interface:SVGPatternElement
width	tsvscode.ts	/^    readonly width: SVGAnimatedLength;$/;"	p	interface:SVGRectElement
width	tsvscode.ts	/^    readonly width: SVGAnimatedLength;$/;"	p	interface:SVGSVGElement
width	tsvscode.ts	/^    readonly width: SVGAnimatedLength;$/;"	p	interface:SVGUseElement
width	tsvscode.ts	/^    readonly width: number;$/;"	p	interface:DOMRectReadOnly
width	tsvscode.ts	/^    readonly width: number;$/;"	p	interface:ImageBitmap
width	tsvscode.ts	/^    readonly width: number;$/;"	p	interface:ImageData
width	tsvscode.ts	/^    readonly width: number;$/;"	p	interface:PictureInPictureWindow
width	tsvscode.ts	/^    readonly width: number;$/;"	p	interface:PointerEvent
width	tsvscode.ts	/^    readonly width: number;$/;"	p	interface:Screen
width	tsvscode.ts	/^    readonly width: number;$/;"	p	interface:TextMetrics
width	tsvscode.ts	/^    readonly width: number;$/;"	p	interface:VisualViewport
width	tsvscode.ts	/^    width: number;$/;"	p	interface:DOMRect
width	tsvscode.ts	/^    width: number;$/;"	p	interface:HTMLCanvasElement
width	tsvscode.ts	/^    width: number;$/;"	p	interface:HTMLImageElement
width	tsvscode.ts	/^    width: number;$/;"	p	interface:HTMLInputElement
width	tsvscode.ts	/^    width: number;$/;"	p	interface:HTMLPreElement
width	tsvscode.ts	/^    width: number;$/;"	p	interface:HTMLSourceElement
width	tsvscode.ts	/^    width: number;$/;"	p	interface:HTMLVideoElement
width	tsvscode.ts	/^    width: number;$/;"	p	interface:OffscreenCanvas
width	tsvscode.ts	/^    width: number;$/;"	p	interface:VTTRegion
width	tsvscode.ts	/^    width: number;$/;"	p	interface:VideoConfiguration
width	tsvscode.ts	/^    width: number;$/;"	p	interface:VideoEncoderConfig
width	tsvscode.ts	/^    width: number;$/;"	p	interface:VideoFrameCallbackMetadata
width	tsvscode.ts	/^    width: string;$/;"	p	interface:CSSStyleDeclaration
width	tsvscode.ts	/^    width: string;$/;"	p	interface:HTMLEmbedElement
width	tsvscode.ts	/^    width: string;$/;"	p	interface:HTMLHRElement
width	tsvscode.ts	/^    width: string;$/;"	p	interface:HTMLIFrameElement
width	tsvscode.ts	/^    width: string;$/;"	p	interface:HTMLMarqueeElement
width	tsvscode.ts	/^    width: string;$/;"	p	interface:HTMLObjectElement
width	tsvscode.ts	/^    width: string;$/;"	p	interface:HTMLTableCellElement
width	tsvscode.ts	/^    width: string;$/;"	p	interface:HTMLTableColElement
width	tsvscode.ts	/^    width: string;$/;"	p	interface:HTMLTableElement
width	tsvscode.ts	/^    width?: ConstrainULong;$/;"	p	interface:MediaTrackConstraintSet
width	tsvscode.ts	/^    width?: ULongRange;$/;"	p	interface:MediaTrackCapabilities
width	tsvscode.ts	/^    width?: boolean;$/;"	p	interface:MediaTrackSupportedConstraints
width	tsvscode.ts	/^    width?: number;$/;"	p	interface:DOMRectInit
width	tsvscode.ts	/^    width?: number;$/;"	p	interface:MediaTrackSettings
width	tsvscode.ts	/^    width?: number;$/;"	p	interface:PointerEventInit
width	tsvscode.ts	/^    width?: number;$/;"	p	interface:RTCEncodedVideoFrameMetadata
willChange	tsvscode.ts	/^    willChange: string;$/;"	p	interface:CSSStyleDeclaration
willReadFrequently	tsvscode.ts	/^    willReadFrequently?: boolean;$/;"	p	interface:CanvasRenderingContext2DSettings
willValidate	tsvscode.ts	/^    readonly willValidate: boolean;$/;"	p	interface:ElementInternals
willValidate	tsvscode.ts	/^    readonly willValidate: boolean;$/;"	p	interface:HTMLButtonElement
willValidate	tsvscode.ts	/^    readonly willValidate: boolean;$/;"	p	interface:HTMLFieldSetElement
willValidate	tsvscode.ts	/^    readonly willValidate: boolean;$/;"	p	interface:HTMLInputElement
willValidate	tsvscode.ts	/^    readonly willValidate: boolean;$/;"	p	interface:HTMLObjectElement
willValidate	tsvscode.ts	/^    readonly willValidate: boolean;$/;"	p	interface:HTMLOutputElement
willValidate	tsvscode.ts	/^    readonly willValidate: boolean;$/;"	p	interface:HTMLSelectElement
willValidate	tsvscode.ts	/^    readonly willValidate: boolean;$/;"	p	interface:HTMLTextAreaElement
window	tsvscode.ts	/^    readonly window: Window & typeof globalThis;$/;"	p	interface:Window
window	tsvscode.ts	/^    window?: null;$/;"	p	interface:RequestInit
window	tsvscode.ts	/^declare var window: Window & typeof globalThis;$/;"	v	namespace:CSS
with	ests.ts	/^    with?: ImportAttributes;$/;"	p	interface:ImportCallOptions
withCredentials	tsvscode.ts	/^    readonly withCredentials: boolean;$/;"	p	interface:EventSource
withCredentials	tsvscode.ts	/^    withCredentials: boolean;$/;"	p	interface:XMLHttpRequest
withCredentials	tsvscode.ts	/^    withCredentials?: boolean;$/;"	p	interface:EventSourceInit
wordBreak	tsvscode.ts	/^    wordBreak: string;$/;"	p	interface:CSSStyleDeclaration
wordSpacing	tsvscode.ts	/^    wordSpacing: string;$/;"	p	interface:CSSStyleDeclaration
wordSpacing	tsvscode.ts	/^    wordSpacing: string;$/;"	p	interface:CanvasTextDrawingStyles
wordWrap	tsvscode.ts	/^    wordWrap: string;$/;"	p	interface:CSSStyleDeclaration
workerStart	tsvscode.ts	/^    readonly workerStart: DOMHighResTimeStamp;$/;"	p	interface:PerformanceResourceTiming
wrap	tsvscode.ts	/^    wrap: string;$/;"	p	interface:HTMLTextAreaElement
wrapKey	tsvscode.ts	/^    wrapKey(format: KeyFormat, key: CryptoKey, wrappingKey: CryptoKey, wrapAlgorithm: AlgorithmI/;"	m	interface:SubtleCrypto
writable	ests.ts	/^    writable?: boolean;$/;"	p	interface:PropertyDescriptor
writable	ests.ts	/^    writable?: boolean;$/;"	p	interface:TypedPropertyDescriptor
writable	tsvscode.ts	/^    readonly writable: WritableStream;$/;"	p	interface:GenericTransformStream
writable	tsvscode.ts	/^    readonly writable: WritableStream;$/;"	p	interface:WebTransportBidirectionalStream
writable	tsvscode.ts	/^    readonly writable: WritableStream;$/;"	p	interface:WebTransportDatagramDuplexStream
writable	tsvscode.ts	/^    readonly writable: WritableStream<BufferSource>;$/;"	p	interface:TextDecoderStream
writable	tsvscode.ts	/^    readonly writable: WritableStream<I>;$/;"	p	interface:TransformStream
writable	tsvscode.ts	/^    readonly writable: WritableStream<string>;$/;"	p	interface:TextEncoderStream
writable	tsvscode.ts	/^    writable: WritableStream<W>;$/;"	p	interface:ReadableWritablePair
writableType	tsvscode.ts	/^    writableType?: undefined;$/;"	p	interface:Transformer
write	tsvscode.ts	/^    write(...text: string[]): void;$/;"	m	interface:Document
write	tsvscode.ts	/^    write(chunk?: W): Promise<void>;$/;"	m	interface:WritableStreamDefaultWriter
write	tsvscode.ts	/^    write(data: ClipboardItems): Promise<void>;$/;"	m	interface:Clipboard
write	tsvscode.ts	/^    write(data: FileSystemWriteChunkType): Promise<void>;$/;"	m	interface:FileSystemWritableFileStream
write	tsvscode.ts	/^    write?: UnderlyingSinkWriteCallback<W>;$/;"	p	interface:UnderlyingSink
writeText	tsvscode.ts	/^    writeText(data: string): Promise<void>;$/;"	m	interface:Clipboard
writeln	tsvscode.ts	/^    writeln(...text: string[]): void;$/;"	m	interface:Document
writingMode	tsvscode.ts	/^    writingMode: string;$/;"	p	interface:CSSStyleDeclaration
written	tsvscode.ts	/^    written: number;$/;"	p	interface:TextEncoderEncodeIntoResult
x	tsvscode.ts	/^    readonly x: SVGAnimatedLength;$/;"	p	interface:SVGFilterElement
x	tsvscode.ts	/^    readonly x: SVGAnimatedLength;$/;"	p	interface:SVGFilterPrimitiveStandardAttributes
x	tsvscode.ts	/^    readonly x: SVGAnimatedLength;$/;"	p	interface:SVGForeignObjectElement
x	tsvscode.ts	/^    readonly x: SVGAnimatedLength;$/;"	p	interface:SVGImageElement
x	tsvscode.ts	/^    readonly x: SVGAnimatedLength;$/;"	p	interface:SVGMaskElement
x	tsvscode.ts	/^    readonly x: SVGAnimatedLength;$/;"	p	interface:SVGPatternElement
x	tsvscode.ts	/^    readonly x: SVGAnimatedLength;$/;"	p	interface:SVGRectElement
x	tsvscode.ts	/^    readonly x: SVGAnimatedLength;$/;"	p	interface:SVGSVGElement
x	tsvscode.ts	/^    readonly x: SVGAnimatedLength;$/;"	p	interface:SVGUseElement
x	tsvscode.ts	/^    readonly x: SVGAnimatedLengthList;$/;"	p	interface:SVGTextPositioningElement
x	tsvscode.ts	/^    readonly x: SVGAnimatedNumber;$/;"	p	interface:SVGFEPointLightElement
x	tsvscode.ts	/^    readonly x: SVGAnimatedNumber;$/;"	p	interface:SVGFESpotLightElement
x	tsvscode.ts	/^    readonly x: number | null;$/;"	p	interface:DeviceMotionEventAcceleration
x	tsvscode.ts	/^    readonly x: number;$/;"	p	interface:DOMPointReadOnly
x	tsvscode.ts	/^    readonly x: number;$/;"	p	interface:DOMRectReadOnly
x	tsvscode.ts	/^    readonly x: number;$/;"	p	interface:HTMLImageElement
x	tsvscode.ts	/^    readonly x: number;$/;"	p	interface:MouseEvent
x	tsvscode.ts	/^    x: CSSNumberish;$/;"	p	interface:CSSRotate
x	tsvscode.ts	/^    x: CSSNumberish;$/;"	p	interface:CSSScale
x	tsvscode.ts	/^    x: CSSNumericValue;$/;"	p	interface:CSSTranslate
x	tsvscode.ts	/^    x: number;$/;"	p	interface:DOMPoint
x	tsvscode.ts	/^    x: number;$/;"	p	interface:DOMRect
x	tsvscode.ts	/^    x: string;$/;"	p	interface:CSSStyleDeclaration
x	tsvscode.ts	/^    x?: number | null;$/;"	p	interface:DeviceMotionEventAccelerationInit
x	tsvscode.ts	/^    x?: number;$/;"	p	interface:DOMPointInit
x	tsvscode.ts	/^    x?: number;$/;"	p	interface:DOMRectInit
x	tsvscode.ts	/^    x?: string;$/;"	p	interface:JsonWebKey
x00	tsvscode.ts	/^    readonly DOM_DELTA_PIXEL: 0x00;$/;"	p	interface:WheelEvent
x00	tsvscode.ts	/^    readonly DOM_KEY_LOCATION_STANDARD: 0x00;$/;"	p	interface:KeyboardEvent
x0000	tsvscode.ts	/^    readonly POINTS: 0x0000;$/;"	p	interface:WebGLRenderingContextBase
x00000001	tsvscode.ts	/^    readonly SYNC_FLUSH_COMMANDS_BIT: 0x00000001;$/;"	p	interface:WebGL2RenderingContextBase
x00000100	tsvscode.ts	/^    readonly DEPTH_BUFFER_BIT: 0x00000100;$/;"	p	interface:WebGLRenderingContextBase
x00000400	tsvscode.ts	/^    readonly STENCIL_BUFFER_BIT: 0x00000400;$/;"	p	interface:WebGLRenderingContextBase
x00004000	tsvscode.ts	/^    readonly COLOR_BUFFER_BIT: 0x00004000;$/;"	p	interface:WebGLRenderingContextBase
x0001	tsvscode.ts	/^    readonly LINES: 0x0001;$/;"	p	interface:WebGLRenderingContextBase
x0002	tsvscode.ts	/^    readonly LINE_LOOP: 0x0002;$/;"	p	interface:WebGLRenderingContextBase
x0003	tsvscode.ts	/^    readonly LINE_STRIP: 0x0003;$/;"	p	interface:WebGLRenderingContextBase
x0004	tsvscode.ts	/^    readonly TRIANGLES: 0x0004;$/;"	p	interface:WebGLRenderingContextBase
x0005	tsvscode.ts	/^    readonly TRIANGLE_STRIP: 0x0005;$/;"	p	interface:WebGLRenderingContextBase
x0006	tsvscode.ts	/^    readonly TRIANGLE_FAN: 0x0006;$/;"	p	interface:WebGLRenderingContextBase
x01	tsvscode.ts	/^    readonly DOCUMENT_POSITION_DISCONNECTED: 0x01;$/;"	p	interface:Node
x01	tsvscode.ts	/^    readonly DOM_DELTA_LINE: 0x01;$/;"	p	interface:WheelEvent
x01	tsvscode.ts	/^    readonly DOM_KEY_LOCATION_LEFT: 0x01;$/;"	p	interface:KeyboardEvent
x02	tsvscode.ts	/^    readonly DOCUMENT_POSITION_PRECEDING: 0x02;$/;"	p	interface:Node
x02	tsvscode.ts	/^    readonly DOM_DELTA_PAGE: 0x02;$/;"	p	interface:WheelEvent
x02	tsvscode.ts	/^    readonly DOM_KEY_LOCATION_RIGHT: 0x02;$/;"	p	interface:KeyboardEvent
x0200	tsvscode.ts	/^    readonly NEVER: 0x0200;$/;"	p	interface:WebGLRenderingContextBase
x0201	tsvscode.ts	/^    readonly LESS: 0x0201;$/;"	p	interface:WebGLRenderingContextBase
x0202	tsvscode.ts	/^    readonly EQUAL: 0x0202;$/;"	p	interface:WebGLRenderingContextBase
x0203	tsvscode.ts	/^    readonly LEQUAL: 0x0203;$/;"	p	interface:WebGLRenderingContextBase
x0204	tsvscode.ts	/^    readonly GREATER: 0x0204;$/;"	p	interface:WebGLRenderingContextBase
x0205	tsvscode.ts	/^    readonly NOTEQUAL: 0x0205;$/;"	p	interface:WebGLRenderingContextBase
x0206	tsvscode.ts	/^    readonly GEQUAL: 0x0206;$/;"	p	interface:WebGLRenderingContextBase
x0207	tsvscode.ts	/^    readonly ALWAYS: 0x0207;$/;"	p	interface:WebGLRenderingContextBase
x03	tsvscode.ts	/^    readonly DOM_KEY_LOCATION_NUMPAD: 0x03;$/;"	p	interface:KeyboardEvent
x0300	tsvscode.ts	/^    readonly SRC_COLOR: 0x0300;$/;"	p	interface:WebGLRenderingContextBase
x0301	tsvscode.ts	/^    readonly ONE_MINUS_SRC_COLOR: 0x0301;$/;"	p	interface:WebGLRenderingContextBase
x0302	tsvscode.ts	/^    readonly SRC_ALPHA: 0x0302;$/;"	p	interface:WebGLRenderingContextBase
x0303	tsvscode.ts	/^    readonly ONE_MINUS_SRC_ALPHA: 0x0303;$/;"	p	interface:WebGLRenderingContextBase
x0304	tsvscode.ts	/^    readonly DST_ALPHA: 0x0304;$/;"	p	interface:WebGLRenderingContextBase
x0305	tsvscode.ts	/^    readonly ONE_MINUS_DST_ALPHA: 0x0305;$/;"	p	interface:WebGLRenderingContextBase
x0306	tsvscode.ts	/^    readonly DST_COLOR: 0x0306;$/;"	p	interface:WebGLRenderingContextBase
x0307	tsvscode.ts	/^    readonly ONE_MINUS_DST_COLOR: 0x0307;$/;"	p	interface:WebGLRenderingContextBase
x0308	tsvscode.ts	/^    readonly SRC_ALPHA_SATURATE: 0x0308;$/;"	p	interface:WebGLRenderingContextBase
x04	tsvscode.ts	/^    readonly DOCUMENT_POSITION_FOLLOWING: 0x04;$/;"	p	interface:Node
x0404	tsvscode.ts	/^    readonly FRONT: 0x0404;$/;"	p	interface:WebGLRenderingContextBase
x0405	tsvscode.ts	/^    readonly BACK: 0x0405;$/;"	p	interface:WebGLRenderingContextBase
x0408	tsvscode.ts	/^    readonly FRONT_AND_BACK: 0x0408;$/;"	p	interface:WebGLRenderingContextBase
x0500	tsvscode.ts	/^    readonly INVALID_ENUM: 0x0500;$/;"	p	interface:WebGLRenderingContextBase
x0501	tsvscode.ts	/^    readonly INVALID_VALUE: 0x0501;$/;"	p	interface:WebGLRenderingContextBase
x0502	tsvscode.ts	/^    readonly INVALID_OPERATION: 0x0502;$/;"	p	interface:WebGLRenderingContextBase
x0505	tsvscode.ts	/^    readonly OUT_OF_MEMORY: 0x0505;$/;"	p	interface:WebGLRenderingContextBase
x0506	tsvscode.ts	/^    readonly INVALID_FRAMEBUFFER_OPERATION: 0x0506;$/;"	p	interface:WebGLRenderingContextBase
x08	tsvscode.ts	/^    readonly DOCUMENT_POSITION_CONTAINS: 0x08;$/;"	p	interface:Node
x0900	tsvscode.ts	/^    readonly CW: 0x0900;$/;"	p	interface:WebGLRenderingContextBase
x0901	tsvscode.ts	/^    readonly CCW: 0x0901;$/;"	p	interface:WebGLRenderingContextBase
x0B21	tsvscode.ts	/^    readonly LINE_WIDTH: 0x0B21;$/;"	p	interface:WebGLRenderingContextBase
x0B44	tsvscode.ts	/^    readonly CULL_FACE: 0x0B44;$/;"	p	interface:WebGLRenderingContextBase
x0B45	tsvscode.ts	/^    readonly CULL_FACE_MODE: 0x0B45;$/;"	p	interface:WebGLRenderingContextBase
x0B46	tsvscode.ts	/^    readonly FRONT_FACE: 0x0B46;$/;"	p	interface:WebGLRenderingContextBase
x0B70	tsvscode.ts	/^    readonly DEPTH_RANGE: 0x0B70;$/;"	p	interface:WebGLRenderingContextBase
x0B71	tsvscode.ts	/^    readonly DEPTH_TEST: 0x0B71;$/;"	p	interface:WebGLRenderingContextBase
x0B72	tsvscode.ts	/^    readonly DEPTH_WRITEMASK: 0x0B72;$/;"	p	interface:WebGLRenderingContextBase
x0B73	tsvscode.ts	/^    readonly DEPTH_CLEAR_VALUE: 0x0B73;$/;"	p	interface:WebGLRenderingContextBase
x0B74	tsvscode.ts	/^    readonly DEPTH_FUNC: 0x0B74;$/;"	p	interface:WebGLRenderingContextBase
x0B90	tsvscode.ts	/^    readonly STENCIL_TEST: 0x0B90;$/;"	p	interface:WebGLRenderingContextBase
x0B91	tsvscode.ts	/^    readonly STENCIL_CLEAR_VALUE: 0x0B91;$/;"	p	interface:WebGLRenderingContextBase
x0B92	tsvscode.ts	/^    readonly STENCIL_FUNC: 0x0B92;$/;"	p	interface:WebGLRenderingContextBase
x0B93	tsvscode.ts	/^    readonly STENCIL_VALUE_MASK: 0x0B93;$/;"	p	interface:WebGLRenderingContextBase
x0B94	tsvscode.ts	/^    readonly STENCIL_FAIL: 0x0B94;$/;"	p	interface:WebGLRenderingContextBase
x0B95	tsvscode.ts	/^    readonly STENCIL_PASS_DEPTH_FAIL: 0x0B95;$/;"	p	interface:WebGLRenderingContextBase
x0B96	tsvscode.ts	/^    readonly STENCIL_PASS_DEPTH_PASS: 0x0B96;$/;"	p	interface:WebGLRenderingContextBase
x0B97	tsvscode.ts	/^    readonly STENCIL_REF: 0x0B97;$/;"	p	interface:WebGLRenderingContextBase
x0B98	tsvscode.ts	/^    readonly STENCIL_WRITEMASK: 0x0B98;$/;"	p	interface:WebGLRenderingContextBase
x0BA2	tsvscode.ts	/^    readonly VIEWPORT: 0x0BA2;$/;"	p	interface:WebGLRenderingContextBase
x0BD0	tsvscode.ts	/^    readonly DITHER: 0x0BD0;$/;"	p	interface:WebGLRenderingContextBase
x0BE2	tsvscode.ts	/^    readonly BLEND: 0x0BE2;$/;"	p	interface:WebGLRenderingContextBase
x0C02	tsvscode.ts	/^    readonly READ_BUFFER: 0x0C02;$/;"	p	interface:WebGL2RenderingContextBase
x0C10	tsvscode.ts	/^    readonly SCISSOR_BOX: 0x0C10;$/;"	p	interface:WebGLRenderingContextBase
x0C11	tsvscode.ts	/^    readonly SCISSOR_TEST: 0x0C11;$/;"	p	interface:WebGLRenderingContextBase
x0C22	tsvscode.ts	/^    readonly COLOR_CLEAR_VALUE: 0x0C22;$/;"	p	interface:WebGLRenderingContextBase
x0C23	tsvscode.ts	/^    readonly COLOR_WRITEMASK: 0x0C23;$/;"	p	interface:WebGLRenderingContextBase
x0CF2	tsvscode.ts	/^    readonly UNPACK_ROW_LENGTH: 0x0CF2;$/;"	p	interface:WebGL2RenderingContextBase
x0CF3	tsvscode.ts	/^    readonly UNPACK_SKIP_ROWS: 0x0CF3;$/;"	p	interface:WebGL2RenderingContextBase
x0CF4	tsvscode.ts	/^    readonly UNPACK_SKIP_PIXELS: 0x0CF4;$/;"	p	interface:WebGL2RenderingContextBase
x0CF5	tsvscode.ts	/^    readonly UNPACK_ALIGNMENT: 0x0CF5;$/;"	p	interface:WebGLRenderingContextBase
x0D02	tsvscode.ts	/^    readonly PACK_ROW_LENGTH: 0x0D02;$/;"	p	interface:WebGL2RenderingContextBase
x0D03	tsvscode.ts	/^    readonly PACK_SKIP_ROWS: 0x0D03;$/;"	p	interface:WebGL2RenderingContextBase
x0D04	tsvscode.ts	/^    readonly PACK_SKIP_PIXELS: 0x0D04;$/;"	p	interface:WebGL2RenderingContextBase
x0D05	tsvscode.ts	/^    readonly PACK_ALIGNMENT: 0x0D05;$/;"	p	interface:WebGLRenderingContextBase
x0D33	tsvscode.ts	/^    readonly MAX_TEXTURE_SIZE: 0x0D33;$/;"	p	interface:WebGLRenderingContextBase
x0D3A	tsvscode.ts	/^    readonly MAX_VIEWPORT_DIMS: 0x0D3A;$/;"	p	interface:WebGLRenderingContextBase
x0D50	tsvscode.ts	/^    readonly SUBPIXEL_BITS: 0x0D50;$/;"	p	interface:WebGLRenderingContextBase
x0D52	tsvscode.ts	/^    readonly RED_BITS: 0x0D52;$/;"	p	interface:WebGLRenderingContextBase
x0D53	tsvscode.ts	/^    readonly GREEN_BITS: 0x0D53;$/;"	p	interface:WebGLRenderingContextBase
x0D54	tsvscode.ts	/^    readonly BLUE_BITS: 0x0D54;$/;"	p	interface:WebGLRenderingContextBase
x0D55	tsvscode.ts	/^    readonly ALPHA_BITS: 0x0D55;$/;"	p	interface:WebGLRenderingContextBase
x0D56	tsvscode.ts	/^    readonly DEPTH_BITS: 0x0D56;$/;"	p	interface:WebGLRenderingContextBase
x0D57	tsvscode.ts	/^    readonly STENCIL_BITS: 0x0D57;$/;"	p	interface:WebGLRenderingContextBase
x0DE1	tsvscode.ts	/^    readonly TEXTURE_2D: 0x0DE1;$/;"	p	interface:WebGLRenderingContextBase
x1	tsvscode.ts	/^    readonly x1: SVGAnimatedLength;$/;"	p	interface:SVGLineElement
x1	tsvscode.ts	/^    readonly x1: SVGAnimatedLength;$/;"	p	interface:SVGLinearGradientElement
x10	tsvscode.ts	/^    readonly DOCUMENT_POSITION_CONTAINED_BY: 0x10;$/;"	p	interface:Node
x1100	tsvscode.ts	/^    readonly DONT_CARE: 0x1100;$/;"	p	interface:WebGLRenderingContextBase
x1101	tsvscode.ts	/^    readonly FASTEST: 0x1101;$/;"	p	interface:WebGLRenderingContextBase
x1102	tsvscode.ts	/^    readonly NICEST: 0x1102;$/;"	p	interface:WebGLRenderingContextBase
x1400	tsvscode.ts	/^    readonly BYTE: 0x1400;$/;"	p	interface:WebGLRenderingContextBase
x1401	tsvscode.ts	/^    readonly UNSIGNED_BYTE: 0x1401;$/;"	p	interface:WebGLRenderingContextBase
x1402	tsvscode.ts	/^    readonly SHORT: 0x1402;$/;"	p	interface:WebGLRenderingContextBase
x1403	tsvscode.ts	/^    readonly UNSIGNED_SHORT: 0x1403;$/;"	p	interface:WebGLRenderingContextBase
x1404	tsvscode.ts	/^    readonly INT: 0x1404;$/;"	p	interface:WebGLRenderingContextBase
x1405	tsvscode.ts	/^    readonly UNSIGNED_INT: 0x1405;$/;"	p	interface:WebGLRenderingContextBase
x1406	tsvscode.ts	/^    readonly FLOAT: 0x1406;$/;"	p	interface:WebGLRenderingContextBase
x140B	tsvscode.ts	/^    readonly HALF_FLOAT: 0x140B;$/;"	p	interface:WebGL2RenderingContextBase
x150A	tsvscode.ts	/^    readonly INVERT: 0x150A;$/;"	p	interface:WebGLRenderingContextBase
x1702	tsvscode.ts	/^    readonly TEXTURE: 0x1702;$/;"	p	interface:WebGLRenderingContextBase
x1800	tsvscode.ts	/^    readonly COLOR: 0x1800;$/;"	p	interface:WebGL2RenderingContextBase
x1801	tsvscode.ts	/^    readonly DEPTH: 0x1801;$/;"	p	interface:WebGL2RenderingContextBase
x1802	tsvscode.ts	/^    readonly STENCIL: 0x1802;$/;"	p	interface:WebGL2RenderingContextBase
x1902	tsvscode.ts	/^    readonly DEPTH_COMPONENT: 0x1902;$/;"	p	interface:WebGLRenderingContextBase
x1903	tsvscode.ts	/^    readonly RED: 0x1903;$/;"	p	interface:WebGL2RenderingContextBase
x1906	tsvscode.ts	/^    readonly ALPHA: 0x1906;$/;"	p	interface:WebGLRenderingContextBase
x1907	tsvscode.ts	/^    readonly RGB: 0x1907;$/;"	p	interface:WebGLRenderingContextBase
x1908	tsvscode.ts	/^    readonly RGBA: 0x1908;$/;"	p	interface:WebGLRenderingContextBase
x1909	tsvscode.ts	/^    readonly LUMINANCE: 0x1909;$/;"	p	interface:WebGLRenderingContextBase
x190A	tsvscode.ts	/^    readonly LUMINANCE_ALPHA: 0x190A;$/;"	p	interface:WebGLRenderingContextBase
x1E00	tsvscode.ts	/^    readonly KEEP: 0x1E00;$/;"	p	interface:WebGLRenderingContextBase
x1E01	tsvscode.ts	/^    readonly REPLACE: 0x1E01;$/;"	p	interface:WebGLRenderingContextBase
x1E02	tsvscode.ts	/^    readonly INCR: 0x1E02;$/;"	p	interface:WebGLRenderingContextBase
x1E03	tsvscode.ts	/^    readonly DECR: 0x1E03;$/;"	p	interface:WebGLRenderingContextBase
x1F00	tsvscode.ts	/^    readonly VENDOR: 0x1F00;$/;"	p	interface:WebGLRenderingContextBase
x1F01	tsvscode.ts	/^    readonly RENDERER: 0x1F01;$/;"	p	interface:WebGLRenderingContextBase
x1F02	tsvscode.ts	/^    readonly VERSION: 0x1F02;$/;"	p	interface:WebGLRenderingContextBase
x2	tsvscode.ts	/^    readonly x2: SVGAnimatedLength;$/;"	p	interface:SVGLineElement
x2	tsvscode.ts	/^    readonly x2: SVGAnimatedLength;$/;"	p	interface:SVGLinearGradientElement
x20	tsvscode.ts	/^    readonly DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: 0x20;$/;"	p	interface:Node
x2600	tsvscode.ts	/^    readonly NEAREST: 0x2600;$/;"	p	interface:WebGLRenderingContextBase
x2601	tsvscode.ts	/^    readonly LINEAR: 0x2601;$/;"	p	interface:WebGLRenderingContextBase
x2700	tsvscode.ts	/^    readonly NEAREST_MIPMAP_NEAREST: 0x2700;$/;"	p	interface:WebGLRenderingContextBase
x2701	tsvscode.ts	/^    readonly LINEAR_MIPMAP_NEAREST: 0x2701;$/;"	p	interface:WebGLRenderingContextBase
x2702	tsvscode.ts	/^    readonly NEAREST_MIPMAP_LINEAR: 0x2702;$/;"	p	interface:WebGLRenderingContextBase
x2703	tsvscode.ts	/^    readonly LINEAR_MIPMAP_LINEAR: 0x2703;$/;"	p	interface:WebGLRenderingContextBase
x2800	tsvscode.ts	/^    readonly TEXTURE_MAG_FILTER: 0x2800;$/;"	p	interface:WebGLRenderingContextBase
x2801	tsvscode.ts	/^    readonly TEXTURE_MIN_FILTER: 0x2801;$/;"	p	interface:WebGLRenderingContextBase
x2802	tsvscode.ts	/^    readonly TEXTURE_WRAP_S: 0x2802;$/;"	p	interface:WebGLRenderingContextBase
x2803	tsvscode.ts	/^    readonly TEXTURE_WRAP_T: 0x2803;$/;"	p	interface:WebGLRenderingContextBase
x2901	tsvscode.ts	/^    readonly REPEAT: 0x2901;$/;"	p	interface:WebGLRenderingContextBase
x2A00	tsvscode.ts	/^    readonly POLYGON_OFFSET_UNITS: 0x2A00;$/;"	p	interface:WebGLRenderingContextBase
x8001	tsvscode.ts	/^    readonly CONSTANT_COLOR: 0x8001;$/;"	p	interface:WebGLRenderingContextBase
x8002	tsvscode.ts	/^    readonly ONE_MINUS_CONSTANT_COLOR: 0x8002;$/;"	p	interface:WebGLRenderingContextBase
x8003	tsvscode.ts	/^    readonly CONSTANT_ALPHA: 0x8003;$/;"	p	interface:WebGLRenderingContextBase
x8004	tsvscode.ts	/^    readonly ONE_MINUS_CONSTANT_ALPHA: 0x8004;$/;"	p	interface:WebGLRenderingContextBase
x8005	tsvscode.ts	/^    readonly BLEND_COLOR: 0x8005;$/;"	p	interface:WebGLRenderingContextBase
x8006	tsvscode.ts	/^    readonly FUNC_ADD: 0x8006;$/;"	p	interface:WebGLRenderingContextBase
x8007	tsvscode.ts	/^    readonly MIN: 0x8007;$/;"	p	interface:WebGL2RenderingContextBase
x8007	tsvscode.ts	/^    readonly MIN_EXT: 0x8007;$/;"	p	interface:EXT_blend_minmax
x8008	tsvscode.ts	/^    readonly MAX: 0x8008;$/;"	p	interface:WebGL2RenderingContextBase
x8008	tsvscode.ts	/^    readonly MAX_EXT: 0x8008;$/;"	p	interface:EXT_blend_minmax
x8009	tsvscode.ts	/^    readonly BLEND_EQUATION: 0x8009;$/;"	p	interface:WebGLRenderingContextBase
x8009	tsvscode.ts	/^    readonly BLEND_EQUATION_RGB: 0x8009;$/;"	p	interface:WebGLRenderingContextBase
x800A	tsvscode.ts	/^    readonly FUNC_SUBTRACT: 0x800A;$/;"	p	interface:WebGLRenderingContextBase
x800B	tsvscode.ts	/^    readonly FUNC_REVERSE_SUBTRACT: 0x800B;$/;"	p	interface:WebGLRenderingContextBase
x8033	tsvscode.ts	/^    readonly UNSIGNED_SHORT_4_4_4_4: 0x8033;$/;"	p	interface:WebGLRenderingContextBase
x8034	tsvscode.ts	/^    readonly UNSIGNED_SHORT_5_5_5_1: 0x8034;$/;"	p	interface:WebGLRenderingContextBase
x8037	tsvscode.ts	/^    readonly POLYGON_OFFSET_FILL: 0x8037;$/;"	p	interface:WebGLRenderingContextBase
x8038	tsvscode.ts	/^    readonly POLYGON_OFFSET_FACTOR: 0x8038;$/;"	p	interface:WebGLRenderingContextBase
x8051	tsvscode.ts	/^    readonly RGB8: 0x8051;$/;"	p	interface:WebGL2RenderingContextBase
x8054	tsvscode.ts	/^    readonly RGB16_EXT: 0x8054;$/;"	p	interface:EXT_texture_norm16
x8056	tsvscode.ts	/^    readonly RGBA4: 0x8056;$/;"	p	interface:WebGLRenderingContextBase
x8057	tsvscode.ts	/^    readonly RGB5_A1: 0x8057;$/;"	p	interface:WebGLRenderingContextBase
x8058	tsvscode.ts	/^    readonly RGBA8: 0x8058;$/;"	p	interface:WebGLRenderingContextBase
x8059	tsvscode.ts	/^    readonly RGB10_A2: 0x8059;$/;"	p	interface:WebGL2RenderingContextBase
x805B	tsvscode.ts	/^    readonly RGBA16_EXT: 0x805B;$/;"	p	interface:EXT_texture_norm16
x8069	tsvscode.ts	/^    readonly TEXTURE_BINDING_2D: 0x8069;$/;"	p	interface:WebGLRenderingContextBase
x806A	tsvscode.ts	/^    readonly TEXTURE_BINDING_3D: 0x806A;$/;"	p	interface:WebGL2RenderingContextBase
x806D	tsvscode.ts	/^    readonly UNPACK_SKIP_IMAGES: 0x806D;$/;"	p	interface:WebGL2RenderingContextBase
x806E	tsvscode.ts	/^    readonly UNPACK_IMAGE_HEIGHT: 0x806E;$/;"	p	interface:WebGL2RenderingContextBase
x806F	tsvscode.ts	/^    readonly TEXTURE_3D: 0x806F;$/;"	p	interface:WebGL2RenderingContextBase
x8072	tsvscode.ts	/^    readonly TEXTURE_WRAP_R: 0x8072;$/;"	p	interface:WebGL2RenderingContextBase
x8073	tsvscode.ts	/^    readonly MAX_3D_TEXTURE_SIZE: 0x8073;$/;"	p	interface:WebGL2RenderingContextBase
x809E	tsvscode.ts	/^    readonly SAMPLE_ALPHA_TO_COVERAGE: 0x809E;$/;"	p	interface:WebGLRenderingContextBase
x80A0	tsvscode.ts	/^    readonly SAMPLE_COVERAGE: 0x80A0;$/;"	p	interface:WebGLRenderingContextBase
x80A8	tsvscode.ts	/^    readonly SAMPLE_BUFFERS: 0x80A8;$/;"	p	interface:WebGLRenderingContextBase
x80A9	tsvscode.ts	/^    readonly SAMPLES: 0x80A9;$/;"	p	interface:WebGLRenderingContextBase
x80AA	tsvscode.ts	/^    readonly SAMPLE_COVERAGE_VALUE: 0x80AA;$/;"	p	interface:WebGLRenderingContextBase
x80AB	tsvscode.ts	/^    readonly SAMPLE_COVERAGE_INVERT: 0x80AB;$/;"	p	interface:WebGLRenderingContextBase
x80C8	tsvscode.ts	/^    readonly BLEND_DST_RGB: 0x80C8;$/;"	p	interface:WebGLRenderingContextBase
x80C9	tsvscode.ts	/^    readonly BLEND_SRC_RGB: 0x80C9;$/;"	p	interface:WebGLRenderingContextBase
x80CA	tsvscode.ts	/^    readonly BLEND_DST_ALPHA: 0x80CA;$/;"	p	interface:WebGLRenderingContextBase
x80CB	tsvscode.ts	/^    readonly BLEND_SRC_ALPHA: 0x80CB;$/;"	p	interface:WebGLRenderingContextBase
x80E8	tsvscode.ts	/^    readonly MAX_ELEMENTS_VERTICES: 0x80E8;$/;"	p	interface:WebGL2RenderingContextBase
x80E9	tsvscode.ts	/^    readonly MAX_ELEMENTS_INDICES: 0x80E9;$/;"	p	interface:WebGL2RenderingContextBase
x812F	tsvscode.ts	/^    readonly CLAMP_TO_EDGE: 0x812F;$/;"	p	interface:WebGLRenderingContextBase
x813A	tsvscode.ts	/^    readonly TEXTURE_MIN_LOD: 0x813A;$/;"	p	interface:WebGL2RenderingContextBase
x813B	tsvscode.ts	/^    readonly TEXTURE_MAX_LOD: 0x813B;$/;"	p	interface:WebGL2RenderingContextBase
x813C	tsvscode.ts	/^    readonly TEXTURE_BASE_LEVEL: 0x813C;$/;"	p	interface:WebGL2RenderingContextBase
x813D	tsvscode.ts	/^    readonly TEXTURE_MAX_LEVEL: 0x813D;$/;"	p	interface:WebGL2RenderingContextBase
x8192	tsvscode.ts	/^    readonly GENERATE_MIPMAP_HINT: 0x8192;$/;"	p	interface:WebGLRenderingContextBase
x81A5	tsvscode.ts	/^    readonly DEPTH_COMPONENT16: 0x81A5;$/;"	p	interface:WebGLRenderingContextBase
x81A6	tsvscode.ts	/^    readonly DEPTH_COMPONENT24: 0x81A6;$/;"	p	interface:WebGL2RenderingContextBase
x8210	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: 0x8210;$/;"	p	interface:WebGL2RenderingContextBase
x8210	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT: 0x8210;$/;"	p	interface:EXT_sRGB
x8211	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: 0x8211;$/;"	p	interface:WebGL2RenderingContextBase
x8211	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT: 0x8211;$/;"	p	interface:EXT_color_buffer_half_float
x8211	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT: 0x8211;$/;"	p	interface:WEBGL_color_buffer_float
x8212	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_RED_SIZE: 0x8212;$/;"	p	interface:WebGL2RenderingContextBase
x8213	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: 0x8213;$/;"	p	interface:WebGL2RenderingContextBase
x8214	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: 0x8214;$/;"	p	interface:WebGL2RenderingContextBase
x8215	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: 0x8215;$/;"	p	interface:WebGL2RenderingContextBase
x8216	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: 0x8216;$/;"	p	interface:WebGL2RenderingContextBase
x8217	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: 0x8217;$/;"	p	interface:WebGL2RenderingContextBase
x8218	tsvscode.ts	/^    readonly FRAMEBUFFER_DEFAULT: 0x8218;$/;"	p	interface:WebGL2RenderingContextBase
x821A	tsvscode.ts	/^    readonly DEPTH_STENCIL_ATTACHMENT: 0x821A;$/;"	p	interface:WebGLRenderingContextBase
x8227	tsvscode.ts	/^    readonly RG: 0x8227;$/;"	p	interface:WebGL2RenderingContextBase
x8228	tsvscode.ts	/^    readonly RG_INTEGER: 0x8228;$/;"	p	interface:WebGL2RenderingContextBase
x8229	tsvscode.ts	/^    readonly R8: 0x8229;$/;"	p	interface:WebGL2RenderingContextBase
x822A	tsvscode.ts	/^    readonly R16_EXT: 0x822A;$/;"	p	interface:EXT_texture_norm16
x822B	tsvscode.ts	/^    readonly RG8: 0x822B;$/;"	p	interface:WebGL2RenderingContextBase
x822C	tsvscode.ts	/^    readonly RG16_EXT: 0x822C;$/;"	p	interface:EXT_texture_norm16
x822D	tsvscode.ts	/^    readonly R16F: 0x822D;$/;"	p	interface:WebGL2RenderingContextBase
x822E	tsvscode.ts	/^    readonly R32F: 0x822E;$/;"	p	interface:WebGL2RenderingContextBase
x822F	tsvscode.ts	/^    readonly RG16F: 0x822F;$/;"	p	interface:WebGL2RenderingContextBase
x8230	tsvscode.ts	/^    readonly RG32F: 0x8230;$/;"	p	interface:WebGL2RenderingContextBase
x8231	tsvscode.ts	/^    readonly R8I: 0x8231;$/;"	p	interface:WebGL2RenderingContextBase
x8232	tsvscode.ts	/^    readonly R8UI: 0x8232;$/;"	p	interface:WebGL2RenderingContextBase
x8233	tsvscode.ts	/^    readonly R16I: 0x8233;$/;"	p	interface:WebGL2RenderingContextBase
x8234	tsvscode.ts	/^    readonly R16UI: 0x8234;$/;"	p	interface:WebGL2RenderingContextBase
x8235	tsvscode.ts	/^    readonly R32I: 0x8235;$/;"	p	interface:WebGL2RenderingContextBase
x8236	tsvscode.ts	/^    readonly R32UI: 0x8236;$/;"	p	interface:WebGL2RenderingContextBase
x8237	tsvscode.ts	/^    readonly RG8I: 0x8237;$/;"	p	interface:WebGL2RenderingContextBase
x8238	tsvscode.ts	/^    readonly RG8UI: 0x8238;$/;"	p	interface:WebGL2RenderingContextBase
x8239	tsvscode.ts	/^    readonly RG16I: 0x8239;$/;"	p	interface:WebGL2RenderingContextBase
x823A	tsvscode.ts	/^    readonly RG16UI: 0x823A;$/;"	p	interface:WebGL2RenderingContextBase
x823B	tsvscode.ts	/^    readonly RG32I: 0x823B;$/;"	p	interface:WebGL2RenderingContextBase
x823C	tsvscode.ts	/^    readonly RG32UI: 0x823C;$/;"	p	interface:WebGL2RenderingContextBase
x82DF	tsvscode.ts	/^    readonly TEXTURE_IMMUTABLE_LEVELS: 0x82DF;$/;"	p	interface:WebGL2RenderingContextBase
x8363	tsvscode.ts	/^    readonly UNSIGNED_SHORT_5_6_5: 0x8363;$/;"	p	interface:WebGLRenderingContextBase
x8368	tsvscode.ts	/^    readonly UNSIGNED_INT_2_10_10_10_REV: 0x8368;$/;"	p	interface:WebGL2RenderingContextBase
x8370	tsvscode.ts	/^    readonly MIRRORED_REPEAT: 0x8370;$/;"	p	interface:WebGLRenderingContextBase
x83F0	tsvscode.ts	/^    readonly COMPRESSED_RGB_S3TC_DXT1_EXT: 0x83F0;$/;"	p	interface:WEBGL_compressed_texture_s3tc
x83F1	tsvscode.ts	/^    readonly COMPRESSED_RGBA_S3TC_DXT1_EXT: 0x83F1;$/;"	p	interface:WEBGL_compressed_texture_s3tc
x83F2	tsvscode.ts	/^    readonly COMPRESSED_RGBA_S3TC_DXT3_EXT: 0x83F2;$/;"	p	interface:WEBGL_compressed_texture_s3tc
x83F3	tsvscode.ts	/^    readonly COMPRESSED_RGBA_S3TC_DXT5_EXT: 0x83F3;$/;"	p	interface:WEBGL_compressed_texture_s3tc
x846D	tsvscode.ts	/^    readonly ALIASED_POINT_SIZE_RANGE: 0x846D;$/;"	p	interface:WebGLRenderingContextBase
x846E	tsvscode.ts	/^    readonly ALIASED_LINE_WIDTH_RANGE: 0x846E;$/;"	p	interface:WebGLRenderingContextBase
x84C0	tsvscode.ts	/^    readonly TEXTURE0: 0x84C0;$/;"	p	interface:WebGLRenderingContextBase
x84C1	tsvscode.ts	/^    readonly TEXTURE1: 0x84C1;$/;"	p	interface:WebGLRenderingContextBase
x84C2	tsvscode.ts	/^    readonly TEXTURE2: 0x84C2;$/;"	p	interface:WebGLRenderingContextBase
x84C3	tsvscode.ts	/^    readonly TEXTURE3: 0x84C3;$/;"	p	interface:WebGLRenderingContextBase
x84C4	tsvscode.ts	/^    readonly TEXTURE4: 0x84C4;$/;"	p	interface:WebGLRenderingContextBase
x84C5	tsvscode.ts	/^    readonly TEXTURE5: 0x84C5;$/;"	p	interface:WebGLRenderingContextBase
x84C6	tsvscode.ts	/^    readonly TEXTURE6: 0x84C6;$/;"	p	interface:WebGLRenderingContextBase
x84C7	tsvscode.ts	/^    readonly TEXTURE7: 0x84C7;$/;"	p	interface:WebGLRenderingContextBase
x84C8	tsvscode.ts	/^    readonly TEXTURE8: 0x84C8;$/;"	p	interface:WebGLRenderingContextBase
x84C9	tsvscode.ts	/^    readonly TEXTURE9: 0x84C9;$/;"	p	interface:WebGLRenderingContextBase
x84CA	tsvscode.ts	/^    readonly TEXTURE10: 0x84CA;$/;"	p	interface:WebGLRenderingContextBase
x84CB	tsvscode.ts	/^    readonly TEXTURE11: 0x84CB;$/;"	p	interface:WebGLRenderingContextBase
x84CC	tsvscode.ts	/^    readonly TEXTURE12: 0x84CC;$/;"	p	interface:WebGLRenderingContextBase
x84CD	tsvscode.ts	/^    readonly TEXTURE13: 0x84CD;$/;"	p	interface:WebGLRenderingContextBase
x84CE	tsvscode.ts	/^    readonly TEXTURE14: 0x84CE;$/;"	p	interface:WebGLRenderingContextBase
x84CF	tsvscode.ts	/^    readonly TEXTURE15: 0x84CF;$/;"	p	interface:WebGLRenderingContextBase
x84D0	tsvscode.ts	/^    readonly TEXTURE16: 0x84D0;$/;"	p	interface:WebGLRenderingContextBase
x84D1	tsvscode.ts	/^    readonly TEXTURE17: 0x84D1;$/;"	p	interface:WebGLRenderingContextBase
x84D2	tsvscode.ts	/^    readonly TEXTURE18: 0x84D2;$/;"	p	interface:WebGLRenderingContextBase
x84D3	tsvscode.ts	/^    readonly TEXTURE19: 0x84D3;$/;"	p	interface:WebGLRenderingContextBase
x84D4	tsvscode.ts	/^    readonly TEXTURE20: 0x84D4;$/;"	p	interface:WebGLRenderingContextBase
x84D5	tsvscode.ts	/^    readonly TEXTURE21: 0x84D5;$/;"	p	interface:WebGLRenderingContextBase
x84D6	tsvscode.ts	/^    readonly TEXTURE22: 0x84D6;$/;"	p	interface:WebGLRenderingContextBase
x84D7	tsvscode.ts	/^    readonly TEXTURE23: 0x84D7;$/;"	p	interface:WebGLRenderingContextBase
x84D8	tsvscode.ts	/^    readonly TEXTURE24: 0x84D8;$/;"	p	interface:WebGLRenderingContextBase
x84D9	tsvscode.ts	/^    readonly TEXTURE25: 0x84D9;$/;"	p	interface:WebGLRenderingContextBase
x84DA	tsvscode.ts	/^    readonly TEXTURE26: 0x84DA;$/;"	p	interface:WebGLRenderingContextBase
x84DB	tsvscode.ts	/^    readonly TEXTURE27: 0x84DB;$/;"	p	interface:WebGLRenderingContextBase
x84DC	tsvscode.ts	/^    readonly TEXTURE28: 0x84DC;$/;"	p	interface:WebGLRenderingContextBase
x84DD	tsvscode.ts	/^    readonly TEXTURE29: 0x84DD;$/;"	p	interface:WebGLRenderingContextBase
x84DE	tsvscode.ts	/^    readonly TEXTURE30: 0x84DE;$/;"	p	interface:WebGLRenderingContextBase
x84DF	tsvscode.ts	/^    readonly TEXTURE31: 0x84DF;$/;"	p	interface:WebGLRenderingContextBase
x84E0	tsvscode.ts	/^    readonly ACTIVE_TEXTURE: 0x84E0;$/;"	p	interface:WebGLRenderingContextBase
x84E8	tsvscode.ts	/^    readonly MAX_RENDERBUFFER_SIZE: 0x84E8;$/;"	p	interface:WebGLRenderingContextBase
x84F9	tsvscode.ts	/^    readonly DEPTH_STENCIL: 0x84F9;$/;"	p	interface:WebGLRenderingContextBase
x84FA	tsvscode.ts	/^    readonly UNSIGNED_INT_24_8: 0x84FA;$/;"	p	interface:WebGL2RenderingContextBase
x84FA	tsvscode.ts	/^    readonly UNSIGNED_INT_24_8_WEBGL: 0x84FA;$/;"	p	interface:WEBGL_depth_texture
x84FD	tsvscode.ts	/^    readonly MAX_TEXTURE_LOD_BIAS: 0x84FD;$/;"	p	interface:WebGL2RenderingContextBase
x84FE	tsvscode.ts	/^    readonly TEXTURE_MAX_ANISOTROPY_EXT: 0x84FE;$/;"	p	interface:EXT_texture_filter_anisotropic
x84FF	tsvscode.ts	/^    readonly MAX_TEXTURE_MAX_ANISOTROPY_EXT: 0x84FF;$/;"	p	interface:EXT_texture_filter_anisotropic
x8507	tsvscode.ts	/^    readonly INCR_WRAP: 0x8507;$/;"	p	interface:WebGLRenderingContextBase
x8508	tsvscode.ts	/^    readonly DECR_WRAP: 0x8508;$/;"	p	interface:WebGLRenderingContextBase
x8513	tsvscode.ts	/^    readonly TEXTURE_CUBE_MAP: 0x8513;$/;"	p	interface:WebGLRenderingContextBase
x8514	tsvscode.ts	/^    readonly TEXTURE_BINDING_CUBE_MAP: 0x8514;$/;"	p	interface:WebGLRenderingContextBase
x8515	tsvscode.ts	/^    readonly TEXTURE_CUBE_MAP_POSITIVE_X: 0x8515;$/;"	p	interface:WebGLRenderingContextBase
x8516	tsvscode.ts	/^    readonly TEXTURE_CUBE_MAP_NEGATIVE_X: 0x8516;$/;"	p	interface:WebGLRenderingContextBase
x8517	tsvscode.ts	/^    readonly TEXTURE_CUBE_MAP_POSITIVE_Y: 0x8517;$/;"	p	interface:WebGLRenderingContextBase
x8518	tsvscode.ts	/^    readonly TEXTURE_CUBE_MAP_NEGATIVE_Y: 0x8518;$/;"	p	interface:WebGLRenderingContextBase
x8519	tsvscode.ts	/^    readonly TEXTURE_CUBE_MAP_POSITIVE_Z: 0x8519;$/;"	p	interface:WebGLRenderingContextBase
x851A	tsvscode.ts	/^    readonly TEXTURE_CUBE_MAP_NEGATIVE_Z: 0x851A;$/;"	p	interface:WebGLRenderingContextBase
x851C	tsvscode.ts	/^    readonly MAX_CUBE_MAP_TEXTURE_SIZE: 0x851C;$/;"	p	interface:WebGLRenderingContextBase
x85B5	tsvscode.ts	/^    readonly VERTEX_ARRAY_BINDING: 0x85B5;$/;"	p	interface:WebGL2RenderingContextBase
x85B5	tsvscode.ts	/^    readonly VERTEX_ARRAY_BINDING_OES: 0x85B5;$/;"	p	interface:OES_vertex_array_object
x8622	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_ENABLED: 0x8622;$/;"	p	interface:WebGLRenderingContextBase
x8623	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_SIZE: 0x8623;$/;"	p	interface:WebGLRenderingContextBase
x8624	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_STRIDE: 0x8624;$/;"	p	interface:WebGLRenderingContextBase
x8625	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_TYPE: 0x8625;$/;"	p	interface:WebGLRenderingContextBase
x8626	tsvscode.ts	/^    readonly CURRENT_VERTEX_ATTRIB: 0x8626;$/;"	p	interface:WebGLRenderingContextBase
x8645	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_POINTER: 0x8645;$/;"	p	interface:WebGLRenderingContextBase
x86A3	tsvscode.ts	/^    readonly COMPRESSED_TEXTURE_FORMATS: 0x86A3;$/;"	p	interface:WebGLRenderingContextBase
x8764	tsvscode.ts	/^    readonly BUFFER_SIZE: 0x8764;$/;"	p	interface:WebGLRenderingContextBase
x8765	tsvscode.ts	/^    readonly BUFFER_USAGE: 0x8765;$/;"	p	interface:WebGLRenderingContextBase
x8800	tsvscode.ts	/^    readonly STENCIL_BACK_FUNC: 0x8800;$/;"	p	interface:WebGLRenderingContextBase
x8801	tsvscode.ts	/^    readonly STENCIL_BACK_FAIL: 0x8801;$/;"	p	interface:WebGLRenderingContextBase
x8802	tsvscode.ts	/^    readonly STENCIL_BACK_PASS_DEPTH_FAIL: 0x8802;$/;"	p	interface:WebGLRenderingContextBase
x8803	tsvscode.ts	/^    readonly STENCIL_BACK_PASS_DEPTH_PASS: 0x8803;$/;"	p	interface:WebGLRenderingContextBase
x8814	tsvscode.ts	/^    readonly RGBA32F: 0x8814;$/;"	p	interface:WebGL2RenderingContextBase
x8814	tsvscode.ts	/^    readonly RGBA32F_EXT: 0x8814;$/;"	p	interface:WEBGL_color_buffer_float
x8815	tsvscode.ts	/^    readonly RGB32F: 0x8815;$/;"	p	interface:WebGL2RenderingContextBase
x881A	tsvscode.ts	/^    readonly RGBA16F: 0x881A;$/;"	p	interface:WebGL2RenderingContextBase
x881A	tsvscode.ts	/^    readonly RGBA16F_EXT: 0x881A;$/;"	p	interface:EXT_color_buffer_half_float
x881B	tsvscode.ts	/^    readonly RGB16F: 0x881B;$/;"	p	interface:WebGL2RenderingContextBase
x881B	tsvscode.ts	/^    readonly RGB16F_EXT: 0x881B;$/;"	p	interface:EXT_color_buffer_half_float
x8824	tsvscode.ts	/^    readonly MAX_DRAW_BUFFERS: 0x8824;$/;"	p	interface:WebGL2RenderingContextBase
x8824	tsvscode.ts	/^    readonly MAX_DRAW_BUFFERS_WEBGL: 0x8824;$/;"	p	interface:WEBGL_draw_buffers
x8825	tsvscode.ts	/^    readonly DRAW_BUFFER0: 0x8825;$/;"	p	interface:WebGL2RenderingContextBase
x8825	tsvscode.ts	/^    readonly DRAW_BUFFER0_WEBGL: 0x8825;$/;"	p	interface:WEBGL_draw_buffers
x8826	tsvscode.ts	/^    readonly DRAW_BUFFER1: 0x8826;$/;"	p	interface:WebGL2RenderingContextBase
x8826	tsvscode.ts	/^    readonly DRAW_BUFFER1_WEBGL: 0x8826;$/;"	p	interface:WEBGL_draw_buffers
x8827	tsvscode.ts	/^    readonly DRAW_BUFFER2: 0x8827;$/;"	p	interface:WebGL2RenderingContextBase
x8827	tsvscode.ts	/^    readonly DRAW_BUFFER2_WEBGL: 0x8827;$/;"	p	interface:WEBGL_draw_buffers
x8828	tsvscode.ts	/^    readonly DRAW_BUFFER3: 0x8828;$/;"	p	interface:WebGL2RenderingContextBase
x8828	tsvscode.ts	/^    readonly DRAW_BUFFER3_WEBGL: 0x8828;$/;"	p	interface:WEBGL_draw_buffers
x8829	tsvscode.ts	/^    readonly DRAW_BUFFER4: 0x8829;$/;"	p	interface:WebGL2RenderingContextBase
x8829	tsvscode.ts	/^    readonly DRAW_BUFFER4_WEBGL: 0x8829;$/;"	p	interface:WEBGL_draw_buffers
x882A	tsvscode.ts	/^    readonly DRAW_BUFFER5: 0x882A;$/;"	p	interface:WebGL2RenderingContextBase
x882A	tsvscode.ts	/^    readonly DRAW_BUFFER5_WEBGL: 0x882A;$/;"	p	interface:WEBGL_draw_buffers
x882B	tsvscode.ts	/^    readonly DRAW_BUFFER6: 0x882B;$/;"	p	interface:WebGL2RenderingContextBase
x882B	tsvscode.ts	/^    readonly DRAW_BUFFER6_WEBGL: 0x882B;$/;"	p	interface:WEBGL_draw_buffers
x882C	tsvscode.ts	/^    readonly DRAW_BUFFER7: 0x882C;$/;"	p	interface:WebGL2RenderingContextBase
x882C	tsvscode.ts	/^    readonly DRAW_BUFFER7_WEBGL: 0x882C;$/;"	p	interface:WEBGL_draw_buffers
x882D	tsvscode.ts	/^    readonly DRAW_BUFFER8: 0x882D;$/;"	p	interface:WebGL2RenderingContextBase
x882D	tsvscode.ts	/^    readonly DRAW_BUFFER8_WEBGL: 0x882D;$/;"	p	interface:WEBGL_draw_buffers
x882E	tsvscode.ts	/^    readonly DRAW_BUFFER9: 0x882E;$/;"	p	interface:WebGL2RenderingContextBase
x882E	tsvscode.ts	/^    readonly DRAW_BUFFER9_WEBGL: 0x882E;$/;"	p	interface:WEBGL_draw_buffers
x882F	tsvscode.ts	/^    readonly DRAW_BUFFER10: 0x882F;$/;"	p	interface:WebGL2RenderingContextBase
x882F	tsvscode.ts	/^    readonly DRAW_BUFFER10_WEBGL: 0x882F;$/;"	p	interface:WEBGL_draw_buffers
x8830	tsvscode.ts	/^    readonly DRAW_BUFFER11: 0x8830;$/;"	p	interface:WebGL2RenderingContextBase
x8830	tsvscode.ts	/^    readonly DRAW_BUFFER11_WEBGL: 0x8830;$/;"	p	interface:WEBGL_draw_buffers
x8831	tsvscode.ts	/^    readonly DRAW_BUFFER12: 0x8831;$/;"	p	interface:WebGL2RenderingContextBase
x8831	tsvscode.ts	/^    readonly DRAW_BUFFER12_WEBGL: 0x8831;$/;"	p	interface:WEBGL_draw_buffers
x8832	tsvscode.ts	/^    readonly DRAW_BUFFER13: 0x8832;$/;"	p	interface:WebGL2RenderingContextBase
x8832	tsvscode.ts	/^    readonly DRAW_BUFFER13_WEBGL: 0x8832;$/;"	p	interface:WEBGL_draw_buffers
x8833	tsvscode.ts	/^    readonly DRAW_BUFFER14: 0x8833;$/;"	p	interface:WebGL2RenderingContextBase
x8833	tsvscode.ts	/^    readonly DRAW_BUFFER14_WEBGL: 0x8833;$/;"	p	interface:WEBGL_draw_buffers
x8834	tsvscode.ts	/^    readonly DRAW_BUFFER15: 0x8834;$/;"	p	interface:WebGL2RenderingContextBase
x8834	tsvscode.ts	/^    readonly DRAW_BUFFER15_WEBGL: 0x8834;$/;"	p	interface:WEBGL_draw_buffers
x883D	tsvscode.ts	/^    readonly BLEND_EQUATION_ALPHA: 0x883D;$/;"	p	interface:WebGLRenderingContextBase
x884C	tsvscode.ts	/^    readonly TEXTURE_COMPARE_MODE: 0x884C;$/;"	p	interface:WebGL2RenderingContextBase
x884D	tsvscode.ts	/^    readonly TEXTURE_COMPARE_FUNC: 0x884D;$/;"	p	interface:WebGL2RenderingContextBase
x884E	tsvscode.ts	/^    readonly COMPARE_REF_TO_TEXTURE: 0x884E;$/;"	p	interface:WebGL2RenderingContextBase
x8865	tsvscode.ts	/^    readonly CURRENT_QUERY: 0x8865;$/;"	p	interface:WebGL2RenderingContextBase
x8866	tsvscode.ts	/^    readonly QUERY_RESULT: 0x8866;$/;"	p	interface:WebGL2RenderingContextBase
x8867	tsvscode.ts	/^    readonly QUERY_RESULT_AVAILABLE: 0x8867;$/;"	p	interface:WebGL2RenderingContextBase
x8869	tsvscode.ts	/^    readonly MAX_VERTEX_ATTRIBS: 0x8869;$/;"	p	interface:WebGLRenderingContextBase
x886A	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_NORMALIZED: 0x886A;$/;"	p	interface:WebGLRenderingContextBase
x8872	tsvscode.ts	/^    readonly MAX_TEXTURE_IMAGE_UNITS: 0x8872;$/;"	p	interface:WebGLRenderingContextBase
x8892	tsvscode.ts	/^    readonly ARRAY_BUFFER: 0x8892;$/;"	p	interface:WebGLRenderingContextBase
x8893	tsvscode.ts	/^    readonly ELEMENT_ARRAY_BUFFER: 0x8893;$/;"	p	interface:WebGLRenderingContextBase
x8894	tsvscode.ts	/^    readonly ARRAY_BUFFER_BINDING: 0x8894;$/;"	p	interface:WebGLRenderingContextBase
x8895	tsvscode.ts	/^    readonly ELEMENT_ARRAY_BUFFER_BINDING: 0x8895;$/;"	p	interface:WebGLRenderingContextBase
x889F	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: 0x889F;$/;"	p	interface:WebGLRenderingContextBase
x88E0	tsvscode.ts	/^    readonly STREAM_DRAW: 0x88E0;$/;"	p	interface:WebGLRenderingContextBase
x88E1	tsvscode.ts	/^    readonly STREAM_READ: 0x88E1;$/;"	p	interface:WebGL2RenderingContextBase
x88E2	tsvscode.ts	/^    readonly STREAM_COPY: 0x88E2;$/;"	p	interface:WebGL2RenderingContextBase
x88E4	tsvscode.ts	/^    readonly STATIC_DRAW: 0x88E4;$/;"	p	interface:WebGLRenderingContextBase
x88E5	tsvscode.ts	/^    readonly STATIC_READ: 0x88E5;$/;"	p	interface:WebGL2RenderingContextBase
x88E6	tsvscode.ts	/^    readonly STATIC_COPY: 0x88E6;$/;"	p	interface:WebGL2RenderingContextBase
x88E8	tsvscode.ts	/^    readonly DYNAMIC_DRAW: 0x88E8;$/;"	p	interface:WebGLRenderingContextBase
x88E9	tsvscode.ts	/^    readonly DYNAMIC_READ: 0x88E9;$/;"	p	interface:WebGL2RenderingContextBase
x88EA	tsvscode.ts	/^    readonly DYNAMIC_COPY: 0x88EA;$/;"	p	interface:WebGL2RenderingContextBase
x88EB	tsvscode.ts	/^    readonly PIXEL_PACK_BUFFER: 0x88EB;$/;"	p	interface:WebGL2RenderingContextBase
x88EC	tsvscode.ts	/^    readonly PIXEL_UNPACK_BUFFER: 0x88EC;$/;"	p	interface:WebGL2RenderingContextBase
x88ED	tsvscode.ts	/^    readonly PIXEL_PACK_BUFFER_BINDING: 0x88ED;$/;"	p	interface:WebGL2RenderingContextBase
x88EF	tsvscode.ts	/^    readonly PIXEL_UNPACK_BUFFER_BINDING: 0x88EF;$/;"	p	interface:WebGL2RenderingContextBase
x88F0	tsvscode.ts	/^    readonly DEPTH24_STENCIL8: 0x88F0;$/;"	p	interface:WebGL2RenderingContextBase
x88FD	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_INTEGER: 0x88FD;$/;"	p	interface:WebGL2RenderingContextBase
x88FE	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_DIVISOR: 0x88FE;$/;"	p	interface:WebGL2RenderingContextBase
x88FE	tsvscode.ts	/^    readonly VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE: 0x88FE;$/;"	p	interface:ANGLE_instanced_arrays
x88FF	tsvscode.ts	/^    readonly MAX_ARRAY_TEXTURE_LAYERS: 0x88FF;$/;"	p	interface:WebGL2RenderingContextBase
x8904	tsvscode.ts	/^    readonly MIN_PROGRAM_TEXEL_OFFSET: 0x8904;$/;"	p	interface:WebGL2RenderingContextBase
x8905	tsvscode.ts	/^    readonly MAX_PROGRAM_TEXEL_OFFSET: 0x8905;$/;"	p	interface:WebGL2RenderingContextBase
x8919	tsvscode.ts	/^    readonly SAMPLER_BINDING: 0x8919;$/;"	p	interface:WebGL2RenderingContextBase
x8A11	tsvscode.ts	/^    readonly UNIFORM_BUFFER: 0x8A11;$/;"	p	interface:WebGL2RenderingContextBase
x8A28	tsvscode.ts	/^    readonly UNIFORM_BUFFER_BINDING: 0x8A28;$/;"	p	interface:WebGL2RenderingContextBase
x8A29	tsvscode.ts	/^    readonly UNIFORM_BUFFER_START: 0x8A29;$/;"	p	interface:WebGL2RenderingContextBase
x8A2A	tsvscode.ts	/^    readonly UNIFORM_BUFFER_SIZE: 0x8A2A;$/;"	p	interface:WebGL2RenderingContextBase
x8A2B	tsvscode.ts	/^    readonly MAX_VERTEX_UNIFORM_BLOCKS: 0x8A2B;$/;"	p	interface:WebGL2RenderingContextBase
x8A2D	tsvscode.ts	/^    readonly MAX_FRAGMENT_UNIFORM_BLOCKS: 0x8A2D;$/;"	p	interface:WebGL2RenderingContextBase
x8A2E	tsvscode.ts	/^    readonly MAX_COMBINED_UNIFORM_BLOCKS: 0x8A2E;$/;"	p	interface:WebGL2RenderingContextBase
x8A2F	tsvscode.ts	/^    readonly MAX_UNIFORM_BUFFER_BINDINGS: 0x8A2F;$/;"	p	interface:WebGL2RenderingContextBase
x8A30	tsvscode.ts	/^    readonly MAX_UNIFORM_BLOCK_SIZE: 0x8A30;$/;"	p	interface:WebGL2RenderingContextBase
x8A31	tsvscode.ts	/^    readonly MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: 0x8A31;$/;"	p	interface:WebGL2RenderingContextBase
x8A33	tsvscode.ts	/^    readonly MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: 0x8A33;$/;"	p	interface:WebGL2RenderingContextBase
x8A34	tsvscode.ts	/^    readonly UNIFORM_BUFFER_OFFSET_ALIGNMENT: 0x8A34;$/;"	p	interface:WebGL2RenderingContextBase
x8A36	tsvscode.ts	/^    readonly ACTIVE_UNIFORM_BLOCKS: 0x8A36;$/;"	p	interface:WebGL2RenderingContextBase
x8A37	tsvscode.ts	/^    readonly UNIFORM_TYPE: 0x8A37;$/;"	p	interface:WebGL2RenderingContextBase
x8A38	tsvscode.ts	/^    readonly UNIFORM_SIZE: 0x8A38;$/;"	p	interface:WebGL2RenderingContextBase
x8A3A	tsvscode.ts	/^    readonly UNIFORM_BLOCK_INDEX: 0x8A3A;$/;"	p	interface:WebGL2RenderingContextBase
x8A3B	tsvscode.ts	/^    readonly UNIFORM_OFFSET: 0x8A3B;$/;"	p	interface:WebGL2RenderingContextBase
x8A3C	tsvscode.ts	/^    readonly UNIFORM_ARRAY_STRIDE: 0x8A3C;$/;"	p	interface:WebGL2RenderingContextBase
x8A3D	tsvscode.ts	/^    readonly UNIFORM_MATRIX_STRIDE: 0x8A3D;$/;"	p	interface:WebGL2RenderingContextBase
x8A3E	tsvscode.ts	/^    readonly UNIFORM_IS_ROW_MAJOR: 0x8A3E;$/;"	p	interface:WebGL2RenderingContextBase
x8A3F	tsvscode.ts	/^    readonly UNIFORM_BLOCK_BINDING: 0x8A3F;$/;"	p	interface:WebGL2RenderingContextBase
x8A40	tsvscode.ts	/^    readonly UNIFORM_BLOCK_DATA_SIZE: 0x8A40;$/;"	p	interface:WebGL2RenderingContextBase
x8A42	tsvscode.ts	/^    readonly UNIFORM_BLOCK_ACTIVE_UNIFORMS: 0x8A42;$/;"	p	interface:WebGL2RenderingContextBase
x8A43	tsvscode.ts	/^    readonly UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: 0x8A43;$/;"	p	interface:WebGL2RenderingContextBase
x8A44	tsvscode.ts	/^    readonly UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: 0x8A44;$/;"	p	interface:WebGL2RenderingContextBase
x8A46	tsvscode.ts	/^    readonly UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: 0x8A46;$/;"	p	interface:WebGL2RenderingContextBase
x8B30	tsvscode.ts	/^    readonly FRAGMENT_SHADER: 0x8B30;$/;"	p	interface:WebGLRenderingContextBase
x8B31	tsvscode.ts	/^    readonly VERTEX_SHADER: 0x8B31;$/;"	p	interface:WebGLRenderingContextBase
x8B49	tsvscode.ts	/^    readonly MAX_FRAGMENT_UNIFORM_COMPONENTS: 0x8B49;$/;"	p	interface:WebGL2RenderingContextBase
x8B4A	tsvscode.ts	/^    readonly MAX_VERTEX_UNIFORM_COMPONENTS: 0x8B4A;$/;"	p	interface:WebGL2RenderingContextBase
x8B4B	tsvscode.ts	/^    readonly MAX_VARYING_COMPONENTS: 0x8B4B;$/;"	p	interface:WebGL2RenderingContextBase
x8B4C	tsvscode.ts	/^    readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS: 0x8B4C;$/;"	p	interface:WebGLRenderingContextBase
x8B4D	tsvscode.ts	/^    readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS: 0x8B4D;$/;"	p	interface:WebGLRenderingContextBase
x8B4F	tsvscode.ts	/^    readonly SHADER_TYPE: 0x8B4F;$/;"	p	interface:WebGLRenderingContextBase
x8B50	tsvscode.ts	/^    readonly FLOAT_VEC2: 0x8B50;$/;"	p	interface:WebGLRenderingContextBase
x8B51	tsvscode.ts	/^    readonly FLOAT_VEC3: 0x8B51;$/;"	p	interface:WebGLRenderingContextBase
x8B52	tsvscode.ts	/^    readonly FLOAT_VEC4: 0x8B52;$/;"	p	interface:WebGLRenderingContextBase
x8B53	tsvscode.ts	/^    readonly INT_VEC2: 0x8B53;$/;"	p	interface:WebGLRenderingContextBase
x8B54	tsvscode.ts	/^    readonly INT_VEC3: 0x8B54;$/;"	p	interface:WebGLRenderingContextBase
x8B55	tsvscode.ts	/^    readonly INT_VEC4: 0x8B55;$/;"	p	interface:WebGLRenderingContextBase
x8B56	tsvscode.ts	/^    readonly BOOL: 0x8B56;$/;"	p	interface:WebGLRenderingContextBase
x8B57	tsvscode.ts	/^    readonly BOOL_VEC2: 0x8B57;$/;"	p	interface:WebGLRenderingContextBase
x8B58	tsvscode.ts	/^    readonly BOOL_VEC3: 0x8B58;$/;"	p	interface:WebGLRenderingContextBase
x8B59	tsvscode.ts	/^    readonly BOOL_VEC4: 0x8B59;$/;"	p	interface:WebGLRenderingContextBase
x8B5A	tsvscode.ts	/^    readonly FLOAT_MAT2: 0x8B5A;$/;"	p	interface:WebGLRenderingContextBase
x8B5B	tsvscode.ts	/^    readonly FLOAT_MAT3: 0x8B5B;$/;"	p	interface:WebGLRenderingContextBase
x8B5C	tsvscode.ts	/^    readonly FLOAT_MAT4: 0x8B5C;$/;"	p	interface:WebGLRenderingContextBase
x8B5E	tsvscode.ts	/^    readonly SAMPLER_2D: 0x8B5E;$/;"	p	interface:WebGLRenderingContextBase
x8B5F	tsvscode.ts	/^    readonly SAMPLER_3D: 0x8B5F;$/;"	p	interface:WebGL2RenderingContextBase
x8B60	tsvscode.ts	/^    readonly SAMPLER_CUBE: 0x8B60;$/;"	p	interface:WebGLRenderingContextBase
x8B62	tsvscode.ts	/^    readonly SAMPLER_2D_SHADOW: 0x8B62;$/;"	p	interface:WebGL2RenderingContextBase
x8B65	tsvscode.ts	/^    readonly FLOAT_MAT2x3: 0x8B65;$/;"	p	interface:WebGL2RenderingContextBase
x8B66	tsvscode.ts	/^    readonly FLOAT_MAT2x4: 0x8B66;$/;"	p	interface:WebGL2RenderingContextBase
x8B67	tsvscode.ts	/^    readonly FLOAT_MAT3x2: 0x8B67;$/;"	p	interface:WebGL2RenderingContextBase
x8B68	tsvscode.ts	/^    readonly FLOAT_MAT3x4: 0x8B68;$/;"	p	interface:WebGL2RenderingContextBase
x8B69	tsvscode.ts	/^    readonly FLOAT_MAT4x2: 0x8B69;$/;"	p	interface:WebGL2RenderingContextBase
x8B6A	tsvscode.ts	/^    readonly FLOAT_MAT4x3: 0x8B6A;$/;"	p	interface:WebGL2RenderingContextBase
x8B80	tsvscode.ts	/^    readonly DELETE_STATUS: 0x8B80;$/;"	p	interface:WebGLRenderingContextBase
x8B81	tsvscode.ts	/^    readonly COMPILE_STATUS: 0x8B81;$/;"	p	interface:WebGLRenderingContextBase
x8B82	tsvscode.ts	/^    readonly LINK_STATUS: 0x8B82;$/;"	p	interface:WebGLRenderingContextBase
x8B83	tsvscode.ts	/^    readonly VALIDATE_STATUS: 0x8B83;$/;"	p	interface:WebGLRenderingContextBase
x8B85	tsvscode.ts	/^    readonly ATTACHED_SHADERS: 0x8B85;$/;"	p	interface:WebGLRenderingContextBase
x8B86	tsvscode.ts	/^    readonly ACTIVE_UNIFORMS: 0x8B86;$/;"	p	interface:WebGLRenderingContextBase
x8B89	tsvscode.ts	/^    readonly ACTIVE_ATTRIBUTES: 0x8B89;$/;"	p	interface:WebGLRenderingContextBase
x8B8B	tsvscode.ts	/^    readonly FRAGMENT_SHADER_DERIVATIVE_HINT: 0x8B8B;$/;"	p	interface:WebGL2RenderingContextBase
x8B8B	tsvscode.ts	/^    readonly FRAGMENT_SHADER_DERIVATIVE_HINT_OES: 0x8B8B;$/;"	p	interface:OES_standard_derivatives
x8B8C	tsvscode.ts	/^    readonly SHADING_LANGUAGE_VERSION: 0x8B8C;$/;"	p	interface:WebGLRenderingContextBase
x8B8D	tsvscode.ts	/^    readonly CURRENT_PROGRAM: 0x8B8D;$/;"	p	interface:WebGLRenderingContextBase
x8B9A	tsvscode.ts	/^    readonly IMPLEMENTATION_COLOR_READ_TYPE: 0x8B9A;$/;"	p	interface:WebGLRenderingContextBase
x8B9B	tsvscode.ts	/^    readonly IMPLEMENTATION_COLOR_READ_FORMAT: 0x8B9B;$/;"	p	interface:WebGLRenderingContextBase
x8C00	tsvscode.ts	/^    readonly COMPRESSED_RGB_PVRTC_4BPPV1_IMG: 0x8C00;$/;"	p	interface:WEBGL_compressed_texture_pvrtc
x8C01	tsvscode.ts	/^    readonly COMPRESSED_RGB_PVRTC_2BPPV1_IMG: 0x8C01;$/;"	p	interface:WEBGL_compressed_texture_pvrtc
x8C02	tsvscode.ts	/^    readonly COMPRESSED_RGBA_PVRTC_4BPPV1_IMG: 0x8C02;$/;"	p	interface:WEBGL_compressed_texture_pvrtc
x8C03	tsvscode.ts	/^    readonly COMPRESSED_RGBA_PVRTC_2BPPV1_IMG: 0x8C03;$/;"	p	interface:WEBGL_compressed_texture_pvrtc
x8C17	tsvscode.ts	/^    readonly UNSIGNED_NORMALIZED: 0x8C17;$/;"	p	interface:WebGL2RenderingContextBase
x8C17	tsvscode.ts	/^    readonly UNSIGNED_NORMALIZED_EXT: 0x8C17;$/;"	p	interface:EXT_color_buffer_half_float
x8C17	tsvscode.ts	/^    readonly UNSIGNED_NORMALIZED_EXT: 0x8C17;$/;"	p	interface:WEBGL_color_buffer_float
x8C1A	tsvscode.ts	/^    readonly TEXTURE_2D_ARRAY: 0x8C1A;$/;"	p	interface:WebGL2RenderingContextBase
x8C1D	tsvscode.ts	/^    readonly TEXTURE_BINDING_2D_ARRAY: 0x8C1D;$/;"	p	interface:WebGL2RenderingContextBase
x8C2F	tsvscode.ts	/^    readonly ANY_SAMPLES_PASSED: 0x8C2F;$/;"	p	interface:WebGL2RenderingContextBase
x8C3A	tsvscode.ts	/^    readonly R11F_G11F_B10F: 0x8C3A;$/;"	p	interface:WebGL2RenderingContextBase
x8C3B	tsvscode.ts	/^    readonly UNSIGNED_INT_10F_11F_11F_REV: 0x8C3B;$/;"	p	interface:WebGL2RenderingContextBase
x8C3D	tsvscode.ts	/^    readonly RGB9_E5: 0x8C3D;$/;"	p	interface:WebGL2RenderingContextBase
x8C3E	tsvscode.ts	/^    readonly UNSIGNED_INT_5_9_9_9_REV: 0x8C3E;$/;"	p	interface:WebGL2RenderingContextBase
x8C40	tsvscode.ts	/^    readonly SRGB: 0x8C40;$/;"	p	interface:WebGL2RenderingContextBase
x8C40	tsvscode.ts	/^    readonly SRGB_EXT: 0x8C40;$/;"	p	interface:EXT_sRGB
x8C41	tsvscode.ts	/^    readonly SRGB8: 0x8C41;$/;"	p	interface:WebGL2RenderingContextBase
x8C42	tsvscode.ts	/^    readonly SRGB_ALPHA_EXT: 0x8C42;$/;"	p	interface:EXT_sRGB
x8C43	tsvscode.ts	/^    readonly SRGB8_ALPHA8: 0x8C43;$/;"	p	interface:WebGL2RenderingContextBase
x8C43	tsvscode.ts	/^    readonly SRGB8_ALPHA8_EXT: 0x8C43;$/;"	p	interface:EXT_sRGB
x8C4C	tsvscode.ts	/^    readonly COMPRESSED_SRGB_S3TC_DXT1_EXT: 0x8C4C;$/;"	p	interface:WEBGL_compressed_texture_s3tc_srgb
x8C4D	tsvscode.ts	/^    readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT: 0x8C4D;$/;"	p	interface:WEBGL_compressed_texture_s3tc_srgb
x8C4E	tsvscode.ts	/^    readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT: 0x8C4E;$/;"	p	interface:WEBGL_compressed_texture_s3tc_srgb
x8C4F	tsvscode.ts	/^    readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT: 0x8C4F;$/;"	p	interface:WEBGL_compressed_texture_s3tc_srgb
x8C7F	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_BUFFER_MODE: 0x8C7F;$/;"	p	interface:WebGL2RenderingContextBase
x8C80	tsvscode.ts	/^    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: 0x8C80;$/;"	p	interface:WebGL2RenderingContextBase
x8C83	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_VARYINGS: 0x8C83;$/;"	p	interface:WebGL2RenderingContextBase
x8C84	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_BUFFER_START: 0x8C84;$/;"	p	interface:WebGL2RenderingContextBase
x8C85	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_BUFFER_SIZE: 0x8C85;$/;"	p	interface:WebGL2RenderingContextBase
x8C88	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: 0x8C88;$/;"	p	interface:WebGL2RenderingContextBase
x8C89	tsvscode.ts	/^    readonly RASTERIZER_DISCARD: 0x8C89;$/;"	p	interface:WebGL2RenderingContextBase
x8C8A	tsvscode.ts	/^    readonly MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: 0x8C8A;$/;"	p	interface:WebGL2RenderingContextBase
x8C8B	tsvscode.ts	/^    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: 0x8C8B;$/;"	p	interface:WebGL2RenderingContextBase
x8C8C	tsvscode.ts	/^    readonly INTERLEAVED_ATTRIBS: 0x8C8C;$/;"	p	interface:WebGL2RenderingContextBase
x8C8D	tsvscode.ts	/^    readonly SEPARATE_ATTRIBS: 0x8C8D;$/;"	p	interface:WebGL2RenderingContextBase
x8C8E	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_BUFFER: 0x8C8E;$/;"	p	interface:WebGL2RenderingContextBase
x8C8F	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_BUFFER_BINDING: 0x8C8F;$/;"	p	interface:WebGL2RenderingContextBase
x8CA3	tsvscode.ts	/^    readonly STENCIL_BACK_REF: 0x8CA3;$/;"	p	interface:WebGLRenderingContextBase
x8CA4	tsvscode.ts	/^    readonly STENCIL_BACK_VALUE_MASK: 0x8CA4;$/;"	p	interface:WebGLRenderingContextBase
x8CA5	tsvscode.ts	/^    readonly STENCIL_BACK_WRITEMASK: 0x8CA5;$/;"	p	interface:WebGLRenderingContextBase
x8CA6	tsvscode.ts	/^    readonly DRAW_FRAMEBUFFER_BINDING: 0x8CA6;$/;"	p	interface:WebGL2RenderingContextBase
x8CA6	tsvscode.ts	/^    readonly FRAMEBUFFER_BINDING: 0x8CA6;$/;"	p	interface:WebGLRenderingContextBase
x8CA7	tsvscode.ts	/^    readonly RENDERBUFFER_BINDING: 0x8CA7;$/;"	p	interface:WebGLRenderingContextBase
x8CA8	tsvscode.ts	/^    readonly READ_FRAMEBUFFER: 0x8CA8;$/;"	p	interface:WebGL2RenderingContextBase
x8CA9	tsvscode.ts	/^    readonly DRAW_FRAMEBUFFER: 0x8CA9;$/;"	p	interface:WebGL2RenderingContextBase
x8CAA	tsvscode.ts	/^    readonly READ_FRAMEBUFFER_BINDING: 0x8CAA;$/;"	p	interface:WebGL2RenderingContextBase
x8CAB	tsvscode.ts	/^    readonly RENDERBUFFER_SAMPLES: 0x8CAB;$/;"	p	interface:WebGL2RenderingContextBase
x8CAC	tsvscode.ts	/^    readonly DEPTH_COMPONENT32F: 0x8CAC;$/;"	p	interface:WebGL2RenderingContextBase
x8CAD	tsvscode.ts	/^    readonly DEPTH32F_STENCIL8: 0x8CAD;$/;"	p	interface:WebGL2RenderingContextBase
x8CD0	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: 0x8CD0;$/;"	p	interface:WebGLRenderingContextBase
x8CD1	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: 0x8CD1;$/;"	p	interface:WebGLRenderingContextBase
x8CD2	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: 0x8CD2;$/;"	p	interface:WebGLRenderingContextBase
x8CD3	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: 0x8CD3;$/;"	p	interface:WebGLRenderingContextBase
x8CD4	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: 0x8CD4;$/;"	p	interface:WebGL2RenderingContextBase
x8CD5	tsvscode.ts	/^    readonly FRAMEBUFFER_COMPLETE: 0x8CD5;$/;"	p	interface:WebGLRenderingContextBase
x8CD6	tsvscode.ts	/^    readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT: 0x8CD6;$/;"	p	interface:WebGLRenderingContextBase
x8CD7	tsvscode.ts	/^    readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: 0x8CD7;$/;"	p	interface:WebGLRenderingContextBase
x8CD9	tsvscode.ts	/^    readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS: 0x8CD9;$/;"	p	interface:WebGLRenderingContextBase
x8CDD	tsvscode.ts	/^    readonly FRAMEBUFFER_UNSUPPORTED: 0x8CDD;$/;"	p	interface:WebGLRenderingContextBase
x8CDF	tsvscode.ts	/^    readonly MAX_COLOR_ATTACHMENTS: 0x8CDF;$/;"	p	interface:WebGL2RenderingContextBase
x8CDF	tsvscode.ts	/^    readonly MAX_COLOR_ATTACHMENTS_WEBGL: 0x8CDF;$/;"	p	interface:WEBGL_draw_buffers
x8CE0	tsvscode.ts	/^    readonly COLOR_ATTACHMENT0: 0x8CE0;$/;"	p	interface:WebGLRenderingContextBase
x8CE0	tsvscode.ts	/^    readonly COLOR_ATTACHMENT0_WEBGL: 0x8CE0;$/;"	p	interface:WEBGL_draw_buffers
x8CE1	tsvscode.ts	/^    readonly COLOR_ATTACHMENT1: 0x8CE1;$/;"	p	interface:WebGL2RenderingContextBase
x8CE1	tsvscode.ts	/^    readonly COLOR_ATTACHMENT1_WEBGL: 0x8CE1;$/;"	p	interface:WEBGL_draw_buffers
x8CE2	tsvscode.ts	/^    readonly COLOR_ATTACHMENT2: 0x8CE2;$/;"	p	interface:WebGL2RenderingContextBase
x8CE2	tsvscode.ts	/^    readonly COLOR_ATTACHMENT2_WEBGL: 0x8CE2;$/;"	p	interface:WEBGL_draw_buffers
x8CE3	tsvscode.ts	/^    readonly COLOR_ATTACHMENT3: 0x8CE3;$/;"	p	interface:WebGL2RenderingContextBase
x8CE3	tsvscode.ts	/^    readonly COLOR_ATTACHMENT3_WEBGL: 0x8CE3;$/;"	p	interface:WEBGL_draw_buffers
x8CE4	tsvscode.ts	/^    readonly COLOR_ATTACHMENT4: 0x8CE4;$/;"	p	interface:WebGL2RenderingContextBase
x8CE4	tsvscode.ts	/^    readonly COLOR_ATTACHMENT4_WEBGL: 0x8CE4;$/;"	p	interface:WEBGL_draw_buffers
x8CE5	tsvscode.ts	/^    readonly COLOR_ATTACHMENT5: 0x8CE5;$/;"	p	interface:WebGL2RenderingContextBase
x8CE5	tsvscode.ts	/^    readonly COLOR_ATTACHMENT5_WEBGL: 0x8CE5;$/;"	p	interface:WEBGL_draw_buffers
x8CE6	tsvscode.ts	/^    readonly COLOR_ATTACHMENT6: 0x8CE6;$/;"	p	interface:WebGL2RenderingContextBase
x8CE6	tsvscode.ts	/^    readonly COLOR_ATTACHMENT6_WEBGL: 0x8CE6;$/;"	p	interface:WEBGL_draw_buffers
x8CE7	tsvscode.ts	/^    readonly COLOR_ATTACHMENT7: 0x8CE7;$/;"	p	interface:WebGL2RenderingContextBase
x8CE7	tsvscode.ts	/^    readonly COLOR_ATTACHMENT7_WEBGL: 0x8CE7;$/;"	p	interface:WEBGL_draw_buffers
x8CE8	tsvscode.ts	/^    readonly COLOR_ATTACHMENT8: 0x8CE8;$/;"	p	interface:WebGL2RenderingContextBase
x8CE8	tsvscode.ts	/^    readonly COLOR_ATTACHMENT8_WEBGL: 0x8CE8;$/;"	p	interface:WEBGL_draw_buffers
x8CE9	tsvscode.ts	/^    readonly COLOR_ATTACHMENT9: 0x8CE9;$/;"	p	interface:WebGL2RenderingContextBase
x8CE9	tsvscode.ts	/^    readonly COLOR_ATTACHMENT9_WEBGL: 0x8CE9;$/;"	p	interface:WEBGL_draw_buffers
x8CEA	tsvscode.ts	/^    readonly COLOR_ATTACHMENT10: 0x8CEA;$/;"	p	interface:WebGL2RenderingContextBase
x8CEA	tsvscode.ts	/^    readonly COLOR_ATTACHMENT10_WEBGL: 0x8CEA;$/;"	p	interface:WEBGL_draw_buffers
x8CEB	tsvscode.ts	/^    readonly COLOR_ATTACHMENT11: 0x8CEB;$/;"	p	interface:WebGL2RenderingContextBase
x8CEB	tsvscode.ts	/^    readonly COLOR_ATTACHMENT11_WEBGL: 0x8CEB;$/;"	p	interface:WEBGL_draw_buffers
x8CEC	tsvscode.ts	/^    readonly COLOR_ATTACHMENT12: 0x8CEC;$/;"	p	interface:WebGL2RenderingContextBase
x8CEC	tsvscode.ts	/^    readonly COLOR_ATTACHMENT12_WEBGL: 0x8CEC;$/;"	p	interface:WEBGL_draw_buffers
x8CED	tsvscode.ts	/^    readonly COLOR_ATTACHMENT13: 0x8CED;$/;"	p	interface:WebGL2RenderingContextBase
x8CED	tsvscode.ts	/^    readonly COLOR_ATTACHMENT13_WEBGL: 0x8CED;$/;"	p	interface:WEBGL_draw_buffers
x8CEE	tsvscode.ts	/^    readonly COLOR_ATTACHMENT14: 0x8CEE;$/;"	p	interface:WebGL2RenderingContextBase
x8CEE	tsvscode.ts	/^    readonly COLOR_ATTACHMENT14_WEBGL: 0x8CEE;$/;"	p	interface:WEBGL_draw_buffers
x8CEF	tsvscode.ts	/^    readonly COLOR_ATTACHMENT15: 0x8CEF;$/;"	p	interface:WebGL2RenderingContextBase
x8CEF	tsvscode.ts	/^    readonly COLOR_ATTACHMENT15_WEBGL: 0x8CEF;$/;"	p	interface:WEBGL_draw_buffers
x8D00	tsvscode.ts	/^    readonly DEPTH_ATTACHMENT: 0x8D00;$/;"	p	interface:WebGLRenderingContextBase
x8D20	tsvscode.ts	/^    readonly STENCIL_ATTACHMENT: 0x8D20;$/;"	p	interface:WebGLRenderingContextBase
x8D40	tsvscode.ts	/^    readonly FRAMEBUFFER: 0x8D40;$/;"	p	interface:WebGLRenderingContextBase
x8D41	tsvscode.ts	/^    readonly RENDERBUFFER: 0x8D41;$/;"	p	interface:WebGLRenderingContextBase
x8D42	tsvscode.ts	/^    readonly RENDERBUFFER_WIDTH: 0x8D42;$/;"	p	interface:WebGLRenderingContextBase
x8D43	tsvscode.ts	/^    readonly RENDERBUFFER_HEIGHT: 0x8D43;$/;"	p	interface:WebGLRenderingContextBase
x8D44	tsvscode.ts	/^    readonly RENDERBUFFER_INTERNAL_FORMAT: 0x8D44;$/;"	p	interface:WebGLRenderingContextBase
x8D48	tsvscode.ts	/^    readonly STENCIL_INDEX8: 0x8D48;$/;"	p	interface:WebGLRenderingContextBase
x8D50	tsvscode.ts	/^    readonly RENDERBUFFER_RED_SIZE: 0x8D50;$/;"	p	interface:WebGLRenderingContextBase
x8D51	tsvscode.ts	/^    readonly RENDERBUFFER_GREEN_SIZE: 0x8D51;$/;"	p	interface:WebGLRenderingContextBase
x8D52	tsvscode.ts	/^    readonly RENDERBUFFER_BLUE_SIZE: 0x8D52;$/;"	p	interface:WebGLRenderingContextBase
x8D53	tsvscode.ts	/^    readonly RENDERBUFFER_ALPHA_SIZE: 0x8D53;$/;"	p	interface:WebGLRenderingContextBase
x8D54	tsvscode.ts	/^    readonly RENDERBUFFER_DEPTH_SIZE: 0x8D54;$/;"	p	interface:WebGLRenderingContextBase
x8D55	tsvscode.ts	/^    readonly RENDERBUFFER_STENCIL_SIZE: 0x8D55;$/;"	p	interface:WebGLRenderingContextBase
x8D56	tsvscode.ts	/^    readonly FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: 0x8D56;$/;"	p	interface:WebGL2RenderingContextBase
x8D57	tsvscode.ts	/^    readonly MAX_SAMPLES: 0x8D57;$/;"	p	interface:WebGL2RenderingContextBase
x8D61	tsvscode.ts	/^    readonly HALF_FLOAT_OES: 0x8D61;$/;"	p	interface:OES_texture_half_float
x8D62	tsvscode.ts	/^    readonly RGB565: 0x8D62;$/;"	p	interface:WebGLRenderingContextBase
x8D64	tsvscode.ts	/^    readonly COMPRESSED_RGB_ETC1_WEBGL: 0x8D64;$/;"	p	interface:WEBGL_compressed_texture_etc1
x8D6A	tsvscode.ts	/^    readonly ANY_SAMPLES_PASSED_CONSERVATIVE: 0x8D6A;$/;"	p	interface:WebGL2RenderingContextBase
x8D6B	tsvscode.ts	/^    readonly MAX_ELEMENT_INDEX: 0x8D6B;$/;"	p	interface:WebGL2RenderingContextBase
x8D70	tsvscode.ts	/^    readonly RGBA32UI: 0x8D70;$/;"	p	interface:WebGL2RenderingContextBase
x8D71	tsvscode.ts	/^    readonly RGB32UI: 0x8D71;$/;"	p	interface:WebGL2RenderingContextBase
x8D76	tsvscode.ts	/^    readonly RGBA16UI: 0x8D76;$/;"	p	interface:WebGL2RenderingContextBase
x8D77	tsvscode.ts	/^    readonly RGB16UI: 0x8D77;$/;"	p	interface:WebGL2RenderingContextBase
x8D7C	tsvscode.ts	/^    readonly RGBA8UI: 0x8D7C;$/;"	p	interface:WebGL2RenderingContextBase
x8D7D	tsvscode.ts	/^    readonly RGB8UI: 0x8D7D;$/;"	p	interface:WebGL2RenderingContextBase
x8D82	tsvscode.ts	/^    readonly RGBA32I: 0x8D82;$/;"	p	interface:WebGL2RenderingContextBase
x8D83	tsvscode.ts	/^    readonly RGB32I: 0x8D83;$/;"	p	interface:WebGL2RenderingContextBase
x8D88	tsvscode.ts	/^    readonly RGBA16I: 0x8D88;$/;"	p	interface:WebGL2RenderingContextBase
x8D89	tsvscode.ts	/^    readonly RGB16I: 0x8D89;$/;"	p	interface:WebGL2RenderingContextBase
x8D8E	tsvscode.ts	/^    readonly RGBA8I: 0x8D8E;$/;"	p	interface:WebGL2RenderingContextBase
x8D8F	tsvscode.ts	/^    readonly RGB8I: 0x8D8F;$/;"	p	interface:WebGL2RenderingContextBase
x8D94	tsvscode.ts	/^    readonly RED_INTEGER: 0x8D94;$/;"	p	interface:WebGL2RenderingContextBase
x8D98	tsvscode.ts	/^    readonly RGB_INTEGER: 0x8D98;$/;"	p	interface:WebGL2RenderingContextBase
x8D99	tsvscode.ts	/^    readonly RGBA_INTEGER: 0x8D99;$/;"	p	interface:WebGL2RenderingContextBase
x8D9F	tsvscode.ts	/^    readonly INT_2_10_10_10_REV: 0x8D9F;$/;"	p	interface:WebGL2RenderingContextBase
x8DAD	tsvscode.ts	/^    readonly FLOAT_32_UNSIGNED_INT_24_8_REV: 0x8DAD;$/;"	p	interface:WebGL2RenderingContextBase
x8DBB	tsvscode.ts	/^    readonly COMPRESSED_RED_RGTC1_EXT: 0x8DBB;$/;"	p	interface:EXT_texture_compression_rgtc
x8DBC	tsvscode.ts	/^    readonly COMPRESSED_SIGNED_RED_RGTC1_EXT: 0x8DBC;$/;"	p	interface:EXT_texture_compression_rgtc
x8DBD	tsvscode.ts	/^    readonly COMPRESSED_RED_GREEN_RGTC2_EXT: 0x8DBD;$/;"	p	interface:EXT_texture_compression_rgtc
x8DBE	tsvscode.ts	/^    readonly COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT: 0x8DBE;$/;"	p	interface:EXT_texture_compression_rgtc
x8DC1	tsvscode.ts	/^    readonly SAMPLER_2D_ARRAY: 0x8DC1;$/;"	p	interface:WebGL2RenderingContextBase
x8DC4	tsvscode.ts	/^    readonly SAMPLER_2D_ARRAY_SHADOW: 0x8DC4;$/;"	p	interface:WebGL2RenderingContextBase
x8DC5	tsvscode.ts	/^    readonly SAMPLER_CUBE_SHADOW: 0x8DC5;$/;"	p	interface:WebGL2RenderingContextBase
x8DC6	tsvscode.ts	/^    readonly UNSIGNED_INT_VEC2: 0x8DC6;$/;"	p	interface:WebGL2RenderingContextBase
x8DC7	tsvscode.ts	/^    readonly UNSIGNED_INT_VEC3: 0x8DC7;$/;"	p	interface:WebGL2RenderingContextBase
x8DC8	tsvscode.ts	/^    readonly UNSIGNED_INT_VEC4: 0x8DC8;$/;"	p	interface:WebGL2RenderingContextBase
x8DCA	tsvscode.ts	/^    readonly INT_SAMPLER_2D: 0x8DCA;$/;"	p	interface:WebGL2RenderingContextBase
x8DCB	tsvscode.ts	/^    readonly INT_SAMPLER_3D: 0x8DCB;$/;"	p	interface:WebGL2RenderingContextBase
x8DCC	tsvscode.ts	/^    readonly INT_SAMPLER_CUBE: 0x8DCC;$/;"	p	interface:WebGL2RenderingContextBase
x8DCF	tsvscode.ts	/^    readonly INT_SAMPLER_2D_ARRAY: 0x8DCF;$/;"	p	interface:WebGL2RenderingContextBase
x8DD2	tsvscode.ts	/^    readonly UNSIGNED_INT_SAMPLER_2D: 0x8DD2;$/;"	p	interface:WebGL2RenderingContextBase
x8DD3	tsvscode.ts	/^    readonly UNSIGNED_INT_SAMPLER_3D: 0x8DD3;$/;"	p	interface:WebGL2RenderingContextBase
x8DD4	tsvscode.ts	/^    readonly UNSIGNED_INT_SAMPLER_CUBE: 0x8DD4;$/;"	p	interface:WebGL2RenderingContextBase
x8DD7	tsvscode.ts	/^    readonly UNSIGNED_INT_SAMPLER_2D_ARRAY: 0x8DD7;$/;"	p	interface:WebGL2RenderingContextBase
x8DF0	tsvscode.ts	/^    readonly LOW_FLOAT: 0x8DF0;$/;"	p	interface:WebGLRenderingContextBase
x8DF1	tsvscode.ts	/^    readonly MEDIUM_FLOAT: 0x8DF1;$/;"	p	interface:WebGLRenderingContextBase
x8DF2	tsvscode.ts	/^    readonly HIGH_FLOAT: 0x8DF2;$/;"	p	interface:WebGLRenderingContextBase
x8DF3	tsvscode.ts	/^    readonly LOW_INT: 0x8DF3;$/;"	p	interface:WebGLRenderingContextBase
x8DF4	tsvscode.ts	/^    readonly MEDIUM_INT: 0x8DF4;$/;"	p	interface:WebGLRenderingContextBase
x8DF5	tsvscode.ts	/^    readonly HIGH_INT: 0x8DF5;$/;"	p	interface:WebGLRenderingContextBase
x8DFB	tsvscode.ts	/^    readonly MAX_VERTEX_UNIFORM_VECTORS: 0x8DFB;$/;"	p	interface:WebGLRenderingContextBase
x8DFC	tsvscode.ts	/^    readonly MAX_VARYING_VECTORS: 0x8DFC;$/;"	p	interface:WebGLRenderingContextBase
x8DFD	tsvscode.ts	/^    readonly MAX_FRAGMENT_UNIFORM_VECTORS: 0x8DFD;$/;"	p	interface:WebGLRenderingContextBase
x8E22	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK: 0x8E22;$/;"	p	interface:WebGL2RenderingContextBase
x8E23	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_PAUSED: 0x8E23;$/;"	p	interface:WebGL2RenderingContextBase
x8E24	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_ACTIVE: 0x8E24;$/;"	p	interface:WebGL2RenderingContextBase
x8E25	tsvscode.ts	/^    readonly TRANSFORM_FEEDBACK_BINDING: 0x8E25;$/;"	p	interface:WebGL2RenderingContextBase
x8E8C	tsvscode.ts	/^    readonly COMPRESSED_RGBA_BPTC_UNORM_EXT: 0x8E8C;$/;"	p	interface:EXT_texture_compression_bptc
x8E8D	tsvscode.ts	/^    readonly COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT: 0x8E8D;$/;"	p	interface:EXT_texture_compression_bptc
x8E8E	tsvscode.ts	/^    readonly COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT: 0x8E8E;$/;"	p	interface:EXT_texture_compression_bptc
x8E8F	tsvscode.ts	/^    readonly COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT: 0x8E8F;$/;"	p	interface:EXT_texture_compression_bptc
x8F36	tsvscode.ts	/^    readonly COPY_READ_BUFFER: 0x8F36;$/;"	p	interface:WebGL2RenderingContextBase
x8F36	tsvscode.ts	/^    readonly COPY_READ_BUFFER_BINDING: 0x8F36;$/;"	p	interface:WebGL2RenderingContextBase
x8F37	tsvscode.ts	/^    readonly COPY_WRITE_BUFFER: 0x8F37;$/;"	p	interface:WebGL2RenderingContextBase
x8F37	tsvscode.ts	/^    readonly COPY_WRITE_BUFFER_BINDING: 0x8F37;$/;"	p	interface:WebGL2RenderingContextBase
x8F94	tsvscode.ts	/^    readonly R8_SNORM: 0x8F94;$/;"	p	interface:WebGL2RenderingContextBase
x8F95	tsvscode.ts	/^    readonly RG8_SNORM: 0x8F95;$/;"	p	interface:WebGL2RenderingContextBase
x8F96	tsvscode.ts	/^    readonly RGB8_SNORM: 0x8F96;$/;"	p	interface:WebGL2RenderingContextBase
x8F97	tsvscode.ts	/^    readonly RGBA8_SNORM: 0x8F97;$/;"	p	interface:WebGL2RenderingContextBase
x8F98	tsvscode.ts	/^    readonly R16_SNORM_EXT: 0x8F98;$/;"	p	interface:EXT_texture_norm16
x8F99	tsvscode.ts	/^    readonly RG16_SNORM_EXT: 0x8F99;$/;"	p	interface:EXT_texture_norm16
x8F9A	tsvscode.ts	/^    readonly RGB16_SNORM_EXT: 0x8F9A;$/;"	p	interface:EXT_texture_norm16
x8F9B	tsvscode.ts	/^    readonly RGBA16_SNORM_EXT: 0x8F9B;$/;"	p	interface:EXT_texture_norm16
x8F9C	tsvscode.ts	/^    readonly SIGNED_NORMALIZED: 0x8F9C;$/;"	p	interface:WebGL2RenderingContextBase
x906F	tsvscode.ts	/^    readonly RGB10_A2UI: 0x906F;$/;"	p	interface:WebGL2RenderingContextBase
x9111	tsvscode.ts	/^    readonly MAX_SERVER_WAIT_TIMEOUT: 0x9111;$/;"	p	interface:WebGL2RenderingContextBase
x9112	tsvscode.ts	/^    readonly OBJECT_TYPE: 0x9112;$/;"	p	interface:WebGL2RenderingContextBase
x9113	tsvscode.ts	/^    readonly SYNC_CONDITION: 0x9113;$/;"	p	interface:WebGL2RenderingContextBase
x9114	tsvscode.ts	/^    readonly SYNC_STATUS: 0x9114;$/;"	p	interface:WebGL2RenderingContextBase
x9115	tsvscode.ts	/^    readonly SYNC_FLAGS: 0x9115;$/;"	p	interface:WebGL2RenderingContextBase
x9116	tsvscode.ts	/^    readonly SYNC_FENCE: 0x9116;$/;"	p	interface:WebGL2RenderingContextBase
x9117	tsvscode.ts	/^    readonly SYNC_GPU_COMMANDS_COMPLETE: 0x9117;$/;"	p	interface:WebGL2RenderingContextBase
x9118	tsvscode.ts	/^    readonly UNSIGNALED: 0x9118;$/;"	p	interface:WebGL2RenderingContextBase
x9119	tsvscode.ts	/^    readonly SIGNALED: 0x9119;$/;"	p	interface:WebGL2RenderingContextBase
x911A	tsvscode.ts	/^    readonly ALREADY_SIGNALED: 0x911A;$/;"	p	interface:WebGL2RenderingContextBase
x911B	tsvscode.ts	/^    readonly TIMEOUT_EXPIRED: 0x911B;$/;"	p	interface:WebGL2RenderingContextBase
x911C	tsvscode.ts	/^    readonly CONDITION_SATISFIED: 0x911C;$/;"	p	interface:WebGL2RenderingContextBase
x911D	tsvscode.ts	/^    readonly WAIT_FAILED: 0x911D;$/;"	p	interface:WebGL2RenderingContextBase
x9122	tsvscode.ts	/^    readonly MAX_VERTEX_OUTPUT_COMPONENTS: 0x9122;$/;"	p	interface:WebGL2RenderingContextBase
x9125	tsvscode.ts	/^    readonly MAX_FRAGMENT_INPUT_COMPONENTS: 0x9125;$/;"	p	interface:WebGL2RenderingContextBase
x912F	tsvscode.ts	/^    readonly TEXTURE_IMMUTABLE_FORMAT: 0x912F;$/;"	p	interface:WebGL2RenderingContextBase
x91B1	tsvscode.ts	/^    readonly COMPLETION_STATUS_KHR: 0x91B1;$/;"	p	interface:KHR_parallel_shader_compile
x9240	tsvscode.ts	/^    readonly UNPACK_FLIP_Y_WEBGL: 0x9240;$/;"	p	interface:WebGLRenderingContextBase
x9241	tsvscode.ts	/^    readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL: 0x9241;$/;"	p	interface:WebGLRenderingContextBase
x9242	tsvscode.ts	/^    readonly CONTEXT_LOST_WEBGL: 0x9242;$/;"	p	interface:WebGLRenderingContextBase
x9243	tsvscode.ts	/^    readonly UNPACK_COLORSPACE_CONVERSION_WEBGL: 0x9243;$/;"	p	interface:WebGLRenderingContextBase
x9244	tsvscode.ts	/^    readonly BROWSER_DEFAULT_WEBGL: 0x9244;$/;"	p	interface:WebGLRenderingContextBase
x9245	tsvscode.ts	/^    readonly UNMASKED_VENDOR_WEBGL: 0x9245;$/;"	p	interface:WEBGL_debug_renderer_info
x9246	tsvscode.ts	/^    readonly UNMASKED_RENDERER_WEBGL: 0x9246;$/;"	p	interface:WEBGL_debug_renderer_info
x9247	tsvscode.ts	/^    readonly MAX_CLIENT_WAIT_TIMEOUT_WEBGL: 0x9247;$/;"	p	interface:WebGL2RenderingContextBase
x9270	tsvscode.ts	/^    readonly COMPRESSED_R11_EAC: 0x9270;$/;"	p	interface:WEBGL_compressed_texture_etc
x9271	tsvscode.ts	/^    readonly COMPRESSED_SIGNED_R11_EAC: 0x9271;$/;"	p	interface:WEBGL_compressed_texture_etc
x9272	tsvscode.ts	/^    readonly COMPRESSED_RG11_EAC: 0x9272;$/;"	p	interface:WEBGL_compressed_texture_etc
x9273	tsvscode.ts	/^    readonly COMPRESSED_SIGNED_RG11_EAC: 0x9273;$/;"	p	interface:WEBGL_compressed_texture_etc
x9274	tsvscode.ts	/^    readonly COMPRESSED_RGB8_ETC2: 0x9274;$/;"	p	interface:WEBGL_compressed_texture_etc
x9275	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ETC2: 0x9275;$/;"	p	interface:WEBGL_compressed_texture_etc
x9276	tsvscode.ts	/^    readonly COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2: 0x9276;$/;"	p	interface:WEBGL_compressed_texture_etc
x9277	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2: 0x9277;$/;"	p	interface:WEBGL_compressed_texture_etc
x9278	tsvscode.ts	/^    readonly COMPRESSED_RGBA8_ETC2_EAC: 0x9278;$/;"	p	interface:WEBGL_compressed_texture_etc
x9279	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ETC2_EAC: 0x9279;$/;"	p	interface:WEBGL_compressed_texture_etc
x93B0	tsvscode.ts	/^    readonly COMPRESSED_RGBA_ASTC_4x4_KHR: 0x93B0;$/;"	p	interface:WEBGL_compressed_texture_astc
x93B1	tsvscode.ts	/^    readonly COMPRESSED_RGBA_ASTC_5x4_KHR: 0x93B1;$/;"	p	interface:WEBGL_compressed_texture_astc
x93B2	tsvscode.ts	/^    readonly COMPRESSED_RGBA_ASTC_5x5_KHR: 0x93B2;$/;"	p	interface:WEBGL_compressed_texture_astc
x93B3	tsvscode.ts	/^    readonly COMPRESSED_RGBA_ASTC_6x5_KHR: 0x93B3;$/;"	p	interface:WEBGL_compressed_texture_astc
x93B4	tsvscode.ts	/^    readonly COMPRESSED_RGBA_ASTC_6x6_KHR: 0x93B4;$/;"	p	interface:WEBGL_compressed_texture_astc
x93B5	tsvscode.ts	/^    readonly COMPRESSED_RGBA_ASTC_8x5_KHR: 0x93B5;$/;"	p	interface:WEBGL_compressed_texture_astc
x93B6	tsvscode.ts	/^    readonly COMPRESSED_RGBA_ASTC_8x6_KHR: 0x93B6;$/;"	p	interface:WEBGL_compressed_texture_astc
x93B7	tsvscode.ts	/^    readonly COMPRESSED_RGBA_ASTC_8x8_KHR: 0x93B7;$/;"	p	interface:WEBGL_compressed_texture_astc
x93B8	tsvscode.ts	/^    readonly COMPRESSED_RGBA_ASTC_10x5_KHR: 0x93B8;$/;"	p	interface:WEBGL_compressed_texture_astc
x93B9	tsvscode.ts	/^    readonly COMPRESSED_RGBA_ASTC_10x6_KHR: 0x93B9;$/;"	p	interface:WEBGL_compressed_texture_astc
x93BA	tsvscode.ts	/^    readonly COMPRESSED_RGBA_ASTC_10x8_KHR: 0x93BA;$/;"	p	interface:WEBGL_compressed_texture_astc
x93BB	tsvscode.ts	/^    readonly COMPRESSED_RGBA_ASTC_10x10_KHR: 0x93BB;$/;"	p	interface:WEBGL_compressed_texture_astc
x93BC	tsvscode.ts	/^    readonly COMPRESSED_RGBA_ASTC_12x10_KHR: 0x93BC;$/;"	p	interface:WEBGL_compressed_texture_astc
x93BD	tsvscode.ts	/^    readonly COMPRESSED_RGBA_ASTC_12x12_KHR: 0x93BD;$/;"	p	interface:WEBGL_compressed_texture_astc
x93D0	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR: 0x93D0;$/;"	p	interface:WEBGL_compressed_texture_astc
x93D1	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR: 0x93D1;$/;"	p	interface:WEBGL_compressed_texture_astc
x93D2	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR: 0x93D2;$/;"	p	interface:WEBGL_compressed_texture_astc
x93D3	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR: 0x93D3;$/;"	p	interface:WEBGL_compressed_texture_astc
x93D4	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR: 0x93D4;$/;"	p	interface:WEBGL_compressed_texture_astc
x93D5	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR: 0x93D5;$/;"	p	interface:WEBGL_compressed_texture_astc
x93D6	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR: 0x93D6;$/;"	p	interface:WEBGL_compressed_texture_astc
x93D7	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR: 0x93D7;$/;"	p	interface:WEBGL_compressed_texture_astc
x93D8	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR: 0x93D8;$/;"	p	interface:WEBGL_compressed_texture_astc
x93D9	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR: 0x93D9;$/;"	p	interface:WEBGL_compressed_texture_astc
x93DA	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR: 0x93DA;$/;"	p	interface:WEBGL_compressed_texture_astc
x93DB	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR: 0x93DB;$/;"	p	interface:WEBGL_compressed_texture_astc
x93DC	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR: 0x93DC;$/;"	p	interface:WEBGL_compressed_texture_astc
x93DD	tsvscode.ts	/^    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR: 0x93DD;$/;"	p	interface:WEBGL_compressed_texture_astc
x9630	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR: 0x9630;$/;"	p	interface:OVR_multiview2
x9631	tsvscode.ts	/^    readonly MAX_VIEWS_OVR: 0x9631;$/;"	p	interface:OVR_multiview2
x9632	tsvscode.ts	/^    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR: 0x9632;$/;"	p	interface:OVR_multiview2
x9633	tsvscode.ts	/^    readonly FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR: 0x9633;$/;"	p	interface:OVR_multiview2
xChannelSelector	tsvscode.ts	/^    readonly xChannelSelector: SVGAnimatedEnumeration;$/;"	p	interface:SVGFEDisplacementMapElement
xFFFFFFFF	tsvscode.ts	/^    readonly INVALID_INDEX: 0xFFFFFFFF;$/;"	p	interface:WebGL2RenderingContextBase
y	tsvscode.ts	/^    readonly y: SVGAnimatedLength;$/;"	p	interface:SVGFilterElement
y	tsvscode.ts	/^    readonly y: SVGAnimatedLength;$/;"	p	interface:SVGFilterPrimitiveStandardAttributes
y	tsvscode.ts	/^    readonly y: SVGAnimatedLength;$/;"	p	interface:SVGForeignObjectElement
y	tsvscode.ts	/^    readonly y: SVGAnimatedLength;$/;"	p	interface:SVGImageElement
y	tsvscode.ts	/^    readonly y: SVGAnimatedLength;$/;"	p	interface:SVGMaskElement
y	tsvscode.ts	/^    readonly y: SVGAnimatedLength;$/;"	p	interface:SVGPatternElement
y	tsvscode.ts	/^    readonly y: SVGAnimatedLength;$/;"	p	interface:SVGRectElement
y	tsvscode.ts	/^    readonly y: SVGAnimatedLength;$/;"	p	interface:SVGSVGElement
y	tsvscode.ts	/^    readonly y: SVGAnimatedLength;$/;"	p	interface:SVGUseElement
y	tsvscode.ts	/^    readonly y: SVGAnimatedLengthList;$/;"	p	interface:SVGTextPositioningElement
y	tsvscode.ts	/^    readonly y: SVGAnimatedNumber;$/;"	p	interface:SVGFEPointLightElement
y	tsvscode.ts	/^    readonly y: SVGAnimatedNumber;$/;"	p	interface:SVGFESpotLightElement
y	tsvscode.ts	/^    readonly y: number | null;$/;"	p	interface:DeviceMotionEventAcceleration
y	tsvscode.ts	/^    readonly y: number;$/;"	p	interface:DOMPointReadOnly
y	tsvscode.ts	/^    readonly y: number;$/;"	p	interface:DOMRectReadOnly
y	tsvscode.ts	/^    readonly y: number;$/;"	p	interface:HTMLImageElement
y	tsvscode.ts	/^    readonly y: number;$/;"	p	interface:MouseEvent
y	tsvscode.ts	/^    y: CSSNumberish;$/;"	p	interface:CSSRotate
y	tsvscode.ts	/^    y: CSSNumberish;$/;"	p	interface:CSSScale
y	tsvscode.ts	/^    y: CSSNumericValue;$/;"	p	interface:CSSTranslate
y	tsvscode.ts	/^    y: number;$/;"	p	interface:DOMPoint
y	tsvscode.ts	/^    y: number;$/;"	p	interface:DOMRect
y	tsvscode.ts	/^    y: string;$/;"	p	interface:CSSStyleDeclaration
y	tsvscode.ts	/^    y?: number | null;$/;"	p	interface:DeviceMotionEventAccelerationInit
y	tsvscode.ts	/^    y?: number;$/;"	p	interface:DOMPointInit
y	tsvscode.ts	/^    y?: number;$/;"	p	interface:DOMRectInit
y	tsvscode.ts	/^    y?: string;$/;"	p	interface:JsonWebKey
y1	tsvscode.ts	/^    readonly y1: SVGAnimatedLength;$/;"	p	interface:SVGLineElement
y1	tsvscode.ts	/^    readonly y1: SVGAnimatedLength;$/;"	p	interface:SVGLinearGradientElement
y2	tsvscode.ts	/^    readonly y2: SVGAnimatedLength;$/;"	p	interface:SVGLineElement
y2	tsvscode.ts	/^    readonly y2: SVGAnimatedLength;$/;"	p	interface:SVGLinearGradientElement
yChannelSelector	tsvscode.ts	/^    readonly yChannelSelector: SVGAnimatedEnumeration;$/;"	p	interface:SVGFEDisplacementMapElement
year	ests.ts	/^        year?: "numeric" | "2-digit" | undefined;$/;"	p	interface:Intl.DateTimeFormatOptions
year	ests.ts	/^        year?: string;$/;"	p	interface:Intl.ResolvedDateTimeFormatOptions
z	tsvscode.ts	/^    readonly z: SVGAnimatedNumber;$/;"	p	interface:SVGFEPointLightElement
z	tsvscode.ts	/^    readonly z: SVGAnimatedNumber;$/;"	p	interface:SVGFESpotLightElement
z	tsvscode.ts	/^    readonly z: number | null;$/;"	p	interface:DeviceMotionEventAcceleration
z	tsvscode.ts	/^    readonly z: number;$/;"	p	interface:DOMPointReadOnly
z	tsvscode.ts	/^    z: CSSNumberish;$/;"	p	interface:CSSRotate
z	tsvscode.ts	/^    z: CSSNumberish;$/;"	p	interface:CSSScale
z	tsvscode.ts	/^    z: CSSNumericValue;$/;"	p	interface:CSSTranslate
z	tsvscode.ts	/^    z: number;$/;"	p	interface:DOMPoint
z	tsvscode.ts	/^    z?: number | null;$/;"	p	interface:DeviceMotionEventAccelerationInit
z	tsvscode.ts	/^    z?: number;$/;"	p	interface:DOMPointInit
zIndex	tsvscode.ts	/^    zIndex: string;$/;"	p	interface:CSSStyleDeclaration
